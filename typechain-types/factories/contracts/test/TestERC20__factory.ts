/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20,
  TestERC20Interface,
} from "../../../contracts/test/TestERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "blocking",
        type: "bool",
      },
    ],
    name: "blockTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "noReturn",
        type: "bool",
      },
    ],
    name: "setNoReturnData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234620001ad576200001462000218565b60206505465737432360d41b818301526200002e6200022d565b64054535432360dc1b8282015282519091906001600160401b0381116200019d575b6000916200006a8262000064855462000242565b6200027f565b80601f83116001146200010f57508190620000a195849262000103575b50508160011b916000199060031b1c191617905562000333565b60126080524660a052620000b462000435565b60c052620000c760ff1960065416600655565b620000d861ff001960065416600655565b6040516110aa90816200056982396080518161059c015260a05181610d2a015260c05181610d510152f35b01519050388062000087565b600080529194601f1986167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639385905b82821062000184575050916001939187620000a19894106200016a575b505050811b01905562000333565b015160001960f88460031b161c191690553880806200015c565b806001869782949787015181550196019401906200013f565b620001a7620001b2565b62000050565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620001e557604052565b620001ef620001b2565b604052565b601f909101601f19168101906001600160401b03821190821017620001e557604052565b604051906200022782620001c9565b60068252565b604051906200023c82620001c9565b60058252565b90600182811c9216801562000274575b60208310146200025e57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000252565b601f81116200028c575050565b60009081805260208220906020601f850160051c83019410620002cc575b601f0160051c01915b828110620002c057505050565b818155600101620002b3565b9092508290620002aa565b90601f8211620002e5575050565b60019160009083825260208220906020601f850160051c8301941062000328575b601f0160051c01915b8281106200031d5750505050565b81815583016200030f565b909250829062000306565b80519091906001600160401b03811162000425575b60019062000362816200035c845462000242565b620002d7565b602080601f8311600114620003a057508192939460009262000394575b5050600019600383901b1c191690821b179055565b0151905038806200037f565b6001600052601f198316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b8882106200040d5750508385969710620003f3575b505050811b019055565b015160001960f88460031b161c19169055388080620003e9565b808785968294968601518155019501930190620003d4565b6200042f620001b2565b62000348565b604051600090815490620004498262000242565b928382526020938483019360019081811690816000146200054e57506001146200050e575b50509181620004886200050893620004f9950382620001f4565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b03601f198101835282620001f4565b51902090565b908592506000805282600020916000925b828410620005385750505082010181620004886200046e565b805486850186015287949093019281016200051f565b60ff1916865250505060408201905081620004886200046e56fe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461017b578063095ea7b31461017257806318160ddd146101695780631b2438451461016057806323b872dd14610157578063303bdd2c1461014e57806330adf81f14610145578063313ce5671461013c5780633644e5151461013357806340c10f191461012a57806370a08231146101215780637ecebe001461011857806395d89b411461010f578063a9059cbb14610106578063cd1b5b71146100fd578063d505accf146100f4578063dd62ed3e146100eb5763e074d6a9146100e357600080fd5b61000e610bc2565b5061000e610b4a565b5061000e6108c3565b5061000e610879565b5061000e6107b5565b5061000e61070f565b5061000e6106c7565b5061000e61067f565b5061000e6105e4565b5061000e6105c0565b5061000e610581565b5061000e610545565b5061000e610521565b5061000e6104e7565b5061000e6104c0565b5061000e6104a1565b5061000e6103fc565b5061000e6102bd565b90600182811c921680156101cd575b602083101461019e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610193565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761021857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b919091602080825283519081818401526000945b8286106102a7575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604095961161029a575b0116010190565b6000858286010152610293565b858101820151848701604001529481019461025b565b503461000e576000806003193601126103b357604051908080546102e081610184565b80855291600191808316908115610374575060011461031a575b6103168561030a818703826101d7565b60405191829182610247565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061035c57505050810160200161030a826103166102fa565b80546020858701810191909152909301928101610341565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166020870152505060408401925061030a91508390506103166102fa565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e576104166103b6565b73ffffffffffffffffffffffffffffffffffffffff60243591336000526004602052826104678260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5560405192835216907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57600060031936011261000e57602060ff60065460081c166040519015158152f35b503461000e57606060031936011261000e5760206105176105066103b6565b61050e6103d9565b60443591610ef1565b6040519015158152f35b503461000e57600060031936011261000e57602060ff600654166040519015158152f35b503461000e57600060031936011261000e5760206040517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b503461000e57600060031936011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57600060031936011261000e5760206105dc610d25565b604051908152f35b503461000e57604060031936011261000e576105fe6103b6565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602073ffffffffffffffffffffffffffffffffffffffff602435948560025481198111610672575b0160025516938484526003825260408420818154019055604051908152a3602060405160018152f35b61067a610c07565b610649565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6106ae6103b6565b1660005260036020526020604060002054604051908152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6106f66103b6565b1660005260056020526020604060002054604051908152f35b503461000e576000806003193601126103b3576040519080600180549161073583610184565b80865292828116908115610374575060011461075b576103168561030a818703826101d7565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061079d57505050810160200161030a826103166102fa565b80546020858701810191909152909301928101610782565b503461000e57604060031936011261000e576107cf6103b6565b73ffffffffffffffffffffffffffffffffffffffff602435913360005260036020526040600020838154818110610851575b039055169081600052600360205260406000208181540190556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3602060405160018152f35b610859610c07565b610801565b600319602091011261000e57600435801515810361000e5790565b503461000e576108883661085e565b15157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff006006549260081b169116176006556000604051f35b503461000e5760e060031936011261000e576108dd6103b6565b6108e56103d9565b604435906064359060843560ff8116810361000e5760006020917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461092d42821015610c4e565b610a59610a6561093b610d25565b928a8a6109e361096b8373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b938454946001860190556040519485938d8d8601968791959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b0391610a157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938481018352826101d7565b519020604051938491898301968790916042927f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201520190565b039081018352826101d7565b5190206040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15610b3d575b6000519083610b1f82610afa73ffffffffffffffffffffffffffffffffffffffff95610ad48782168015159081610b31575b50610cc0565b73ffffffffffffffffffffffffffffffffffffffff166000526004602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519384528116931691602090a3005b9050888c161438610ace565b610b45610cb3565b610a9c565b503461000e57604060031936011261000e576020610bb9610b696103b6565b73ffffffffffffffffffffffffffffffffffffffff610b866103d9565b91166000526004835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e57610bd13661085e565b151560ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600654169116176006556000604051f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818110610c42570390565b610c4a610c07565b0390565b15610c5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b506040513d6000823e3d90fd5b15610cc757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b6000467f000000000000000000000000000000000000000000000000000000000000000003610d7357507f000000000000000000000000000000000000000000000000000000000000000090565b6040518154919081610d8484610184565b80835260209485840194600191828116908115610eb65750600114610e5e575b5050509181610dbb610e5893610e2c9503826101d7565b519020604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95810195865260208601929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69085015246606085015230608085015291829060a0850190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826101d7565b51902090565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610ea15750505082010181610dbb610e58610da4565b80548685018601528794909301928101610e88565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168752505050604083019150829050610dbb610e58610da4565b9060ff6006541661106c577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9073ffffffffffffffffffffffffffffffffffffffff90610fc38285169485600052600460205286610f7260406000203373ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103611020575b505073ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b610fce868254610c37565b9055610ffa8173ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b8054860190556040519485521692602090a360065460081c60ff1661101e57600190565b005b81811061105f575b0361105733610afa8473ffffffffffffffffffffffffffffffffffffffff166000526004602052604060002090565b558638610f9b565b611067610c07565b611028565b50505060009056fea2646970667358221220d47b524cd65bedc03c05c9f2fe32073491f051aa2e8b8d7a4085dbd81d95a83d64736f6c634300080e0033";

type TestERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20__factory extends ContractFactory {
  constructor(...args: TestERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(overrides || {}) as Promise<TestERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  override connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
