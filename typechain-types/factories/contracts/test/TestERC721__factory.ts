/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC721,
  TestERC721Interface,
} from "../../../contracts/test/TestERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346200015d576200001462000179565b6020665465737437323160c81b818301526200002f620001ae565b6554535437323160d01b8282015282519091906001600160401b0381116200014d575b6000916200006c82620000668554620001e3565b62000220565b80601f8311600114620000bf57508190620000a3958492620000b3575b50508160011b916000199060031b1c1916179055620002d4565b6040516111e49081620003d78239f35b01519050388062000089565b600080529194601f1986167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639385905b82821062000134575050916001939187620000a39894106200011a575b505050811b019055620002d4565b015160001960f88460031b161c191690553880806200010c565b80600186978294978701518155019601940190620000ef565b6200015762000162565b62000052565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200019e575b60405260078252565b620001a862000162565b62000195565b60408051919082016001600160401b03811183821017620001d3575b60405260068252565b620001dd62000162565b620001ca565b90600182811c9216801562000215575b6020831014620001ff57565b634e487b7160e01b600052602260045260246000fd5b91607f1691620001f3565b601f81116200022d575050565b60009081805260208220906020601f850160051c830194106200026d575b601f0160051c01915b8281106200026157505050565b81815560010162000254565b90925082906200024b565b90601f821162000286575050565b60019160009083825260208220906020601f850160051c83019410620002c9575b601f0160051c01915b828110620002be5750505050565b8181558301620002b0565b9092508290620002a7565b80519091906001600160401b038111620003c6575b6001906200030381620002fd8454620001e3565b62000278565b602080601f83116001146200034157508192939460009262000335575b5050600019600383901b1c191690821b179055565b01519050388062000320565b6001600052601f198316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b888210620003ae575050838596971062000394575b505050811b019055565b015160001960f88460031b161c191690553880806200038a565b80878596829496860151815501950193019062000375565b620003d062000162565b620002e956fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461012b57806306fdde0314610122578063081812fc14610119578063095ea7b31461011057806323b872dd1461010757806340c10f19146100fe57806342842e0e146100f55780636352211e146100ec57806370a08231146100e357806395d89b41146100da578063a22cb465146100d1578063b88d4fde146100c8578063c87b56dd146100bf5763e985e9c5146100b757600080fd5b61000e610c5e565b5061000e610be0565b5061000e610b56565b5061000e610a3d565b5061000e61097b565b5061000e610933565b5061000e6108f0565b5061000e6107d7565b5061000e610667565b5061000e61064d565b5061000e6104f8565b5061000e61046f565b5061000e610332565b5061000e61015e565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361000e57565b503461000e57602060031936011261000e5760207fffffffff0000000000000000000000000000000000000000000000000000000060043561019f81610134565b167f01ffc9a7000000000000000000000000000000000000000000000000000000008114908115610207575b81156101dd575b506040519015158152f35b7f5b5e139f00000000000000000000000000000000000000000000000000000000915014386101d2565b7f80ac58cd00000000000000000000000000000000000000000000000000000000811491506101cb565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a257604052565b6102aa610231565b604052565b91908251928382526000905b8482106103065750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093116102f9575b0116010190565b60008582860101526102f2565b906020908180828501015190828601015201906102bb565b90602061032f9281815201906102af565b90565b503461000e5760008060031936011261046c57604051908080549060019180831c92808216928315610462575b60209283861085146104355785885260208801949081156103fb57506001146103a3575b61039f8761039381890382610261565b6040519182918261031e565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8386106103ea57505050910190506103938261039f3880610383565b8054858701529482019481016103ce565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016855250505001915061039390508261039f3880610383565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361035f565b80fd5b503461000e57602060031936011261000e576004356000526004602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e576105126104b2565b60243590600091808352600360205273ffffffffffffffffffffffffffffffffffffffff806040852054169081331480156105c7575b61055190610cdb565b82855260046020526040852080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86161790556040519316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b50818552600560205261055160ff61060233604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54169050610548565b600319606091011261000e5773ffffffffffffffffffffffffffffffffffffffff90600435828116810361000e5791602435908116810361000e579060443590565b503461000e5761066561065f3661060b565b91610da5565b005b503461000e57604060031936011261000e576106816104b2565b60243573ffffffffffffffffffffffffffffffffffffffff91828116926106a9841515610d40565b8260005260036020526040600020541661077957806106eb6107469273ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b80546001019055610706836000526003602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6040519160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8185a460018152602090f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152fd5b503461000e576106656107e93661060b565b90916107f6828483610da5565b823b15928315610809575b505050611042565b7fffffffff0000000000000000000000000000000000000000000000000000000092935060009160a460209260405194859384927f150b7a0200000000000000000000000000000000000000000000000000000000998a855233600486015273ffffffffffffffffffffffffffffffffffffffff8093166024860152604485015260806064850152826084850152165af19081156108e3575b6000916108b5575b501614388080610801565b6108d6915060203d81116108dc575b6108ce8183610261565b810190611020565b386108aa565b503d6108c4565b6108eb611035565b6108a2565b503461000e57602060031936011261000e576004356000526003602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6109626104b2565b1660005260026020526020604060002054604051908152f35b503461000e5760008060031936011261046c576040519080600190815480831c92808216928315610a33575b60209283861085146104355785885260208801949081156103fb57506001146109da5761039f8761039381890382610261565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838610610a2257505050910190506103938261039f3880610383565b805485870152948201948101610a06565b93607f16936109a7565b503461000e57604060031936011261000e57610a576104b2565b6024359081151580920361000e5773ffffffffffffffffffffffffffffffffffffffff90336000526005602052610ab28160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610b49575b01160190565b610b51610231565b610b43565b503461000e57608060031936011261000e57610b706104b2565b610b786104d5565b6064359167ffffffffffffffff831161000e573660238401121561000e57826004013591610ba583610b0d565b92610bb36040519485610261565b808452366024828701011161000e57602081600092602461066598018388013785010152604435916110a7565b503461000e57602060031936011261000e5761039f6040516040810181811067ffffffffffffffff821117610c51575b604052600881527f746f6b656e55524900000000000000000000000000000000000000000000000060208201526040519182916020835260208301906102af565b610c59610231565b610c10565b503461000e57604060031936011261000e57602060ff610ccf610c7f6104b2565b73ffffffffffffffffffffffffffffffffffffffff610c9c6104d5565b91166000526005845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b15610ce257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b15610d4757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152fd5b9073ffffffffffffffffffffffffffffffffffffffff80610dd0856000526003602052604060002090565b541691818416928303610fc257610e32610e9d92821694610df2861515610d40565b8433148015610f6d575b8015610f05575b610e0c90610cdb565b73ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055610e828173ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b80546001019055610706856000526003602052604060002090565b610edc610eb4846000526004602052604060002090565b7fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b50610e0c610f66610f5f33610f3a8573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b9050610e03565b50610fbb610fa2610f88896000526004602052604060002090565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3314610dfc565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152fd5b9081602091031261000e575161032f81610134565b506040513d6000823e3d90fd5b1561104957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b6110cc9392916110b8838284610da5565b803b159384156110ce575b50505050611042565b565b7fffffffff000000000000000000000000000000000000000000000000000000009394506020916111629160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009b8c845233600485015273ffffffffffffffffffffffffffffffffffffffff809516602485015260448401526080606484015260848301906102af565b0393165af19081156111a1575b600091611183575b501614388080806110c3565b61119b915060203d81116108dc576108ce8183610261565b38611177565b6111a9611035565b61116f56fea2646970667358221220f2cce441d99c2c7c4d40ca15514248d68cfa3f170bde577e1c4535a9aa911f6b64736f6c634300080e0033";

type TestERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721__factory extends ContractFactory {
  constructor(...args: TestERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC721> {
    return super.deploy(overrides || {}) as Promise<TestERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  override connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}
