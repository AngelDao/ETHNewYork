/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StoreFront,
  StoreFrontInterface,
} from "../../contracts/StoreFront";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permitAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
    ],
    name: "updateBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620000ed5762002319803803806200001d8162000119565b9283398101604082820312620000ed5781516001600160a01b0381168103620000ed5760208381015190936001600160401b039190828211620000ed570183601f82011215620000ed578051918211620000f2575b62000086601f8301601f1916860162000119565b93828552858383010111620000ed57936000945b828610620000d7575081620000b89511620000c8575b5050620001e4565b604051611fdd90816200033c8239f35b600091840101523880620000b0565b858101820151858701830152948101946200009a565b600080fd5b620000fc62000102565b62000072565b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200013f57604052565b6200014962000102565b604052565b90600182811c9216801562000180575b60208310146200016a57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200015e565b601f811162000198575050565b6000906005825260208220906020601f850160051c83019410620001d9575b601f0160051c01915b828110620001cd57505050565b818155600101620001c0565b9092508290620001b7565b91909160025460018060a01b031991338383161760025560018060a01b0391823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a360068054909316911617905581516001600160401b0381116200032b575b62000264816200025e6005546200014e565b6200018b565b602080601f8311600114620002a3575081929360009262000297575b50508160011b916000199060031b1c191617600555565b01519050388062000280565b6005600052601f198316949091907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0926000905b87821062000312575050836001959610620002f8575b505050811b01600555565b015160001960f88460031b161c19169055388080620002ed565b80600185968294968601518155019501930190620002d7565b6200033562000102565b6200024c56fe60806040526004361015610013575b600080fd5b60003560e01c8062fdd58e1461017a57806301ffc9a7146101715780630e89341c146101685780632eb2c2d61461015f57806339f7e37f1461015657806340c10f191461014d5780634e1273f414610144578063715018a61461013b5780637ecebe00146101325780638da5cb5b14610129578063a22cb46514610120578063a3f4df7e14610117578063bd85b0391461010e578063cfa8fb4214610105578063e985e9c5146100fc578063f242432a146100f3578063f2fde38b146100ea5763ffa1ad74146100e257600080fd5b61000e611620565b5061000e611515565b5061000e611329565b5061000e6112ac565b5061000e6110ad565b5061000e611080565b5061000e61104f565b5061000e610f3e565b5061000e610efa565b5061000e610eb2565b5061000e610e26565b5061000e610d6b565b5061000e610b81565b5061000e6109db565b5061000e610700565b5061000e6103c9565b5061000e61026a565b5061000e6101ea565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610219610183565b16600052600060205260406000206024356000526020526020604060002054604051908152f35b7fffffffff0000000000000000000000000000000000000000000000000000000081160361000e57565b503461000e57602060031936011261000e5760207fffffffff000000000000000000000000000000000000000000000000000000006004356102ab81610240565b167f01ffc9a7000000000000000000000000000000000000000000000000000000008114908115610313575b81156102e9575b506040519015158152f35b7f0e89341c00000000000000000000000000000000000000000000000000000000915014386102de565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506102d7565b918091926000905b82821061035d575011610356575050565b6000910152565b91508060209183015181860152018291610345565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936103ae8151809281875287808801910161033d565b0116010190565b9060206103c6928181520190610372565b90565b503461000e5760208060031936011261000e576005546103e881611b2d565b600090156104595750506104176104496104559261041d61040a600435611cca565b6040519485938401611bf1565b90611c98565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826105aa565b604051918291826103b5565b0390f35b909160405191809361046a81611b2d565b808552916001918083169081156104f5575060011461049c575b50505050610497816104559303826105aa565b610449565b929450600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106104e2575050508161045593610497928201019338610484565b80548585018701529285019281016104c5565b9250505061045594507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150169082015261049781604081019338610484565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761058157604052565b610589610535565b604052565b6040810190811067ffffffffffffffff82111761058157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761058157604052565b60209067ffffffffffffffff8111610605575b60051b0190565b61060d610535565b6105fe565b81601f8201121561000e57803591610629836105eb565b9261063760405194856105aa565b808452602092838086019260051b82010192831161000e578301905b828210610661575050505090565b81358152908301908301610653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116106ac575b01160190565b6106b4610535565b6106a6565b81601f8201121561000e578035906106d082610670565b926106de60405194856105aa565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e5760a060031936011261000e5761071a610183565b6107226101a6565b9067ffffffffffffffff9060443582811161000e57610745903690600401610612565b60643583811161000e5761075d903690600401610612565b9260843590811161000e576107769036906004016106b9565b815193610785815186146118fb565b73ffffffffffffffffffffffffffffffffffffffff808516958633148015610973575b6107b190611711565b60005b8181106108cc5750509561081096811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806107f8888b836119b2565b0390a4600093903b6108125750505050501515611896565b005b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e865233600487016119d7565b03925af19182156108bf575b91610891575b501614611896565b6108b2915060203d81116108b8575b6108aa81836105aa565b8101906117f2565b38610889565b503d6108a0565b6108c7611889565b610883565b808761096b610963836109218e6109308b6109218f6108f060019c6108f992611990565b51968793611990565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b61093b8782546117a6565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9182546117da565b9055016107b4565b506107b16109d46109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b90506107a8565b503461000e5760208060031936011261000e5767ffffffffffffffff60043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e57610a4973ffffffffffffffffffffffffffffffffffffffff60025416331461163d565b610a5d83610a58600554611b2d565b611b80565b600093601f8411600114610ab95750928293600093610aac575b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600555005b0101359050388080610a77565b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841694610b0a60056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090565b9381905b878210610b675750508460019610610b2d575b50505050811b01600555005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c199201013516905538808080610b21565b806001849786839596890101358155019601920190610b0e565b503461000e57604060031936011261000e57610b9b610183565b60243573ffffffffffffffffffffffffffffffffffffffff918260065416330361000e57610c6c9060075460405194610bd386610565565b6000958691828252610c09846109218773ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610c148882546117da565b905584169384836040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180610c5a8d8b8360209093929193604081019481520152565b0390a43b610c9d575050501515611896565b610c96610963600754610c86610c8182611aff565b600755565b6000526004602052604060002090565b9055604051f35b610cff7fffffffff0000000000000000000000000000000000000000000000000000000093946020926040519485809481938c7ff23a6e61000000000000000000000000000000000000000000000000000000009b8c85523360048601611807565b03925af1908115610d19575b869161089157501614611896565b610d21611889565b610d0b565b90815180825260208080930193019160005b828110610d46575050505090565b835185529381019392810192600101610d38565b9060206103c6928181520190610d26565b503461000e57604060031936011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e578160040135610da9816105eb565b92610db760405194856105aa565b81845260209160248386019160051b8301019136831161000e57602401905b828210610e0f578560243586811161000e5761045591610dfd610e03923690600401610612565b90611a33565b60405191829182610d5a565b838091610e1b846101c9565b815201910190610dd6565b503461000e57600080600319360112610eaf576002547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff821691610e8033841461163d565b1660025581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610ee1610183565b1660005260036020526020604060002054604051908152f35b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b60443590811515820361000e57565b503461000e57604060031936011261000e57610f58610183565b6024358015159182820361000e57610fe673ffffffffffffffffffffffffffffffffffffffff92336000526001602052610fb68360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051906110238261058e565b600a82527f53544f524546524f4e54000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c611016565b604051918291602083526020830190610372565b503461000e57602060031936011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5760e060031936011261000e576110c7610183565b6110cf6101a6565b6110d7610f2f565b9060843560643560ff8216820361000e5780421161124d5760209161111061110360009387878a611f01565b61110b611e14565b611ea6565b6040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15611240575b73ffffffffffffffffffffffffffffffffffffffff80600051168015908115611233575b506111d457816111c184610fb67f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31956109a88973ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b60405193151584528116931691602090a3005b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f494e56414c4944534947000000000000000000000000000000000000000000006044820152606490fd5b9050818516141538611168565b611248611889565b611144565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f53494720455850495245440000000000000000000000000000000000000000006044820152606490fd5b503461000e57604060031936011261000e57602060ff61131d6112cd610183565b73ffffffffffffffffffffffffffffffffffffffff6112ea6101a6565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461000e5760a060031936011261000e57611343610183565b61134b6101a6565b6084359160443560643567ffffffffffffffff851161000e576113756108109536906004016106b9565b9073ffffffffffffffffffffffffffffffffffffffff948585169586331480156114d9575b6113a390611711565b6113d1856109218873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6113dc8482546117a6565b905561140c856109218473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6114178482546117da565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6233918061145c888b8360209093929193604081019481520152565b0390a4600093903b6114745750505050501515611896565b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e86523360048701611847565b506113a361150e6109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b905061139a565b503461000e57602060031936011261000e5761152f610183565b73ffffffffffffffffffffffffffffffffffffffff6115538160025416331461163d565b81161561156357610810906116a2565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b604051906115f48261058e565b600182527f31000000000000000000000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c6115e7565b1561164457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561171857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181106117b1570390565b6117b9611776565b0390565b80196030116117cd575b60300190565b6117d5611776565b6117c7565b811981116117e6570190565b6117ee611776565b0190565b9081602091031261000e57516103c681610240565b909260a09273ffffffffffffffffffffffffffffffffffffffff6103c6969516835260006020840152604083015260608201528160808201520190610372565b91926103c695949160a09473ffffffffffffffffffffffffffffffffffffffff8092168552166020840152604083015260608201528160808201520190610372565b506040513d6000823e3d90fd5b1561189d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561190257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209181518110156119a5575b60051b010190565b6119ad611960565b61199d565b90916119c96103c693604084526040840190610d26565b916020818403910152610d26565b93906103c69593611a1791611a259473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a0860190610d26565b908482036060860152610d26565b916080818403910152610372565b918251611a42835182146118fb565b8351611a4d816105eb565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a89604092611a81845195866105aa565b8085526105eb565b01946020953687850137829560005b858110611aaa57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff611acc6001938c611990565b51166000526000835284600020611ae38286611990565b5160005283528460002054611af88288611990565b5201611a98565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117e6570190565b90600182811c92168015611b76575b6020831014611b4757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611b3c565b601f8111611b8c575050565b600090600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906020601f850160051c83019410611be7575b601f0160051c01915b828110611bdc57505050565b818155600101611bd0565b9092508290611bc7565b60055460009291611c0182611b2d565b91600190818116908115611c6d5750600114611c1c57505050565b909192935060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b848310611c5a575050500190565b8181602092548587015201920191611c4c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050019150565b906117ee6020928281519485920161033d565b906020918051821015611cbd57010190565b611cc5611960565b010190565b8015611dda57806000908282935b611dc65750611ce683610670565b92611cf460405194856105aa565b808452817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611d2283610670565b013660208701375b611d345750505090565b8060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9210611db9575b018091600a91611db0611da7611d7f611d798686066117bd565b60ff1690565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001690565b861a9187611cab565b53049081611d2a565b611dc1611776565b611d5f565b92611dd2600a91611aff565b930480611cd8565b50604051611de78161058e565b600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b611e1c611016565b60208151910120611e2b6115e7565b602081519101206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117611e99575b60405251902090565b611ea1610535565b611e90565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff821117611e995760405251902090565b9290919273ffffffffffffffffffffffffffffffffffffffff80911693846000526003602052604060002091825492611f3984611aff565b90556040519460208601967f200d2483757e19728fc8a3511298158c1b74dd131c7be00c4904e11665b42cd1885260408701521660608501521515608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117611e99576040525190209056fea2646970667358221220816f6fcbd8773af062bbf61161f04cc5d3dc5cfbe4e57a400b6a21336c62d8ed64736f6c634300080e0033";

type StoreFrontConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreFrontConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StoreFront__factory extends ContractFactory {
  constructor(...args: StoreFrontConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minter: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StoreFront> {
    return super.deploy(
      _minter,
      _baseURI,
      overrides || {}
    ) as Promise<StoreFront>;
  }
  override getDeployTransaction(
    _minter: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minter, _baseURI, overrides || {});
  }
  override attach(address: string): StoreFront {
    return super.attach(address) as StoreFront;
  }
  override connect(signer: Signer): StoreFront__factory {
    return super.connect(signer) as StoreFront__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreFrontInterface {
    return new utils.Interface(_abi) as StoreFrontInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoreFront {
    return new Contract(address, _abi, signerOrProvider) as StoreFront;
  }
}
