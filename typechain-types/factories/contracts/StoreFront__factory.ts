/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StoreFront,
  StoreFrontInterface,
} from "../../contracts/StoreFront";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
    ],
    name: "updateBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620000ed5762001de6803803806200001d8162000119565b9283398101604082820312620000ed5781516001600160a01b0381168103620000ed5760208381015190936001600160401b039190828211620000ed570183601f82011215620000ed578051918211620000f2575b62000086601f8301601f1916860162000119565b93828552858383010111620000ed57936000945b828610620000d7575081620000b89511620000c8575b5050620001e4565b604051611aaa90816200033c8239f35b600091840101523880620000b0565b858101820151858701830152948101946200009a565b600080fd5b620000fc62000102565b62000072565b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200013f57604052565b6200014962000102565b604052565b90600182811c9216801562000180575b60208310146200016a57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200015e565b601f811162000198575050565b6000906004825260208220906020601f850160051c83019410620001d9575b601f0160051c01915b828110620001cd57505050565b818155600101620001c0565b9092508290620001b7565b91909160025460018060a01b031991338383161760025560018060a01b0391823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a360058054909316911617905581516001600160401b0381116200032b575b62000264816200025e6004546200014e565b6200018b565b602080601f8311600114620002a3575081929360009262000297575b50508160011b916000199060031b1c191617600455565b01519050388062000280565b6004600052601f198316949091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000905b87821062000312575050836001959610620002f8575b505050811b01600455565b015160001960f88460031b161c19169055388080620002ed565b80600185968294968601518155019501930190620002d7565b6200033562000102565b6200024c56fe60806040526004361015610013575b600080fd5b60003560e01c8062fdd58e1461012a57806301ffc9a7146101215780630e89341c146101185780632eb2c2d61461010f57806339f7e37f146101065780634e1273f4146100fd578063715018a6146100f4578063731133e9146100eb5780638da5cb5b146100e2578063a22cb465146100d9578063bd85b039146100d0578063e985e9c5146100c7578063f242432a146100be5763f2fde38b146100b657600080fd5b61000e61119d565b5061000e610fb1565b5061000e610f34565b5061000e610f07565b5061000e610e37565b5061000e610e02565b5061000e610c85565b5061000e610bf9565b5061000e610b3e565b5061000e610953565b5061000e610678565b5061000e610379565b5061000e61021a565b5061000e61019a565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6101c9610133565b16600052600060205260406000206024356000526020526020604060002054604051908152f35b7fffffffff0000000000000000000000000000000000000000000000000000000081160361000e57565b503461000e57602060031936011261000e5760207fffffffff0000000000000000000000000000000000000000000000000000000060043561025b816101f0565b167f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156102c3575b8115610299575b506040519015158152f35b7f0e89341c000000000000000000000000000000000000000000000000000000009150143861028e565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149150610287565b918091926000905b82821061030d575011610306575050565b6000910152565b915080602091830151818601520182916102f5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361035e815180928187528780880191016102ed565b0116010190565b906020610376928181520190610322565b90565b503461000e5760208060031936011261000e576004546103988161175f565b600090156104095750506103c76103f9610405926103cd6103ba60043561194b565b6040519485938401611823565b906118ca565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610515565b60405191829182610365565b0390f35b909160405191809361041a8161175f565b808552916001918083169081156104a5575060011461044c575b5050505061044781610405930382610515565b6103f9565b929450600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610492575050508161040593610447928201019338610434565b8054858501870152928501928101610475565b9250505061040594507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150169082015261044781604081019338610434565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761055657604052565b61055e6104e5565b604052565b60209067ffffffffffffffff811161057d575b60051b0190565b6105856104e5565b610576565b81601f8201121561000e578035916105a183610563565b926105af6040519485610515565b808452602092838086019260051b82010192831161000e578301905b8282106105d9575050505090565b813581529083019083016105cb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610624575b01160190565b61062c6104e5565b61061e565b81601f8201121561000e57803590610648826105e8565b926106566040519485610515565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e5760a060031936011261000e57610692610133565b61069a610156565b9067ffffffffffffffff9060443582811161000e576106bd90369060040161058a565b60643583811161000e576106d590369060040161058a565b9260843590811161000e576106ee903690600401610631565b8151936106fd8151861461155b565b73ffffffffffffffffffffffffffffffffffffffff8085169586331480156108eb575b61072990611343565b60005b8181106108445750509561078896811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610770888b83611612565b0390a4600093903b61078a57505050505015156114f6565b005b917fffffffff000000000000000000000000000000000000000000000000000000009495602092856107ef95604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e86523360048701611637565b03925af1918215610837575b91610809575b5016146114f6565b61082a915060203d8111610830575b6108228183610515565b810190611452565b38610801565b503d610818565b61083f6114e9565b6107fb565b80876108e36108db836108998e6108a88b6108998f61086860019c610871926115f0565b519687936115f0565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b6108b3878254611412565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b918254611446565b90550161072c565b5061072961094c610945336109208a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b9050610720565b503461000e5760208060031936011261000e5767ffffffffffffffff60043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e576109c173ffffffffffffffffffffffffffffffffffffffff60025416331461126f565b6109d5836109d060045461175f565b6117b2565b600093601f8411600114610a315750928293600093610a24575b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600455005b01013590503880806109ef565b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841694610a8260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b9381905b878210610adf5750508460019610610aa5575b50505050811b01600455005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c199201013516905538808080610a99565b806001849786839596890101358155019601920190610a86565b90815180825260208080930193019160005b828110610b19575050505090565b835185529381019392810192600101610b0b565b906020610376928181520190610af9565b503461000e57604060031936011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e578160040135610b7c81610563565b92610b8a6040519485610515565b81845260209160248386019160051b8301019136831161000e57602401905b828210610be2578560243586811161000e5761040591610bd0610bd692369060040161058a565b90611693565b60405191829182610b2d565b838091610bee84610179565b815201910190610ba9565b503461000e57600080600319360112610c82576002547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff821691610c5333841461126f565b1660025581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57608060031936011261000e57610c9f610133565b6044359060243560643567ffffffffffffffff811161000e57610cc6903690600401610631565b9073ffffffffffffffffffffffffffffffffffffffff918260055416330361000e578382610d8b926108db95610d2383610899610d9b9a73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610d2e8a8254611446565b90558316928360008a7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405180610d7533948a8360209093929193604081019481520152565b0390a4600091903b610d9f5750505015156114f6565b6000526003602052604060002090565b9055005b60206107ef917fffffffff0000000000000000000000000000000000000000000000000000000094958b856040518096819582947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d85523360048601611467565b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b503461000e57604060031936011261000e57610e51610133565b6024359081151580920361000e5773ffffffffffffffffffffffffffffffffffffffff90336000526001602052610eac8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57602060031936011261000e5760043560005260036020526020604060002054604051908152f35b503461000e57604060031936011261000e57602060ff610fa5610f55610133565b73ffffffffffffffffffffffffffffffffffffffff610f72610156565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461000e5760a060031936011261000e57610fcb610133565b610fd3610156565b6084359160443560643567ffffffffffffffff851161000e57610ffd610788953690600401610631565b9073ffffffffffffffffffffffffffffffffffffffff94858516958633148015611161575b61102b90611343565b611059856108998873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b611064848254611412565b9055611094856108998473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61109f848254611446565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f623391806110e4888b8360209093929193604081019481520152565b0390a4600093903b6110fc57505050505015156114f6565b917fffffffff000000000000000000000000000000000000000000000000000000009495602092856107ef95604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e865233600487016114a7565b5061102b611196610945336109208a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9050611022565b503461000e57602060031936011261000e576111b7610133565b73ffffffffffffffffffffffffffffffffffffffff6111db8160025416331461126f565b8116156111eb57610788906112d4565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b1561127657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561134a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060018110611406570190565b61140e6113a8565b0190565b81811061141d570390565b6114256113a8565b0390565b8019603011611439575b60300190565b6114416113a8565b611433565b81198111611406570190565b9081602091031261000e5751610376816101f0565b909260a09273ffffffffffffffffffffffffffffffffffffffff610376969516835260006020840152604083015260608201528160808201520190610322565b919261037695949160a09473ffffffffffffffffffffffffffffffffffffffff8092168552166020840152604083015260608201528160808201520190610322565b506040513d6000823e3d90fd5b156114fd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561156257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020918151811015611605575b60051b010190565b61160d6115c0565b6115fd565b909161162961037693604084526040840190610af9565b916020818403910152610af9565b93906103769593611677916116859473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a0860190610af9565b908482036060860152610af9565b916080818403910152610322565b9182516116a28351821461155b565b83516116ad81610563565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06116e96040926116e184519586610515565b808552610563565b01946020953687850137829560005b85811061170a57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff61172c6001938c6115f0565b5116600052600083528460002061174382866115f0565b516000528352846000205461175882886115f0565b52016116f8565b90600182811c921680156117a8575b602083101461177957565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161176e565b601f81116117be575050565b600090600482527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611819575b601f0160051c01915b82811061180e57505050565b818155600101611802565b90925082906117f9565b600454600092916118338261175f565b9160019081811690811561189f575060011461184e57505050565b909192935060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906000915b84831061188c575050500190565b818160209254858701520192019161187e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050019150565b9061140e602092828151948592016102ed565b906118e7826105e8565b6118f46040519182610515565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061192282946105e8565b0190602036910137565b90602091805182101561193e57010190565b6119466115c0565b010190565b8015611a1b576000818181805b6119d35750611966816118dd565b935b6119725750505090565b61197b906113d8565b90600a906119be611996611990848406611429565b60ff1690565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001690565b841a6119ca848761192c565b53049081611968565b91506001817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600a9314611a0e575b01910480849291611958565b611a166113a8565b611a02565b506040516040810181811067ffffffffffffffff821117611a67575b604052600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b611a6f6104e5565b611a3756fea2646970667358221220efed0327df65e1a3d19fd2d3acac1c94f2e23f03fb748fe59b9e2fe9be4f81a164736f6c634300080e0033";

type StoreFrontConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreFrontConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StoreFront__factory extends ContractFactory {
  constructor(...args: StoreFrontConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minter: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StoreFront> {
    return super.deploy(
      _minter,
      _baseURI,
      overrides || {}
    ) as Promise<StoreFront>;
  }
  override getDeployTransaction(
    _minter: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minter, _baseURI, overrides || {});
  }
  override attach(address: string): StoreFront {
    return super.attach(address) as StoreFront;
  }
  override connect(signer: Signer): StoreFront__factory {
    return super.connect(signer) as StoreFront__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreFrontInterface {
    return new utils.Interface(_abi) as StoreFrontInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoreFront {
    return new Contract(address, _abi, signerOrProvider) as StoreFront;
  }
}
