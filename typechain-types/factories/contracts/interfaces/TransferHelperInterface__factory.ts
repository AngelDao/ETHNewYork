/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  TransferHelperInterface,
  TransferHelperInterfaceInterface,
} from "../../../contracts/interfaces/TransferHelperInterface";

const _abi = [
  {
    inputs: [],
    name: "InvalidItemType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ConduitItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct TransferHelperItem[]",
        name: "items",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "bulkTransfer",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class TransferHelperInterface__factory {
  static readonly abi = _abi;
  static createInterface(): TransferHelperInterfaceInterface {
    return new utils.Interface(_abi) as TransferHelperInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferHelperInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferHelperInterface;
  }
}
