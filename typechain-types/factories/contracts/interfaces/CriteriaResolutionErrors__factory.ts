/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  CriteriaResolutionErrors,
  CriteriaResolutionErrorsInterface,
} from "../../../contracts/interfaces/CriteriaResolutionErrors";

const _abi = [
  {
    inputs: [],
    name: "ConsiderationCriteriaResolverOutOfRange",
    type: "error",
  },
  {
    inputs: [],
    name: "CriteriaNotEnabledForItem",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "OfferCriteriaResolverOutOfRange",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderCriteriaResolverOutOfRange",
    type: "error",
  },
  {
    inputs: [],
    name: "UnresolvedConsiderationCriteria",
    type: "error",
  },
  {
    inputs: [],
    name: "UnresolvedOfferCriteria",
    type: "error",
  },
];

export class CriteriaResolutionErrors__factory {
  static readonly abi = _abi;
  static createInterface(): CriteriaResolutionErrorsInterface {
    return new utils.Interface(_abi) as CriteriaResolutionErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CriteriaResolutionErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CriteriaResolutionErrors;
  }
}
