{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadFraction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BadReturnValueFromERC20OnTransfer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "BadSignatureV",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ConsiderationCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "considerationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shortfallAmount",
          "type": "uint256"
        }
      ],
      "name": "ConsiderationNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CriteriaNotEnabledForItem",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "identifiers",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "ERC1155BatchTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InexactFraction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEtherSupplied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Invalid1155BatchTransferEncoding",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBasicOrderParameterEncoding",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidCallToConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCanceller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidERC721TransferAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFulfillmentComponentData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNativeOfferItem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "InvalidRestrictedOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedFulfillmentOfferAndConsiderationComponents",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "MissingFulfillmentComponentOnAggregation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingItemAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingOriginalConsiderationItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NoContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoReentrantCalls",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSpecifiedOrdersAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferAndConsiderationRequiredOnFulfillment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderAlreadyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderIsCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderPartiallyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillsNotEnabledForOrder",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "identifier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedConsiderationCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedOfferCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnusedItemParameters",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "CounterIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct SpentItem[]",
          "name": "offer",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct ReceivedItem[]",
          "name": "consideration",
          "type": "tuple[]"
        }
      ],
      "name": "OrderFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderValidated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "advancedOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "fulfillAdvancedOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableAdvancedOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "considerationToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "considerationIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum BasicOrderType",
              "name": "basicOrderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offererConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalAdditionalRecipients",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct AdditionalRecipient[]",
              "name": "additionalRecipients",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct BasicOrderParameters",
          "name": "parameters",
          "type": "tuple"
        }
      ],
      "name": "fulfillBasicOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "getCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "counter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalFilled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "information",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1299:27859:40:-:0;;;1754:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1824:17;;;;;;;;;2517:19:46;:17;:19::i;:::-;2279:257;;;;;;;;;;-1:-1:-1;2279:257:46;-1:-1:-1;2279:257:46;2637:13;2625:25;;-1:-1:-1;;;;;;;2854:43:46;;;;;;-1:-1:-1;3037:44:46;;-1:-1:-1;;;3037:44:46;;;;2812:17;;-1:-1:-1;;;;;2854:43:46;;;3037:42;;:44;;;;;-1:-1:-1;3037:44:46;;;;;2854:43;3037:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2989:102:46;;-1:-1:-1;;2345:1:23;685:16:56;:31;-1:-1:-1;1602:16:45::1;::::0;-1:-1:-1;;1602:14:45::1;:16:::0;-1:-1:-1;;1602:16:45:i:1;:::-;1498:127:::0;1391:101:54;1509:96:53;1754:95:40;1299:27859;;5383:3206:46;5825:5;;;;;;;;;;;-1:-1:-1;;;5825:5:46;;;;;5935:8;;;;;;;;;;-1:-1:-1;;;5935:8:46;;;;6066:264;;5809:23;;5919:26;;5472:16;;;;;;;;;;;;6066:264;;;-1:-1:-1;;;5839:25:62;;-1:-1:-1;;;5889:2:62;5880:12;;5873:39;-1:-1:-1;;;5937:2:62;5928:12;;5921:38;5989:31;5984:2;5975:12;;5968:53;6051:22;6046:2;6037:12;;6030:44;-1:-1:-1;;;6099:2:62;6090:12;;6083:41;-1:-1:-1;;;6149:3:62;6140:13;;6133:26;6184:3;6175:13;;5031:1163;6066:264:46;;;;-1:-1:-1;;6066:264:46;;;;;;;;;-1:-1:-1;;;6066:264:46;6467:310;;2538:33:62;-1:-1:-1;;;2587:12:62;;;2580:39;-1:-1:-1;;;2635:12:62;;;2628:38;2696:31;2682:12;;;2675:53;2758:22;2744:12;;;2737:44;-1:-1:-1;;;2797:12:62;;;2790:42;-1:-1:-1;;;2848:13:62;;;2841:42;-1:-1:-1;;;2899:13:62;;;2892:26;;;6467:310:46;;;;;;;;;2934:13:62;;;6467:310:46;;;-1:-1:-1;;;6942:490:46;;;4372:31:62;-1:-1:-1;;;4419:12:62;;;4412:40;-1:-1:-1;;;4468:12:62;;;4461:37;-1:-1:-1;;;4514:12:62;;;4507:42;4579:34;4565:12;;;4558:56;-1:-1:-1;;;4630:12:62;;;4623:26;-1:-1:-1;;;4665:12:62;;;4658:40;-1:-1:-1;;;4714:13:62;;;4707:43;-1:-1:-1;;;4766:13:62;;;4759:41;-1:-1:-1;;;4816:13:62;;;4809:42;-1:-1:-1;;;4867:13:62;;;4860:38;1230:21;5004:13;;;1218:34;-1:-1:-1;;;1268:12:62;;;965:30;1011:12;;;1099:16;6066:264:46;-1:-1:-1;6467:310:46;-1:-1:-1;;1131:11:62;;6942:490:46;;;-1:-1:-1;;6942:490:46;;;;;;;;;;-1:-1:-1;;;6942:490:46;7577:248;;6906:28:62;-1:-1:-1;;;6950:12:62;;;6943:36;-1:-1:-1;;;6995:12:62;;;6988:39;-1:-1:-1;;;7043:12:62;;;7036:40;7106:27;7092:12;;;7085:49;-1:-1:-1;;;7150:12:62;;;7143:25;6942:490:46;-1:-1:-1;7184:12:62;;7577:248:46;;;-1:-1:-1;;7577:248:46;;;;;;;;;;7554:281;;7577:248;7554:281;;;;7945:30;;;;;;8093:38;;;;;;7554:281;;-1:-1:-1;7945:30:46;-1:-1:-1;8093:38:46;-1:-1:-1;8261:162:46;;8295:32;;8103:27;;7955:19;;8261:162;;:::i;:::-;;;;;;;;;;;;;8238:195;;;;;;8222:211;;8462:120;8505:20;8539:8;8561:11;8462:29;;;:120;;:::i;:::-;8444:138;;5736:2853;;;5383:3206;;;;;;;:::o;1919:6655:45:-;2040:79;:115;;-1:-1:-1;;2040:115:45;;;;;;2165:82;:118;;;;;;2293:85;:121;;;;;;2424:88;:124;;;;;;2586:80;:117;;;;2040:115;2586:117;;;;;;2713:83;:120;;;;;;;;2843:86;:123;;;;;;;;2976:89;:126;;;;;;;;3142:81;:119;;;;2324:44;3142:119;;;;;;3271:84;:122;;;;;;;;3403:87;:125;;;;;;;;3538:90;:128;;;;;;;;3707:82;:121;;;;2040:17;3707:121;;;;;;3838:85;:124;;;;;;;;3972:88;:127;;;;;;;;4109:91;:130;;;;;;;;4279:81;:119;;;;2617:39;4279:119;;;;;;4408:84;:122;;;;;;;;4540:87;:125;;;;;;;;4675:90;:128;;;;;;;;4844:82;:121;;;;2744:42;4844:121;;;;;;4975:85;:124;;;;;;;;5109:88;:127;;;;;;;;5246:91;:130;;;;;;;;;2040:79;5449:84;;:106;;;;;;5565:85;:107;;;;;;5682:86;:108;;;;;;5800:87;:109;;;;;;5919:86;:108;;;;;;6037:87;:109;;;;;;6181:87;:112;;;;;;;;6303:88;:113;;;;;;;;6426:89;:114;;;;;;;;6550:90;:115;;;;;;;;6675:89;:114;;;;;;;;6799:90;:115;;;;;;;;;;6952:90;:118;;;;;;;;7080:91;:119;;;;;;;;7209:92;:120;;;;;;;;7339:93;:121;;;;;;;;7470:92;:120;;;;;;;;7600:93;:121;;;;;;;;;7762:93;:124;;;;;;;;7896:94;:125;;;;;;;;8031:95;:126;;;;;;;;8167:96;:127;;;;;;;;8304:95;:126;;;;;;;;5277:50;2122:33;8440:96;;:127;;;;;;;;1919:6655::o;3587:365:46:-;4342:182;;;;;;;7466:25:62;;;;7507:18;;;7500:34;;;;7550:18;;;7543:34;;;;4466:13:46;7593:18:62;;;7586:34;4505:4:46;7636:19:62;;;;7629:61;;;;4342:182:46;;;;;;;;;;7438:19:62;;;;4342:182:46;;4319:215;;;;;;3587:365::o;14:290:62:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:62;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:62:o;309:245::-;388:6;396;449:2;437:9;428:7;424:23;420:32;417:52;;;465:1;462;455:12;417:52;-1:-1:-1;;488:16:62;;544:2;529:18;;;523:25;488:16;;523:25;;-1:-1:-1;309:245:62:o;559:336::-;600:3;638:5;632:12;662:1;672:128;686:6;683:1;680:13;672:128;;;783:4;768:13;;;764:24;;758:31;745:11;;;738:52;701:12;672:128;;;818:6;815:1;812:13;809:48;;;853:1;844:6;839:3;835:16;828:27;809:48;-1:-1:-1;873:16:62;;;;;559:336;-1:-1:-1;;559:336:62:o;1291:333::-;1512:3;1537:81;1562:55;1587:29;1612:3;1604:6;1587:29;:::i;:::-;1579:6;1562:55;:::i;:::-;1554:6;1537:81;:::i;:::-;1530:88;1291:333;-1:-1:-1;;;;;1291:333:62:o;7701:127::-;1299:27859:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c8063a81744041161008a578063f07ec37311610059578063f07ec373146102a6578063f47b7740146102c6578063fb0f3ee1146102ea578063fd9f1e10146102fd57600080fd5b8063a81744041461025a578063b3a34c4c1461026d578063e7acab2414610280578063ed98a5741461029357600080fd5b80635b34b966116100c65780635b34b966146101c657806379df72bd146101e957806387201b4114610209578063881477321461022a57600080fd5b806306fdde03146100ed57806346423aa71461011857806355944a42146101a6575b600080fd5b3480156100f957600080fd5b5061010261031d565b60405161010f91906182d2565b60405180910390f35b34801561012457600080fd5b5061018461013336600461780d565b60009081526002602052604090205460ff808216926101008304909116916effffffffffffffffffffffffffffff620100008204811692710100000000000000000000000000000000009092041690565b604080519415158552921515602085015291830152606082015260800161010f565b6101b96101b43660046175ff565b61035e565b60405161010f9190617f21565b3480156101d257600080fd5b506101db6103c6565b60405190815260200161010f565b3480156101f557600080fd5b506101db610204366004617a3e565b61040d565b61021c61021736600461751e565b6105a4565b60405161010f929190617e44565b34801561023657600080fd5b5061024a610245366004617694565b610643565b604051901515815260200161010f565b6101b961026836600461777f565b610693565b61024a61027b366004617a7a565b610756565b61024a61028e36600461791e565b610816565b61021c6102a13660046176d6565b61088c565b3480156102b257600080fd5b506101db6102c1366004617501565b61097c565b3480156102d257600080fd5b506102db61099a565b60405161010f939291906182e5565b61024a6102f83660046179ae565b6109b2565b34801561030957600080fd5b5061024a610318366004617694565b610a0a565b606061035960408051808201909152600d81527f436f6e73696465726174696f6e00000000000000000000000000000000000000602082015290565b905090565b60606002600054141561039d576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b7866103b08688618765565b8585610a53565b60016000559695505050505050565b600060026000541415610405576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610359610a8a565b60408051610160810190915260009061059e908061042e6020860186617501565b6001600160a01b0316815260200184602001602081019061044f9190617501565b6001600160a01b0316815260200161046a60408601866183e6565b808060200260200160405190810160405280939291908181526020016000905b828210156104b6576104a760a08302860136819003810190617a22565b8152602001906001019061048a565b50505091835250506020016104ce606086018661837f565b808060200260200160405190810160405280939291908181526020016000905b8282101561051a5761050b60c083028601368190038101906179ea565b815260200190600101906104ee565b505050918352505060200161053560a08601608087016178ad565b600381111561054657610546618987565b81526020018460a0013581526020018460c0013581526020018460e0013581526020018461010001358152602001846101200135815260200184806060019061058f919061837f565b90915250610140840135610b26565b92915050565b606080600260005414156105e4576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556105f48d610d5c565b905061062a8d828e8e906106089190618765565b8d8d8d8d8d6001600160a01b038e1615610622578d610624565b335b8d610e38565b6001600055909e909d509b505050505050505050505050565b600060026000541415610682576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068c8383610e7c565b9392505050565b6060600260005414156106d2576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556107486106e4868661103d565b6040805160008082526020820190925290610740565b61072d6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816106fa5790505b508585610a53565b600160005595945050505050565b600060026000541415610795576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260005561080a6107a684611102565b6040805160008082526020820190925290610802565b6107ef6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107bc5790505b5084336111bd565b60016000559392505050565b600060026000541415610855576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b76108668761889f565b6108708688618765565b856001600160a01b0386161561088657856111bd565b336111bd565b606080600260005414156108cc576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556108dd8b8b61103d565b905060006108ea82610d5c565b90506109648282600060405190808252806020026020018201604052801561095757816020015b6109446040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816109115790505b508d8d8d8d8d338e610e38565b6001600055909d909c509a5050505050505050505050565b6001600160a01b03811660009081526001602052604081205461059e565b60606000806109a7611268565b925092509250909192565b6000600260005414156109f1576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556109ff826112d0565b600160005592915050565b600060026000541415610a49576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068c838361195b565b60606000610a6086610d5c565b9050610a7386828760018a516000611bd5565b610a7e8185856120e0565b9150505b949350505050565b600060026000541415610ac9576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526001602052604081208054909190610ae6906188fa565b918290555060405181815290915033907f721c20121297512b72821b97f5326877ea8ecf4bb9948fea5bfcb6453074d37f9060200160405180910390a290565b60008083604001515167ffffffffffffffff811115610b4757610b476189e5565b604051908082528060200260200182016040528015610b70578160200160208202803683370190505b509050600084610140015167ffffffffffffffff811115610b9357610b936189e5565b604051908082528060200260200182016040528015610bbc578160200160208202803683370190505b50905060005b856040015151811015610c2257610bf586604001518281518110610be857610be86189b6565b6020026020010151612342565b838281518110610c0757610c076189b6565b6020908102919091010152610c1b816188fa565b9050610bc2565b5060005b856101400151811015610c8657610c5986606001518281518110610c4c57610c4c6189b6565b60200260200101516123b0565b828281518110610c6b57610c6b6189b6565b6020908102919091010152610c7f816188fa565b9050610c26565b507f00000000000000000000000000000000000000000000000000000000000000008560000151866020015184604051602001610cc39190617df2565b6040516020818303038152906040528051906020012084604051602001610cea9190617df2565b6040516020818303038152906040528051906020012089608001518a60a001518b60c001518c60e001518d61010001518e61012001518e604051602001610d3c9c9b9a99989796959493929190617f34565b604051602081830303815290604052805190602001209250505092915050565b80516060908067ffffffffffffffff811115610d7a57610d7a6189e5565b604051908082528060200260200182016040528015610dd357816020015b6040805160a081018252600080825260606020808401829052938301819052820181905260808201528252600019909201910181610d985790505b50915060005b81811015610e3157610e03848281518110610df657610df66189b6565b6020026020010151612407565b838281518110610e1557610e156189b6565b602002602001018190525080610e2a906188fa565b9050610dd9565b5050919050565b606080610e4a8c8c8c60008789611bd5565b610e698b610e588a8c61868b565b610e62898b61868b565b88886126e9565b909d909c509a5050505050505050505050565b600060026000541415610ebb576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b8181101561102f5736888883818110610edd57610edd6189b6565b9050602002810190610eef91906184b2565b905036610efc82806184e6565b9050610f0b6020820182617501565b9450610f1e610f19826188ab565b612a3f565b60008181526002602052604081209850909650610f4090879089906001612a7a565b50865460ff1661101c57610f968587610f5c602086018661844d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ba892505050565b86547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178755610fcf6040820160208301617501565b6001600160a01b0316856001600160a01b03167ffde361574a066b44b3b5fe98a87108b7565e327327954c4faeea56a4e6491a0a8860405161101391815260200190565b60405180910390a35b505080611028906188fa565b9050610ec2565b506001979650505050505050565b6060818067ffffffffffffffff811115611059576110596189e5565b60405190808252806020026020018201604052801561109257816020015b61107f616eeb565b8152602001906001900390816110775790505b50915060005b818110156110fa576110cc8585838181106110b5576110b56189b6565b90506020028101906110c791906184b2565b611102565b8382815181106110de576110de6189b6565b6020026020010181905250806110f3906188fa565b9050611098565b505092915050565b61110a616eeb565b6040805160a081019091528061112084806184e6565b611129906188ab565b815260200160016effffffffffffffffffffffffffffff16815260200160016effffffffffffffffffffffffffffff16815260200183806020019061116e919061844d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101909252928352909201525092915050565b6000606060008060006111d38989600187612c3a565b9250925092506111e38989613000565b885160006111f48285858c8c613350565b905081602001516001600160a01b031682600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31878b8560200151866040015160405161124f9493929190617fa7565b60405180910390a35060019a9950505050505050505050565b60408051808201909152600681527f72632e312e31000000000000000000000000000000000000000000000000000060208201526000806112a76137c2565b92937f000000000000000000000000000000000000000000000000000000000000000092509050565b600080806112e66101208501610100860161788c565b9050600360008260178111156112fe576112fe618987565b601781111561130f5761130f618987565b8152602081019190915260400160009081205460ff16925090508061133c6101208601610100870161788c565b90506004600082601781111561135457611354618987565b601781111561136557611365618987565b8152602081019190915260400160009081205460ff16925090508083600581111561139257611392618987565b14806113af575060018360058111156113ad576113ad618987565b145b156113bc575060006113c0565b5060015b341580156113df575060008160058111156113dd576113dd618987565b145b1561141d576040517fa61be9f00000000000000000000000000000000000000000000000000000000081523460048201526024015b60405180910390fd5b341580159061143d5750600181600581111561143b5761143b618987565b145b15611476576040517fa61be9f0000000000000000000000000000000000000000000000000000000008152346004820152602401611414565b6000600484600581111561148c5761148c618987565b14806114a9575060058460058111156114a7576114a7618987565b145b156114c5576114be60c0870160a08801617501565b90506114d5565b6114d26020870187617501565b90505b6000808560058111156114ea576114ea618987565b14806115075750600185600581111561150557611505618987565b145b1561151457506000611578565b600285600581111561152857611528618987565b14806115455750600385600581111561154357611543618987565b145b1561155257506001611578565b600485600581111561156657611566618987565b141561157457506002611578565b5060035b6000600486600581111561158e5761158e618987565b14806115ab575060058660058111156115a9576115a9618987565b145b156115b8575060016115fa565b60008660058111156115cc576115cc618987565b14806115e9575060028660058111156115e7576115e7618987565b145b156115f6575060026115fa565b5060035b6116088886848787866138b4565b600061161a60808a0160608b01617501565b90506000600488600581111561163257611632618987565b148061164f5750600588600581111561164d5761164d618987565b145b1561166057506101c0890135611668565b506101a08901355b600088600581111561167c5761167c618987565b14806116995750600188600581111561169757611697618987565b145b80156116be575060208a018035906116b1908c617501565b6001600160a01b03161715155b80611704575060028860058111156116d8576116d8618987565b14806116f5575060038860058111156116f3576116f3618987565b145b8015611704575060208a013515155b8061174a5750600488600581111561171e5761171e618987565b148061173b5750600588600581111561173957611739618987565b145b801561174a575060c08a013515155b15611781576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152600081526060602082015260008960058111156117aa576117aa618987565b14156117e9576117d66117c360c08d0160a08e01617501565b84338e60c001358f60e0013587876142ac565b6117e48b604001358c614320565b611941565b60018960058111156117fd576117fd618987565b1415611829576117d661181660c08d0160a08e01617501565b84338e60c001358f60e00135878761444c565b600289600581111561183d5761183d618987565b1415611876576118566117c360c08d0160a08e01617501565b6117e4338461186860208f018f617501565b8e604001358f600087614482565b600389600581111561188a5761188a618987565b14156118a35761185661181660c08d0160a08e01617501565b60048960058111156118b7576118b7618987565b1415611906576118e06118cd60208d018d617501565b33858e602001358f6040013587876142ac565b6117e483338d60a00160208101906118f89190617501565b8e60e001358f600187614482565b61192961191660208d018d617501565b33858e602001358f60400135878761444c565b61194183338d60a00160208101906118f89190617501565b61194a8161453b565b5060019a9950505050505050505050565b60006002600054141561199a576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b8181101561102f57368888838181106119bc576119bc6189b6565b90506020028101906119ce91906184e6565b90506119dd6020820182617501565b94506119ef6040820160208301617501565b9350336001600160a01b03861614801590611a135750336001600160a01b03851614155b15611a4a576040517f80ec737400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b39604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848060400190611a8991906183e6565b808060200260200160405190810160405280939291908181526020016000905b82821015611ad557611ac660a08302860136819003810190617a22565b81526020019060010190611aa9565b5050509183525050602001611aed606086018661837f565b808060200260200160405190810160405280939291908181526020016000905b8282101561051a57611b2a60c083028601368190038101906179ea565b81526020019060010190611b0d565b6000818152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010017815590519098509091506001600160a01b0380871691908816907f6bacc01dbe442496068f7d234edd811f1a5f833243e0aec824f86ab861f3c90d90611bba9085815260200190565b60405180910390a3505080611bce906188fa565b90506119a1565b855160008167ffffffffffffffff811115611bf257611bf26189e5565b604051908082528060200260200182016040528015611c1b578160200160208202803683370190505b509050600080357fffffffff00000000000000000000000000000000000000000000000000000000167f55944a420000000000000000000000000000000000000000000000000000000014801590611cb757506000357fffffffff00000000000000000000000000000000000000000000000000000000167fa81744040000000000000000000000000000000000000000000000000000000014155b90506000805b84811015611f675760008b8281518110611cd957611cd96189b6565b6020026020010151905060008b8381518110611cf757611cf76189b6565b602002602001015190508860001415611d1d576000602090920182905260800152611f57565b6000806000611d2e858f8f8c612c3a565b9250925092508160001415611d53575050600060209093018390525060800152611f57565b82898781518110611d6657611d666189b6565b60209081029190910101528b611d7b816188e3565b865160a081015160c0820151604090920151929f5092509060005b8151811015611e7c576000828281518110611db357611db36189b6565b602002602001015190508b80611ddb5750600081516005811115611dd957611dd9618987565b145b9b506000611dee88888460800151614554565b9050816080015182606001511415611e0c5760608201819052611e21565b611e1b88888460600151614554565b60608301525b608082018190526060820151611e3b9082888860006145da565b6060830181905260208b0151805185908110611e5957611e596189b6565b60200260200101516060018181525050505080611e75906188fa565b9050611d96565b5087516060015160005b8151811015611f4c576000828281518110611ea357611ea36189b6565b602002602001015190506000611ebe89898460800151614554565b9050816080015182606001511415611edc5760608201819052611ef1565b611eeb89898460600151614554565b60608301525b608082018190526060820151611f0b9082898960016145da565b6060830181905260408c0151805185908110611f2957611f296189b6565b60200260200101516060018181525050505080611f45906188fa565b9050611e86565b505050505050505050505b611f60816188fa565b9050611cbd565b50808015611f725750815b15611fa9576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fb38989614673565b60005b848110156120d3576000801b848281518110611fd457611fd46189b6565b60200260200101511415611fe7576120c3565b60008b8281518110611ffb57611ffb6189b6565b602002602001015160000151905060008b838151811061201d5761201d6189b6565b602002602001015160200151905060008c848151811061203f5761203f6189b6565b602002602001015160400151905082602001516001600160a01b031683600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3189878151811061209c5761209c6189b6565b60200260200101518c86866040516120b79493929190617fa7565b60405180910390a35050505b6120cc816188fa565b9050611fb6565b5050505050505050505050565b6060818067ffffffffffffffff8111156120fc576120fc6189e5565b60405190808252806020026020018201604052801561216a57816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602080830182905292820152825260001990920191018161211a5790505b5091506000805b82811015612235573686868381811061218c5761218c6189b6565b905060200281019061219e91906184b2565b905060006121c2896121b08480618317565b6121bd6020870187618317565b614a80565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156121fa576121f3846188fa565b9350612222565b80866122068686618674565b81518110612216576122166189b6565b60200260200101819052505b50508061222e906188fa565b9050612171565b50801561232e5760006122488284618674565b905060008167ffffffffffffffff811115612265576122656189e5565b6040519080825280602002602001820160405280156122d357816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816122835790505b50905060005b82811015612329578581815181106122f3576122f36189b6565b602002602001015182828151811061230d5761230d6189b6565b602002602001018190525080612322906188fa565b90506122d9565b509350505b6123388684614dd2565b5050509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000008260000151836020015184604001518560600151866080015160405160200161239396959493929190618239565b604051602081830303815290604052805190602001209050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000826000015183602001518460400151856060015186608001518760a001516040516020016123939796959493929190618279565b6040805160a08101825260008082526060602083018190529282018390529181018290526080810191909152815160400151805160009067ffffffffffffffff811115612456576124566189e5565b6040519080825280602002602001820160405280156124a857816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816124745790505b50905060005b82518110156125555760008382815181106124cb576124cb6189b6565b6020026020010151905060006040518060800160405280836000015160058111156124f8576124f8618987565b815260200183602001516001600160a01b03168152602001836040015181526020018360600151815250905080848481518110612537576125376189b6565b602002602001018190525050508061254e906188fa565b90506124ae565b50835160600151805160009067ffffffffffffffff811115612579576125796189e5565b6040519080825280602002602001820160405280156125d257816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816125975790505b50905060005b82518110156126925760008382815181106125f5576125f56189b6565b6020026020010151905060006040518060a001604052808360000151600581111561262257612622618987565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181526020018360a001516001600160a01b0316815250905080848481518110612674576126746189b6565b602002602001018190525050508061268b906188fa565b90506125d8565b506040805160a0810182528751516001600160a01b031681526020808201959095529081019190915285516101200151606082015291909401516effffffffffffffffffffffffffffff1660808201529392505050565b8351835160609182916126fc8183618604565b67ffffffffffffffff811115612714576127146189e5565b60405190808252806020026020018201604052801561278257816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816127325790505b5092506000805b838110156128325760008a82815181106127a5576127a56189b6565b6020026020010151905060006127bf8d6000848d8d61502d565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156127f7576127f0846188fa565b935061281f565b80876128038686618674565b81518110612813576128136189b6565b60200260200101819052505b50508061282b906188fa565b9050612789565b5060005b828110156128ea576000898281518110612852576128526189b6565b60200260200101519050600061286c8d6001848d8d61502d565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156128a45761289d846188fa565b93506128d7565b8087856128b18987618604565b6128bb9190618674565b815181106128cb576128cb6189b6565b60200260200101819052505b5050806128e3906188fa565b9050612836565b5080156129ee576000816128fe8486618604565b6129089190618674565b905060008167ffffffffffffffff811115612925576129256189e5565b60405190808252806020026020018201604052801561299357816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816129435790505b50905060005b828110156129e9578681815181106129b3576129b36189b6565b60200260200101518282815181106129cd576129cd6189b6565b6020026020010181905250806129e2906188fa565b9050612999565b509450505b8351612a26576040517fd5da9a1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a308a85614dd2565b94505050509550959350505050565b6000612a5582606001515183610140015161520c565b81516001600160a01b031660009081526001602052604090205461059e908390610b26565b8254600090610100900460ff1615612acf578115612ac7576040517f1a51557400000000000000000000000000000000000000000000000000000000815260048101869052602401611414565b506000610a82565b83546201000090046effffffffffffffffffffffffffffff168015612b9c578315612b29576040517fee9e0e6300000000000000000000000000000000000000000000000000000000815260048101879052602401611414565b84547101000000000000000000000000000000000090046effffffffffffffffffffffffffffff168110612b9c578215612b92576040517f10fda3e100000000000000000000000000000000000000000000000000000000815260048101879052602401611414565b6000915050610a82565b50600195945050505050565b6001600160a01b038316331415612bbe57505050565b6000612c27612bcb6137c2565b846040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050612c3484828461524a565b50505050565b60008060008087600001519050612c5a8160a001518260c0015188615472565b612c6e575060009250829150819050612ff6565b602088015160408901516effffffffffffffffffffffffffffff918216911680821180612c99575081155b15612cd0576040517f5a052b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082108015612ce75750612ce783608001516154d1565b15612d1e576040517fa11b63ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612d2783612a3f565b9550612d498a8a89898760e00151886080015189600001518a602001516154ef565b600086815260026020526040812090612d6690889083908c612a7a565b612d7b575060009450849350612ff692505050565b805460ff16612d9757612d978460000151888d60600151612ba8565b80546effffffffffffffffffffffffffffff620100008204811691710100000000000000000000000000000000009004168015612f66578360011415612de257809450809350612e0e565b838114612e0e57612df38483618655565b9150612dff8186618655565b9450612e0b8185618655565b93505b83612e198684618604565b1115612e2c57612e298285618674565b94505b612e368583618604565b91506effffffffffffffffffffffffffffff821180612e6357506effffffffffffffffffffffffffffff84115b15612eef576000612e7d86612e788588615770565b615770565b905060008115612e8d5781612e90565b60015b9050612e9c8188618641565b9650612ea88185618641565b9350612eb48187618641565b95506000612ed36effffffffffffffffffffffffffffff600019618674565b9050612edf8188618604565b612ee98287618604565b50505050505b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91851662010000027fffffffffffffffffffffffffffffff00000000000000000000000000000000009093169290921760011716178355612fd9565b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91881662010000027fffffffffffffffffffffffffffffff000000000000000000000000000000000090931692909217600117161783555b50506effffffffffffffffffffffffffffff928316955050169150505b9450945094915050565b8051825160005b82811015613248576000848281518110613023576130236189b6565b60209081029190910101518051909150801561306b576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040820151600080808560200151600181111561308a5761308a618987565b14156131375786604001515183106130ce576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000876040015184815181106130e6576130e66189b6565b60209081029190910101518051604082015190945092509050600483600581111561311357613113618987565b14156131225760028152613127565b600381525b60608601516040909101526131da565b8660600151518310613175576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008760600151848151811061318d5761318d6189b6565b6020908102919091010151805160408201519094509250905060048360058111156131ba576131ba618987565b14156131c957600281526131ce565b600381525b60608601516040909101525b6131e382615795565b613219576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156132325761323285606001518287608001516157b2565b505050505080613241906188fa565b9050613007565b508351606001515160005b818110156132d0576132898660000151606001518281518110613278576132786189b6565b602002602001015160000151615795565b156132c0576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6132c9816188fa565b9050613253565b50508351604001515160005b81811015613348576133018660000151604001518281518110613278576132786189b6565b15613338576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613341816188fa565b90506132dc565b505050505050565b6040805160a081018252600080825260606020830181905292820183905291810182905260808101919091526040805160a0808201835287825260208083018890528284018790529089015160608084019190915260c08a015160808401528351808501909452600084529083015290875161012089015160408a01515167ffffffffffffffff8111156133e6576133e66189e5565b60405190808252806020026020018201604052801561343857816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816134045790505b50602086015260005b8a60400151518110156135c95760008b604001518281518110613466576134666189b6565b602002602001015190506000600581111561348357613483618987565b8151600581111561349657613496618987565b14156134ce576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006134e5826060015183608001518960006158b9565b905060006040518060a001604052808460000151600581111561350a5761350a618987565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018b6001600160a01b0316815250905060405180608001604052808260000151600581111561356257613562618987565b815260200182602001516001600160a01b0316815260200182604001518152602001838152508960200151858151811061359e5761359e6189b6565b60200260200101819052506135b58187878a615916565b505050806135c2906188fa565b9050613441565b5089606001515167ffffffffffffffff8111156135e8576135e86189e5565b60405190808252806020026020018201604052801561364157816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816136065790505b5060408601523460005b8b60600151518110156137995760008c606001518281518110613670576136706189b6565b602002602001015190506000613691826060015183608001518a60016158b9565b905060006040518060a00160405280846000015160058111156136b6576136b6618987565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018460a001516001600160a01b03168152509050808a604001518581518110613708576137086189b6565b602090810291909101015260008151600581111561372857613728618987565b14156137755784821115613768576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6137728286618674565b94505b61378581338b604001518b615916565b50505080613792906188fa565b905061364b565b506137a38461453b565b80156137b3576137b33382615a5d565b50505050505b95945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461388f5750604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6138ca8661012001358761014001356001615472565b506138d3615b05565b6138f16138e4610200880188618317565b9050876101e0013561520c565b6040805160e0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c081019190915260006040518060a0016040528088600381111561394857613948618987565b815260200187600581111561395f5761395f618987565b815260200186600581111561397657613976618987565b8152602001856001600160a01b0316815260200184600581111561399c5761399c618987565b9052905060006139b06102008a018a618317565b6139bc91506001618604565b67ffffffffffffffff8111156139d4576139d46189e5565b604051908082528060200260200182016040528015613a2d57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816139f25790505b507f000000000000000000000000000000000000000000000000000000000000000084526040805160c08101909152602084015191925060009181906005811115613a7a57613a7a618987565b8152602090810190613a8e908d018d617501565b6001600160a01b031681526020018b6020013581526020018b6040013581526020018b6040013581526020018b6060016020810190613acd9190617501565b6001600160a01b031690529050613aea6101e08b01356001618604565b67ffffffffffffffff811115613b0257613b026189e5565b604051908082528060200260200182016040528015613b2b578160200160208202803683370190505b506060808601919091528451825160208085015160408087015195870151608088015160a08901519251613b659894959293919201618279565b604051602081830303815290604052805190602001208460600151600081518110613b9257613b926189b6565b602002602001018181525050613bd16040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260006040518060a0016040528087602001516005811115613c2657613c26618987565b815260200185602001516001600160a01b0316815260200185604001518152602001856080015181526020018560a001516001600160a01b031681525090508085600081518110613c7957613c796189b6565b602002602001018190525060005b613c956102008f018f618317565b9050811015613e685760008e806102000190613cb19190618317565b83818110613cc157613cc16189b6565b905060400201803603810190613cd791906178c8565b90506040518060a0016040528089604001516005811115613cfa57613cfa618987565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613d459190618604565b81518110613d5557613d556189b6565b60200260200101819052508e6101e001358210613d725750613e58565b6040518060c0016040528089604001516005811115613d9357613d93618987565b815260200189606001516001600160a01b0316815260200160008152602001826000015181526020018260000151815260200182602001516001600160a01b031681525093508860000151846000015185602001518660400151876060015188608001518960a00151604051602001613e129796959493929190618279565b604051602081830303815290604052805190602001208960600151836001613e3a9190618604565b81518110613e4a57613e4a6189b6565b602002602001018181525050505b613e61816188fa565b9050613c87565b508660600151604051602001613e7e9190617df2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012060808801526101e08d01355b613ece6102008f018f618317565b9050811015613fab5760008e806102000190613eea9190618317565b83818110613efa57613efa6189b6565b905060400201803603810190613f1091906178c8565b90506040518060a0016040528089604001516005811115613f3357613f33618987565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613f7e9190618604565b81518110613f8e57613f8e6189b6565b60200260200101819052505080613fa4906188fa565b9050613ec0565b506000935060019250613fbc915050565b60405190808252806020026020018201604052801561400e57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181613fda5790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000018181525050600060405180608001604052808560800151600581111561405e5761405e618987565b815260200161407360c08e0160a08f01617501565b6001600160a01b031681526020018c60c0013581526020018c60e00135815250905080826000815181106140a9576140a96189b6565b6020026020010181905250600060405180602001604052808760000151846000015185602001518660400151876060015188606001516040516020016140f496959493929190618239565b604051602081830303815290604052805190602001208152509050806040516020016141209190617dbe565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020909201919091209087015250507f0000000000000000000000000000000000000000000000000000000000000000845261418d848b85615c0d565b60208501526141a260a08b0160808c01617501565b6001600160a01b03166141bb60808c0160608d01617501565b6001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3186602001513385876040516141fd9493929190617fa7565b60405180910390a361423f84602001518b61016001358b8d60600160208101906142279190617501565b8e608001602081019061423a9190617501565b615ccc565b60208401516142a09061425860808d0160608e01617501565b6142666102208e018e61844d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250615e1d92505050565b50505050505050505050565b6142b68183615e67565b8161430657826001146142f5576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61430187878787615e78565b614317565b614317828260028a8a8a8a8a615f43565b50505050505050565b3460005b614332610200840184618317565b90508110156143d8573661434a610200850185618317565b8381811061435a5761435a6189b6565b604002919091019150508035838111156143a0576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6143b96143b36040840160208501617501565b82615a5d565b6143c38185618674565b93505050806143d1906188fa565b9050614324565b5080831115614413576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61442c6144266080840160608501617501565b84615a5d565b8281111561444757614447336144428584618674565b615a5d565b505050565b61445583616129565b61445f8183615e67565b81614471576143018787878787616160565b614317828260038a8a8a8a8a615f43565b6000821561449657506101a083013561449e565b506101c08301355b60005b6144af610200860186618317565b905081101561452257366144c7610200870187618317565b838181106144d7576144d76189b6565b905060400201905084156144f3576144f0813588618674565b96505b614511888b6145086040850160208601617501565b8435878961624b565b5061451b816188fa565b90506144a1565b5061453186898988858761624b565b5050505050505050565b6020810151516145485750565b61455181616286565b50565b60008284141561456557508061068c565b60006145718584618655565b905061457d8482618641565b91506000838661458d8786618655565b6145979190618641565b149050806145d1576040517fc63cf08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50509392505050565b6000848614614669576000806145f08686618674565b905060006145fe8742618674565b9050600061460c8284618674565b905085156146225761461f600184618674565b93505b60008461462f848c618655565b614639848e618655565b6146439190618604565b61464d9190618604565b9050600061465b8583618641565b96506137b995505050505050565b5092949350505050565b805160005b81811015614932576000838281518110614694576146946189b6565b60200260200101519050600081600001519050855181106146e1576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8581815181106146f3576146f36189b6565b6020026020010151608001516effffffffffffffffffffffffffffff166000141561471f575050614922565b6040820151600080808560200151600181111561473e5761473e618987565b1415614806576000898581518110614758576147586189b6565b6020026020010151602001519050805184106147a0576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008185815181106147b4576147b46189b6565b6020908102919091010151805160408201519095509350905060048460058111156147e1576147e1618987565b14156147f057600281526147f5565b600381525b6060870151604090910152506148c4565b600089858151811061481a5761481a6189b6565b602002602001015160400151905080518410614862576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818581518110614876576148766189b6565b6020908102919091010151805160408201519095509350905060048460058111156148a3576148a3618987565b14156148b257600281526148b7565b600381525b6060870151604090910152505b6148cd82615795565b614903576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561491c5761491c85606001518287608001516157b2565b50505050505b61492b816188fa565b9050614678565b5050815160005b81811015612c34576000848281518110614955576149556189b6565b602002602001015190506000816020015151905081608001516effffffffffffffffffffffffffffff166000141561498e575050614a70565b60005b818110156149f9576149b283602001518281518110613278576132786189b6565b156149e9576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6149f2816188fa565b9050614991565b505060408101515160005b81811015614a6c57614a2583604001518281518110613278576132786189b6565b15614a5c576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614a65816188fa565b9050614a04565b5050505b614a79816188fa565b9050614939565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152831580614acb575081155b15614b02576040517f98e9db6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000614b62878585808060200260200160405190810160405280939291908181526020016000905b82821015614b5657614b4760408302860136819003810190617a06565b81526020019060010190614b2a565b5050505050600061631d565b9050614bc3878787808060200260200160405190810160405280939291908181526020016000905b82821015614bb657614ba760408302860136819003810190617a06565b81526020019060010190614b8a565b505050505060008061661d565b81519092506005811115614bd957614bd9618987565b8251516005811115614bed57614bed618987565b141580614c18575080602001516001600160a01b03168260000151602001516001600160a01b031614155b80614c2f5750806040015182600001516040015114155b15614c66576040517f09cfb45500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516060015181606001511115614d1957600084846000818110614c8f57614c8f6189b6565b905060400201803603810190614ca59190617a06565b90508260000151606001518260600151614cbf9190618674565b88826000015181518110614cd557614cd56189b6565b602002602001015160400151826020015181518110614cf657614cf66189b6565b602090810291909101015160609081019190915283518101519083015250614da7565b600086866000818110614d2e57614d2e6189b6565b905060400201803603810190614d449190617a06565b90508160600151836000015160600151614d5e9190618674565b88826000015181518110614d7457614d746189b6565b602002602001015160200151826020015181518110614d9557614d956189b6565b60200260200101516060018181525050505b60608082015183519091015260809081015182516001600160a01b0390911691015295945050505050565b81516060908067ffffffffffffffff811115614df057614df06189e5565b604051908082528060200260200182016040528015614e19578160200160208202803683370190505b50915060005b81811015614f30576000858281518110614e3b57614e3b6189b6565b6020026020010151905080608001516effffffffffffffffffffffffffffff1660001415614e695750614f20565b6001848381518110614e7d57614e7d6189b6565b91151560209283029190910190910152604081015160005b8151811015614f1c576000828281518110614eb257614eb26189b6565b602002602001015160600151905080600014614f0b576040517fa5f54208000000000000000000000000000000000000000000000000000000008152600481018690526024810183905260448101829052606401611414565b50614f15816188fa565b9050614e95565b5050505b614f29816188fa565b9050614e1f565b50604080518082019091526000815260606020820152349060005b855181101561500a576000868281518110614f6857614f686189b6565b60209081029190910101518051909150600081516005811115614f8d57614f8d618987565b1415614fe3578481606001511115614fd1576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151614fe09086618674565b94505b614ff7818360200151846040015187615916565b505080615003906188fa565b9050614f4b565b506150148161453b565b8115615024576150243383615a5d565b50505092915050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915285518451806150aa57866040517f375c24c100000000000000000000000000000000000000000000000000000000815260040161141491906182c4565b6000805b8281101561516b5760008882815181106150ca576150ca6189b6565b6020026020010151600001519050848110615111576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a8181518110615123576151236189b6565b6020026020010151608001516effffffffffffffffffffffffffffff1660001461515a57615152826001618604565b92505061516b565b50615164816188fa565b90506150ae565b50806151bc57505060408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915291506137b99050565b60008860018111156151d0576151d0618987565b14156151f6576151ec89886151e6600185618674565b8861661d565b93505050506137b9565b6151ec8988615206600185618674565b8961690d565b80821015615246576040517f466aa61600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600080806001600160a01b0386163b156152695761334886868661697b565b8351604014156152ca576000848060200190518101906152899190617826565b9094507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116935090506152c260ff82901c601b61861c565b915050615394565b83516041141561536257838060200190518101906152e89190617826565b8551919450925084906040908110615302576153026189b6565b016020015160f81c9050601b811480159061532157508060ff16601c14155b1561535d576040517f1f003d0a00000000000000000000000000000000000000000000000000000000815260ff82166004820152602401611414565b615394565b6040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160008082526020820180845288905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156153e8573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b038116158061543b5750866001600160a01b0316816001600160a01b031614155b15614317576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000428411806154825750428311155b156154c75781156154bf576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600061068c565b5060019392505050565b60008160038111156154e5576154e5618987565b6001161592915050565b600183600381111561550357615503618987565b1180156155195750336001600160a01b03821614155b801561552e5750336001600160a01b03831614155b156145315760808801515115801561554557508651155b15615655576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc9060840160206040518083038186803b1580156155bc57600080fd5b505afa1580156155d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906155f4919061784a565b7fffffffff000000000000000000000000000000000000000000000000000000001614615650576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611414565b614531565b6040517f331315700000000000000000000000000000000000000000000000000000000081527f0e1d31dc00000000000000000000000000000000000000000000000000000000906001600160a01b038316906333131570906156c490899033908e908d908f90600401618042565b60206040518083038186803b1580156156dc57600080fd5b505afa1580156156f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615714919061784a565b7fffffffff000000000000000000000000000000000000000000000000000000001614614531576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611414565b60005b811561578e57816157848185618915565b9093509150615773565b5090919050565b600060038260058111156157ab576157ab618987565b1192915050565b6000836040516020016157c791815260200190565b60405160208183030381529060405280519060200120905060005b825181101561587f5760008382815181106157ff576157ff6189b6565b6020026020010151905080831161584157604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061586e565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50615878816188fa565b90506157e2565b50808314612c34576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838514156158dd576158d68360000151846020015186614554565b9050610a82565b6137b96158f38460000151856020015188614554565b6159068560000151866020015188614554565b85606001518660800151866145da565b60008451600581111561592b5761592b618987565b141561599357604084015160208501516001600160a01b0316171561597c576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61598e84608001518560600151615a5d565b612c34565b6001845160058111156159a8576159a8618987565b1415615a04576040840151156159ea576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61598e84602001518486608001518760600151868661624b565b600284516005811115615a1957615a19618987565b1415615a3e5761598e84602001518486608001518760400151886060015187876142ac565b612c34846020015184866080015187604001518860600151878761444c565b615a6681616129565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114615ab3576040519150601f19603f3d011682016040523d82523d6000602084013e615ab8565b606091505b5050905080614447576040517f470c7c1d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101839052604401611414565b6000615b156024600436846185da565b810190615b22919061780d565b6020148015615b4f5750615b3d6102446102243660006185da565b810190615b4a919061780d565b610240145b8015615bab5750615b676102846102643660006185da565b810190615b74919061780d565b615b7f906040618655565b615b8b90610260618604565b615b9c6102646102443660006185da565b810190615ba9919061780d565b145b8015615bd457506018615bc56101446101243660006185da565b810190615bd2919061780d565b105b905080614551576040517f39f3e3fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080615c3e615c236080860160608701617501565b6001600160a01b031660009081526001602052604090205490565b8551909150615c536080860160608701617501565b615c6360a0870160808801617501565b8760400151886080015187600001518961012001358a61014001358b61016001358c61018001358d6101a001358b604051602001615cac9c9b9a99989796959493929190617f34565b604051602081830303815290604052805190602001209150509392505050565b6001836003811115615ce057615ce0618987565b118015615cf65750336001600160a01b03821614155b8015615d0b5750336001600160a01b03831614155b15615e16576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc9060840160206040518083038186803b158015615d8257600080fd5b505afa158015615d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615dba919061784a565b7fffffffff000000000000000000000000000000000000000000000000000000001614615e16576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611414565b5050505050565b6000838152600260205260409020615e388482600180612a7a565b50805460ff16615e4d57615e4d838584612ba8565b710100000000000000000000000000000100019055505050565b81518114615246576152468261453b565b6001600160a01b0384163b615ec4576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611414565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b158015615f2f57600080fd5b505af1158015614531573d6000803e3d6000fd5b6020870151516000615f56826001618604565b67ffffffffffffffff811115615f6e57615f6e6189e5565b604051908082528060200260200182016040528015615fce57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181615f8c5790505b50905060005b8281101561609e5760008a602001518281518110615ff457615ff46189b6565b602002602001015190506040518060c001604052808260000151600381111561601f5761601f618987565b815260200182602001516001600160a01b0316815260200182604001516001600160a01b0316815260200182606001516001600160a01b03168152602001826080015181526020018260a00151815250838381518110616081576160816189b6565b60200260200101819052505080616097906188fa565b9050615fd4565b506040518060c001604052808960038111156160bc576160bc618987565b8152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b031681526020018581526020018481525081838151811061610a5761610a6189b6565b6020908102919091018101919091528901525050509490935250505050565b80614551576040517f91b3e51400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0385163b6161ac576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602401611414565b6040517ff242432a0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b15801561622c57600080fd5b505af1158015616240573d6000803e3d6000fd5b505050505050505050565b61625483616129565b61625e8183615e67565b816162745761626f86868686616a6d565b613348565b6133488282600189898960008a615f43565b805161629190616c75565b6001600160a01b0316634ce34aa282602001516040518263ffffffff1660e01b81526004016162c09190617e9d565b602060405180830381600087803b1580156162da57600080fd5b505af11580156162ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190616312919061784a565b506060602090910152565b6040805160a08101825260008082526020808301829052828401829052606080840183905260808401839052845190810185528281529081018290529283015290838381518110616370576163706189b6565b60209081029190910101515181528351849084908110616392576163926189b6565b60209081029190910181015181015190820152845181511015604082018190526165d9576000858260000151815181106163ce576163ce6189b6565b602002602001015190508160400151806163f15750806040015151826020015110155b1515604083018190526165d7576000816040015183602001518151811061641a5761641a6189b6565b602002602001015190506040518060a001604052808260000151600581111561644557616445618987565b815260200182602001516001600160a01b03168152602001826040015181526020018260600151815260200182608001516001600160a01b031681525093506000816060018181525050600085600161649e9190618604565b90505b86518110156165d4578681815181106164bc576164bc6189b6565b602090810291909101015151845286518790829081106164de576164de6189b6565b60209081029190910181015181015190850152875184511080156040860152616506576165d4565b8784600001518151811061651c5761651c6189b6565b6020026020010151925082608001516effffffffffffffffffffffffffffff166000146165c45760408084015151602086015110801591860191909152616562576165d4565b826040015184602001518151811061657c5761657c6189b6565b602002602001015191508160600151856060015161659a9190618604565b6060808701919091526000908301526165b38286616db8565b15801560408601526165c4576165d4565b6165cd816188fa565b90506164a1565b50505b505b806040015115616615576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509392505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208201819052918101919091526000848481518110616671576166716189b6565b60200260200101516000015190506000858581518110616693576166936189b6565b6020026020010151602001519050600087518310159050806168ca5760008884815181106166c3576166c36189b6565b6020026020010151905081806166de57508060200151518310155b9150816168c8576000816020015184815181106166fd576166fd6189b6565b6020026020010151905060405180606001604052806040518060a001604052808460000151600581111561673357616733618987565b815260200184602001516001600160a01b0316815260200184604001518152602001846060015181526020018a6001600160a01b0316815250815260200183600001516001600160a01b0316815260200183606001518152509550600081606001818152505060008860016167a89190618604565b90505b89518110156168c5578981815181106167c6576167c66189b6565b60200260200101516000015195508981815181106167e6576167e66189b6565b60200260200101516020015194508a5186101593508315616806576168c5565b8a8681518110616818576168186189b6565b6020026020010151925082608001516effffffffffffffffffffffffffffff166000146168b557602083015151851080159450616854576168c5565b8260200151858151811061686a5761686a6189b6565b60200260200101519150816060015187600001516060015161688c9190618604565b87516060908101919091526000908301526168a8838389616e41565b935083156168b5576168c5565b6168be816188fa565b90506167ab565b50505b505b8015616902576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050949350505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181018290529061695886868661631d565b604080516060810182529182523360208301528101939093525090949350505050565b6040517f1626ba7e00000000000000000000000000000000000000000000000000000000808252906001600160a01b03851690631626ba7e906169c49086908690600401618220565b60206040518083038186803b1580156169dc57600080fd5b505afa1580156169f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190616a14919061784a565b7fffffffff000000000000000000000000000000000000000000000000000000001614614447576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384163b616ab9576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611414565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616b4b9190617e28565b6000604051808303816000865af19150503d8060008114616b88576040519150601f19603f3d011682016040523d82523d6000602084013e616b8d565b606091505b509150915081616bf2576040517ff486bc870000000000000000000000000000000000000000000000000000000081526001600160a01b038088166004830152808716602483015285166044820152600060648201526084810184905260a401611414565b805115801590616c0457506020815110155b156133485780806020019051810190616c1d91906177eb565b613348576040517f988919230000000000000000000000000000000000000000000000000000000081526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401611414565b6000616d5e826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f00000000000000000000000000000000000000000000000000000000000000006055820152600090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b90506001600160a01b0381163b616db3576040517f1cf99b26000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382166024820152604401611414565b919050565b600082608001516001600160a01b031682608001516001600160a01b0316141580616e07575082516005811115616df157616df1618987565b82516005811115616e0457616e04618987565b14155b80616e2c575082602001516001600160a01b031682602001516001600160a01b031614155b8061068c575050604091820151910151141590565b60008260400151826000015160400151141580616e78575083600001516001600160a01b031682602001516001600160a01b031614155b80616e8b57508360600151826040015114155b80616ebb575082516005811115616ea457616ea4618987565b8251516005811115616eb857616eb8618987565b14155b80610a82575082602001516001600160a01b03168260000151602001516001600160a01b03161415949350505050565b6040518060a00160405280616efe616f1f565b81526000602082018190526040820152606080820181905260809091015290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115616f6c57616f6c618987565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b8035616db381618a24565b60008083601f840112616fb957600080fd5b50813567ffffffffffffffff811115616fd157600080fd5b6020830191508360208260051b8501011115616fec57600080fd5b9250929050565b600082601f83011261700457600080fd5b81356020617019617014836185b6565b618567565b80838252828201915082860187848660051b890101111561703957600080fd5b6000805b8681101561707c57823567ffffffffffffffff81111561705b578283fd5b6170698b88838d0101617204565b865250938501939185019160010161703d565b509198975050505050505050565b600082601f83011261709b57600080fd5b813560206170ab617014836185b6565b8281528181019085830160c0808602880185018910156170ca57600080fd5b60005b8681101561707c576170df8a846172ba565b855293850193918101916001016170cd565b600082601f83011261710257600080fd5b81356020617112617014836185b6565b8281528181019085830160a08086028801850189101561713157600080fd5b60005b8681101561707c576171468a8461739d565b85529385019391810191600101617134565b600082601f83011261716957600080fd5b813567ffffffffffffffff811115617183576171836189e5565b6171b460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601618567565b8181528460208386010111156171c957600080fd5b816020850160208301376000918101602001919091529392505050565b803560068110616db357600080fd5b803560048110616db357600080fd5b600060a0828403121561721657600080fd5b61721e61851a565b9050813567ffffffffffffffff8082111561723857600080fd5b617244858386016173fd565b8352617252602085016174e2565b6020840152617263604085016174e2565b6040840152606084013591508082111561727c57600080fd5b61728885838601617158565b606084015260808401359150808211156172a157600080fd5b506172ae84828501617158565b60808301525092915050565b600060c082840312156172cc57600080fd5b60405160c0810181811067ffffffffffffffff821117156172ef576172ef6189e5565b6040529050806172fe836171e6565b8152602083013561730e81618a24565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013561734181618a24565b60a0919091015292915050565b60006040828403121561736057600080fd5b6040516040810181811067ffffffffffffffff82111715617383576173836189e5565b604052823581526020928301359281019290925250919050565b600060a082840312156173af57600080fd5b6173b761851a565b90506173c2826171e6565b815260208201356173d281618a24565b8060208301525060408201356040820152606082013560608201526080820135608082015292915050565b6000610160828403121561741057600080fd5b617418618543565b905061742382616f9c565b815261743160208301616f9c565b6020820152604082013567ffffffffffffffff8082111561745157600080fd5b61745d858386016170f1565b6040840152606084013591508082111561747657600080fd5b506174838482850161708a565b606083015250617495608083016171f5565b608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b80356effffffffffffffffffffffffffffff81168114616db357600080fd5b60006020828403121561751357600080fd5b813561068c81618a24565b60008060008060008060008060008060e08b8d03121561753d57600080fd5b8a3567ffffffffffffffff8082111561755557600080fd5b6175618e838f01616ff3565b9b5060208d013591508082111561757757600080fd5b6175838e838f01616fa7565b909b50995060408d013591508082111561759c57600080fd5b6175a88e838f01616fa7565b909950975060608d01359150808211156175c157600080fd5b506175ce8d828e01616fa7565b90965094505060808b013592506175e760a08c01616f9c565b915060c08b013590509295989b9194979a5092959850565b60008060008060006060868803121561761757600080fd5b853567ffffffffffffffff8082111561762f57600080fd5b61763b89838a01616ff3565b9650602088013591508082111561765157600080fd5b61765d89838a01616fa7565b9096509450604088013591508082111561767657600080fd5b5061768388828901616fa7565b969995985093965092949392505050565b600080602083850312156176a757600080fd5b823567ffffffffffffffff8111156176be57600080fd5b6176ca85828601616fa7565b90969095509350505050565b60008060008060008060008060a0898b0312156176f257600080fd5b883567ffffffffffffffff8082111561770a57600080fd5b6177168c838d01616fa7565b909a50985060208b013591508082111561772f57600080fd5b61773b8c838d01616fa7565b909850965060408b013591508082111561775457600080fd5b506177618b828c01616fa7565b999c989b509699959896976060870135966080013595509350505050565b6000806000806040858703121561779557600080fd5b843567ffffffffffffffff808211156177ad57600080fd5b6177b988838901616fa7565b909650945060208701359150808211156177d257600080fd5b506177df87828801616fa7565b95989497509550505050565b6000602082840312156177fd57600080fd5b8151801515811461068c57600080fd5b60006020828403121561781f57600080fd5b5035919050565b6000806040838503121561783957600080fd5b505080516020909101519092909150565b60006020828403121561785c57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461068c57600080fd5b60006020828403121561789e57600080fd5b81356018811061068c57600080fd5b6000602082840312156178bf57600080fd5b61068c826171f5565b6000604082840312156178da57600080fd5b6040516040810181811067ffffffffffffffff821117156178fd576178fd6189e5565b60405282358152602083013561791281618a24565b60208201529392505050565b60008060008060006080868803121561793657600080fd5b853567ffffffffffffffff8082111561794e57600080fd5b9087019060a0828a03121561796257600080fd5b9095506020870135908082111561797857600080fd5b5061798588828901616fa7565b9095509350506040860135915060608601356179a081618a24565b809150509295509295909350565b6000602082840312156179c057600080fd5b813567ffffffffffffffff8111156179d757600080fd5b8201610240818503121561068c57600080fd5b600060c082840312156179fc57600080fd5b61068c83836172ba565b600060408284031215617a1857600080fd5b61068c838361734e565b600060a08284031215617a3457600080fd5b61068c838361739d565b600060208284031215617a5057600080fd5b813567ffffffffffffffff811115617a6757600080fd5b8201610160818503121561068c57600080fd5b60008060408385031215617a8d57600080fd5b823567ffffffffffffffff811115617aa457600080fd5b830160408186031215617ab657600080fd5b946020939093013593505050565b600081518084526020808501945080840160005b83811015617af457815187529582019590820190600101617ad8565b509495945050505050565b600081518084526020808501945080840160005b83811015617af4578151617b28888251617d4b565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101617b13565b600081518084526020808501808196508360051b8101915082860160005b85811015617bfa578284038952815160a08151865286820151617bb988880182617d68565b506040828101519087015260608083015190870152608091820151918601819052617be681870183617ac4565b9a87019a9550505090840190600101617b94565b5091979650505050505050565b600081518084526020808501945080840160005b83811015617af4578151617c30888251617d78565b808401516001600160a01b031660a08901526040015160c088015260e09096019590820190600101617c1b565b600081518084526020808501945080840160005b83811015617af4578151617c86888251617d4b565b808401516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a09096019590820190600101617c71565b600081518084526020808501945080840160005b83811015617af457617cee878351617d78565b60a0969096019590820190600101617cdb565b60008151808452617d198160208601602086016188b7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60068110617d5b57617d5b618987565b9052565b617d5b81618a14565b60028110617d5b57617d5b618987565b617d83828251617d4b565b60208101516001600160a01b038082166020850152604083015160408501526060830151606085015280608084015116608085015250505050565b60008183825b6001811015617de3578151835260209283019290910190600101617dc4565b50505060208201905092915050565b815160009082906020808601845b83811015617e1c57815185529382019390820190600101617e00565b50929695505050505050565b60008251617e3a8184602087016188b7565b9190910192915050565b604080825283519082018190526000906020906060840190828701845b82811015617e7f578151151584529284019290840190600101617e61565b50505083810382850152617e938186617c07565b9695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015617bfa5781518051617ecf81618a14565b8552808701516001600160a01b039081168887015286820151811687870152606080830151909116908601526080808201519086015260a0908101519085015260c09093019290850190600101617eba565b60208152600061068c6020830184617c07565b8c81526001600160a01b038c811660208301528b166040820152606081018a9052608081018990526101808101617f6a89618a14565b60a082019890985260c081019690965260e08601949094526101008501929092526101208401526101408301526101609091015295945050505050565b6000608080830187845260206001600160a01b03808916828701526040848188015283895180865260a089019150848b01955060005b8181101561801e578651617ff2848251617d4b565b808701518616848801528481015185850152606090810151908401529585019591870191600101617fdd565b50508781036060890152618032818a617cc7565b9c9b505050505050505050505050565b8581526001600160a01b038516602082015260a060408201526000610140855160a08085015261807d82850182516001600160a01b03169052565b6020810151610160618099818701836001600160a01b03169052565b6040830151915080610180870152506180b66102a0860182617c5d565b905060608201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0868303016101a08701526180f28282617aff565b91505060808201516181086101c0870182617d5f565b5060a08201516101e086015260c082015161020086015260e082015161022086015261010080830151610240870152610120808401516102608801528484015161028088015260208a0151945061817260c08801866effffffffffffffffffffffffffffff169052565b60408a01516effffffffffffffffffffffffffffff1660e088015260608a01518784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60908101848a015290955093506181cc8386617d01565b945060808a0151925083878603018188015250506181ea8382617d01565b9250505082810360608401526182008186617ac4565b905082810360808401526182148185617b76565b98975050505050505050565b828152604060208201526000610a826040830184617d01565b86815260c0810161824d6020830188617d4b565b6001600160a01b03861660408301528460608301528360808301528260a0830152979650505050505050565b87815260e0810161828d6020830189617d4b565b6001600160a01b0380881660408401528660608401528560808401528460a084015280841660c08401525098975050505050505050565b6020810161059e8284617d68565b60208152600061068c6020830184617d01565b6060815260006182f86060830186617d01565b90508360208301526001600160a01b0383166040830152949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261834c57600080fd5b83018035915067ffffffffffffffff82111561836757600080fd5b6020019150600681901b3603821315616fec57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126183b457600080fd5b83018035915067ffffffffffffffff8211156183cf57600080fd5b602001915060c081023603821315616fec57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261841b57600080fd5b83018035915067ffffffffffffffff82111561843657600080fd5b602001915060a081023603821315616fec57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261848257600080fd5b83018035915067ffffffffffffffff82111561849d57600080fd5b602001915036819003821315616fec57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112617e3a57600080fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112617e3a57600080fd5b60405160a0810167ffffffffffffffff8111828210171561853d5761853d6189e5565b60405290565b604051610160810167ffffffffffffffff8111828210171561853d5761853d6189e5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156185ae576185ae6189e5565b604052919050565b600067ffffffffffffffff8211156185d0576185d06189e5565b5060051b60200190565b600080858511156185ea57600080fd5b838611156185f757600080fd5b5050820193919092039150565b6000821982111561861757618617618929565b500190565b600060ff821660ff84168060ff0382111561863957618639618929565b019392505050565b60008261865057618650618958565b500490565b600081600019048311821515161561866f5761866f618929565b500290565b60008282101561868657618686618929565b500390565b6000618699617014846185b6565b808482526020808301925084368760051b870111156186b757600080fd5b60005b8781101561875957813567ffffffffffffffff8111156186d957600080fd5b870136601f8201126186ea57600080fd5b80356186f8617014826185b6565b8181528581019083870136600685901b86018901111561871757600080fd5b600094505b838510156187435761872e368261734e565b8352600194909401939187019160400161871c565b50885250505093820193908201906001016186ba565b50919695505050505050565b6000618773617014846185b6565b838152602080820191908460053688821b8301111561879157600080fd5b60005b8881101561889257823567ffffffffffffffff808211156187b457600080fd5b818a01915060a082360312156187c957600080fd5b6187d161851a565b8235815286830135600281106187e657600080fd5b8188015260408381013590820152606080840135908201526080808401358381111561881157600080fd5b939093019236601f85011261882557600080fd5b83359250618835617014846185b6565b83815288810190858a0136868a1b88018c01111561885257600080fd5b600096505b85871015618875578035835260019690960195918a01918a01618857565b509183019190915250885250509483019491830191600101618794565b5092979650505050505050565b600061059e3683617204565b600061059e36836173fd565b60005b838110156188d25781810151838201526020016188ba565b83811115612c345750506000910152565b6000816188f2576188f2618929565b506000190190565b600060001982141561890e5761890e618929565b5060010190565b60008261892457618924618958565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004811061455157614551618987565b6001600160a01b038116811461455157600080fdfea26469706673582212208125f30b148d80d2b4cbfd72fe80b99dc1483795a03a45c11ffd62df18870e5d64736f6c63430008070033",
    "sourceMap": "1299:27859:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28961:195;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27447:354;;;;;;;;;;-1:-1:-1;27447:354:40;;;;;:::i;:::-;27567:16;17198:23:55;;;:12;:23;;;;;17303;;;;;;;17340;;;;;;17377:21;;;;;;;17412:23;;;;;;27447:354:40;;;;;35371:14:62;;35364:22;35346:41;;35430:14;;35423:22;35418:2;35403:18;;35396:50;35462:18;;;35455:34;35520:2;35505:18;;35498:34;35333:3;35318:19;27447:354:40;35127:411:62;23289:570:40;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25395:234::-;;;;;;;;;;;;;:::i;:::-;;;35689:25:62;;;35677:2;35662:18;25395:234:40;35543:177:62;25813:747:40;;;;;;;;;;-1:-1:-1;25813:747:40;;;;;:::i;:::-;;:::i;17619:1186::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;24921:211::-;;;;;;;;;;-1:-1:-1;24921:211:40;;;;;:::i;:::-;;:::i;:::-;;;35100:14:62;;35093:22;35075:41;;35063:2;35048:18;24921:211:40;34935:187:62;20304:554:40;;;;;;:::i;:::-;;:::i;5190:549::-;;;;;;:::i;:::-;;:::i;8424:595::-;;;;;;:::i;:::-;;:::i;12014:1239::-;;;;;;:::i;:::-;;:::i;27993:225::-;;;;;;;;;;-1:-1:-1;27993:225:40;;;;;:::i;:::-;;:::i;28523:303::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3530:315::-;;;;;;:::i;:::-;;:::i;24200:215::-;;;;;;;;;;-1:-1:-1;24200:215:40;;;;;:::i;:::-;;:::i;28961:195::-;29041:26;29142:7;7996:5:52;;;;;;;;;;;;;;;;;;7880:128;29142:7:40;29127:22;;28961:195;:::o;23289:570::-;23578:29;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;23721:131:40::2;23759:14:::0;23721:131:::2;23791:17:::0;;23721:131:::2;:::i;:::-;23826:12;;23721:20;:131::i;:::-;2345:1:23::1;933:16:56;:31:::0;23702:150:40;23289:570;-1:-1:-1;;;;;;23289:570:40:o;25395:234::-;25493:18;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;25603:19:40::1;:17;:19::i;25813:747::-:0;26127:389;;;;;;;;;25931:17;;26097:456;;26127:389;26160:13;;;;:5;:13;:::i;:::-;-1:-1:-1;;;;;26127:389:40;;;;;26191:5;:10;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26127:389:40;;;;;26219:11;;;;:5;:11;:::i;:::-;26127:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26127:389:40;;;-1:-1:-1;;26127:389:40;;26248:19;;;;:5;:19;:::i;:::-;26127:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26127:389:40;;;-1:-1:-1;;26127:389:40;;26285:15;;;;;;;;:::i;:::-;26127:389;;;;;;;;:::i;:::-;;;;;26318:5;:15;;;26127:389;;;;26351:5;:13;;;26127:389;;;;26382:5;:14;;;26127:389;;;;26414:5;:10;;;26127:389;;;;26442:5;:16;;;26127:389;;;;26476:5;:19;;;;;;;;:::i;:::-;26127:389;;;-1:-1:-1;26530:13:40;;;;26097:16;:456::i;:::-;26085:468;25813:747;-1:-1:-1;;25813:747:40:o;17619:1186::-;18102:29;18133;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;;;18288:79:40::2;18339:14:::0;18288:33:::2;:79::i;:::-;18234:133;;18438:360;18487:14;18519:15;18552:17;;18438:360;;;;;:::i;:::-;18587:17:::0;;18622:25;;18665:19;-1:-1:-1;;;;;18702:23:40;::::2;::::0;:48:::2;;18741:9;18702:48;;;18728:10;18702:48;18768:16;18438:31;:360::i;:::-;2345:1:23::1;933:16:56;:31:::0;18419:379:40;;;;-1:-1:-1;17619:1186:40;-1:-1:-1;;;;;;;;;;;;17619:1186:40:o;24921:211::-;25034:14;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;25108:17:40::1;25118:6;;25108:9;:17::i;:::-;25096:29:::0;24921:211;-1:-1:-1;;;24921:211:40:o;20304:554::-;20516:29;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;20659:192:40::2;20697:32;20722:6:::0;;20697:24:::2;:32::i;:::-;20747:25;::::0;;20770:1:::2;20747:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20747:25:40::2;;;;;;;;;;;;;;;;;20825:12;;20659:20;:192::i;:::-;2345:1:23::1;933:16:56;:31:::0;20640:211:40;20304:554;-1:-1:-1;;;;;20304:554:40:o;5190:549::-;5370:14;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;5515:217:40::2;5561:30;5585:5:::0;5561:23:::2;:30::i;:::-;5605:25;::::0;;5628:1:::2;5605:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5605:25:40::2;;;;;;;;;;;;;;;;;5679:19;5712:10;5515:32;:217::i;:::-;2345:1:23::1;933:16:56;:31:::0;5503:229:40;5190:549;-1:-1:-1;;;5190:549:40:o;8424:595::-;8732:14;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;8817:195:40::2;;8863:13:::0;8817:195:::2;:::i;:::-;;8890:17:::0;;8817:195:::2;:::i;:::-;8921:19:::0;-1:-1:-1;;;;;8954:23:40;::::2;::::0;:48:::2;;8993:9;8817:32;:195::i;8954:48::-;8980:10;8817:32;:195::i;12014:1239::-:0;12393:29;12424;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;;;12557:54:40::2;12595:6:::0;;12557:24:::2;:54::i;:::-;12517:94;;12677:51;12731:79;12782:14;12731:33;:79::i;:::-;12677:133:::0;-1:-1:-1;12881:365:40::2;12930:14:::0;12677:133;13018:1:::2;12995:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12995:25:40::2;;;;;;;;;;;;;;;;;13073:17;;13108:25;;13151:19;13188:10;13216:16;12881:31;:365::i;:::-;2345:1:23::1;933:16:56;:31:::0;12862:384:40;;;;-1:-1:-1;12014:1239:40;-1:-1:-1;;;;;;;;;;;12014:1239:40:o;27993:225::-;-1:-1:-1;;;;;1720:18:48;;28094:15:40;1720:18:48;;;:9;:18;;;;;;28191:20:40;1524:221:48;28523:303:40;28623:21;28658:23;28695:25;28805:14;:12;:14::i;:::-;28798:21;;;;;;28523:303;;;:::o;3530:315::-;3706:14;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:23::1;885:16:56;:27:::0;3797:41:40::2;3827:10:::0;3797:29:::2;:41::i;:::-;2345:1:23::1;933:16:56;:31:::0;3785:53:40;3530:315;-1:-1:-1;;3530:315:40:o;24200:215::-;24321:14;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;24393:15:40::1;24401:6;;24393:7;:15::i;33077:919:53:-:0;33276:29;33373:51;33427:79;33478:14;33427:33;:79::i;:::-;33373:133;;33598:257;33646:14;33674:15;33703:17;33734:4;33800:14;:21;33843:1;33598:34;:257::i;:::-;33936:53;33959:15;33976:12;;33936:22;:53::i;:::-;33929:60;;;33077:919;;;;;;;:::o;957:333:48:-;1039:18;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;1161:10:48::1;1151:21;::::0;;;:9:::1;:21;::::0;;;;1149:23;;1151:21;;;1149:23:::1;::::0;::::1;:::i;:::-;::::0;;;;-1:-1:-1;1241:42:48::1;::::0;35689:25:62;;;1149:23:48;;-1:-1:-1;1272:10:48::1;::::0;1241:42:::1;::::0;35677:2:62;35662:18;1241:42:48::1;;;;;;;957:333:::0;:::o;2957:1866:52:-;3085:17;3195:28;3253:15;:21;;;:28;3226:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3226:65:52;;3195:96;;3301:36;3367:15;:47;;;3340:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3340:84:52;;3301:123;;3489:9;3484:205;3508:15;:21;;;:28;3504:1;:32;3484:205;;;3638:40;3653:15;:21;;;3675:1;3653:24;;;;;;;;:::i;:::-;;;;;;;3638:14;:40::i;:::-;3621:11;3633:1;3621:14;;;;;;;;:::i;:::-;;;;;;;;;;:57;3538:3;;;:::i;:::-;;;3484:205;;;;3774:9;3756:332;3805:15;:47;;;3801:1;:51;3756:332;;;3991:86;4031:15;:29;;;4061:1;4031:32;;;;;;;;:::i;:::-;;;;;;;3991:22;:86::i;:::-;3966:19;3986:1;3966:22;;;;;;;;:::i;:::-;;;;;;;;;;:111;3866:3;;;:::i;:::-;;;3756:332;;;;4246:15;4283;:23;;;4328:15;:20;;;4397:11;4380:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;4370:40;;;;;;4459:19;4442:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;4432:48;;;;;;4502:15;:25;;;4549:15;:25;;;4596:15;:23;;;4641:15;:24;;;4687:15;:20;;;4729:15;:26;;;4777:7;4214:588;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4187:629;;;;;;4168:648;;;;2957:1866;;;;:::o;16150:731:54:-;16415:21;;16269:39;;16415:21;16536:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16536:33:54;;-1:-1:-1;;16536:33:54;;;;;;;;;;;;16518:51;;16627:9;16622:171;16646:11;16642:1;:15;16622:171;;;16740:42;16764:14;16779:1;16764:17;;;;;;;;:::i;:::-;;;;;;;16740:23;:42::i;:::-;16719:15;16735:1;16719:18;;;;;;;;:::i;:::-;;;;;;:63;;;;16659:3;;;;:::i;:::-;;;16622:171;;;;16852:22;16150:731;;;:::o;6655:1251:53:-;7113:29;7144;7269:256;7317:14;7345:15;7374:17;7405:5;7476:16;7506:9;7269:34;:256::i;:::-;7598:194;7641:15;7598:194;7670:17;;7598:194;:::i;:::-;;7701:25;;7598:194;:::i;:::-;7740:19;7773:9;7598:29;:194::i;:::-;7566:226;;;;-1:-1:-1;6655:1251:53;-1:-1:-1;;;;;;;;;;;6655:1251:53:o;14011:1951:55:-;14108:4;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;14178:31:55::1;::::0;;14369:6;14178:31;14429:1505:::1;14453:11;14449:1;:15;14429:1505;;;14520:20;14543:6;;14550:1;14543:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14520:32:::0;-1:-1:-1;14613:40:55::1;14656:16;14520:32:::0;;14656:16:::1;:::i;:::-;14613:59:::0;-1:-1:-1;14751:23:55::1;;::::0;::::1;14613:59:::0;14751:23:::1;:::i;:::-;14741:33:::0;-1:-1:-1;14879:88:55::1;;14938:15:::0;14879:88:::1;:::i;:::-;:41;:88::i;:::-;15067:23;::::0;;;:12:::1;:23;::::0;;;;;-1:-1:-1;14867:100:55;;-1:-1:-1;15177:234:55::1;::::0;14867:100;;15067:23;;15345:4:::1;15177:18;:234::i;:::-;-1:-1:-1::0;15493:23:55;;::::1;;15488:436;;15586:53;15603:7:::0;15612:9;15623:15:::1;;::::0;::::1;:5:::0;:15:::1;:::i;:::-;15586:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15586:16:55::1;::::0;-1:-1:-1;;;15586:53:55:i:1;:::-;15725:30:::0;;;::::1;15751:4;15725:30;::::0;;15888:20:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;15853:56:55::1;15879:7;-1:-1:-1::0;;;;;15853:56:55::1;;15868:9;15853:56;;;;35689:25:62::0;;35677:2;35662:18;;35543:177;15853:56:55::1;;;;;;;;15488:436;14471:1463;;14466:3;;;;:::i;:::-;;;14429:1505;;;-1:-1:-1::0;15951:4:55::1;::::0;14011:1951;-1:-1:-1;;;;;;;14011:1951:55:o;12398:736:54:-;12504:37;12654:6;;12765:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12748:49;;12855:9;12850:198;12874:11;12870:1;:15;12850:198;;;13003:34;13027:6;;13034:1;13027:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13003:23;:34::i;:::-;12983:14;12998:1;12983:17;;;;;;;;:::i;:::-;;;;;;:54;;;;12887:3;;;;:::i;:::-;;;12850:198;;;;13106:21;12398:736;;;;:::o;11730:380::-;11832:34;;:::i;:::-;11975:128;;;;;;;;;;12002:16;:5;;:16;:::i;:::-;11975:128;;;:::i;:::-;;;;;12032:1;11975:128;;;;;;12047:1;11975:128;;;;;;12062:5;:15;;;;;;;;:::i;:::-;11975:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11975:128:54;;;-1:-1:-1;;11975:128:54;;;;;;;;;;;;;;;;;-1:-1:-1;11959:144:54;11730:380;-1:-1:-1;;11730:380:54:o;3172:1664::-;3399:4;3483:33;3615:17;3646:21;3681:23;3717:165;3764:13;3795:17;3830:4;3852:16;3717:29;:165::i;:::-;3601:281;;;;;;3972:65;4004:13;4019:17;3972:31;:65::i;:::-;4165:24;;4124:38;4317:181;4165:24;4390:13;4417:15;4446:19;4479:9;4317:30;:181::i;:::-;4278:220;;4673:15;:20;;;-1:-1:-1;;;;;4585:222:54;4636:15;:23;;;-1:-1:-1;;;;;4585:222:54;;4613:9;4707;4730:14;:25;;;4769:14;:28;;;4585:222;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;4825:4:54;;3172:1664;-1:-1:-1;;;;;;;;;;3172:1664:54:o;7423:335:52:-;7639:8;;;;;;;;;;;;;;;;;7542:23;;7675:18;:16;:18::i;:::-;7423:335;;7731:19;;-1:-1:-1;7423:335:52;-1:-1:-1;7423:335:52:o;10202:9637:45:-;10315:4;;;10482:25;;;;;;;;:::i;:::-;10455:52;;10529:17;:28;10547:9;10529:28;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10529:28:45;;;;;;;-1:-1:-1;;;;10711:25:45;;;;10529:28;10711:25;;;:::i;:::-;10684:52;;10762:22;:33;10785:9;10762:33;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10762:33:45;;;;;;;-1:-1:-1;;;;10961:5:45;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;11028:34:45;11019:5;:43;;;;;;;;:::i;:::-;;10961:101;10944:276;;;-1:-1:-1;11118:15:45;10944:276;;;-1:-1:-1;11195:14:45;10944:276;11310:9;:14;:65;;;;-1:-1:-1;11360:15:45;11328:28;:47;;;;;;;;:::i;:::-;;11310:65;11306:129;;;11398:26;;;;;11414:9;11398:26;;;35689:25:62;35662:18;;11398:26:45;;;;;;;;11306:129;11525:9;:14;;;;:64;;-1:-1:-1;11575:14:45;11543:28;:46;;;;;;;;:::i;:::-;;11525:64;11521:128;;;11612:26;;;;;11628:9;11612:26;;;35689:25:62;35662:18;;11612:26:45;35543:177:62;11521:128:45;11734:33;11803:35;11794:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;11863:36:45;11854:5;:45;;;;;;;;:::i;:::-;;11794:105;11777:295;;;11952:21;;;;;;;;:::i;:::-;11924:49;;11777:295;;;12032:29;;;;:10;:29;:::i;:::-;12004:57;;11777:295;12137:25;;12189:5;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;12256:34:45;12247:5;:43;;;;;;;;:::i;:::-;;12189:101;12172:566;;;-1:-1:-1;12334:15:45;12172:566;;;12392:35;12383:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12452:36:45;12443:5;:45;;;;;;;;:::i;:::-;;12383:105;12366:372;;;-1:-1:-1;12532:14:45;12366:372;;;12576:35;12567:5;:44;;;;;;;;:::i;:::-;;12563:175;;;-1:-1:-1;12646:15:45;12563:175;;;-1:-1:-1;12711:16:45;12563:175;12805:24;12865:35;12856:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12925:36:45;12916:5;:45;;;;;;;;:::i;:::-;;12856:105;12839:449;;;-1:-1:-1;13004:14:45;12839:449;;;13061:33;13052:5;:42;;;;;;;;:::i;:::-;;:102;;;-1:-1:-1;13119:35:45;13110:5;:44;;;;;;;;:::i;:::-;;13052:102;13035:253;;;-1:-1:-1;13197:15:45;13035:253;;;-1:-1:-1;13261:16:45;13035:253;13375:221;13413:10;13437:9;13460:16;13490:28;13532:25;13571:15;13375:24;:221::i;:::-;13669:23;13695:18;;;;;;;;:::i;:::-;13669:44;-1:-1:-1;13793:18:45;13847:35;13838:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;13907:36:45;13898:5;:45;;;;;;;;:::i;:::-;;13838:105;13821:273;;;-1:-1:-1;13981:30:45;;;;13821:273;;;-1:-1:-1;14055:28:45;;;;13821:273;14180:33;14171:5;:42;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;14242:34:45;14233:5;:43;;;;;;;;:::i;:::-;;14171:105;14170:245;;;;-1:-1:-1;14359:34:45;;;;;;14306:29;;14359:10;14306:29;:::i;:::-;-1:-1:-1;;;;;14298:95:45;;14297:118;;14170:245;14169:435;;;-1:-1:-1;14443:35:45;14434:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14507:36:45;14498:5;:45;;;;;;;;:::i;:::-;;14434:109;14433:170;;;;-1:-1:-1;14564:34:45;;;;:39;;14433:170;14169:615;;;-1:-1:-1;14631:35:45;14622:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14695:36:45;14686:5;:45;;;;;;;;:::i;:::-;;14622:109;14621:162;;;;-1:-1:-1;14752:26:45;;;;:31;;14621:162;14152:697;;;14816:22;;;;;;;;;;;;;;14152:697;-1:-1:-1;;;;;;;;;;;;;;;;;15119:33:45;15110:5;:42;;;;;;;;:::i;:::-;;15106:4580;;;15248:268;15281:21;;;;;;;;:::i;:::-;15320:7;15345:10;15373;:26;;;15417:10;:22;;;15457:10;15485:17;15248:15;:268::i;:::-;15612:67;15636:10;:30;;;15668:10;15612:23;:67::i;:::-;15106:4580;;;15709:34;15700:5;:43;;;;;;;;:::i;:::-;;15696:3990;;;15840:269;15874:21;;;;;;;;:::i;:::-;15913:7;15938:10;15966;:26;;;16010:10;:22;;;16050:10;16078:17;15840:16;:269::i;15696:3990::-;16302:35;16293:5;:44;;;;;;;;:::i;:::-;;16289:3397;;;16433:268;16466:21;;;;;;;;:::i;16433:268::-;16784:331;16827:10;16855:7;16880:29;;;;:10;:29;:::i;:::-;16927:10;:30;;;16975:10;17003:5;17084:17;16784:25;:331::i;16289:3397::-;17145:36;17136:5;:45;;;;;;;;:::i;:::-;;17132:2554;;;17278:269;17312:21;;;;;;;;:::i;17132:2554::-;17991:35;17982:5;:44;;;;;;;;:::i;:::-;;17978:1708;;;18122:292;18155:29;;;;:10;:29;:::i;:::-;18202:10;18230:7;18255:10;:34;;;18307:10;:30;;;18355:10;18383:17;18122:15;:292::i;:::-;18497:314;18540:7;18565:10;18593;:21;;;;;;;;;;:::i;:::-;18632:10;:22;;;18672:10;18700:4;18780:17;18497:25;:314::i;17978:1708::-;18985:293;19019:29;;;;:10;:29;:::i;:::-;19066:10;19094:7;19119:10;:34;;;19171:10;:30;;;19219:10;19247:17;18985:16;:293::i;:::-;19361:314;19404:7;19429:10;19457;:21;;;;;;;;;;:::i;19361:314::-;19776:34;19792:17;19776:15;:34::i;:::-;-1:-1:-1;19828:4:45;;10202:9637;-1:-1:-1;;;;;;;;;;10202:9637:45:o;11629:1882:55:-;11734:4;2376:1:23;1161:16:56;;:28;1157:84;;;1212:18;;;;;;;;;;;;;;1157:84;11804:31:55::1;::::0;;11990:6;11804:31;12050:1434:::1;12074:11;12070:1;:15;12050:1434;;;12141:30;12174:6;;12181:1;12174:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12141:42:::0;-1:-1:-1;12208:13:55::1;;::::0;::::1;12141:42:::0;12208:13:::1;:::i;:::-;12198:23:::0;-1:-1:-1;12242:10:55::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;12235:17:::0;-1:-1:-1;12340:10:55::1;-1:-1:-1::0;;;;;12340:21:55;::::1;;::::0;::::1;::::0;:43:::1;;-1:-1:-1::0;12365:10:55::1;-1:-1:-1::0;;;;;12365:18:55;::::1;;;12340:43;12336:107;;;12410:18;;;;;;;;;;;;;;12336:107;12534:17;12554:504;12588:425;;;;;;;;12625:7;-1:-1:-1::0;;;;;12588:425:55::1;;;;;12654:4;-1:-1:-1::0;;;;;12588:425:55::1;;;;;12680:5;:11;;;;;;;;:::i;:::-;12588:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;12588:425:55;;;-1:-1:-1;;12588:425:55::1;;12713:19;;::::0;::::1;:5:::0;:19:::1;:::i;:::-;12588:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;12554:504;13158:23;::::0;;;:12:::1;:23;::::0;;;;;;13263:31;;13308:30;;13263:31:::1;13308:30;::::0;;13433:40;;13158:23;;-1:-1:-1;12534:524:55;;-1:-1:-1;;;;;;13433:40:55;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;12534:524;35689:25:62;;35677:2;35662:18;;35543:177;13433:40:55::1;;;;;;;;12092:1392;;12087:3;;;;:::i;:::-;;;12050:1434;;9358:8431:53::0;9752:21;;9730:19;9752:21;9879:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9879:26:53;-1:-1:-1;9848:57:53;-1:-1:-1;9963:15:53;9981:7;;:68;:7;10004:45;9981:68;;;;:132;;-1:-1:-1;10065:7:53;;:48;:7;10076:37;10065:48;;9981:132;9963:150;-1:-1:-1;10123:24:53;;10194:6168;10218:11;10214:1;:15;10194:6168;;;10293:34;10330:14;10345:1;10330:17;;;;;;;;:::i;:::-;;;;;;;10293:54;;10407:36;10446:15;10462:1;10446:18;;;;;;;;:::i;:::-;;;;;;;10407:57;;10558:16;10578:1;10558:21;10554:383;;;10702:1;10676:23;;;;:27;;;10799:24;;:28;10914:8;;10554:383;11044:17;11079;11114:19;11150:191;11201:13;11236:17;11275:15;11312:11;11150:29;:191::i;:::-;11026:315;;;;;;11437:9;11450:1;11437:14;11433:376;;;-1:-1:-1;;11574:1:53;11548:23;;;;:27;;;-1:-1:-1;11671:24:53;;:28;11786:8;;11433:376;11900:9;11883:11;11895:1;11883:14;;;;;;;;:::i;:::-;;;;;;;;;;:26;11981:18;;;;:::i;:::-;12098:24;;:34;;;;12222:32;;;;12368:30;;;;;11981:18;;-1:-1:-1;12098:34:53;-1:-1:-1;12222:32:53;12078:17;12471:1741;12495:5;:12;12491:1;:16;12471:1741;;;12576:26;12605:5;12611:1;12605:8;;;;;;;;:::i;:::-;;;;;;;12576:37;;12674:19;:80;;;-1:-1:-1;12739:15:53;12717:18;;:37;;;;;;;;:::i;:::-;;12674:80;12632:122;;12844:17;12864:135;12898:9;12929:11;12962:9;:19;;;12864:12;:135::i;:::-;12844:155;;13122:9;:19;;;13097:9;:21;;;:44;13093:499;;;13239:21;;;:33;;;13093:499;;;13420:153;13458:9;13493:11;13530:9;:21;;;13420:12;:153::i;:::-;13396:21;;;:177;13093:499;13686:19;;;:31;;;13873:21;;;;13831:224;;13708:9;13957;13988:7;14017:5;13831:20;:224::i;:::-;13807:21;;;:248;;;14138:25;;;;:28;;14164:1;;14138:28;;;;;;:::i;:::-;;;;;;;:35;;:59;;;;;12514:1698;;12509:3;;;;:::i;:::-;;;12471:1741;;;-1:-1:-1;14363:24:53;;:38;;;14302:40;14496:1856;14520:13;:20;14516:1;:24;14496:1856;;;14617:42;14663:13;14677:1;14663:16;;;;;;;;:::i;:::-;;;;;;;14617:63;;14767:17;14787:143;14821:9;14852:11;14885:17;:27;;;14787:12;:143::i;:::-;14767:163;;15082:17;:27;;;15049:17;:29;;;:60;15024:574;;;15224:29;;;:41;;;15024:574;;;15418:161;15456:9;15491:11;15528:17;:29;;;15418:12;:161::i;:::-;15386:29;;;:193;15024:574;15692:27;;;:39;;;15927:29;;;;15881:261;;15722:9;16035;16070:7;16103:4;15881:20;:261::i;:::-;15827:29;;;:333;;;16246:28;;;;:31;;16275:1;;16246:31;;;;;;:::i;:::-;;;;;;;:38;;:91;;;;;14547:1805;;14542:3;;;;:::i;:::-;;;14496:1856;;;;10236:6126;;;;;;;;;10194:6168;10231:3;;;:::i;:::-;;;10194:6168;;;;16376:19;:33;;;;;16399:10;16376:33;16372:95;;;16432:24;;;;;;;;;;;;;;16372:95;16542:59;16566:15;16583:17;16542:23;:59::i;:::-;16732:9;16727:1056;16751:11;16747:1;:15;16727:1056;;;16878:1;16870:10;;16852:11;16864:1;16852:14;;;;;;;;:::i;:::-;;;;;;;:28;16848:75;;;16900:8;;16848:75;16999:38;17058:14;17073:1;17058:17;;;;;;;;:::i;:::-;;;;;;;:28;;;16999:101;;17190:29;17222:15;17238:1;17222:18;;;;;;;;:::i;:::-;;;;;;;:29;;;17190:61;;17365:35;17403:15;17419:1;17403:18;;;;;;;;:::i;:::-;;;;;;;:49;;;17365:87;;17652:15;:20;;;-1:-1:-1;;;;;17547:225:53;17611:15;:23;;;-1:-1:-1;;;;;17547:225:53;;17579:11;17591:1;17579:14;;;;;;;;:::i;:::-;;;;;;;17690:9;17717:10;17745:13;17547:225;;;;;;;;;:::i;:::-;;;;;;;;16769:1014;;;16727:1056;16764:3;;;:::i;:::-;;;16727:1056;;;;9657:8132;;;;9358:8431;;;;;;:::o;34935:2213::-;35085:29;35224:12;;35347:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35347:34:53;;-1:-1:-1;;35347:34:53;;;;;;;;;;;;35334:47;;35440:31;35533:9;35528:873;35552:17;35548:1;:21;35528:873;;;35644:32;35679:12;;35692:1;35679:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;35644:50;-1:-1:-1;35781:26:53;35810:162;35845:15;35878:27;35644:50;;35878:27;:::i;:::-;35923:35;;;;:11;:35;:::i;:::-;35810:17;:162::i;:::-;35781:191;;36092:9;:17;;;-1:-1:-1;;;;;36064:45:53;:9;:14;;;:24;;;-1:-1:-1;;;;;36064:45:53;;36060:331;;;36185:25;;;:::i;:::-;;;36060:331;;;36367:9;36325:10;36336:27;36340:23;36336:1;:27;:::i;:::-;36325:39;;;;;;;;:::i;:::-;;;;;;:51;;;;36060:331;35576:825;;35571:3;;;;:::i;:::-;;;35528:873;;;-1:-1:-1;36477:28:53;;36473:484;;36521:23;36547:59;36583:23;36547:17;:59;:::i;:::-;36521:85;;36620:37;36693:15;36660:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36660:62:53;;-1:-1:-1;;36660:62:53;;;;;;;;;;;;36620:102;;36790:9;36785:116;36809:15;36805:1;:19;36785:116;;;36873:10;36884:1;36873:13;;;;;;;;:::i;:::-;;;;;;;36849:18;36868:1;36849:21;;;;;;;;:::i;:::-;;;;;;:37;;;;36826:3;;;;:::i;:::-;;;36785:116;;;-1:-1:-1;36928:18:53;-1:-1:-1;;36473:484:53;37019:64;37055:15;37072:10;37019:35;:64::i;:::-;;37124:17;;34935:2213;;;;;:::o;1203:472:52:-;1302:7;1403:20;1445:9;:18;;;1485:9;:15;;;1522:9;:30;;;1574:9;:21;;;1617:9;:19;;;1371:283;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1344:324;;;;;;1325:343;;1203:472;;;:::o;1900:593::-;2023:7;2124:28;2174:17;:26;;;2222:17;:23;;;2267:17;:38;;;2327:17;:29;;;2378:17;:27;;;2427:17;:27;;;2092:380;;;;;;;;;;;;;;:::i;13405:2472:54:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13648:24:54;;:30;;;13806:12;;13621:24;;13790:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13790:29:54;;-1:-1:-1;;13790:29:54;;;;;;;;;;;;13758:61;;13889:9;13884:519;13908:5;:12;13904:1;:16;13884:519;;;13981:26;14010:5;14016:1;14010:8;;;;;;;;:::i;:::-;;;;;;;13981:37;;14101:26;14130:179;;;;;;;;14157:9;:18;;;14130:179;;;;;;;;:::i;:::-;;;;;14193:9;:15;;;-1:-1:-1;;;;;14130:179:54;;;;;14226:9;:30;;;14130:179;;;;14274:9;:21;;;14130:179;;;14101:208;;14383:9;14367:10;14378:1;14367:13;;;;;;;;:::i;:::-;;;;;;:25;;;;13927:476;;13922:3;;;;:::i;:::-;;;13884:519;;;-1:-1:-1;14512:37:54;;:64;;;14737:20;;14469:40;;14705:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14705:62:54;;-1:-1:-1;;14705:62:54;;;;;;;;;;;;14667:100;;14845:9;14840:667;14864:13;:20;14860:1;:24;14840:667;;;14953:42;14999:13;15013:1;14999:16;;;;;;;;:::i;:::-;;;;;;;14953:63;;15110:32;15145:259;;;;;;;;15175:17;:26;;;15145:259;;;;;;;;:::i;:::-;;;;;15219:17;:23;;;-1:-1:-1;;;;;15145:259:54;;;;;15260:17;:38;;;15145:259;;;;15316:17;:29;;;15145:259;;;;15363:17;:27;;;-1:-1:-1;;;;;15145:259:54;;;;15110:294;;15484:12;15465:13;15479:1;15465:16;;;;;;;;:::i;:::-;;;;;;:31;;;;14891:616;;14886:3;;;;:::i;:::-;;;14840:667;;;-1:-1:-1;15603:207:54;;;;;;;;15631:24;;:32;-1:-1:-1;;;;;15603:207:54;;;;;;;;;;;;;;;;;;15728:24;;:35;;;15603:207;;;;15777:23;;;;;15603:207;;;;;;;13405:2472;-1:-1:-1;;;13405:2472:54:o;21636:4575:53:-;22142:24;;22313:32;;21954:29;;;;22487:55;22313:32;22142:24;22487:55;:::i;:::-;22458:94;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22458:94:53;;-1:-1:-1;;22458:94:53;;;;;;;;;;;;22445:107;;22611:31;22710:9;22705:937;22729:22;22725:1;:26;22705:937;;;22843:40;22887:17;22905:1;22887:20;;;;;;;;:::i;:::-;;;;;;;22843:65;;22998:26;23027:186;23064:15;23097:10;23125;23153:19;23190:9;23027:19;:186::i;:::-;22998:215;;23333:9;:17;;;-1:-1:-1;;;;;23305:45:53;:9;:14;;;:24;;;-1:-1:-1;;;;;23305:45:53;;23301:331;;;23426:25;;;:::i;:::-;;;23301:331;;;23608:9;23566:10;23577:27;23581:23;23577:1;:27;:::i;:::-;23566:39;;;;;;;;:::i;:::-;;;;;;:51;;;;23301:331;22758:884;;22753:3;;;;:::i;:::-;;;22705:937;;;;23713:9;23708:1068;23732:30;23728:1;:34;23708:1068;;;23858:40;23919:25;23945:1;23919:28;;;;;;;;:::i;:::-;;;;;;;23858:103;;24051:26;24080:204;24117:15;24150:18;24186:10;24214:19;24251:9;24080:19;:204::i;:::-;24051:233;;24404:9;:17;;;-1:-1:-1;;;;;24376:45:53;:9;:14;;;:24;;;-1:-1:-1;;;;;24376:45:53;;24372:394;;;24497:25;;;:::i;:::-;;;24372:394;;;24742:9;24637:10;24698:23;24669:26;24673:22;24669:1;:26;:::i;:::-;:52;;;;:::i;:::-;24637:102;;;;;;;;:::i;:::-;;;;;;:114;;;;24372:394;23769:1007;;23764:3;;;;:::i;:::-;;;23708:1068;;;-1:-1:-1;24852:28:53;;24848:960;;25182:23;25284;25209:71;25250:30;25209:22;:71;:::i;:::-;25208:99;;;;:::i;:::-;25182:125;;25390:37;25463:15;25430:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25430:62:53;;-1:-1:-1;;25430:62:53;;;;;;;;;;;;25390:102;;25573:9;25568:116;25592:15;25588:1;:19;25568:116;;;25656:10;25667:1;25656:13;;;;;;;;:::i;:::-;;;;;;;25632:18;25651:1;25632:21;;;;;;;;:::i;:::-;;;;;;:37;;;;25609:3;;;;:::i;:::-;;;25568:116;;;-1:-1:-1;25779:18:53;-1:-1:-1;;24848:960:53;25867:17;;25863:88;;25912:28;;;;;;;;;;;;;;25863:88;26059:98;26108:15;26137:10;26059:35;:98::i;:::-;26041:116;;26168:36;;;21636:4575;;;;;;;;:::o;1695:639:44:-;1823:17;1933:187;2013:15;:29;;;:36;2063:15;:47;;;1933:66;:187::i;:::-;2293:23;;-1:-1:-1;;;;;1720:18:48;2293:23:44;1720:18:48;;;:9;:18;;;;;;2222:105:44;;2252:15;;2222:16;:105::i;4096:1588:59:-;4364:23;;4281:10;;4364:23;;;;;4360:301;;;4480:15;4476:88;;;4522:27;;;;;;;;35689:25:62;;;35662:18;;4522:27:59;35543:177:62;4476:88:59;-1:-1:-1;4645:5:59;4638:12;;4360:301;4774:21;;;;;;;4860:25;;4856:746;;4985:15;4981:611;;;5107:31;;;;;;;;35689:25:62;;;35662:18;;5107:31:59;35543:177:62;4981:611:59;5265:23;;;;;;;5241:47;;5237:355;;5389:15;5385:98;;;5435:29;;;;;;;;35689:25:62;;;35662:18;;5435:29:59;35543:177:62;5385:98:59;5572:5;5565:12;;;;;5237:355;-1:-1:-1;5673:4:59;;4096:1588;-1:-1:-1;;;;;4096:1588:59:o;2743:569::-;-1:-1:-1;;;;;2956:21:59;;2967:10;2956:21;2952:58;;;2743:569;;;:::o;2952:58::-;3100:14;3117:50;3137:18;:16;:18::i;:::-;3157:9;5296:60:52;;29372:16:62;5296:60:52;;;29356:102:62;29474:11;;;29467:27;;;29510:12;;;29503:28;;;5236:13:52;;29547:12:62;;5296:60:52;;;;;;;;;;;;5273:93;;;;;;5265:101;;5116:257;;;;;3117:50:59;3100:67;;3256:49;3278:7;3287:6;3295:9;3256:21;:49::i;:::-;2873:439;2743:569;;;:::o;4414:6288:55:-;4676:17;4707:20;4741:22;4838:38;4879:13;:24;;;4838:65;;5013:142;5042:15;:25;;;5085:15;:23;;;5126:15;5013:11;:142::i;:::-;4995:302;;-1:-1:-1;5277:1:55;;-1:-1:-1;5277:1:55;;-1:-1:-1;5277:1:55;;-1:-1:-1;5261:25:55;;4995:302;5413:23;;;;5477:25;;;;5405:32;;;;;5469:34;5591:23;;;;:41;;-1:-1:-1;5618:14:55;;5591:41;5587:92;;;5655:13;;;;;;;;;;;;;;5587:92;5799:11;5787:9;:23;:93;;;;;5826:54;5854:15;:25;;;5826:27;:54::i;:::-;5770:262;;;5989:32;;;;;;;;;;;;;;5770:262;6134:58;6176:15;6134:41;:58::i;:::-;6122:70;;6240:307;6292:13;6319:17;6350:16;6380:9;6403:15;:24;;;6441:15;:25;;;6480:15;:23;;;6517:15;:20;;;6240:38;:307::i;:::-;6625:31;6659:23;;;:12;:23;;;;;;6769:189;;6672:9;;6659:23;;6929:15;6769:18;:189::i;:::-;6751:348;;-1:-1:-1;7083:1:55;;-1:-1:-1;7083:1:55;;-1:-1:-1;7064:24:55;;-1:-1:-1;;;7064:24:55;6751:348;7195:23;;;;7190:194;;7234:139;7268:15;:23;;;7309:9;7336:13;:23;;;7234:16;:139::i;:::-;7509:21;;;;;;;;;7577:23;;;;7697:22;;7693:2871;;7820:11;7835:1;7820:16;7816:668;;;7947:17;7935:29;;7996:17;7982:31;;7816:668;;;8149:11;8128:17;:32;8124:360;;8260:30;8279:11;8260:30;;:::i;:::-;;-1:-1:-1;8389:30:55;8402:17;8389:30;;:::i;:::-;;-1:-1:-1;8437:32:55;8452:17;8437:32;;:::i;:::-;;;8124:360;8613:11;8583:27;8601:9;8583:15;:27;:::i;:::-;:41;8579:197;;;8732:29;8746:15;8732:11;:29;:::i;:::-;8720:41;;8579:197;8858:28;8877:9;8858:28;;:::i;:::-;;-1:-1:-1;9004:17:55;8986:35;;;:86;;-1:-1:-1;9055:17:55;9041:31;;8986:86;8965:1005;;;9182:17;9202:145;9246:9;9277:52;9300:15;9317:11;9277:22;:52::i;:::-;9202:22;:145::i;:::-;9182:165;-1:-1:-1;9439:21:55;9463:14;;:30;;9484:9;9463:30;;;9480:1;9463:30;9439:54;-1:-1:-1;9584:25:55;9439:54;9584:9;:25;:::i;:::-;9572:37;-1:-1:-1;9645:31:55;9663:13;9645:15;:31;:::i;:::-;9627:49;-1:-1:-1;9708:27:55;9722:13;9708:11;:27;:::i;:::-;9694:41;-1:-1:-1;9815:19:55;9837:37;9857:17;-1:-1:-1;;9837:37:55;:::i;:::-;9815:59;-1:-1:-1;9928:25:55;9815:59;9928:11;:25;:::i;:::-;9894:29;9912:11;9894:15;:29;:::i;:::-;9893:61;;9087:883;;;8965:1005;10059:30;;10148:48;10210:46;;;;;;10148:48;;;;;;;;;;;;;10085:4;10148:48;10210:46;;;;7693:2871;;;10362:30;;10451:42;10507:46;;;;;;10451:42;;;;;;;;;;;;;10388:4;10451:42;10507:46;;;;7693:2871;-1:-1:-1;;10635:60:55;;;;;-1:-1:-1;;10635:60:55;;-1:-1:-1;;4414:6288:55;;;;;;;;;:::o;8608:5322:49:-;8871:24;;8998;;8851:17;9082:3731;9106:9;9102:1;:13;9082:3731;;;9183:40;9227:17;9245:1;9227:20;;;;;;;;:::i;:::-;;;;;;;;;;;9359:27;;9227:20;;-1:-1:-1;9405:15:49;;9401:94;;9447:33;;;;;;;;;;;;;;9401:94;9609:22;;;;9584;;;9851:16;:21;;;:35;;;;;;;;:::i;:::-;;9847:2360;;;9992:15;:21;;;:28;9974:14;:46;9970:133;;10051:33;;;;;;;;;;;;;;9970:133;10196:22;10243:15;:21;;;10265:14;10243:37;;;;;;;;:::i;:::-;;;;;;;;;;;10405:14;;10460:26;;;;10405:14;;-1:-1:-1;10460:26:49;-1:-1:-1;10243:37:49;-1:-1:-1;10598:29:49;10586:8;:41;;;;;;;;:::i;:::-;;10582:200;;;10668:15;10651:32;;10582:200;;;10747:16;10730:33;;10582:200;10905:27;;;;10876:26;;;;:56;9847:2360;;;11132:15;:29;;;:36;11114:14;:54;11110:149;;11199:41;;;;;;;;;;;;;;11110:149;11352:38;11415:15;:29;;;11445:14;11415:45;;;;;;;;:::i;:::-;;;;;;;;;;;11585:22;;11648:34;;;;11585:22;;-1:-1:-1;11648:34:49;-1:-1:-1;11415:45:49;-1:-1:-1;11794:29:49;11782:8;:41;;;;;;;;:::i;:::-;;11778:216;;;11872:15;11847:40;;11778:216;;;11959:16;11934:41;;11778:216;12147:27;;;;12088:34;;;;:104;9847:2360;12298:29;12318:8;12298:19;:29::i;:::-;12293:103;;12354:27;;;;;;;;;;;;;;12293:103;12484:34;;12480:323;;12615:173;12649:16;:27;;;12698:20;12740:16;:30;;;12615:12;:173::i;:::-;9122:3691;;;;;9117:3;;;;:::i;:::-;;;9082:3731;;;-1:-1:-1;12971:24:49;;:38;;;:45;12949:18;13090:351;13114:10;13110:1;:14;13090:351;;;13234:109;13275:13;:24;;;:38;;;13314:1;13275:41;;;;;;;;:::i;:::-;;;;;;;:50;;;13234:19;:109::i;:::-;13213:218;;;13383:33;;;;;;;;;;;;;;13213:218;13126:3;;;:::i;:::-;;;13090:351;;;-1:-1:-1;;13525:24:49;;:30;;;:37;:24;13627:297;13651:10;13647:1;:14;13627:297;;;13771:63;13791:13;:24;;;:30;;;13822:1;13791:33;;;;;;;;:::i;13771:63::-;13750:164;;;13874:25;;;;;;;;;;;;;;13750:164;13663:3;;;:::i;:::-;;;13627:297;;;;8766:5164;;;8608:5322;;:::o;5994:5460:54:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6436:179:54;;;;;;;;;;;;;;;;;;;;;;;;;6543:25;;;;6436:179;;;;;;;;6582:23;;;;6436:179;;;;-1:-1:-1;;;;;;;;6401:32:54;-1:-1:-1;;;;;;6436:179:54;6780:23;;6878:26;;;;7036:21;;;;:28;7007:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7007:67:54;;-1:-1:-1;;7007:67:54;;;;;;;;;;;-1:-1:-1;6979:25:54;;;:95;7216:9;7211:1545;7235:15;:21;;;:28;7231:1;:32;7211:1545;;;7332:26;7361:15;:21;;;7383:1;7361:24;;;;;;;;:::i;:::-;;;;;;;7332:53;;7555:15;7533:37;;;;;;;;:::i;:::-;:18;;:37;;;;;;;;:::i;:::-;;7529:115;;;7601:24;;;;;;;;;;;;;;7529:115;7742:14;7759:177;7795:9;:21;;;7838:9;:19;;;7879:12;7913:5;7759:14;:177::i;:::-;7742:194;;8025:32;8060:227;;;;;;;;8094:9;:18;;;8060:227;;;;;;;;:::i;:::-;;;;;8134:9;:15;;;-1:-1:-1;;;;;8060:227:54;;;;;8171:9;:30;;;8060:227;;;;8223:6;8060:227;;;;8259:9;-1:-1:-1;;;;;8060:227:54;;;;8025:262;;8404:183;;;;;;;;8435:12;:21;;;8404:183;;;;;;;;:::i;:::-;;;;;8478:12;:18;;;-1:-1:-1;;;;;8404:183:54;;;;;8518:12;:23;;;8404:183;;;;8563:6;8404:183;;;8373:14;:25;;;8399:1;8373:28;;;;;;;;:::i;:::-;;;;;;:214;;;;8678:63;8688:12;8702:7;8711:10;8723:17;8678:9;:63::i;:::-;7270:1486;;;7265:3;;;;:::i;:::-;;;7211:1545;;;;8906:15;:29;;;:36;8874:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8874:78:54;;-1:-1:-1;;8874:78:54;;;;;;;;;;;-1:-1:-1;8843:28:54;;;:109;9052:9;9027:22;9206:1833;9230:15;:29;;;:36;9226:1;:40;9206:1833;;;9343:42;9410:15;:29;;;9440:1;9410:32;;;;;;;;:::i;:::-;;;;;;;9343:117;;9560:14;9577:192;9613:17;:29;;;9664:17;:27;;;9713:12;9747:4;9577:14;:192::i;:::-;9560:209;;9845:32;9880:260;;;;;;;;9914:17;:26;;;9880:260;;;;;;;;:::i;:::-;;;;;9962:17;:23;;;-1:-1:-1;;;;;9880:260:54;;;;;10007:17;:38;;;9880:260;;;;10067:6;9880:260;;;;10095:17;:27;;;-1:-1:-1;;;;;9880:260:54;;;;9845:295;;10246:12;10212:14;:28;;;10241:1;10212:31;;;;;;;;:::i;:::-;;;;;;;;;;:46;10386:15;10361:21;;:40;;;;;;;;:::i;:::-;;10357:382;;;10519:14;10510:6;:23;10506:112;;;10568:27;;;;;;;;;;;;;;10506:112;10696:24;10714:6;10696:24;;:::i;:::-;;;10357:382;10838:186;10869:12;10903:10;10935:12;:32;;;10989:17;10838:9;:186::i;:::-;9273:1766;;;9268:3;;;;:::i;:::-;;;9206:1833;;;;11139:34;11155:17;11139:15;:34::i;:::-;11242:19;;11238:139;;11317:49;11338:10;11351:14;11317:12;:49::i;:::-;11426:21;;;;;5994:5460;;;;;;;;:::o;6835:283:52:-;6886:7;6956:9;6939:13;:26;:172;;-1:-1:-1;4342:182:46;;;7035:24:52;4342:182:46;;;;43429:25:62;;;;7073:10:52;43470:18:62;;;43463:34;7097:13:52;43513:18:62;;;43506:34;4466:13:46;43556:18:62;;;43549:34;4505:4:46;43599:19:62;;;;43592:84;;;;4342:182:46;;;;;;;;;;43401:19:62;;;;4342:182:46;;;4319:215;;;;;;28961:195:40:o;6939:172:52:-;-1:-1:-1;6980:17:52;;6835:283::o;22203:10528:45:-;22581:59;22593:10;:20;;;22615:10;:18;;;22635:4;22581:11;:59::i;:::-;;22860:34;:32;:34::i;:::-;22986:186;23066:31;;;;:10;:31;:::i;:::-;:38;;23118:10;:44;;;22986:66;:186::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23364:48:45;23415:193;;;;;;;;23449:9;23415:193;;;;;;;;:::i;:::-;;;;;23472:16;23415:193;;;;;;;;:::i;:::-;;;;;23502:28;23415:193;;;;;;;;:::i;:::-;;;;;23544:25;-1:-1:-1;;;;;23415:193:45;;;;;23583:15;23415:193;;;;;;;;:::i;:::-;;;23364:244;-1:-1:-1;23689:35:45;23759:31;;;;:10;:31;:::i;:::-;:42;;-1:-1:-1;23800:1:45;23759:42;:::i;:::-;23727:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23727:84:45;;-1:-1:-1;;23727:84:45;;;;;;;;;;;-1:-1:-1;23935:28:45;23917:46;;24090:345;;;;;;;;;24129:37;;;;23689:122;;-1:-1:-1;23917:15:45;;24090:345;;;;;;;;;;:::i;:::-;;;;;;;;24188:29;;;;:10;:29;:::i;:::-;-1:-1:-1;;;;;24090:345:45;;;;;24239:10;:34;;;24090:345;;;;24295:10;:30;;;24090:345;;;;24347:10;:30;;;24090:345;;;;24399:10;:18;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24090:345:45;;;24020:429;-1:-1:-1;24579:48:45;:44;;;;24626:1;24579:48;:::i;:::-;24548:93;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24548:93:45;-1:-1:-1;24519:26:45;;;;:122;;;;24777:15;;24814:33;;24869:30;;;;;24921:45;;;;;24988:36;;;;25046:34;;;;25102;;;;24745:409;;;;24869:30;;24988:36;;25046:34;;24745:409;;:::i;:::-;;;;;;;;;;;;;24718:450;;;;;;24686:6;:26;;;24713:1;24686:29;;;;;;;;:::i;:::-;;;;;;:482;;;;;25284:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25284:42:45;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25440:39:45;25482:296;;;;;;;;25512:20;:37;;;25482:296;;;;;;;;:::i;:::-;;;;;25567:24;:30;;;-1:-1:-1;;;;;25482:296:45;;;;;25615:24;:45;;;25482:296;;;;25678:24;:34;;;25482:296;;;;25730:24;:34;;;-1:-1:-1;;;;;25482:296:45;;;;25440:338;;25901:19;25882:13;25896:1;25882:16;;;;;;;;:::i;:::-;;;;;;:38;;;;26152:22;26130:2431;26213:31;;;;:10;:31;:::i;:::-;:38;;26196:14;:55;26130:2431;;;26371:46;26442:10;:31;;;;;;;;:::i;:::-;26474:14;26442:47;;;;;;;:::i;:::-;;;;;;26371:136;;;;;;;;;;:::i;:::-;;;26625:291;;;;;;;;26659:20;:49;;;26625:291;;;;;;;;:::i;:::-;;;;;26730:20;:46;;;-1:-1:-1;;;;;26625:291:45;;;;;26798:1;26625:291;;;;26821:19;:26;;;26625:291;;;;26869:19;:29;;;-1:-1:-1;;;;;26625:291:45;;;;26600:316;;27076:22;27040:13;27054:14;27071:1;27054:18;;;;:::i;:::-;27040:33;;;;;;;;:::i;:::-;;;;;;:58;;;;27279:10;:44;;;27241:14;:82;27216:175;;27364:8;;;27216:175;27536:344;;;;;;;;27575:20;:49;;;27536:344;;;;;;;;:::i;:::-;;;;;27646:20;:46;;;-1:-1:-1;;;;;27536:344:45;;;;;27714:1;27536:344;;;;27737:19;:26;;;27536:344;;;;27785:19;:26;;;27536:344;;;;27833:19;:29;;;-1:-1:-1;;;;;27536:344:45;;;;27510:370;;28129:6;:15;;;28170:23;:32;;;28228:23;:29;;;28283:23;:44;;;28353:23;:35;;;28414:23;:33;;;28473:23;:33;;;28093:435;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;28062:484;;;;;;28013:6;:26;;;28040:14;28057:1;28040:18;;;;:::i;:::-;28013:46;;;;;;;;:::i;:::-;;;;;;:533;;;;;26300:2261;26130:2431;26269:16;;;:::i;:::-;;;26130:2431;;;;28981:6;:26;;;28964:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;28937:85;;28964:44;28937:85;;;;28910:24;;;:112;29147:65;;;;29100:1017;29247:31;;;;:10;:31;:::i;:::-;:38;;29230:14;:55;29100:1017;;;29405:46;29476:10;:31;;;;;;;;:::i;:::-;29508:14;29476:47;;;;;;;:::i;:::-;;;;;;29405:136;;;;;;;;;;:::i;:::-;;;29629:291;;;;;;;;29663:20;:49;;;29629:291;;;;;;;;:::i;:::-;;;;;29734:20;:46;;;-1:-1:-1;;;;;29629:291:45;;;;;29802:1;29629:291;;;;29825:19;:26;;;29629:291;;;;29873:19;:29;;;-1:-1:-1;;;;;29629:291:45;;;;29604:316;;30080:22;30044:13;30058:14;30075:1;30058:18;;;;:::i;:::-;30044:33;;;;;;;;:::i;:::-;;;;;;:58;;;;29334:783;29303:16;;;;:::i;:::-;;;29100:1017;;;-1:-1:-1;30238:24:45;;-1:-1:-1;30281:1:45;;-1:-1:-1;30265:18:45;;-1:-1:-1;;30265:18:45;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30265:18:45;;-1:-1:-1;;30265:18:45;;;;;;;;;;;;30238:45;;30381:20;30363:6;:15;;:38;;;;;30450:26;30479:200;;;;;;;;30506:20;:36;;;30479:200;;;;;;;;:::i;:::-;;;;;30560:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30479:200:45;;;;;30599:10;:26;;;30479:200;;;;30643:10;:22;;;30479:200;;;30450:229;;30762:9;30751:5;30757:1;30751:8;;;;;;;;:::i;:::-;;;;;;:20;;;;30859:33;:478;;;;;;;;30980:6;:15;;;31021:9;:18;;;31065:9;:15;;;31106:9;:20;;;31152:9;:16;;;31267:9;:16;;;30944:361;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30913:410;;;;;;30859:478;;;;;31464:15;31447:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;31420:74;;31447:33;31420:74;;;;;;;31396:21;;;:98;-1:-1:-1;;31711:15:45;31693:33;;31798:114;31396:6;31850:10;31878:20;31798:10;:114::i;:::-;31779:16;;;:133;32109:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32007:213:45;32073:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32007:213:45;;32039:6;:16;;;32142:10;32170:5;32193:13;32007:213;;;;;;;;;:::i;:::-;;;;;;;;32319:192;32368:6;:16;;;32398:10;:19;;;32431:9;32454:10;:18;;;;;;;;;;:::i;:::-;32486:10;:15;;;;;;;;;;:::i;:::-;32319:35;:192::i;:::-;32632:16;;;;32584:140;;32662:18;;;;;;;;:::i;:::-;32694:20;;;;:10;:20;:::i;:::-;32584:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32584:34:45;;-1:-1:-1;;;32584:140:45:i;:::-;22490:10241;;;;22203:10528;;;;;;:::o;8205:1122:50:-;8517:65;8552:17;8571:10;8517:34;:65::i;:::-;8644:24;8640:681;;8758:6;8768:1;8758:11;8754:86;;8796:29;;;;;;;;;;;;;;8754:86;8919:51;8942:5;8949:4;8955:2;8959:10;8919:22;:51::i;:::-;8640:681;;;9069:241;9094:10;9122:17;9157:22;9197:5;9220:4;9242:2;9262:10;9290:6;9069:7;:241::i;:::-;8205:1122;;;;;;;:::o;33159:1696:45:-;33380:9;33355:22;33451:896;33475:31;;;;:10;:31;:::i;:::-;:38;;33471:1;:42;33451:896;;;33584:48;33653:31;;;;:10;:31;:::i;:::-;33685:1;33653:34;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;33830:26:45;;33933:42;;;33929:115;;;34002:27;;;;;;;;;;;;;;33929:115;34117:116;34147:29;;;;;;;;:::i;:::-;34194:25;34117:12;:116::i;:::-;34293:43;34311:25;34293:43;;:::i;:::-;;;33520:827;;33515:3;;;;:::i;:::-;;;33451:896;;;;34430:14;34421:6;:23;34417:88;;;34467:27;;;;;;;;;;;;;;34417:88;34557:40;34570:18;;;;;;;;:::i;:::-;34590:6;34557:12;:40::i;:::-;34703:6;34686:14;:23;34682:167;;;34780:58;34801:10;34814:23;34831:6;34814:14;:23;:::i;:::-;34780:12;:58::i;:::-;33281:1574;33159:1696;;:::o;10423:1058:50:-;10727:28;10748:6;10727:20;:28::i;:::-;10831:65;10866:17;10885:10;10831:34;:65::i;:::-;10958:24;10954:521;;11063:60;11087:5;11094:4;11100:2;11104:10;11116:6;11063:23;:60::i;10954:521::-;11222:242;11247:10;11275:17;11310:23;11351:5;11374:4;11396:2;11416:10;11444:6;11222:7;:242::i;35711:1600:45:-;36050:18;36082:11;36078:157;;;-1:-1:-1;36122:28:45;;;;36078:157;;;-1:-1:-1;36194:30:45;;;;36078:157;36301:9;36296:760;36320:31;;;;:10;:31;:::i;:::-;:38;;36316:1;:42;36296:760;;;36429:48;36498:31;;;;:10;:31;:::i;:::-;36530:1;36498:34;;;;;;;:::i;:::-;;;;;;36429:117;;36640:11;36636:86;;;36671:36;36681:26;;36671:36;;:::i;:::-;;;36636:86;36813:232;36845:10;36873:4;36895:29;;;;;;;;:::i;:::-;36942:26;;36986:10;37014:17;36813:14;:232::i;:::-;-1:-1:-1;36360:3:45;;;:::i;:::-;;;36296:760;;;;37147:157;37175:10;37199:4;37217:2;37233:6;37253:10;37277:17;37147:14;:157::i;:::-;35983:1328;35711:1600;;;;;;;:::o;12975:304:50:-;13130:27;;;;:34;13126:76;;12975:304;:::o;13126:76::-;13245:27;13254:17;13245:8;:27::i;:::-;12975:304;:::o;3360:777:43:-;3490:16;3608:11;3595:9;:24;3591:67;;;-1:-1:-1;3642:5:43;3635:12;;3591:67;3746:27;3776:17;3784:9;3776:5;:17;:::i;:::-;3746:47;-1:-1:-1;3885:33:43;3907:11;3746:47;3885:33;:::i;:::-;3874:44;-1:-1:-1;4000:10:43;4055:5;4041:9;4015:22;4026:11;3874:44;4015:22;:::i;:::-;4014:36;;;;:::i;:::-;4013:47;4000:60;;4075:5;4070:61;;4103:17;;;;;;;;;;;;;;4070:61;3508:629;;3360:777;;;;;:::o;1324:1514::-;1513:7;1627:9;1612:11;:24;1608:1158;;1733:20;;1867:19;1877:9;1867:7;:19;:::i;:::-;1848:38;-1:-1:-1;1978:15:43;1996:27;2014:9;1996:15;:27;:::i;:::-;1978:45;-1:-1:-1;2115:17:43;2135:18;1978:45;2135:8;:18;:::i;:::-;2115:38;;2253:7;2249:73;;;2295:12;2306:1;2295:8;:12;:::i;:::-;2280:27;;2249:73;2412:27;2527:12;2488:19;2500:7;2488:9;:19;:::i;:::-;2444:23;2458:9;2444:11;:23;:::i;:::-;2443:65;;;;:::i;:::-;:96;;;;:::i;:::-;2412:128;-1:-1:-1;2632:17:43;2652:30;2674:8;2412:128;2652:30;:::i;:::-;2632:50;-1:-1:-1;2739:16:43;;-1:-1:-1;;;;;;2739:16:43;1608:1158;-1:-1:-1;2822:9:43;;1324:1514;-1:-1:-1;;;;1324:1514:43:o;1690:6051:49:-;1950:24;;1930:17;2033:4091;2057:9;2053:1;:13;2033:4091;;;2134:40;2178:17;2196:1;2178:20;;;;;;;;:::i;:::-;;;;;;;2134:65;;2289:18;2310:16;:27;;;2289:48;;2426:15;:22;2412:10;:36;2408:115;;2475:33;;;;;;;;;;;;;;2408:115;2609:15;2625:10;2609:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;2650:1;2609:42;2605:89;;;2671:8;;;;2605:89;2808:22;;;;2783;;;3050:16;:21;;;:35;;;;;;;;:::i;:::-;;3046:2472;;;3105:29;3137:15;3153:10;3137:27;;;;;;;;:::i;:::-;;;;;;;:59;;;3105:91;;3300:10;:17;3282:14;:35;3278:122;;3348:33;;;;;;;;;;;;;;3278:122;3483:22;3509:10;3520:14;3509:26;;;;;;;;:::i;:::-;;;;;;;;;;;3643:14;;3698:16;;;;3643:14;;-1:-1:-1;3698:16:49;-1:-1:-1;3509:26:49;-1:-1:-1;3826:29:49;3814:8;:41;;;;;;;;:::i;:::-;;3810:200;;;3896:15;3879:32;;3810:200;;;3975:16;3958:33;;3810:200;4123:27;;;;4104:16;;;;:46;-1:-1:-1;3046:2472:49;;;4326:35;4364:15;4401:10;4364:65;;;;;;;;:::i;:::-;;;;;;;:79;;;4326:117;;4548:13;:20;4530:14;:38;4526:133;;4599:41;;;;;;;;;;;;;;4526:133;4742:33;4800:13;4814:14;4800:29;;;;;;;;:::i;:::-;;;;;;;;;;;4954:22;;5017:24;;;;4954:22;;-1:-1:-1;5017:24:49;-1:-1:-1;4800:29:49;-1:-1:-1;5153:29:49;5141:8;:41;;;;;;;;:::i;:::-;;5137:216;;;5231:15;5206:40;;5137:216;;;5318:16;5293:41;;5137:216;5475:27;;;;5447:24;;;;:56;-1:-1:-1;3046:2472:49;5609:29;5629:8;5609:19;:29::i;:::-;5604:103;;5665:27;;;;;;;;;;;;;;5604:103;5795:34;;5791:323;;5926:173;5960:16;:27;;;6009:20;6051:16;:30;;;5926:12;:173::i;:::-;2073:4051;;;;;2033:4091;2068:3;;;:::i;:::-;;;2033:4091;;;-1:-1:-1;;6209:22:49;;6294:9;6289:1446;6313:9;6309:1;:13;6289:1446;;;6389:36;6428:15;6444:1;6428:18;;;;;;;;:::i;:::-;;;;;;;6389:57;;6526:18;6547:14;:25;;;:32;6526:53;;6666:14;:24;;;:29;;6694:1;6666:29;6662:76;;;6715:8;;;;6662:76;6815:9;6810:320;6834:10;6830:1;:14;6810:320;;;6966:58;6986:14;:25;;;7012:1;6986:28;;;;;;;;:::i;6966:58::-;6941:175;;;7072:25;;;;;;;;;;;;;;6941:175;6846:3;;;:::i;:::-;;;6810:320;;;-1:-1:-1;;7231:28:49;;;;:35;7353:9;7348:377;7372:10;7368:1;:14;7348:377;;;7504:107;7549:14;:28;;;7578:1;7549:31;;;;;;;;:::i;7504:107::-;7479:232;;;7659:33;;;;;;;;;;;;;;7479:232;7384:3;;;:::i;:::-;;;7348:377;;;;6329:1406;;6289:1446;6324:3;;;:::i;:::-;;;6289:1446;;1905:3422:51;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2265:27:51;;;:66;;-1:-1:-1;2296:35:51;;2265:66;2248:170;;;2363:44;;;;;;;;;;;;;;2248:170;2655:37;2709:151;2771:15;2804:23;;2709:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2845:1;2709:44;:151::i;:::-;2655:215;;3228:153;3278:15;3307;;3228:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3336:1;3359;3228:36;:153::i;:::-;3515:26;;2959:422;;-1:-1:-1;3488:53:51;;;;;;;;:::i;:::-;:14;;:23;:53;;;;;;;;:::i;:::-;;;:116;;;;3581:17;:23;;;-1:-1:-1;;;;;3557:47:51;:9;:14;;;:20;;;-1:-1:-1;;;;;3557:47:51;;;3488:116;:189;;;;3649:17;:28;;;3620:9;:14;;;:25;;;:57;;3488:189;3471:303;;;3709:54;;;;;;;;;;;;;;3471:303;3884:9;:14;;;:21;;;3857:17;:24;;;:48;3853:1108;;;4001:43;4065:23;;4089:1;4065:26;;;;;;;:::i;:::-;;;;;;4001:104;;;;;;;;;;:::i;:::-;;;4356:9;:14;;;:21;;;4329:17;:24;;;:48;;;;:::i;:::-;4201:15;4217;:26;;;4201:43;;;;;;;;:::i;:::-;;;;;;;:74;;;4276:15;:25;;;4201:101;;;;;;;;:::i;:::-;;;;;;;;;;;:125;;;;:176;;;;4495:14;;:21;;;4468:24;;;:48;-1:-1:-1;3853:1108:51;;;4619:43;4666:15;;4682:1;4666:18;;;;;;;:::i;:::-;;;;;;4619:66;;;;;;;;;;:::i;:::-;;;4926:17;:24;;;4902:9;:14;;;:21;;;:48;;;;:::i;:::-;4777:15;4793;:26;;;4777:43;;;;;;;;:::i;:::-;;;;;;;:71;;;4849:15;:25;;;4777:98;;;;;;;;:::i;:::-;;;;;;;:122;;:173;;;;;4533:428;3853:1108;5070:24;;;;;5046:14;;:21;;;:48;5131:27;;;;;5104:14;;-1:-1:-1;;;;;5104:54:51;;;:24;;:54;1905:3422;;;;;;;:::o;27217:3403:53:-;27517:22;;27374:29;;27517:22;27627:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27627:23:53;;27609:41;;27734:9;27729:1311;27753:11;27749:1;:15;27729:1311;;;27832:36;27871:15;27887:1;27871:18;;;;;;;;:::i;:::-;;;;;;;27832:57;;27982:14;:24;;;:29;;28010:1;27982:29;27978:304;;;28259:8;;;27978:304;28361:4;28340:15;28356:1;28340:18;;;;;;;;:::i;:::-;:25;;;:18;;;;;;;;;;;:25;28510:28;;;;28454:35;28640:390;28664:13;:20;28660:1;:24;28640:390;;;28781:19;28803:13;28817:1;28803:16;;;;;;;;:::i;:::-;;;;;;;:23;;;28781:45;;28912:11;28927:1;28912:16;28908:108;;28959:38;;;;;;;;46963:25:62;;;47004:18;;;46997:34;;;47047:18;;;47040:34;;;46936:18;;28959:38:53;46761:319:62;28908:108:53;-1:-1:-1;28686:3:53;;;:::i;:::-;;;28640:390;;;;27771:1269;;27729:1311;27766:3;;;:::i;:::-;;;27729:1311;;;-1:-1:-1;;;;;;;;;;29114:22:53;-1:-1:-1;;;;;;;29139:9:53;;29299;29294:919;29318:10;:17;29314:1;:21;29294:919;;;29428:26;29457:10;29468:1;29457:13;;;;;;;;:::i;:::-;;;;;;;;;;;29511:14;;29457:13;;-1:-1:-1;29484:24:53;29621:13;;:32;;;;;;;;:::i;:::-;;29617:357;;;29768:14;29754:4;:11;;;:28;29750:109;;;29813:27;;;;;;;;;;;;;;29750:109;29948:11;;;;29930:29;;;;:::i;:::-;;;29617:357;30049:153;30076:4;30098:9;:17;;;30133:9;:20;;;30171:17;30049:9;:153::i;:::-;29342:871;;29337:3;;;;:::i;:::-;;;29294:919;;;;30303:34;30319:17;30303:15;:34::i;:::-;30429:19;;30425:99;;30464:49;30485:10;30498:14;30464:12;:49::i;:::-;30591:22;;;27217:3403;;;;:::o;6528:3012:51:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6903:22:51;;7049:28;;7164:31;7160:115;;7259:4;7218:46;;;;;;;;;;;:::i;7160:115::-;7362:26;7485:9;7480:685;7504:26;7500:1;:30;7480:685;;;7608:18;7629:21;7651:1;7629:24;;;;;;;;:::i;:::-;;;;;;;:35;;;7608:56;;7753:11;7739:10;:25;7735:104;;7791:33;;;;;;;;;;;;;;7735:104;7932:15;7948:10;7932:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;7973:1;7932:42;7928:227;;8077:5;:1;8081;8077:5;:::i;:::-;8056:26;;8135:5;;;7928:227;-1:-1:-1;7532:3:51;;;:::i;:::-;;;7480:685;;;-1:-1:-1;8227:23:51;8223:452;;-1:-1:-1;;8381:283:51;;;8408:186;;;;;-1:-1:-1;8381:283:51;;;8408:186;;;;;;;;;;;;;;;;;;;;;;;;;;;8381:283;;8408:186;8381:283;;;;;;;;;;;;;-1:-1:-1;8374:290:51;;-1:-1:-1;8374:290:51;8223:452;8762:10;8754:4;:18;;;;;;;;:::i;:::-;;8750:784;;;8900:189;8954:15;8987:21;9026:22;9047:1;9026:18;:22;:::i;:::-;9066:9;8900:36;:189::i;:::-;8893:196;;;;;;;8750:784;9332:191;9378:15;9411:21;9450:22;9471:1;9450:18;:22;:::i;:::-;9490:19;9332:28;:191::i;2899:425:44:-;3219:30;3186;:63;3182:136;;;3272:35;;;;;;;;;;;;;;3182:136;2899:425;;:::o;1213:1652:57:-;1407:9;;;-1:-1:-1;;;;;1467:18:57;;;:22;1463:1015;;1576:55;1605:6;1613;1621:9;1576:28;:55::i;1463:1015::-;1744:9;:16;1764:2;1744:22;1740:738;;;1940:10;1986:9;1975:41;;;;;;;;;;;;:::i;:::-;1965:51;;-1:-1:-1;11492:66:23;2035:33:57;;;-1:-1:-1;1965:51:57;-1:-1:-1;2087:30:57;2107:3;2101:9;;;2115:2;2087:30;:::i;:::-;2083:34;;1768:360;1740:738;;;2138:9;:16;2158:2;2138:22;2134:344;;;2196:9;2185:41;;;;;;;;;;;;:::i;:::-;2250:13;;2176:50;;-1:-1:-1;2176:50:57;-1:-1:-1;2250:9:57;;2260:2;;2250:13;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2341:2:57;2336:7;;;;;:18;;;2347:1;:7;;2352:2;2347:7;;2336:18;2332:80;;;2381:16;;;;;47257:4:62;47245:17;;2381:16:57;;;47227:36:62;47200:18;;2381:16:57;47085:184:62;2332:80:57;2134:344;;;2449:18;;;;;;;;;;;;;;2134:344;2594:26;;;2568:23;2594:26;;;;;;;;;45561:25:62;;;45634:4;45622:17;;45602:18;;;45595:45;;;;45656:18;;;45649:34;;;45699:18;;;45692:34;;;2594:26:57;;45533:19:62;;2594:26:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2594:26:57;;;;;;-1:-1:-1;;;;;;;2672:29:57;;;;:58;;;2724:6;-1:-1:-1;;;;;2705:25:57;:15;-1:-1:-1;;;;;2705:25:57;;;2672:58;2668:191;;;2753:15;;;;;;;;;;;;;;1441:627:59;1573:10;1690:15;1678:9;:27;:57;;;;1720:15;1709:7;:26;;1678:57;1674:314;;;1828:15;1824:74;;;1870:13;;;;;;;;;;;;;;1824:74;-1:-1:-1;1972:5:59;1965:12;;1674:314;-1:-1:-1;2057:4:59;1441:627;;;;;:::o;17870:266:55:-;17975:16;18110:9;18102:18;;;;;;;;:::i;:::-;18123:1;18102:22;:27;;17870:266;-1:-1:-1;;17870:266:55:o;3440:1624:60:-;3905:1;3892:9;3884:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;3922:10:60;-1:-1:-1;;;;;3922:18:60;;;;3884:56;:93;;;;-1:-1:-1;3956:10:60;-1:-1:-1;;;;;3956:21:60;;;;3884:93;3867:1191;;;4092:23;;;;:30;:35;:84;;;;-1:-1:-1;4147:24:60;;:29;4092:84;4071:977;;;4234:192;;4430:35;4234:192;;;;;;37395:25:62;;;4327:10:60;37497:18:62;;;37490:43;-1:-1:-1;;;;;37569:15:62;;;37549:18;;;37542:43;37601:18;;;37594:34;;;4430:35:60;;4234:32;;;;4430:35;;37367:19:62;;4234:192:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:231;;;4209:356;;4513:33;;;;;;;;35689:25:62;;;35662:18;;4513:33:60;35543:177:62;4209:356:60;4071:977;;;4628:267;;;;;4899:35;;-1:-1:-1;;;;;4628:50:60;;;;;:267;;4704:9;;4739:10;;4775:13;;4814:16;;4856:17;;4628:267;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:306;;;4603:431;;4982:33;;;;;;;;35689:25:62;;;35662:18;;4982:33:60;35543:177:62;11006:282:55;11107:29;11152:94;11159:5;;11152:94;;11192:1;11211:5;11192:1;11211;:5;:::i;:::-;11234:1;;-1:-1:-1;11207:9:55;-1:-1:-1;11152:94:55;;;-1:-1:-1;11280:1:55;;11006:282;-1:-1:-1;11006:282:55:o;14429:264:49:-;14524:17;14685:1;14673:8;14665:17;;;;;;;;:::i;:::-;:21;;14429:264;-1:-1:-1;;14429:264:49:o;15027:1180::-;15226:20;15276:4;15259:22;;;;;;29699:19:62;;29743:2;29734:12;;29570:182;15259:22:49;;;;;;;;;;;;;15249:33;;;;;;15226:56;;15342:9;15337:700;15361:5;:12;15357:1;:16;15337:700;;;15437:20;15460:5;15466:1;15460:8;;;;;;;;:::i;:::-;;;;;;;15437:31;;15577:12;15561;:28;15557:470;;15729:44;;;;;;28589:19:62;;;28624:12;;;28617:28;;;28661:12;;15729:44:49;;;;;;;;;;;;15698:93;;;;;;15683:108;;15557:470;;;15950:44;;;;;;28589:19:62;;;28624:12;;;28617:28;;;28661:12;;15950:44:49;;;;;;;;;;;;15919:93;;;;;;15904:108;;15557:470;-1:-1:-1;15375:3:49;;;:::i;:::-;;;15337:700;;;-1:-1:-1;16124:29:49;;;16120:81;;16176:14;;;;;;;;;;;;;;4735:1076:43;4908:14;5029:9;5014:11;:24;5010:795;;;5063:135;5093:12;:22;;;5133:12;:24;;;5175:9;5063:12;:135::i;:::-;5054:144;;5010:795;;;5317:477;5355:153;5389:12;:22;;;5433:12;:24;;;5479:11;5355:12;:153::i;:::-;5526:151;5560:12;:22;;;5604:12;:24;;;5650:9;5526:12;:151::i;:::-;5695:12;:22;;;5735:12;:20;;;5773:7;5317:20;:477::i;2443:1848:50:-;2712:15;2695:13;;:32;;;;;;;;:::i;:::-;;2691:1594;;;2849:15;;;;2835:10;;;;-1:-1:-1;;;;;2827:37:50;;2826:44;2822:112;;2897:22;;;;;;;;;;;;;;2822:112;3008:41;3021:4;:14;;;3037:4;:11;;;3008:12;:41::i;:::-;2691:1594;;;3087:14;3070:13;;:31;;;;;;;;:::i;:::-;;3066:1219;;;3175:15;;;;:20;3171:88;;3222:22;;;;;;;;;;;;;;3171:88;3345:205;3377:4;:10;;;3405:7;3430:4;:14;;;3462:4;:11;;;3491:10;3519:17;3345:14;:205::i;3066:1219::-;3588:15;3571:13;;:32;;;;;;;;:::i;:::-;;3567:718;;;3691:239;3724:4;:10;;;3752:7;3777:4;:14;;;3809:4;:15;;;3842:4;:11;;;3871:10;3899:17;3691:15;:239::i;3567:718::-;4034:240;4068:4;:10;;;4096:7;4121:4;:14;;;4153:4;:15;;;4186:4;:11;;;4215:10;4243:17;4034:16;:240::i;4522:486::-;4655:28;4676:6;4655:20;:28::i;:::-;4776:12;4794:2;-1:-1:-1;;;;;4794:7:50;4810:6;4794:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:47;;;4870:7;4865:137;;4952:39;;;;;-1:-1:-1;;;;;30188:55:62;;4952:39:50;;;30170:74:62;30260:18;;;30253:34;;;30143:18;;4952:39:50;29988:305:62;4142:920:44;4568:17;4600:14;4611:2;4609:1;4600:8;4568:17;4600:14;:::i;:::-;4589:37;;;;;;;:::i;:::-;4630:2;4589:43;:106;;;;-1:-1:-1;4659:17:44;4672:3;4668;4659:8;;:17;:::i;:::-;4648:40;;;;;;;:::i;:::-;4692:3;4648:47;4589:106;:229;;;;-1:-1:-1;4789:17:44;4802:3;4798;4789:8;;:17;:::i;:::-;4778:40;;;;;;;:::i;:::-;4773:45;;:2;:45;:::i;:::-;4767:51;;:3;:51;:::i;:::-;4722:17;4735:3;4731;4722:8;;:17;:::i;:::-;4711:40;;;;;;;:::i;:::-;:107;4589:229;4588:292;;;;-1:-1:-1;4878:2:44;4846:17;4859:3;4855;4846:8;;:17;:::i;:::-;4835:40;;;;;;;:::i;:::-;:45;4588:292;4568:312;;4974:12;4969:87;;5009:36;;;;;;;;;;;;;;20239:943:45;20442:17;;20568:31;20580:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1720:18:48;1609:22;1720:18;;;:9;:18;;;;;;;1524:221;20568:31:45;20723:15;;20550:49;;-1:-1:-1;20756:18:45;;;;;;;;:::i;:::-;20792:15;;;;;;;;:::i;:::-;20825:6;:21;;;20864:6;:24;;;20906:20;:30;;;20954:10;:20;;;20992:10;:18;;;21028:10;:19;;;21065:10;:15;;;21098:10;:28;;;21144:7;20695:470;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20672:503;;;;;;20660:515;;20461:721;20239:943;;;;;:::o;1261:755:60:-;1583:1;1570:9;1562:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;1600:10:60;-1:-1:-1;;;;;1600:18:60;;;;1562:56;:93;;;;-1:-1:-1;1634:10:60;-1:-1:-1;;;;;1634:21:60;;;;1562:93;1545:465;;;1701:172;;1877:35;1701:172;;;;;;37395:25:62;;;1786:10:60;37497:18:62;;;37490:43;-1:-1:-1;;;;;37569:15:62;;;37549:18;;;37542:43;37601:18;;;37594:34;;;1877:35:60;;1701:32;;;;1877:35;;37367:19:62;;1701:172:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:211;;;1680:320;;1952:33;;;;;;;;35689:25:62;;;35662:18;;1952:33:60;35543:177:62;1680:320:60;1261:755;;;;;:::o;1618:985:55:-;1834:31;1868:23;;;:12;:23;;;;;1960:218;1881:9;1868:23;2040:4;;1960:18;:218::i;:::-;-1:-1:-1;2275:23:55;;;;2270:102;;2314:47;2331:7;2340:9;2351;2314:16;:47::i;:::-;2569:27;;;-1:-1:-1;;;1618:985:55:o;12278:342:50:-;12511:28;;:42;;12507:107;;12569:34;12585:17;12569:15;:34::i;2241:301:58:-;-1:-1:-1;;;;;2395:17:58;;;2391:77;;2440:17;;;;;-1:-1:-1;;;;;29921:55:62;;2440:17:58;;;29903:74:62;29876:18;;2440:17:58;29757:226:62;2391:77:58;2478:57;;;;;-1:-1:-1;;;;;31627:15:62;;;2478:57:58;;;31609:34:62;31679:15;;;31659:18;;;31652:43;31711:18;;;31704:34;;;2478:35:58;;;;;31521:18:62;;2478:57:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15142:1805:50;15694:27;;;;:34;15662:29;15875:25;15694:34;15899:1;15875:25;:::i;:::-;15853:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15853:48:50;;-1:-1:-1;;15853:48:50;;;;;;;;;;;;15799:112;;15973:9;15968:514;15992:21;15988:1;:25;15968:514;;;16071:34;16108:17;:27;;;16136:1;16108:30;;;;;;;;:::i;:::-;;;;;;;16071:67;;16227:244;;;;;;;;16260:11;:20;;;16227:244;;;;;;;;:::i;:::-;;;;;16298:11;:17;;;-1:-1:-1;;;;;16227:244:50;;;;;16333:11;:16;;;-1:-1:-1;;;;;16227:244:50;;;;;16367:11;:14;;;-1:-1:-1;;;;;16227:244:50;;;;;16399:11;:22;;;16227:244;;;;16439:11;:18;;;16227:244;;;16209:12;16222:1;16209:15;;;;;;;;:::i;:::-;;;;;;:262;;;;16020:462;16015:3;;;;:::i;:::-;;;15968:514;;;;16573:144;;;;;;;;16602:8;16573:144;;;;;;;;:::i;:::-;;;;;16624:5;-1:-1:-1;;;;;16573:144:50;;;;;16643:4;-1:-1:-1;;;;;16573:144:50;;;;;16661:2;-1:-1:-1;;;;;16573:144:50;;;;;16677:10;16573:144;;;;16701:6;16573:144;;;16535:12;16548:21;16535:35;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;;;16790:27;;:42;-1:-1:-1;;;16899:41:50;;;;-1:-1:-1;;;;15142:1805:50:o;3490:144:44:-;3564:11;3560:68;;3598:19;;;;;;;;;;;;;;3166:413:58;-1:-1:-1;;;;;3345:17:58;;;3341:77;;3390:17;;;;;-1:-1:-1;;;;;29921:55:62;;3390:17:58;;;29903:74:62;29876:18;;3390:17:58;29757:226:62;3341:77:58;3428:144;;;;;-1:-1:-1;;;;;32123:15:62;;;3428:144:58;;;32105:34:62;32175:15;;;32155:18;;;32148:43;32207:18;;;32200:34;;;32250:18;;;32243:34;;;32314:3;32293:19;;;32286:32;-1:-1:-1;32334:19:62;;;32327:30;3428:40:58;;;;;32374:19:62;;3428:144:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:413;;;;;:::o;6044:999:50:-;6318:28;6339:6;6318:20;:28::i;:::-;6422:65;6457:17;6476:10;6422:34;:65::i;:::-;6549:24;6545:492;;6641:46;6663:5;6670:4;6676:2;6680:6;6641:21;:46::i;:::-;6545:492;;;6786:240;6811:10;6839:17;6874:21;6913:5;6936:4;6958:2;6986:1;7006:6;6786:7;:240::i;13676:388::-;13850:28;;13838:41;;:11;:41::i;:::-;-1:-1:-1;;;;;13821:67:50;;13902:17;:27;;;13821:118;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14023:34:50;14030:27;;;;14023:34;13676:388::o;19481:5182:51:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19931:23:51;19955:10;19931:35;;;;;;;;:::i;:::-;;;;;;;;;;;:59;19899:91;;20031:35;;:23;;20055:10;;20031:35;;;;;;:::i;:::-;;;;;;;;;;;;:58;;;20000:28;;;:89;20234:22;;20188:42;;:68;;20147:37;;;:110;;;20268:4194;;20383:36;20422:15;20455:18;:29;;;20422:76;;;;;;;;:::i;:::-;;;;;;;20383:115;;20631:18;:37;;;:146;;;;20741:14;:28;;;:35;20689:18;:28;;;:87;;20631:146;20575:202;;:37;;;:202;;;20791:3661;;20913:33;20949:14;:49;;;20999:18;:28;;;20949:79;;;;;;;;:::i;:::-;;;;;;;20913:115;;21107:248;;;;;;;;21141:13;:22;;;21107:248;;;;;;;;:::i;:::-;;;;;21185:13;:19;;;-1:-1:-1;;;;;21107:248:51;;;;;21226:13;:24;;;21107:248;;;;21272:13;:20;;;21107:248;;;;21314:13;:23;;;-1:-1:-1;;;;;21107:248:51;;;;21092:263;;21478:1;21455:13;:20;;:24;;;;;21636:9;21648:10;21661:1;21648:14;;;;:::i;:::-;21636:26;;21610:2828;21688:23;:30;21684:1;:34;21610:2828;;;21929:23;21953:1;21929:26;;;;;;;;:::i;:::-;;;;;;;;;;;:62;21897:94;;22044:26;;:23;;22068:1;;22044:26;;;;;;:::i;:::-;;;;;;;;;;;;:61;;;22013:28;;;:92;22298:22;;22265:29;;:55;;;22201:37;;;:119;22382:97;;22451:5;;22382:97;22624:15;22665:18;:29;;;22624:92;;;;;;;;:::i;:::-;;;;;;;22607:109;;22800:14;:24;;;:29;;22828:1;22800:29;22796:1624;;23063:28;;;;;:35;23002:57;;;;:96;;;22932:66;;;:167;;;;23169:105;;23242:5;;23169:105;23383:14;:28;;;23441:18;:28;;;23383:112;;;;;;;;:::i;:::-;;;;;;;23367:128;;23678:13;:20;;;23628:12;:19;;;:70;;;;:::i;:::-;23578:19;;;;:120;;;;23872:1;23849:20;;;:24;24085:138;23849:13;23578:12;24085:27;:138::i;:::-;24016:207;;;:66;;;:207;24293:105;;24366:5;;24293:105;21740:3;;;:::i;:::-;;;21610:2828;;;;20835:3617;20791:3661;20312:4150;20268:4194;24553:18;:37;;;24549:108;;;24613:33;;;;;;;;;;;;;;24549:108;19738:4925;19481:5182;;;;;:::o;11217:4403::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11559:18:51;11580:15;11596:10;11580:27;;;;;;;;:::i;:::-;;;;;;;:38;;;11559:59;;11628:17;11648:15;11664:10;11648:27;;;;;;;;:::i;:::-;;;;;;;:37;;;11628:57;;11833:23;11874:15;:22;11860:10;:36;;11833:64;;11912:18;11907:3532;;12014:36;12053:15;12069:10;12053:27;;;;;;;;:::i;:::-;;;;;;;12014:66;;12194:18;:85;;;;12246:14;:25;;;:32;12233:9;:45;;12194:85;12157:122;;12299:18;12294:3135;;12417:22;12442:14;:25;;;12468:9;12442:36;;;;;;;;:::i;:::-;;;;;;;12417:61;;12550:375;;;;;;;;12581:235;;;;;;;;12619:5;:14;;;12581:235;;;;;;;;:::i;:::-;;;;;12659:5;:11;;;-1:-1:-1;;;;;12581:235:51;;;;;12696:5;:16;;;12581:235;;;;12738:5;:12;;;12581:235;;;;12784:9;-1:-1:-1;;;;;12581:235:51;;;;12550:375;;;;12838:14;:22;;;-1:-1:-1;;;;;12550:375:51;;;;;12882:14;:25;;;12550:375;;;12538:387;;13040:1;13025:5;:12;;:16;;;;;13163:9;13175:10;13188:1;13175:14;;;;:::i;:::-;13163:26;;13137:2278;13215:15;:22;13211:1;:26;13137:2278;;;13421:15;13437:1;13421:18;;;;;;;;:::i;:::-;;;;;;;:29;;;13408:42;;13484:15;13500:1;13484:18;;;;;;;;:::i;:::-;;;;;;;:28;;;13472:40;;13642:15;:22;13628:10;:36;;13607:57;;13730:18;13726:78;;;13776:5;;13726:78;13918:15;13934:10;13918:27;;;;;;;;:::i;:::-;;;;;;;13901:44;;13971:14;:24;;;:29;;13999:1;13971:29;13967:1430;;14166:25;;;;:32;14125:73;;;;;-1:-1:-1;14269:86:51;;14323:5;;14269:86;14503:14;:25;;;14529:9;14503:36;;;;;;;;:::i;:::-;;;;;;;14495:44;;14729:5;:12;;;14677:9;:14;;;:21;;;:64;;;;:::i;:::-;14625:14;;:21;;;;:116;;;;:14;14884:12;;;:16;15056:163;15105:14;14884:5;14625:9;15056:19;:163::i;:::-;15035:184;;15293:18;15289:86;;;15343:5;;15289:86;13259:3;;;:::i;:::-;;;13137:2278;;;;12319:3110;12294:3135;11932:3507;11907:3532;15529:18;15525:89;;;15570:33;;;;;;;;;;;;;;15525:89;11479:4141;;;11217:4403;;;;;;:::o;16812:870::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17284:168:51;17346:15;17379:23;17420:18;17284:44;:168::i;:::-;17561:114;;;;;;;;;;;17622:10;17561:114;;;;;;;;;;-1:-1:-1;17561:114:51;;16812:870;-1:-1:-1;;;;16812:870:51:o;3298:347:57:-;3463:60;;3539:42;3463:60;;;3539:42;-1:-1:-1;;;;;3463:41:57;;;3539:42;;3463:60;;3505:6;;3513:9;;3463:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:118;;;3446:193;;3613:15;;;;;;;;;;;;;;855:937:58;-1:-1:-1;;;;;1004:17:58;;;1000:77;;1049:17;;;;;-1:-1:-1;;;;;29921:55:62;;1049:17:58;;;29903:74:62;29876:18;;1049:17:58;29757:226:62;1000:77:58;1142:156;;;-1:-1:-1;;;;;31627:15:62;;;1142:156:58;;;31609:34:62;31679:15;;;31659:18;;;31652:43;31711:18;;;;31704:34;;;1142:156:58;;;;;;;;;;31521:18:62;;;;1142:156:58;;;;;;;;;1182:36;1142:156;;;1118:190;;-1:-1:-1;;;;1118:10:58;;;;:190;;1142:156;1118:190;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:221;;;;1391:2;1386:96;;1416:55;;;;;-1:-1:-1;;;;;30644:15:62;;;1416:55:58;;;30626:34:62;30696:15;;;30676:18;;;30669:43;30748:15;;30728:18;;;30721:43;1461:1:58;30780:18:62;;;30773:34;30823:19;;;30816:35;;;30537:19;;1416:55:58;30298:559:62;1386:96:58;1496:11;;:16;;;;:37;;;1531:2;1516:4;:11;:17;;1496:37;1492:294;;;1565:4;1554:24;;;;;;;;;;;;:::i;:::-;1549:227;;1605:156;;;;;-1:-1:-1;;;;;31172:15:62;;;1605:156:58;;;31154:34:62;31224:15;;;31204:18;;;31197:43;31276:15;;31256:18;;;31249:43;31308:18;;;31301:34;;;31065:19;;1605:156:58;30862:479:62;17513:483:50;17601:15;17710:26;17725:10;6251:239:52;;6297:12;6251:239;;;28109:92:62;28251:66;6347:19:52;28238:2:62;28234:15;28230:88;28217:11;;;28210:109;28335:12;;;28328:28;;;6437:27:52;28372:12:62;;;28365:28;6054:15:52;;28409:12:62;;6251:239:52;;;;;;;;;;;;;6216:296;;6251:239;6216:296;;;;;5963:598;-1:-1:-1;;5963:598:52;17710:26:50;17700:36;-1:-1:-1;;;;;;17830:19:50;;;17826:164;;17944:35;;;;;;;;35899:25:62;;;-1:-1:-1;;;;;35960:55:62;;35940:18;;;35933:83;35872:18;;17944:35:50;35725:297:62;17826:164:50;17513:483;;;:::o;18070:448:51:-;18221:23;18301:13;:23;;;-1:-1:-1;;;;;18275:49:51;:12;:22;;;-1:-1:-1;;;;;18275:49:51;;;:112;;;-1:-1:-1;18365:22:51;;18340:47;;;;;;;;:::i;:::-;:21;;:47;;;;;;;;:::i;:::-;;;18275:112;:169;;;;18425:13;:19;;;-1:-1:-1;;;;;18403:41:51;:12;:18;;;-1:-1:-1;;;;;18403:41:51;;;18275:169;:236;;;-1:-1:-1;;18487:24:51;;;;;18460:23;;;:51;;;18070:448::o;9949:510::-;10121:23;10204:5;:16;;;10175:9;:14;;;:25;;;:45;;:104;;;;10257:14;:22;;;-1:-1:-1;;;;;10236:43:51;:9;:17;;;-1:-1:-1;;;;;10236:43:51;;;10175:104;:169;;;;10319:14;:25;;;10295:9;:20;;;:49;;10175:169;:226;;;-1:-1:-1;10387:14:51;;10360:41;;;;;;;;:::i;:::-;:14;;:23;:41;;;;;;;;:::i;:::-;;;10175:226;:277;;;;10441:5;:11;;;-1:-1:-1;;;;;10417:35:51;:9;:14;;;:20;;;-1:-1:-1;;;;;10417:35:51;;;10156:296;9949:510;-1:-1:-1;;;;9949:510:51:o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:134:62:-;82:20;;111:31;82:20;111:31;:::i;153:415::-;264:8;274:6;328:3;321:4;313:6;309:17;305:27;295:55;;346:1;343;336:12;295:55;-1:-1:-1;369:20:62;;412:18;401:30;;398:50;;;444:1;441;434:12;398:50;481:4;473:6;469:17;457:29;;541:3;534:4;524:6;521:1;517:14;509:6;505:27;501:38;498:47;495:67;;;558:1;555;548:12;495:67;153:415;;;;;:::o;573:914::-;640:5;693:3;686:4;678:6;674:17;670:27;660:55;;711:1;708;701:12;660:55;747:6;734:20;773:4;797:90;813:73;883:2;813:73;:::i;:::-;797:90;:::i;:::-;909:3;933:2;928:3;921:15;961:2;956:3;952:12;945:19;;996:2;988:6;984:15;1048:3;1043:2;1037;1034:1;1030:10;1022:6;1018:23;1014:32;1011:41;1008:61;;;1065:1;1062;1055:12;1008:61;1087:1;1108;1118:340;1134:2;1129:3;1126:11;1118:340;;;1215:3;1202:17;1251:18;1238:11;1235:35;1232:55;;;1283:1;1280;1273:12;1232:55;1312:71;1379:3;1374:2;1360:11;1352:6;1348:24;1344:33;1312:71;:::i;:::-;1300:84;;-1:-1:-1;1404:12:62;;;;1436;;;;1156:1;1147:11;1118:340;;;-1:-1:-1;1476:5:62;;573:914;-1:-1:-1;;;;;;;;573:914:62:o;1492:772::-;1563:5;1616:3;1609:4;1601:6;1597:17;1593:27;1583:55;;1634:1;1631;1624:12;1583:55;1670:6;1657:20;1696:4;1720:90;1736:73;1806:2;1736:73;:::i;1720:90::-;1844:15;;;1875:12;;;;1907:15;;;1941:4;1976:11;;;1964:24;;1960:33;;1957:42;-1:-1:-1;1954:62:62;;;2012:1;2009;2002:12;1954:62;2034:1;2044:191;2058:2;2055:1;2052:9;2044:191;;;2115:45;2156:3;2151;2115:45;:::i;:::-;2103:58;;2181:12;;;;2213;;;;2076:1;2069:9;2044:191;;2269:756;2332:5;2385:3;2378:4;2370:6;2366:17;2362:27;2352:55;;2403:1;2400;2393:12;2352:55;2439:6;2426:20;2465:4;2489:90;2505:73;2575:2;2505:73;:::i;2489:90::-;2613:15;;;2644:12;;;;2676:15;;;2710:4;2745:11;;;2733:24;;2729:33;;2726:42;-1:-1:-1;2723:62:62;;;2781:1;2778;2771:12;2723:62;2803:1;2813:183;2827:2;2824:1;2821:9;2813:183;;;2884:37;2917:3;2912;2884:37;:::i;:::-;2872:50;;2942:12;;;;2974;;;;2845:1;2838:9;2813:183;;3030:589;3072:5;3125:3;3118:4;3110:6;3106:17;3102:27;3092:55;;3143:1;3140;3133:12;3092:55;3179:6;3166:20;3205:18;3201:2;3198:26;3195:52;;;3227:18;;:::i;:::-;3271:114;3379:4;3310:66;3303:4;3299:2;3295:13;3291:86;3287:97;3271:114;:::i;:::-;3410:2;3401:7;3394:19;3456:3;3449:4;3444:2;3436:6;3432:15;3428:26;3425:35;3422:55;;;3473:1;3470;3463:12;3422:55;3538:2;3531:4;3523:6;3519:17;3512:4;3503:7;3499:18;3486:55;3586:1;3561:16;;;3579:4;3557:27;3550:38;;;;3565:7;3030:589;-1:-1:-1;;;3030:589:62:o;3624:149::-;3698:20;;3747:1;3737:12;;3727:40;;3763:1;3760;3753:12;3778:150;3853:20;;3902:1;3892:12;;3882:40;;3918:1;3915;3908:12;3933:896;3993:5;4041:4;4029:9;4024:3;4020:19;4016:30;4013:50;;;4059:1;4056;4049:12;4013:50;4081:22;;:::i;:::-;4072:31;;4139:9;4126:23;4168:18;4209:2;4201:6;4198:14;4195:34;;;4225:1;4222;4215:12;4195:34;4252:62;4310:3;4301:6;4290:9;4286:22;4252:62;:::i;:::-;4245:5;4238:77;4347:38;4381:2;4370:9;4366:18;4347:38;:::i;:::-;4342:2;4335:5;4331:14;4324:62;4418:38;4452:2;4441:9;4437:18;4418:38;:::i;:::-;4413:2;4406:5;4402:14;4395:62;4510:2;4499:9;4495:18;4482:32;4466:48;;4539:2;4529:8;4526:16;4523:36;;;4555:1;4552;4545:12;4523:36;4591:47;4634:3;4623:8;4612:9;4608:24;4591:47;:::i;:::-;4586:2;4579:5;4575:14;4568:71;4692:3;4681:9;4677:19;4664:33;4648:49;;4722:2;4712:8;4709:16;4706:36;;;4738:1;4735;4728:12;4706:36;;4775:47;4818:3;4807:8;4796:9;4792:24;4775:47;:::i;:::-;4769:3;4762:5;4758:15;4751:72;;3933:896;;;;:::o;4834:908::-;4898:5;4946:4;4934:9;4929:3;4925:19;4921:30;4918:50;;;4964:1;4961;4954:12;4918:50;4997:2;4991:9;5039:4;5031:6;5027:17;5110:6;5098:10;5095:22;5074:18;5062:10;5059:34;5056:62;5053:88;;;5121:18;;:::i;:::-;5157:2;5150:22;5190:6;-1:-1:-1;5190:6:62;5220:35;5245:9;5220:35;:::i;:::-;5212:6;5205:51;5308:2;5297:9;5293:18;5280:32;5321:33;5346:7;5321:33;:::i;:::-;5387:7;5382:2;5374:6;5370:15;5363:32;;5456:2;5445:9;5441:18;5428:32;5423:2;5415:6;5411:15;5404:57;5522:2;5511:9;5507:18;5494:32;5489:2;5481:6;5477:15;5470:57;5589:3;5578:9;5574:19;5561:33;5555:3;5547:6;5543:16;5536:59;5647:3;5636:9;5632:19;5619:33;5661;5686:7;5661:33;:::i;:::-;5722:3;5710:16;;;;5703:33;4834:908;;-1:-1:-1;;4834:908:62:o;5747:489::-;5814:5;5862:4;5850:9;5845:3;5841:19;5837:30;5834:50;;;5880:1;5877;5870:12;5834:50;5913:4;5907:11;5957:4;5949:6;5945:17;6028:6;6016:10;6013:22;5992:18;5980:10;5977:34;5974:62;5971:88;;;6039:18;;:::i;:::-;6075:4;6068:24;6140:23;;6125:39;;6225:2;6210:18;;;6197:32;6180:15;;;6173:57;;;;-1:-1:-1;6110:6:62;5747:489;-1:-1:-1;5747:489:62:o;6241:566::-;6297:5;6345:4;6333:9;6328:3;6324:19;6320:30;6317:50;;;6363:1;6360;6353:12;6317:50;6385:22;;:::i;:::-;6376:31;;6430:35;6455:9;6430:35;:::i;:::-;6423:5;6416:50;6518:2;6507:9;6503:18;6490:32;6531:33;6556:7;6531:33;:::i;:::-;6596:7;6591:2;6584:5;6580:14;6573:31;;6664:2;6653:9;6649:18;6636:32;6631:2;6624:5;6620:14;6613:56;6729:2;6718:9;6714:18;6701:32;6696:2;6689:5;6685:14;6678:56;6795:3;6784:9;6780:19;6767:33;6761:3;6754:5;6750:15;6743:58;6241:566;;;;:::o;6812:1291::-;6874:5;6922:6;6910:9;6905:3;6901:19;6897:32;6894:52;;;6942:1;6939;6932:12;6894:52;6964:22;;:::i;:::-;6955:31;;7009:29;7028:9;7009:29;:::i;:::-;7002:5;6995:44;7071:38;7105:2;7094:9;7090:18;7071:38;:::i;:::-;7066:2;7059:5;7055:14;7048:62;7161:2;7150:9;7146:18;7133:32;7184:18;7225:2;7217:6;7214:14;7211:34;;;7241:1;7238;7231:12;7211:34;7277:66;7339:3;7330:6;7319:9;7315:22;7277:66;:::i;:::-;7272:2;7265:5;7261:14;7254:90;7397:2;7386:9;7382:18;7369:32;7353:48;;7426:2;7416:8;7413:16;7410:36;;;7442:1;7439;7432:12;7410:36;;7478:76;7550:3;7539:8;7528:9;7524:24;7478:76;:::i;:::-;7473:2;7466:5;7462:14;7455:100;;7588:46;7629:3;7618:9;7614:19;7588:46;:::i;:::-;7582:3;7575:5;7571:15;7564:71;7696:3;7685:9;7681:19;7668:33;7662:3;7655:5;7651:15;7644:58;7763:3;7752:9;7748:19;7735:33;7729:3;7722:5;7718:15;7711:58;7830:3;7819:9;7815:19;7802:33;7796:3;7789:5;7785:15;7778:58;7855:3;7918:2;7907:9;7903:18;7890:32;7885:2;7878:5;7874:14;7867:56;;7942:3;8005:2;7994:9;7990:18;7977:32;7972:2;7965:5;7961:14;7954:56;;8029:3;8092:2;8081:9;8077:18;8064:32;8059:2;8052:5;8048:14;8041:56;;6812:1291;;;;:::o;8108:186::-;8176:20;;8236:32;8225:44;;8215:55;;8205:83;;8284:1;8281;8274:12;8299:247;8358:6;8411:2;8399:9;8390:7;8386:23;8382:32;8379:52;;;8427:1;8424;8417:12;8379:52;8466:9;8453:23;8485:31;8510:5;8485:31;:::i;8811:1886::-;9231:6;9239;9247;9255;9263;9271;9279;9287;9295;9303;9356:3;9344:9;9335:7;9331:23;9327:33;9324:53;;;9373:1;9370;9363:12;9324:53;9413:9;9400:23;9442:18;9483:2;9475:6;9472:14;9469:34;;;9499:1;9496;9489:12;9469:34;9522:74;9588:7;9579:6;9568:9;9564:22;9522:74;:::i;:::-;9512:84;;9649:2;9638:9;9634:18;9621:32;9605:48;;9678:2;9668:8;9665:16;9662:36;;;9694:1;9691;9684:12;9662:36;9733:120;9845:7;9834:8;9823:9;9819:24;9733:120;:::i;:::-;9872:8;;-1:-1:-1;9707:146:62;-1:-1:-1;9960:2:62;9945:18;;9932:32;;-1:-1:-1;9976:16:62;;;9973:36;;;10005:1;10002;9995:12;9973:36;10044:120;10156:7;10145:8;10134:9;10130:24;10044:120;:::i;:::-;10183:8;;-1:-1:-1;10018:146:62;-1:-1:-1;10271:2:62;10256:18;;10243:32;;-1:-1:-1;10287:16:62;;;10284:36;;;10316:1;10313;10306:12;10284:36;;10355:120;10467:7;10456:8;10445:9;10441:24;10355:120;:::i;:::-;10494:8;;-1:-1:-1;10329:146:62;-1:-1:-1;;10576:3:62;10561:19;;10548:33;;-1:-1:-1;10600:39:62;10634:3;10619:19;;10600:39;:::i;:::-;10590:49;;10686:3;10675:9;10671:19;10658:33;10648:43;;8811:1886;;;;;;;;;;;;;:::o;10702:1206::-;10956:6;10964;10972;10980;10988;11041:2;11029:9;11020:7;11016:23;11012:32;11009:52;;;11057:1;11054;11047:12;11009:52;11097:9;11084:23;11126:18;11167:2;11159:6;11156:14;11153:34;;;11183:1;11180;11173:12;11153:34;11206:74;11272:7;11263:6;11252:9;11248:22;11206:74;:::i;:::-;11196:84;;11333:2;11322:9;11318:18;11305:32;11289:48;;11362:2;11352:8;11349:16;11346:36;;;11378:1;11375;11368:12;11346:36;11417:120;11529:7;11518:8;11507:9;11503:24;11417:120;:::i;:::-;11556:8;;-1:-1:-1;11391:146:62;-1:-1:-1;11644:2:62;11629:18;;11616:32;;-1:-1:-1;11660:16:62;;;11657:36;;;11689:1;11686;11679:12;11657:36;;11728:120;11840:7;11829:8;11818:9;11814:24;11728:120;:::i;:::-;10702:1206;;;;-1:-1:-1;10702:1206:62;;-1:-1:-1;11867:8:62;;11702:146;10702:1206;-1:-1:-1;;;10702:1206:62:o;11913:520::-;12034:6;12042;12095:2;12083:9;12074:7;12070:23;12066:32;12063:52;;;12111:1;12108;12101:12;12063:52;12151:9;12138:23;12184:18;12176:6;12173:30;12170:50;;;12216:1;12213;12206:12;12170:50;12255:118;12365:7;12356:6;12345:9;12341:22;12255:118;:::i;:::-;12392:8;;12229:144;;-1:-1:-1;11913:520:62;-1:-1:-1;;;;11913:520:62:o;12953:1529::-;13288:6;13296;13304;13312;13320;13328;13336;13344;13397:3;13385:9;13376:7;13372:23;13368:33;13365:53;;;13414:1;13411;13404:12;13365:53;13454:9;13441:23;13483:18;13524:2;13516:6;13513:14;13510:34;;;13540:1;13537;13530:12;13510:34;13579:118;13689:7;13680:6;13669:9;13665:22;13579:118;:::i;:::-;13716:8;;-1:-1:-1;13553:144:62;-1:-1:-1;13804:2:62;13789:18;;13776:32;;-1:-1:-1;13820:16:62;;;13817:36;;;13849:1;13846;13839:12;13817:36;13888:120;14000:7;13989:8;13978:9;13974:24;13888:120;:::i;:::-;14027:8;;-1:-1:-1;13862:146:62;-1:-1:-1;14115:2:62;14100:18;;14087:32;;-1:-1:-1;14131:16:62;;;14128:36;;;14160:1;14157;14150:12;14128:36;;14199:120;14311:7;14300:8;14289:9;14285:24;14199:120;:::i;:::-;12953:1529;;;;-1:-1:-1;12953:1529:62;;;;14338:8;;14420:2;14405:18;;14392:32;;14471:3;14456:19;14443:33;;-1:-1:-1;12953:1529:62;-1:-1:-1;;;;12953:1529:62:o;14487:925::-;14665:6;14673;14681;14689;14742:2;14730:9;14721:7;14717:23;14713:32;14710:52;;;14758:1;14755;14748:12;14710:52;14798:9;14785:23;14827:18;14868:2;14860:6;14857:14;14854:34;;;14884:1;14881;14874:12;14854:34;14923:118;15033:7;15024:6;15013:9;15009:22;14923:118;:::i;:::-;15060:8;;-1:-1:-1;14897:144:62;-1:-1:-1;15148:2:62;15133:18;;15120:32;;-1:-1:-1;15164:16:62;;;15161:36;;;15193:1;15190;15183:12;15161:36;;15232:120;15344:7;15333:8;15322:9;15318:24;15232:120;:::i;:::-;14487:925;;;;-1:-1:-1;15371:8:62;-1:-1:-1;;;;14487:925:62:o;15417:277::-;15484:6;15537:2;15525:9;15516:7;15512:23;15508:32;15505:52;;;15553:1;15550;15543:12;15505:52;15585:9;15579:16;15638:5;15631:13;15624:21;15617:5;15614:32;15604:60;;15660:1;15657;15650:12;15699:180;15758:6;15811:2;15799:9;15790:7;15786:23;15782:32;15779:52;;;15827:1;15824;15817:12;15779:52;-1:-1:-1;15850:23:62;;15699:180;-1:-1:-1;15699:180:62:o;15884:245::-;15963:6;15971;16024:2;16012:9;16003:7;15999:23;15995:32;15992:52;;;16040:1;16037;16030:12;15992:52;-1:-1:-1;;16063:16:62;;16119:2;16104:18;;;16098:25;16063:16;;16098:25;;-1:-1:-1;15884:245:62:o;16134:336::-;16203:6;16256:2;16244:9;16235:7;16231:23;16227:32;16224:52;;;16272:1;16269;16262:12;16224:52;16304:9;16298:16;16354:66;16347:5;16343:78;16336:5;16333:89;16323:117;;16436:1;16433;16426:12;16475:276;16553:6;16606:2;16594:9;16585:7;16581:23;16577:32;16574:52;;;16622:1;16619;16612:12;16574:52;16661:9;16648:23;16700:2;16693:5;16690:13;16680:41;;16717:1;16714;16707:12;16756:207;16829:6;16882:2;16870:9;16861:7;16857:23;16853:32;16850:52;;;16898:1;16895;16888:12;16850:52;16921:36;16947:9;16921:36;:::i;16968:583::-;17064:6;17117:2;17105:9;17096:7;17092:23;17088:32;17085:52;;;17133:1;17130;17123:12;17085:52;17166:2;17160:9;17208:2;17200:6;17196:15;17277:6;17265:10;17262:22;17241:18;17229:10;17226:34;17223:62;17220:88;;;17288:18;;:::i;:::-;17324:2;17317:22;17363:23;;17348:39;;17437:2;17422:18;;17409:32;17450:31;17409:32;17450:31;:::i;:::-;17509:2;17497:15;;17490:30;17501:6;16968:583;-1:-1:-1;;;16968:583:62:o;17556:1017::-;17738:6;17746;17754;17762;17770;17823:3;17811:9;17802:7;17798:23;17794:33;17791:53;;;17840:1;17837;17830:12;17791:53;17880:9;17867:23;17909:18;17950:2;17942:6;17939:14;17936:34;;;17966:1;17963;17956:12;17936:34;17989:22;;;;18045:3;18027:16;;;18023:26;18020:46;;;18062:1;18059;18052:12;18020:46;18085:2;;-1:-1:-1;18140:2:62;18125:18;;18112:32;;18156:16;;;18153:36;;;18185:1;18182;18175:12;18153:36;;18224:120;18336:7;18325:8;18314:9;18310:24;18224:120;:::i;:::-;18363:8;;-1:-1:-1;18198:146:62;-1:-1:-1;;18445:2:62;18430:18;;18417:32;;-1:-1:-1;18499:2:62;18484:18;;18471:32;18512:31;18471:32;18512:31;:::i;:::-;18562:5;18552:15;;;17556:1017;;;;;;;;:::o;18578:400::-;18677:6;18730:2;18718:9;18709:7;18705:23;18701:32;18698:52;;;18746:1;18743;18736:12;18698:52;18786:9;18773:23;18819:18;18811:6;18808:30;18805:50;;;18851:1;18848;18841:12;18805:50;18874:22;;18930:3;18912:16;;;18908:26;18905:46;;;18947:1;18944;18937:12;18983:248;19077:6;19130:3;19118:9;19109:7;19105:23;19101:33;19098:53;;;19147:1;19144;19137:12;19098:53;19170:55;19217:7;19206:9;19170:55;:::i;19236:253::-;19333:6;19386:2;19374:9;19365:7;19361:23;19357:32;19354:52;;;19402:1;19399;19392:12;19354:52;19425:58;19475:7;19464:9;19425:58;:::i;19494:232::-;19580:6;19633:3;19621:9;19612:7;19608:23;19604:33;19601:53;;;19650:1;19647;19640:12;19601:53;19673:47;19712:7;19701:9;19673:47;:::i;19731:395::-;19825:6;19878:2;19866:9;19857:7;19853:23;19849:32;19846:52;;;19894:1;19891;19884:12;19846:52;19934:9;19921:23;19967:18;19959:6;19956:30;19953:50;;;19999:1;19996;19989:12;19953:50;20022:22;;20078:3;20060:16;;;20056:26;20053:46;;;20095:1;20092;20085:12;20131:452;20224:6;20232;20285:2;20273:9;20264:7;20260:23;20256:32;20253:52;;;20301:1;20298;20291:12;20253:52;20341:9;20328:23;20374:18;20366:6;20363:30;20360:50;;;20406:1;20403;20396:12;20360:50;20429:22;;20485:2;20467:16;;;20463:25;20460:45;;;20501:1;20498;20491:12;20460:45;20524:2;20573;20558:18;;;;20545:32;;-1:-1:-1;;;20131:452:62:o;20913:435::-;20966:3;21004:5;20998:12;21031:6;21026:3;21019:19;21057:4;21086:2;21081:3;21077:12;21070:19;;21123:2;21116:5;21112:14;21144:1;21154:169;21168:6;21165:1;21162:13;21154:169;;;21229:13;;21217:26;;21263:12;;;;21298:15;;;;21190:1;21183:9;21154:169;;;-1:-1:-1;21339:3:62;;20913:435;-1:-1:-1;;;;;20913:435:62:o;21353:1005::-;21423:3;21461:5;21455:12;21488:6;21483:3;21476:19;21514:4;21543:2;21538:3;21534:12;21527:19;;21580:2;21573:5;21569:14;21601:1;21611:722;21625:6;21622:1;21619:13;21611:722;;;21690:6;21684:13;21710:40;21746:3;21741:2;21735:9;21710:40;:::i;:::-;21789:11;;;21783:18;-1:-1:-1;;;;;21900:21:62;;;21886:12;;;21879:43;21945:4;21989:11;;;21983:18;21969:12;;;21962:40;22025:4;22069:11;;;22063:18;22049:12;;;22042:40;22105:4;22149:11;;;22143:18;22129:12;;;22122:40;22185:4;22233:11;;;22227:18;22223:27;22209:12;;;22202:49;22280:4;22271:14;;;;22308:15;;;;21647:1;21640:9;21611:722;;22363:1146;22432:3;22470:5;22464:12;22497:6;22492:3;22485:19;22523:4;22564:2;22559:3;22555:12;22589:11;22616;22609:18;;22666:6;22663:1;22659:14;22652:5;22648:26;22636:38;;22708:2;22701:5;22697:14;22729:1;22739:744;22753:6;22750:1;22747:13;22739:744;;;22824:5;22818:4;22814:16;22809:3;22802:29;22860:6;22854:13;22890:4;22926:2;22920:9;22914:4;22907:23;22977:2;22973;22969:11;22963:18;22994:49;23039:2;23033:4;23029:13;23015:12;22994:49;:::i;:::-;-1:-1:-1;23066:4:62;23111:11;;;23105:18;23090:13;;;23083:41;23147:4;23192:11;;;23186:18;23171:13;;;23164:41;23228:4;23273:11;;;23267:18;23305:13;;;23298:25;;;23344:59;23389:13;;;23267:18;23344:59;:::i;:::-;23461:12;;;;23336:67;-1:-1:-1;;;23426:15:62;;;;22775:1;22768:9;22739:744;;;-1:-1:-1;23499:4:62;;22363:1146;-1:-1:-1;;;;;;;22363:1146:62:o;23514:663::-;23576:3;23614:5;23608:12;23641:6;23636:3;23629:19;23667:4;23696:2;23691:3;23687:12;23680:19;;23733:2;23726:5;23722:14;23754:1;23764:388;23778:6;23775:1;23772:13;23764:388;;;23843:6;23837:13;23863:46;23905:3;23900:2;23894:9;23863:46;:::i;:::-;23955:11;;;23949:18;-1:-1:-1;;;;;23945:67:62;23938:4;23929:14;;23922:91;24063:4;24055:13;24049:20;24042:4;24033:14;;24026:44;24099:4;24090:14;;;;24127:15;;;;23800:1;23793:9;23764:388;;24182:838;24244:3;24282:5;24276:12;24309:6;24304:3;24297:19;24335:4;24364:2;24359:3;24355:12;24348:19;;24401:2;24394:5;24390:14;24422:1;24432:563;24446:6;24443:1;24440:13;24432:563;;;24511:6;24505:13;24531:40;24567:3;24562:2;24556:9;24531:40;:::i;:::-;24615:11;;;24609:18;-1:-1:-1;;;;;24605:67:62;24591:12;;;24584:89;24696:4;24740:11;;;24734:18;24720:12;;;24713:40;24776:4;24820:11;;;24814:18;24800:12;;;24793:40;24856:4;24900:11;;;24894:18;24880:12;;;24873:40;24942:4;24933:14;;;;24970:15;;;;24468:1;24461:9;24432:563;;25025:473;25090:3;25128:5;25122:12;25155:6;25150:3;25143:19;25181:4;25210:2;25205:3;25201:12;25194:19;;25247:2;25240:5;25236:14;25268:1;25278:195;25292:6;25289:1;25286:13;25278:195;;;25341:50;25387:3;25378:6;25372:13;25341:50;:::i;:::-;25420:4;25411:14;;;;;25448:15;;;;25314:1;25307:9;25278:195;;25503:316;25544:3;25582:5;25576:12;25609:6;25604:3;25597:19;25625:63;25681:6;25674:4;25669:3;25665:14;25658:4;25651:5;25647:16;25625:63;:::i;:::-;25733:2;25721:15;25738:66;25717:88;25708:98;;;;25808:4;25704:109;;25503:316;-1:-1:-1;;25503:316:62:o;25824:139::-;25904:1;25897:5;25894:12;25884:46;;25910:18;;:::i;:::-;25939;;25824:139::o;25968:138::-;26029:44;26067:5;26029:44;:::i;26111:135::-;26187:1;26180:5;26177:12;26167:46;;26193:18;;:::i;26251:459::-;26317:43;26356:3;26348:5;26342:12;26317:43;:::i;:::-;26406:4;26399:5;26395:16;26389:23;-1:-1:-1;;;;;26523:2:62;26509:12;26505:21;26498:4;26493:3;26489:14;26482:45;26576:4;26569:5;26565:16;26559:23;26552:4;26547:3;26543:14;26536:47;26632:4;26625:5;26621:16;26615:23;26608:4;26603:3;26599:14;26592:47;26700:2;26692:4;26685:5;26681:16;26675:23;26671:32;26664:4;26659:3;26655:14;26648:56;;;26251:459;;:::o;26837:508::-;26994:3;27025;27072:6;26994:3;27106:203;27120:4;27117:1;27114:11;27106:203;;;27184:13;;27170:28;;27221:4;27247:14;;;;27284:15;;;;27140:4;27133:12;27106:203;;;27110:3;;;27334:4;27329:3;27325:14;27318:21;;26837:508;;;;:::o;27350:543::-;27568:13;;27511:3;;27542;;27621:4;27648:15;;;27511:3;27691:175;27705:6;27702:1;27699:13;27691:175;;;27768:13;;27754:28;;27804:14;;;;27841:15;;;;27727:1;27720:9;27691:175;;;-1:-1:-1;27882:5:62;;27350:543;-1:-1:-1;;;;;;27350:543:62:o;28684:274::-;28813:3;28851:6;28845:13;28867:53;28913:6;28908:3;28901:4;28893:6;28889:17;28867:53;:::i;:::-;28936:16;;;;;28684:274;-1:-1:-1;;28684:274:62:o;32404:879::-;32720:2;32732:21;;;32802:13;;32705:18;;;32824:22;;;32672:4;;32899;;32877:2;32862:18;;;32926:15;;;32672:4;32969:185;32983:6;32980:1;32977:13;32969:185;;;33058:13;;33051:21;33044:29;33032:42;;33094:12;;;;33129:15;;;;33005:1;32998:9;32969:185;;;32973:3;;;33199:9;33194:3;33190:19;33185:2;33174:9;33170:18;33163:47;33227:50;33273:3;33265:6;33227:50;:::i;:::-;33219:58;32404:879;-1:-1:-1;;;;;;32404:879:62:o;33288:1313::-;33523:2;33575:21;;;33645:13;;33548:18;;;33667:22;;;33494:4;;33523:2;33708;;33726:18;;;;33767:15;;;33494:4;33810:765;33824:6;33821:1;33818:13;33810:765;;;33889:6;33883:13;33925:2;33919:9;33941:41;33979:2;33941:41;:::i;:::-;33995:15;;34049:11;;;34043:18;-1:-1:-1;;;;;34160:21:62;;;34146:12;;;34139:43;34226:11;;;34220:18;34216:27;;34202:12;;;34195:49;34267:4;34315:11;;;34309:18;34305:27;;;34291:12;;;34284:49;34356:4;34400:11;;;34394:18;34380:12;;;34373:40;34436:4;34480:11;;;34474:18;34460:12;;;34453:40;34522:4;34513:14;;;;34550:15;;;;33846:1;33839:9;33810:765;;34606:324;34839:2;34828:9;34821:21;34802:4;34859:65;34920:2;34909:9;34905:18;34897:6;34859:65;:::i;36027:1132::-;36512:25;;;-1:-1:-1;;;;;36634:15:62;;;36629:2;36614:18;;36607:43;36686:15;;36681:2;36666:18;;36659:43;36733:2;36718:18;;36711:34;;;36776:3;36761:19;;36754:35;;;36499:3;36484:19;;36798:45;36836:6;36798:45;:::i;:::-;36874:3;36859:19;;36852:35;;;;36918:3;36903:19;;36896:35;;;;36962:3;36947:19;;36940:35;;;;37006:3;36991:19;;36984:35;;;;37050:3;37035:19;;37028:35;37094:3;37079:19;;37072:36;37139:3;37124:19;;;37117:36;36027:1132;;-1:-1:-1;;;;;36027:1132:62:o;38760:1433::-;39150:4;39179:3;39220:2;39209:9;39205:18;39250:6;39239:9;39232:25;39276:2;-1:-1:-1;;;;;39387:2:62;39379:6;39375:15;39370:2;39359:9;39355:18;39348:43;39410:2;39448;39443;39432:9;39428:18;39421:30;39471:6;39506;39500:13;39537:6;39529;39522:22;39575:3;39564:9;39560:19;39553:26;;39614:2;39606:6;39602:15;39588:29;;39635:1;39645:414;39659:6;39656:1;39653:13;39645:414;;;39724:6;39718:13;39744:40;39780:3;39775:2;39769:9;39744:40;:::i;:::-;39828:11;;;39822:18;39818:27;;39804:12;;;39797:49;39886:11;;;39880:18;39866:12;;;39859:40;39922:4;39966:11;;;39960:18;39946:12;;;39939:40;40034:15;;;;39999:12;;;;39681:1;39674:9;39645:414;;;39649:3;;40106:9;40101:3;40097:19;40090:4;40079:9;40075:20;40068:49;40134:53;40183:3;40175:6;40134:53;:::i;:::-;40126:61;38760:1433;-1:-1:-1;;;;;;;;;;;;38760:1433:62:o;40198:2967::-;40669:6;40658:9;40651:25;-1:-1:-1;;;;;40716:6:62;40712:55;40707:2;40696:9;40692:18;40685:83;40804:3;40799:2;40788:9;40784:18;40777:31;40632:4;40827:3;40865:6;40859:13;40909:3;40903;40892:9;40888:19;40881:32;40922:67;40985:2;40974:9;40970:18;40955:12;40949:19;-1:-1:-1;;;;;20847:54:62;20835:67;;20773:135;40922:67;41044:2;41030:12;41026:21;41020:28;41067:6;41082:62;41140:2;41129:9;41125:18;41109:14;-1:-1:-1;;;;;20847:54:62;20835:67;;20773:135;41082:62;41199:2;41185:12;41181:21;41175:28;41153:50;;41240:2;41234:3;41223:9;41219:19;41212:31;;41266:74;41335:3;41324:9;41320:19;41304:14;41266:74;:::i;:::-;41252:88;;41395:4;41381:12;41377:23;41371:30;41466:66;41454:9;41446:6;41442:22;41438:95;41432:3;41421:9;41417:19;41410:124;41557:69;41619:6;41603:14;41557:69;:::i;:::-;41543:83;;;41681:4;41667:12;41663:23;41657:30;41696:62;41753:3;41742:9;41738:19;41722:14;41696:62;:::i;:::-;;41819:3;41805:12;41801:22;41795:29;41789:3;41778:9;41774:19;41767:58;41886:4;41872:12;41868:23;41862:30;41856:3;41845:9;41841:19;41834:59;41954:4;41940:12;41936:23;41930:30;41924:3;41913:9;41909:19;41902:59;41980:6;42047:2;42033:12;42029:21;42023:28;42017:3;42006:9;42002:19;41995:57;42071:6;42138:2;42124:12;42120:21;42114:28;42108:3;42097:9;42093:19;42086:57;42204:2;42190:12;42186:21;42180:28;42174:3;42163:9;42159:19;42152:57;42258:2;42250:6;42246:15;42240:22;42218:44;;42271:56;42321:4;42310:9;42306:20;42290:14;26792:32;26781:44;26769:57;;26715:117;42271:56;42376:2;42364:15;;42358:22;26792:32;26781:44;42439:4;42424:20;;26769:57;42494:4;42482:17;;42476:24;42625:22;;;-1:-1:-1;42621:31:62;;;42601:18;;;42594:59;42476:24;;-1:-1:-1;;;42676:40:62;42629:6;42476:24;42676:40;:::i;:::-;42662:54;;42765:4;42757:6;42753:17;42747:24;42725:46;;42835:2;42823:9;42815:6;42811:22;42807:31;42802:2;42791:9;42787:18;42780:59;;;42859:40;42892:6;42876:14;42859:40;:::i;:::-;42848:51;;;;42946:9;42941:3;42937:19;42930:4;42919:9;42915:20;42908:49;42980:41;43017:3;43009:6;42980:41;:::i;:::-;42966:55;;43071:9;43063:6;43059:22;43052:4;43041:9;43037:20;43030:52;43099:60;43152:6;43144;43099:60;:::i;:::-;43091:68;40198:2967;-1:-1:-1;;;;;;;;40198:2967:62:o;43687:288::-;43862:6;43851:9;43844:25;43905:2;43900;43889:9;43885:18;43878:30;43825:4;43925:44;43965:2;43954:9;43950:18;43942:6;43925:44;:::i;43980:613::-;44278:25;;;44265:3;44250:19;;44312:52;44360:2;44345:18;;44337:6;44312:52;:::i;:::-;-1:-1:-1;;;;;44404:6:62;44400:55;44395:2;44384:9;44380:18;44373:83;44492:6;44487:2;44476:9;44472:18;44465:34;44536:6;44530:3;44519:9;44515:19;44508:35;44580:6;44574:3;44563:9;44559:19;44552:35;43980:613;;;;;;;;;:::o;44598:731::-;44940:25;;;44927:3;44912:19;;44974:52;45022:2;45007:18;;44999:6;44974:52;:::i;:::-;-1:-1:-1;;;;;45135:2:62;45127:6;45123:15;45118:2;45107:9;45103:18;45096:43;45175:6;45170:2;45159:9;45155:18;45148:34;45219:6;45213:3;45202:9;45198:19;45191:35;45263:6;45257:3;45246:9;45242:19;45235:35;45319:2;45311:6;45307:15;45301:3;45290:9;45286:19;45279:44;;44598:731;;;;;;;;;;:::o;45737:198::-;45878:2;45863:18;;45890:39;45867:9;45911:6;45890:39;:::i;45940:219::-;46089:2;46078:9;46071:21;46052:4;46109:44;46149:2;46138:9;46134:18;46126:6;46109:44;:::i;46164:410::-;46369:2;46358:9;46351:21;46332:4;46389:44;46429:2;46418:9;46414:18;46406:6;46389:44;:::i;:::-;46381:52;;46469:6;46464:2;46453:9;46449:18;46442:34;-1:-1:-1;;;;;46516:6:62;46512:55;46507:2;46496:9;46492:18;46485:83;46164:410;;;;;;:::o;47274:643::-;47406:4;47412:6;47472:11;47459:25;47562:66;47551:8;47535:14;47531:29;47527:102;47507:18;47503:127;47493:155;;47644:1;47641;47634:12;47493:155;47671:33;;47723:20;;;-1:-1:-1;47766:18:62;47755:30;;47752:50;;;47798:1;47795;47788:12;47752:50;47831:4;47819:17;;-1:-1:-1;47882:1:62;47878:14;;;47862;47858:35;47848:46;;47845:66;;;47907:1;47904;47897:12;47922:644;48052:4;48058:6;48118:11;48105:25;48208:66;48197:8;48181:14;48177:29;48173:102;48153:18;48149:127;48139:155;;48290:1;48287;48280:12;48139:155;48317:33;;48369:20;;;-1:-1:-1;48412:18:62;48401:30;;48398:50;;;48444:1;48441;48434:12;48398:50;48477:4;48465:17;;-1:-1:-1;48536:4:62;48524:17;;48508:14;48504:38;48494:49;;48491:69;;;48556:1;48553;48546:12;49220:636;49342:4;49348:6;49408:11;49395:25;49498:66;49487:8;49471:14;49467:29;49463:102;49443:18;49439:127;49429:155;;49580:1;49577;49570:12;49429:155;49607:33;;49659:20;;;-1:-1:-1;49702:18:62;49691:30;;49688:50;;;49734:1;49731;49724:12;49688:50;49767:4;49755:17;;-1:-1:-1;49826:4:62;49814:17;;49798:14;49794:38;49784:49;;49781:69;;;49846:1;49843;49836:12;49861:580;49938:4;49944:6;50004:11;49991:25;50094:66;50083:8;50067:14;50063:29;50059:102;50039:18;50035:127;50025:155;;50176:1;50173;50166:12;50025:155;50203:33;;50255:20;;;-1:-1:-1;50298:18:62;50287:30;;50284:50;;;50330:1;50327;50320:12;50284:50;50363:4;50351:17;;-1:-1:-1;50394:14:62;50390:27;;;50380:38;;50377:58;;;50431:1;50428;50421:12;50446:387;50543:4;50601:11;50588:25;50691:66;50680:8;50664:14;50660:29;50656:102;50636:18;50632:127;50622:155;;50773:1;50770;50763:12;50838:391;50939:4;50997:11;50984:25;51087:66;51076:8;51060:14;51056:29;51052:102;51032:18;51028:127;51018:155;;51169:1;51166;51159:12;52016:253;52088:2;52082:9;52130:4;52118:17;;52165:18;52150:34;;52186:22;;;52147:62;52144:88;;;52212:18;;:::i;:::-;52248:2;52241:22;52016:253;:::o;52274:255::-;52346:2;52340:9;52388:6;52376:19;;52425:18;52410:34;;52446:22;;;52407:62;52404:88;;;52472:18;;:::i;52534:334::-;52605:2;52599:9;52661:2;52651:13;;52666:66;52647:86;52635:99;;52764:18;52749:34;;52785:22;;;52746:62;52743:88;;;52811:18;;:::i;:::-;52847:2;52840:22;52534:334;;-1:-1:-1;52534:334:62:o;52873:213::-;52963:4;52996:18;52988:6;52985:30;52982:56;;;53018:18;;:::i;:::-;-1:-1:-1;53063:1:62;53059:14;53075:4;53055:25;;52873:213::o;53091:331::-;53196:9;53207;53249:8;53237:10;53234:24;53231:44;;;53271:1;53268;53261:12;53231:44;53300:6;53290:8;53287:20;53284:40;;;53320:1;53317;53310:12;53284:40;-1:-1:-1;;53346:23:62;;;53391:25;;;;;-1:-1:-1;53091:331:62:o;53427:128::-;53467:3;53498:1;53494:6;53491:1;53488:13;53485:39;;;53504:18;;:::i;:::-;-1:-1:-1;53540:9:62;;53427:128::o;53560:204::-;53598:3;53634:4;53631:1;53627:12;53666:4;53663:1;53659:12;53701:3;53695:4;53691:14;53686:3;53683:23;53680:49;;;53709:18;;:::i;:::-;53745:13;;53560:204;-1:-1:-1;;;53560:204:62:o;53769:120::-;53809:1;53835;53825:35;;53840:18;;:::i;:::-;-1:-1:-1;53874:9:62;;53769:120::o;53894:228::-;53934:7;54060:1;-1:-1:-1;;53988:74:62;53985:1;53982:81;53977:1;53970:9;53963:17;53959:105;53956:131;;;54067:18;;:::i;:::-;-1:-1:-1;54107:9:62;;53894:228::o;54127:125::-;54167:4;54195:1;54192;54189:8;54186:34;;;54200:18;;:::i;:::-;-1:-1:-1;54237:9:62;;54127:125::o;54257:1686::-;54503:9;54538:94;54554:77;54624:6;54554:77;:::i;54538:94::-;54654:3;54678:6;54673:3;54666:19;54704:4;54733:2;54728:3;54724:12;54717:19;;54756:5;54804:14;54794:6;54791:1;54787:14;54780:5;54776:26;54773:46;54770:66;;;54832:1;54829;54822:12;54770:66;54854:1;54864:1046;54878:6;54875:1;54872:13;54864:1046;;;54959:3;54946:17;54995:18;54982:11;54979:35;54976:55;;;55027:1;55024;55017:12;54976:55;55054:23;;55119:14;55112:4;55104:13;;55100:34;55090:62;;55148:1;55145;55138:12;55090:62;55188:2;55175:16;55217:90;55233:73;55303:2;55233:73;:::i;55217:90::-;55351:17;;;55390:14;;;;55430:11;;;55490:14;55476:1;55472:10;;;55464:19;;55460:28;;55457:48;55454:68;;;55518:1;55515;55508:12;55454:68;55546:1;55535:12;;55560:245;55576:2;55571:3;55568:11;55560:245;;;55647:61;55693:14;55686:5;55647:61;:::i;:::-;55633:76;;55598:1;55589:11;;;;;55735:14;;;;55786:4;55775:16;55560:245;;;-1:-1:-1;55818:18:62;;-1:-1:-1;;;55856:12:62;;;;55888;;;;54900:1;54893:9;54864:1046;;;-1:-1:-1;55932:5:62;;54257:1686;-1:-1:-1;;;;;;54257:1686:62:o;55948:2333::-;56134:9;56169:94;56185:77;56255:6;56185:77;:::i;56169:94::-;56297:19;;;56335:4;56355:12;;;;56285:3;56387:5;56411:1;56456:14;56438:15;;;56427:27;;56424:47;56421:67;;;56484:1;56481;56474:12;56421:67;56506:1;56516:1732;56530:6;56527:1;56524:13;56516:1732;;;56611:3;56598:17;56638:18;56688:2;56675:11;56672:19;56669:39;;;56704:1;56701;56694:12;56669:39;56742:11;56735:5;56731:23;56721:33;;56799:4;56794:2;56778:14;56774:23;56770:34;56767:54;;;56817:1;56814;56807:12;56767:54;56849:22;;:::i;:::-;56913:2;56900:16;56891:7;56884:33;56966:2;56962;56958:11;56945:25;57005:1;56996:7;56993:14;56983:42;;57021:1;57018;57011:12;56983:42;57045:16;;;57038:33;57094:2;57147:11;;;57134:25;57116:16;;;57109:51;57183:2;57236:11;;;57223:25;57205:16;;;57198:51;57272:3;57315:11;;;57302:25;57343:14;;;57340:34;;;57370:1;57367;57360:12;57340:34;57397:15;;;;;57454:14;57447:4;57439:13;;57435:34;57425:62;;57483:1;57480;57473:12;57425:62;57523:2;57510:16;57500:26;;57552:90;57568:73;57638:2;57568:73;:::i;57552:90::-;57686:17;;;57725:14;;;;57765:11;;;57826:14;57807:11;;;57799:20;;57795:29;;57792:49;57789:69;;;57854:1;57851;57844:12;57789:69;57882:1;57871:12;;57896:201;57912:2;57907:3;57904:11;57896:201;;;57983:19;;57969:34;;57934:1;57925:11;;;;;58029:14;;;;58069;;57896:201;;;-1:-1:-1;58117:16:62;;;58110:31;;;;-1:-1:-1;58154:20:62;;-1:-1:-1;;58194:12:62;;;;58226;;;;56552:1;56545:9;56516:1732;;;-1:-1:-1;58270:5:62;;55948:2333;-1:-1:-1;;;;;;;55948:2333:62:o;58286:211::-;58400:9;58437:54;58476:14;58469:5;58437:54;:::i;58502:217::-;58620:9;58657:56;58698:14;58691:5;58657:56;:::i;58724:258::-;58796:1;58806:113;58820:6;58817:1;58814:13;58806:113;;;58896:11;;;58890:18;58877:11;;;58870:39;58842:2;58835:10;58806:113;;;58937:6;58934:1;58931:13;58928:48;;;-1:-1:-1;;58972:1:62;58954:16;;58947:27;58724:258::o;58987:196::-;59026:3;59054:5;59044:39;;59063:18;;:::i;:::-;-1:-1:-1;;;59099:78:62;;58987:196::o;59188:195::-;59227:3;-1:-1:-1;;59251:5:62;59248:77;59245:103;;;59328:18;;:::i;:::-;-1:-1:-1;59375:1:62;59364:13;;59188:195::o;59388:112::-;59420:1;59446;59436:35;;59451:18;;:::i;:::-;-1:-1:-1;59485:9:62;;59388:112::o;59505:184::-;59557:77;59554:1;59547:88;59654:4;59651:1;59644:15;59678:4;59675:1;59668:15;59694:184;59746:77;59743:1;59736:88;59843:4;59840:1;59833:15;59867:4;59864:1;59857:15;59883:184;59935:77;59932:1;59925:88;60032:4;60029:1;60022:15;60056:4;60053:1;60046:15;60072:184;60124:77;60121:1;60114:88;60221:4;60218:1;60211:15;60245:4;60242:1;60235:15;60261:184;60313:77;60310:1;60303:88;60410:4;60407:1;60400:15;60434:4;60431:1;60424:15;60450:120;60538:1;60531:5;60528:12;60518:46;;60544:18;;:::i;60575:154::-;-1:-1:-1;;;;;60654:5:62;60650:54;60643:5;60640:65;60630:93;;60719:1;60716;60709:12",
    "linkReferences": {},
    "immutableReferences": {
      "8766": [
        {
          "start": 14364,
          "length": 32
        }
      ],
      "8768": [
        {
          "start": 14401,
          "length": 32
        }
      ],
      "8770": [
        {
          "start": 14322,
          "length": 32
        }
      ],
      "8772": [
        {
          "start": 9030,
          "length": 32
        },
        {
          "start": 16403,
          "length": 32
        }
      ],
      "8774": [
        {
          "start": 9140,
          "length": 32
        },
        {
          "start": 14896,
          "length": 32
        }
      ],
      "8776": [
        {
          "start": 3209,
          "length": 32
        },
        {
          "start": 16737,
          "length": 32
        }
      ],
      "8778": [
        {
          "start": 14278,
          "length": 32
        }
      ],
      "8780": [
        {
          "start": 14482,
          "length": 32
        }
      ],
      "8783": [
        {
          "start": 4779,
          "length": 32
        },
        {
          "start": 27847,
          "length": 32
        }
      ],
      "8785": [
        {
          "start": 27896,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "fd9f1e10",
    "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": "e7acab24",
    "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": "87201b41",
    "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": "ed98a574",
    "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": "fb0f3ee1",
    "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": "b3a34c4c",
    "getCounter(address)": "f07ec373",
    "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": "79df72bd",
    "getOrderStatus(bytes32)": "46423aa7",
    "incrementCounter()": "5b34b966",
    "information()": "f47b7740",
    "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "55944a42",
    "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "a8174404",
    "name()": "06fdde03",
    "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": "88147732"
  },
  "ast": {
    "absolutePath": "reference/ReferenceConsideration.sol",
    "id": 5603,
    "exportedSymbols": {
      "AccumulatorStruct": [
        9085
      ],
      "AdvancedOrder": [
        2521
      ],
      "BasicOrderParameters": [
        2470
      ],
      "ConsiderationInterface": [
        1290
      ],
      "CriteriaResolver": [
        2543
      ],
      "Execution": [
        2565
      ],
      "Fulfillment": [
        2552
      ],
      "FulfillmentComponent": [
        2557
      ],
      "Order": [
        2509
      ],
      "OrderComponents": [
        2382
      ],
      "OrderParameters": [
        2503
      ],
      "OrderStatus": [
        2530
      ],
      "OrderToExecute": [
        9067
      ],
      "ReferenceConsideration": [
        5602
      ],
      "ReferenceOrderCombiner": [
        12807
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:29127:40",
    "nodes": [
      {
        "id": 5103,
        "nodeType": "PragmaDirective",
        "src": "32:23:40",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 5105,
        "nodeType": "ImportDirective",
        "src": "76:93:40",
        "absolutePath": "contracts/interfaces/ConsiderationInterface.sol",
        "file": "contracts/interfaces/ConsiderationInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5603,
        "sourceUnit": 1291,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5104,
              "name": "ConsiderationInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "89:22:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5116,
        "nodeType": "ImportDirective",
        "src": "190:251:40",
        "absolutePath": "contracts/lib/ConsiderationStructs.sol",
        "file": "contracts/lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5603,
        "sourceUnit": 2566,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5106,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "203:15:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5107,
              "name": "BasicOrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "224:20:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5108,
              "name": "OrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "250:15:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5109,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "271:5:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5110,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "282:13:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5111,
              "name": "OrderStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "301:11:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5112,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "318:16:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5113,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "340:11:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5114,
              "name": "FulfillmentComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "357:20:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5115,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "383:9:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5118,
        "nodeType": "ImportDirective",
        "src": "443:74:40",
        "absolutePath": "reference/lib/ReferenceOrderCombiner.sol",
        "file": "./lib/ReferenceOrderCombiner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5603,
        "sourceUnit": 12808,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5117,
              "name": "ReferenceOrderCombiner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "452:22:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5121,
        "nodeType": "ImportDirective",
        "src": "519:92:40",
        "absolutePath": "reference/lib/ReferenceConsiderationStructs.sol",
        "file": "./lib/ReferenceConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5603,
        "sourceUnit": 9086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5119,
              "name": "OrderToExecute",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "528:14:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5120,
              "name": "AccumulatorStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "544:17:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5602,
        "nodeType": "ContractDefinition",
        "src": "1299:27859:40",
        "nodes": [
          {
            "id": 5136,
            "nodeType": "FunctionDefinition",
            "src": "1754:95:40",
            "body": {
              "id": 5135,
              "nodeType": "Block",
              "src": "1847:2:40",
              "statements": []
            },
            "documentation": {
              "id": 5127,
              "nodeType": "StructuredDocumentation",
              "src": "1395:354:40",
              "text": " @notice Derive and set hashes, reference chainId, and associated domain\n         separator during deployment.\n @param conduitController A contract that deploys conduits, or proxies\n                          that may optionally be used to transfer approved\n                          ERC20/721/1155 tokens."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5132,
                    "name": "conduitController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5129,
                    "src": "1824:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5133,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5131,
                  "name": "ReferenceOrderCombiner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12807,
                  "src": "1801:22:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1801:41:40"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5129,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "1774:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5136,
                  "src": "1766:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:27:40"
            },
            "returnParameters": {
              "id": 5134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1847:0:40"
            },
            "scope": 5602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5157,
            "nodeType": "FunctionDefinition",
            "src": "3530:315:40",
            "body": {
              "id": 5156,
              "nodeType": "Block",
              "src": "3726:119:40",
              "statements": [
                {
                  "expression": {
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5150,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5148,
                      "src": "3785:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5152,
                          "name": "parameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5140,
                          "src": "3827:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$2470_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$2470_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        ],
                        "id": 5151,
                        "name": "_validateAndFulfillBasicOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8055,
                        "src": "3797:29:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BasicOrderParameters_$2470_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct BasicOrderParameters calldata) returns (bool)"
                        }
                      },
                      "id": 5153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3797:41:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3785:53:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "3785:53:40"
                }
              ]
            },
            "baseFunctions": [
              1088
            ],
            "documentation": {
              "id": 5137,
              "nodeType": "StructuredDocumentation",
              "src": "1855:1670:40",
              "text": " @notice Fulfill an order offering an ERC20, ERC721, or ERC1155 item by\n         supplying Ether (or other native tokens), ERC20 tokens, an ERC721\n         item, or an ERC1155 item as consideration. Six permutations are\n         supported: Native token to ERC721, Native token to ERC1155, ERC20\n         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to\n         ERC20 (with native tokens supplied as msg.value). For an order to\n         be eligible for fulfillment via this method, it must contain a\n         single offer item (though that item may have a greater amount if\n         the item is not an ERC721). An arbitrary number of \"additional\n         recipients\" may also be supplied which will each receive native\n         tokens or ERC20 items from the fulfiller as consideration. Refer\n         to the documentation for a more comprehensive summary of how to\n         utilize with this method and what orders are compatible with it.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer and the fulfiller must first approve\n                   this contract (or their chosen conduit if indicated)\n                   before any tokens can be transferred. Also note that\n                   contract recipients of ERC1155 consideration items must\n                   implement `onERC1155Received` in order to receive those\n                   items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "fb0f3ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5143,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "3657:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3657:10:40"
              },
              {
                "id": 5146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5145,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "3676:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3676:12:40"
              }
            ],
            "name": "fulfillBasicOrder",
            "nameLocation": "3539:17:40",
            "overrides": {
              "id": 5142,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3640:8:40"
            },
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5140,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "3587:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5157,
                  "src": "3557:40:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BasicOrderParameters_$2470_calldata_ptr",
                    "typeString": "struct BasicOrderParameters"
                  },
                  "typeName": {
                    "id": 5139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5138,
                      "name": "BasicOrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2470,
                      "src": "3557:20:40"
                    },
                    "referencedDeclaration": 2470,
                    "src": "3557:20:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BasicOrderParameters_$2470_storage_ptr",
                      "typeString": "struct BasicOrderParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3556:42:40"
            },
            "returnParameters": {
              "id": 5149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5148,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "3711:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5157,
                  "src": "3706:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3705:16:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5191,
            "nodeType": "FunctionDefinition",
            "src": "5190:549:40",
            "body": {
              "id": 5190,
              "nodeType": "Block",
              "src": "5390:349:40",
              "statements": [
                {
                  "expression": {
                    "id": 5188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5173,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5171,
                      "src": "5503:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5176,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5161,
                              "src": "5585:5:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$2509_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$2509_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            ],
                            "id": 5175,
                            "name": "_convertOrderToAdvanced",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13213,
                            "src": "5561:23:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$2509_calldata_ptr_$returns$_t_struct$_AdvancedOrder_$2521_memory_ptr_$",
                              "typeString": "function (struct Order calldata) pure returns (struct AdvancedOrder memory)"
                            }
                          },
                          "id": 5177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5561:30:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2521_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5628:1:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5605:22:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5179,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 5178,
                                  "name": "CriteriaResolver",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2543,
                                  "src": "5609:16:40"
                                },
                                "referencedDeclaration": 2543,
                                "src": "5609:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                                  "typeString": "struct CriteriaResolver"
                                }
                              },
                              "id": 5180,
                              "nodeType": "ArrayTypeName",
                              "src": "5609:18:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                                "typeString": "struct CriteriaResolver[]"
                              }
                            }
                          },
                          "id": 5183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5605:25:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          }
                        },
                        {
                          "id": 5184,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5163,
                          "src": "5679:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 5185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5712:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5712:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2521_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5174,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12923,
                        "src": "5515:32:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$2521_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 5187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5515:217:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5503:229:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5189,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:229:40"
                }
              ]
            },
            "baseFunctions": [
              1099
            ],
            "documentation": {
              "id": 5158,
              "nodeType": "StructuredDocumentation",
              "src": "3851:1334:40",
              "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "b3a34c4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5166,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "5321:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "5321:10:40"
              },
              {
                "id": 5169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5168,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "5340:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "5340:12:40"
              }
            ],
            "name": "fulfillOrder",
            "nameLocation": "5199:12:40",
            "overrides": {
              "id": 5165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5304:8:40"
            },
            "parameters": {
              "id": 5164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5161,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5227:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "5212:20:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$2509_calldata_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 5160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5159,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2509,
                      "src": "5212:5:40"
                    },
                    "referencedDeclaration": 2509,
                    "src": "5212:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$2509_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "5242:19:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "5234:27:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5211:51:40"
            },
            "returnParameters": {
              "id": 5172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5171,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "5375:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "5370:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5170,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5369:16:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5232,
            "nodeType": "FunctionDefinition",
            "src": "8424:595:40",
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "8752:267:40",
              "statements": [
                {
                  "expression": {
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5213,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5211,
                      "src": "8805:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5215,
                          "name": "advancedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5195,
                          "src": "8863:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2521_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          }
                        },
                        {
                          "id": 5216,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5199,
                          "src": "8890:17:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        {
                          "id": 5217,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5201,
                          "src": "8921:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5218,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5203,
                              "src": "8954:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 5221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8975:1:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8967:7:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5219,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8967:7:40",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8967:10:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8954:23:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 5226,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5203,
                            "src": "8993:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 5227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8954:48:40",
                          "trueExpression": {
                            "expression": {
                              "id": 5224,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8980:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8980:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2521_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5214,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12923,
                        "src": "8817:32:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$2521_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8817:195:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8805:207:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "8805:207:40"
                }
              ]
            },
            "baseFunctions": [
              1116
            ],
            "documentation": {
              "id": 5192,
              "nodeType": "StructuredDocumentation",
              "src": "5745:2674:40",
              "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their proxy if\n                            indicated by the order) to transfer any\n                            relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @param recipient           The intended recipient for all received items,\n                            with `address(0)` indicating that the caller\n                            should receive the items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "e7acab24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5207,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5206,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "8683:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8683:10:40"
              },
              {
                "id": 5209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5208,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "8702:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8702:12:40"
              }
            ],
            "name": "fulfillAdvancedOrder",
            "nameLocation": "8433:20:40",
            "overrides": {
              "id": 5205,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8666:8:40"
            },
            "parameters": {
              "id": 5204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5195,
                  "mutability": "mutable",
                  "name": "advancedOrder",
                  "nameLocation": "8486:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "8463:36:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$2521_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 5194,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5193,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2521,
                      "src": "8463:13:40"
                    },
                    "referencedDeclaration": 2521,
                    "src": "8463:13:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$2521_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5199,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "8537:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "8509:45:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5197,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5196,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2543,
                        "src": "8509:16:40"
                      },
                      "referencedDeclaration": 2543,
                      "src": "8509:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 5198,
                    "nodeType": "ArrayTypeName",
                    "src": "8509:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5201,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "8572:19:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "8564:27:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5200,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8564:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5203,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8609:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "8601:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8453:171:40"
            },
            "returnParameters": {
              "id": 5212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5211,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "8737:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "8732:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8732:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8731:16:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5302,
            "nodeType": "FunctionDefinition",
            "src": "12014:1239:40",
            "body": {
              "id": 5301,
              "nodeType": "Block",
              "src": "12459:794:40",
              "statements": [
                {
                  "assignments": [
                    5270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5270,
                      "mutability": "mutable",
                      "name": "advancedOrders",
                      "nameLocation": "12540:14:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 5301,
                      "src": "12517:37:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AdvancedOrder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5268,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5267,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2521,
                            "src": "12517:13:40"
                          },
                          "referencedDeclaration": 2521,
                          "src": "12517:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2521_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "id": 5269,
                        "nodeType": "ArrayTypeName",
                        "src": "12517:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_storage_$dyn_storage_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5274,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5272,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5237,
                        "src": "12595:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      ],
                      "id": 5271,
                      "name": "_convertOrdersToAdvanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13264,
                      "src": "12557:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                      }
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12557:54:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AdvancedOrder memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12517:94:40"
                },
                {
                  "assignments": [
                    5279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5279,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "12713:15:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 5301,
                      "src": "12677:51:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5277,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5276,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9067,
                            "src": "12677:14:40"
                          },
                          "referencedDeclaration": 9067,
                          "src": "12677:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$9067_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 5278,
                        "nodeType": "ArrayTypeName",
                        "src": "12677:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5281,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5270,
                        "src": "12782:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 5280,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13470,
                      "src": "12731:33:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 5282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:79:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12677:133:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5285,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5270,
                        "src": "12930:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 5286,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5279,
                        "src": "12962:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13018:1:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "12995:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 5288,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5287,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2543,
                                "src": "12999:16:40"
                              },
                              "referencedDeclaration": 2543,
                              "src": "12999:16:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 5289,
                            "nodeType": "ArrayTypeName",
                            "src": "12999:18:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 5292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12995:25:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 5293,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5242,
                        "src": "13073:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 5294,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5247,
                        "src": "13108:25:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 5295,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "13151:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 5296,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13188:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13188:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5298,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5251,
                        "src": "13216:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5284,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11764,
                      "src": "12881:31:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 5299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12881:365:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 5265,
                  "id": 5300,
                  "nodeType": "Return",
                  "src": "12862:384:40"
                }
              ]
            },
            "baseFunctions": [
              1145
            ],
            "documentation": {
              "id": 5233,
              "nodeType": "StructuredDocumentation",
              "src": "9025:2984:40",
              "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "ed98a574",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5254,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "12344:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "12344:10:40"
              },
              {
                "id": 5257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5256,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "12363:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "12363:12:40"
              }
            ],
            "name": "fulfillAvailableOrders",
            "nameLocation": "12023:22:40",
            "overrides": {
              "id": 5253,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12327:8:40"
            },
            "parameters": {
              "id": 5252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5237,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "12072:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12055:23:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5235,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5234,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2509,
                        "src": "12055:5:40"
                      },
                      "referencedDeclaration": 2509,
                      "src": "12055:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2509_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 5236,
                    "nodeType": "ArrayTypeName",
                    "src": "12055:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$2509_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5242,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "12122:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12088:51:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 5239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5238,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2557,
                          "src": "12088:20:40"
                        },
                        "referencedDeclaration": 2557,
                        "src": "12088:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$2557_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 5240,
                      "nodeType": "ArrayTypeName",
                      "src": "12088:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 5241,
                    "nodeType": "ArrayTypeName",
                    "src": "12088:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5247,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "12183:25:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12149:59:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 5244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5243,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2557,
                          "src": "12149:20:40"
                        },
                        "referencedDeclaration": 2557,
                        "src": "12149:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$2557_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 5245,
                      "nodeType": "ArrayTypeName",
                      "src": "12149:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 5246,
                    "nodeType": "ArrayTypeName",
                    "src": "12149:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5249,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "12226:19:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12218:27:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12218:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5251,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "12263:16:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12255:24:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12255:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12045:240:40"
            },
            "returnParameters": {
              "id": 5265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5260,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "12407:15:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12393:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5258,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "12393:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5259,
                    "nodeType": "ArrayTypeName",
                    "src": "12393:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5264,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "12443:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5302,
                  "src": "12424:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5262,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5261,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2565,
                        "src": "12424:9:40"
                      },
                      "referencedDeclaration": 2565,
                      "src": "12424:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$2565_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 5263,
                    "nodeType": "ArrayTypeName",
                    "src": "12424:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12392:62:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5372,
            "nodeType": "FunctionDefinition",
            "src": "17619:1186:40",
            "body": {
              "id": 5371,
              "nodeType": "Block",
              "src": "18168:637:40",
              "statements": [
                {
                  "assignments": [
                    5346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5346,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "18270:15:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 5371,
                      "src": "18234:51:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5343,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9067,
                            "src": "18234:14:40"
                          },
                          "referencedDeclaration": 9067,
                          "src": "18234:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$9067_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 5345,
                        "nodeType": "ArrayTypeName",
                        "src": "18234:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5350,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5348,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5307,
                        "src": "18339:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 5347,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13470,
                      "src": "18288:33:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 5349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18288:79:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18234:133:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5352,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5307,
                        "src": "18487:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 5353,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5346,
                        "src": "18519:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 5354,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5311,
                        "src": "18552:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 5355,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5316,
                        "src": "18587:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 5356,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5321,
                        "src": "18622:25:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 5357,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5323,
                        "src": "18665:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5358,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5325,
                            "src": "18702:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 5361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18723:1:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 5360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18715:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5359,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18715:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18715:10:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18702:23:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 5366,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5325,
                          "src": "18741:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "18702:48:40",
                        "trueExpression": {
                          "expression": {
                            "id": 5364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18728:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18728:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5368,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5327,
                        "src": "18768:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5351,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11764,
                      "src": "18438:31:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$9067_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 5369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18438:360:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 5341,
                  "id": 5370,
                  "nodeType": "Return",
                  "src": "18419:379:40"
                }
              ]
            },
            "baseFunctions": [
              1180
            ],
            "documentation": {
              "id": 5303,
              "nodeType": "StructuredDocumentation",
              "src": "13259:4355:40",
              "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their proxy if indicated by\n                                  the order) to transfer any relevant\n                                  tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` in order to receive\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n * @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "87201b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5330,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "18053:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "18053:10:40"
              },
              {
                "id": 5333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5332,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "18072:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "18072:12:40"
              }
            ],
            "name": "fulfillAvailableAdvancedOrders",
            "nameLocation": "17628:30:40",
            "overrides": {
              "id": 5329,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18036:8:40"
            },
            "parameters": {
              "id": 5328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5307,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "17691:14:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17668:37:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5305,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5304,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2521,
                        "src": "17668:13:40"
                      },
                      "referencedDeclaration": 2521,
                      "src": "17668:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$2521_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 5306,
                    "nodeType": "ArrayTypeName",
                    "src": "17668:15:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5311,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "17743:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17715:45:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5309,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5308,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2543,
                        "src": "17715:16:40"
                      },
                      "referencedDeclaration": 2543,
                      "src": "17715:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 5310,
                    "nodeType": "ArrayTypeName",
                    "src": "17715:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5316,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "17804:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17770:51:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 5313,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5312,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2557,
                          "src": "17770:20:40"
                        },
                        "referencedDeclaration": 2557,
                        "src": "17770:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$2557_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 5314,
                      "nodeType": "ArrayTypeName",
                      "src": "17770:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 5315,
                    "nodeType": "ArrayTypeName",
                    "src": "17770:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5321,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "17865:25:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17831:59:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 5318,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5317,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2557,
                          "src": "17831:20:40"
                        },
                        "referencedDeclaration": 2557,
                        "src": "17831:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$2557_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 5319,
                      "nodeType": "ArrayTypeName",
                      "src": "17831:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 5320,
                    "nodeType": "ArrayTypeName",
                    "src": "17831:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2557_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5323,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "17908:19:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17900:27:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17900:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5325,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17945:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17937:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17937:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5327,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "17972:16:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "17964:24:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17964:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17658:336:40"
            },
            "returnParameters": {
              "id": 5341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5336,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "18116:15:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "18102:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5334,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "18102:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5335,
                    "nodeType": "ArrayTypeName",
                    "src": "18102:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5340,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "18152:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5372,
                  "src": "18133:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5338,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5337,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2565,
                        "src": "18133:9:40"
                      },
                      "referencedDeclaration": 2565,
                      "src": "18133:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$2565_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 5339,
                    "nodeType": "ArrayTypeName",
                    "src": "18133:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18101:62:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5407,
            "nodeType": "FunctionDefinition",
            "src": "20304:554:40",
            "body": {
              "id": 5406,
              "nodeType": "Block",
              "src": "20551:307:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5395,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "20722:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          ],
                          "id": 5394,
                          "name": "_convertOrdersToAdvanced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13264,
                          "src": "20697:24:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                          }
                        },
                        "id": 5396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20697:32:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20770:1:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "20747:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 5398,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5397,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2543,
                                "src": "20751:16:40"
                              },
                              "referencedDeclaration": 2543,
                              "src": "20751:16:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 5399,
                            "nodeType": "ArrayTypeName",
                            "src": "20751:18:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 5402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20747:25:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 5403,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5381,
                        "src": "20825:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 5393,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12666,
                      "src": "20659:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 5404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20659:192:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5392,
                  "id": 5405,
                  "nodeType": "Return",
                  "src": "20640:211:40"
                }
              ]
            },
            "baseFunctions": [
              1196
            ],
            "documentation": {
              "id": 5373,
              "nodeType": "StructuredDocumentation",
              "src": "18811:1488:40",
              "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with a set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders            The orders to match. Note that both the offerer\n                          and fulfiller on each order must first approve\n                          this contract (or their proxy if indicated by\n                          the order) to transfer any relevant tokens on\n                          their behalf and each consideration recipient\n                          must implement `onERC1155Received` in order to\n                          receive ERC1155 tokens.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "a8174404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5384,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "20467:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "20467:10:40"
              },
              {
                "id": 5387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5386,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "20486:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "20486:12:40"
              }
            ],
            "name": "matchOrders",
            "nameLocation": "20313:11:40",
            "overrides": {
              "id": 5383,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20450:8:40"
            },
            "parameters": {
              "id": 5382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5377,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "20351:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5407,
                  "src": "20334:23:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5375,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5374,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2509,
                        "src": "20334:5:40"
                      },
                      "referencedDeclaration": 2509,
                      "src": "20334:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2509_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 5376,
                    "nodeType": "ArrayTypeName",
                    "src": "20334:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$2509_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5381,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "20390:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5407,
                  "src": "20367:35:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5379,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5378,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2552,
                        "src": "20367:11:40"
                      },
                      "referencedDeclaration": 2552,
                      "src": "20367:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$2552_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 5380,
                    "nodeType": "ArrayTypeName",
                    "src": "20367:13:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20324:84:40"
            },
            "returnParameters": {
              "id": 5392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5391,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "20535:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5407,
                  "src": "20516:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5389,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5388,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2565,
                        "src": "20516:9:40"
                      },
                      "referencedDeclaration": 2565,
                      "src": "20516:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$2565_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 5390,
                    "nodeType": "ArrayTypeName",
                    "src": "20516:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20515:31:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5439,
            "nodeType": "FunctionDefinition",
            "src": "23289:570:40",
            "body": {
              "id": 5438,
              "nodeType": "Block",
              "src": "23613:246:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5433,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5412,
                        "src": "23759:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 5434,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5416,
                        "src": "23791:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 5435,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5420,
                        "src": "23826:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 5432,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12666,
                      "src": "23721:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$2543_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23721:131:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5431,
                  "id": 5437,
                  "nodeType": "Return",
                  "src": "23702:150:40"
                }
              ]
            },
            "baseFunctions": [
              1216
            ],
            "documentation": {
              "id": 5408,
              "nodeType": "StructuredDocumentation",
              "src": "20864:2420:40",
              "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param advancedOrders    The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or their proxy if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order to receive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "55944a42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5423,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "23529:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "23529:10:40"
              },
              {
                "id": 5426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5425,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14279,
                  "src": "23548:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "23548:12:40"
              }
            ],
            "name": "matchAdvancedOrders",
            "nameLocation": "23298:19:40",
            "overrides": {
              "id": 5422,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23512:8:40"
            },
            "parameters": {
              "id": 5421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5412,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "23350:14:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "23327:37:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5410,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5409,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2521,
                        "src": "23327:13:40"
                      },
                      "referencedDeclaration": 2521,
                      "src": "23327:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$2521_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 5411,
                    "nodeType": "ArrayTypeName",
                    "src": "23327:15:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2521_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5416,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "23402:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "23374:45:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5414,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5413,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2543,
                        "src": "23374:16:40"
                      },
                      "referencedDeclaration": 2543,
                      "src": "23374:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$2543_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 5415,
                    "nodeType": "ArrayTypeName",
                    "src": "23374:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2543_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5420,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "23452:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "23429:35:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5418,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5417,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2552,
                        "src": "23429:11:40"
                      },
                      "referencedDeclaration": 2552,
                      "src": "23429:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$2552_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 5419,
                    "nodeType": "ArrayTypeName",
                    "src": "23429:13:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2552_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23317:153:40"
            },
            "returnParameters": {
              "id": 5431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5430,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "23597:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "23578:29:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$2565_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5428,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5427,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2565,
                        "src": "23578:9:40"
                      },
                      "referencedDeclaration": 2565,
                      "src": "23578:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$2565_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 5429,
                    "nodeType": "ArrayTypeName",
                    "src": "23578:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$2565_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23577:31:40"
            },
            "scope": 5602,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5459,
            "nodeType": "FunctionDefinition",
            "src": "24200:215:40",
            "body": {
              "id": 5458,
              "nodeType": "Block",
              "src": "24341:74:40",
              "statements": [
                {
                  "expression": {
                    "id": 5456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5452,
                      "name": "cancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5450,
                      "src": "24381:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5454,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5444,
                          "src": "24401:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2382_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2382_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        ],
                        "id": 5453,
                        "name": "_cancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14089,
                        "src": "24393:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OrderComponents_$2382_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct OrderComponents calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 5455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24393:15:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24381:27:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5457,
                  "nodeType": "ExpressionStatement",
                  "src": "24381:27:40"
                }
              ]
            },
            "baseFunctions": [
              1226
            ],
            "documentation": {
              "id": 5440,
              "nodeType": "StructuredDocumentation",
              "src": "23865:330:40",
              "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n         or the zone of a given order may cancel it.\n @param orders The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n         been successfully cancelled."
            },
            "functionSelector": "fd9f1e10",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5447,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "24293:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "24293:10:40"
              }
            ],
            "name": "cancel",
            "nameLocation": "24209:6:40",
            "overrides": {
              "id": 5446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24276:8:40"
            },
            "parameters": {
              "id": 5445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5444,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24243:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "24216:33:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5442,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5441,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2382,
                        "src": "24216:15:40"
                      },
                      "referencedDeclaration": 2382,
                      "src": "24216:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$2382_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 5443,
                    "nodeType": "ArrayTypeName",
                    "src": "24216:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2382_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24215:35:40"
            },
            "returnParameters": {
              "id": 5451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5450,
                  "mutability": "mutable",
                  "name": "cancelled",
                  "nameLocation": "24326:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5459,
                  "src": "24321:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24321:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24320:16:40"
            },
            "scope": 5602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5479,
            "nodeType": "FunctionDefinition",
            "src": "24921:211:40",
            "body": {
              "id": 5478,
              "nodeType": "Block",
              "src": "25054:78:40",
              "statements": [
                {
                  "expression": {
                    "id": 5476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5472,
                      "name": "validated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5470,
                      "src": "25096:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5474,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5464,
                          "src": "25118:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        ],
                        "id": 5473,
                        "name": "_validate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14193,
                        "src": "25108:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct Order calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 5475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25108:17:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25096:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5477,
                  "nodeType": "ExpressionStatement",
                  "src": "25096:29:40"
                }
              ]
            },
            "baseFunctions": [
              1236
            ],
            "documentation": {
              "id": 5460,
              "nodeType": "StructuredDocumentation",
              "src": "24421:495:40",
              "text": " @notice Validate an arbitrary number of orders, thereby registering them\n         as valid and allowing the fulfiller to skip verification. Note\n         that anyone can validate a signed order but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return validated A boolean indicating whether the supplied orders have\n         been successfully validated."
            },
            "functionSelector": "88147732",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5467,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "25006:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "25006:10:40"
              }
            ],
            "name": "validate",
            "nameLocation": "24930:8:40",
            "overrides": {
              "id": 5466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24989:8:40"
            },
            "parameters": {
              "id": 5465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5464,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24956:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5479,
                  "src": "24939:23:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$2509_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5462,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5461,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2509,
                        "src": "24939:5:40"
                      },
                      "referencedDeclaration": 2509,
                      "src": "24939:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$2509_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 5463,
                    "nodeType": "ArrayTypeName",
                    "src": "24939:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$2509_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24938:25:40"
            },
            "returnParameters": {
              "id": 5471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5470,
                  "mutability": "mutable",
                  "name": "validated",
                  "nameLocation": "25039:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5479,
                  "src": "25034:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25034:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25033:16:40"
            },
            "scope": 5602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5494,
            "nodeType": "FunctionDefinition",
            "src": "25395:234:40",
            "body": {
              "id": 5493,
              "nodeType": "Block",
              "src": "25517:112:40",
              "statements": [
                {
                  "expression": {
                    "id": 5491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5488,
                      "name": "newCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5486,
                      "src": "25590:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5489,
                        "name": "_incrementCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "25603:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () returns (uint256)"
                        }
                      },
                      "id": 5490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25603:19:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25590:32:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5492,
                  "nodeType": "ExpressionStatement",
                  "src": "25590:32:40"
                }
              ]
            },
            "baseFunctions": [
              1242
            ],
            "documentation": {
              "id": 5480,
              "nodeType": "StructuredDocumentation",
              "src": "25138:252:40",
              "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a counter. Note that only the offerer may\n         increment the counter.\n @return newCounter The new counter."
            },
            "functionSelector": "5b34b966",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5483,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14292,
                  "src": "25465:10:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "25465:10:40"
              }
            ],
            "name": "incrementCounter",
            "nameLocation": "25404:16:40",
            "overrides": {
              "id": 5482,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25448:8:40"
            },
            "parameters": {
              "id": 5481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25420:2:40"
            },
            "returnParameters": {
              "id": 5487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5486,
                  "mutability": "mutable",
                  "name": "newCounter",
                  "nameLocation": "25501:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5494,
                  "src": "25493:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25493:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25492:20:40"
            },
            "scope": 5602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5537,
            "nodeType": "FunctionDefinition",
            "src": "25813:747:40",
            "body": {
              "id": 5536,
              "nodeType": "Block",
              "src": "25954:606:40",
              "statements": [
                {
                  "expression": {
                    "id": 5534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5504,
                      "name": "orderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5502,
                      "src": "26085:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5507,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26160:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2356,
                              "src": "26160:13:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5509,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26191:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2358,
                              "src": "26191:10:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5511,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26219:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2362,
                              "src": "26219:11:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$2394_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 5513,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26248:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consideration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2366,
                              "src": "26248:19:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2408_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 5515,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26285:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "orderType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2369,
                              "src": "26285:15:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OrderType_$2305",
                                "typeString": "enum OrderType"
                              }
                            },
                            {
                              "expression": {
                                "id": 5517,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26318:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2371,
                              "src": "26318:15:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 5519,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26351:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2373,
                              "src": "26351:13:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 5521,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26382:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zoneHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2375,
                              "src": "26382:14:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 5523,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26414:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "salt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2377,
                              "src": "26414:10:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 5525,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5498,
                                "src": "26442:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 5526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "conduitKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2379,
                              "src": "26442:16:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 5527,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5498,
                                  "src": "26476:5:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                                    "typeString": "struct OrderComponents calldata"
                                  }
                                },
                                "id": 5528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "consideration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2366,
                                "src": "26476:19:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2408_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct ConsiderationItem calldata[] calldata"
                                }
                              },
                              "id": 5529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "26476:26:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$2394_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2408_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_enum$_OrderType_$2305",
                                "typeString": "enum OrderType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5506,
                            "name": "OrderParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2503,
                            "src": "26127:15:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OrderParameters_$2503_storage_ptr_$",
                              "typeString": "type(struct OrderParameters storage pointer)"
                            }
                          },
                          "id": 5530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26127:389:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderParameters_$2503_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 5531,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5498,
                            "src": "26530:5:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                              "typeString": "struct OrderComponents calldata"
                            }
                          },
                          "id": 5532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "counter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2381,
                          "src": "26530:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderParameters_$2503_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5505,
                        "name": "_deriveOrderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11539,
                        "src": "26097:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$2503_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (struct OrderParameters memory,uint256) view returns (bytes32)"
                        }
                      },
                      "id": 5533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26097:456:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "26085:468:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 5535,
                  "nodeType": "ExpressionStatement",
                  "src": "26085:468:40"
                }
              ]
            },
            "baseFunctions": [
              1251
            ],
            "documentation": {
              "id": 5495,
              "nodeType": "StructuredDocumentation",
              "src": "25635:173:40",
              "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return orderHash the order hash."
            },
            "functionSelector": "79df72bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderHash",
            "nameLocation": "25822:12:40",
            "overrides": {
              "id": 5500,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25905:8:40"
            },
            "parameters": {
              "id": 5499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5498,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "25860:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5537,
                  "src": "25835:30:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderComponents_$2382_calldata_ptr",
                    "typeString": "struct OrderComponents"
                  },
                  "typeName": {
                    "id": 5497,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5496,
                      "name": "OrderComponents",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2382,
                      "src": "25835:15:40"
                    },
                    "referencedDeclaration": 2382,
                    "src": "25835:15:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderComponents_$2382_storage_ptr",
                      "typeString": "struct OrderComponents"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25834:32:40"
            },
            "returnParameters": {
              "id": 5503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5502,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "25939:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5537,
                  "src": "25931:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5501,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25931:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25930:19:40"
            },
            "scope": 5602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5557,
            "nodeType": "FunctionDefinition",
            "src": "27447:354:40",
            "body": {
              "id": 5556,
              "nodeType": "Block",
              "src": "27692:109:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5553,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5540,
                        "src": "27784:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 5552,
                      "name": "_getOrderStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14225,
                      "src": "27768:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes32) view returns (bool,bool,uint256,uint256)"
                      }
                    },
                    "id": 5554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27768:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 5551,
                  "id": 5555,
                  "nodeType": "Return",
                  "src": "27761:33:40"
                }
              ]
            },
            "baseFunctions": [
              1265
            ],
            "documentation": {
              "id": 5538,
              "nodeType": "StructuredDocumentation",
              "src": "26566:876:40",
              "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
            },
            "functionSelector": "46423aa7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderStatus",
            "nameLocation": "27456:14:40",
            "overrides": {
              "id": 5542,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27528:8:40"
            },
            "parameters": {
              "id": 5541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5540,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "27479:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5557,
                  "src": "27471:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5539,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27471:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27470:19:40"
            },
            "returnParameters": {
              "id": 5551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5544,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "27572:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5557,
                  "src": "27567:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27567:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5546,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "27602:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5557,
                  "src": "27597:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27597:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5548,
                  "mutability": "mutable",
                  "name": "totalFilled",
                  "nameLocation": "27635:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5557,
                  "src": "27627:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27627:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5550,
                  "mutability": "mutable",
                  "name": "totalSize",
                  "nameLocation": "27668:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5557,
                  "src": "27660:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27660:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27553:134:40"
            },
            "scope": 5602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5573,
            "nodeType": "FunctionDefinition",
            "src": "27993:225:40",
            "body": {
              "id": 5572,
              "nodeType": "Block",
              "src": "28115:103:40",
              "statements": [
                {
                  "expression": {
                    "id": 5570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5566,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5564,
                      "src": "28181:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5568,
                          "name": "offerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5560,
                          "src": "28203:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5567,
                        "name": "_getCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9138,
                        "src": "28191:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 5569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28191:20:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28181:30:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5571,
                  "nodeType": "ExpressionStatement",
                  "src": "28181:30:40"
                }
              ]
            },
            "baseFunctions": [
              1273
            ],
            "documentation": {
              "id": 5558,
              "nodeType": "StructuredDocumentation",
              "src": "27807:181:40",
              "text": " @notice Retrieve the current counter for a given offerer.\n @param offerer The offerer in question.\n @return counter The current counter."
            },
            "functionSelector": "f07ec373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounter",
            "nameLocation": "28002:10:40",
            "overrides": {
              "id": 5562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28068:8:40"
            },
            "parameters": {
              "id": 5561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5560,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "28021:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5573,
                  "src": "28013:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28013:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28012:17:40"
            },
            "returnParameters": {
              "id": 5565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5564,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "28102:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5573,
                  "src": "28094:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28094:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28093:17:40"
            },
            "scope": 5602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5588,
            "nodeType": "FunctionDefinition",
            "src": "28523:303:40",
            "body": {
              "id": 5587,
              "nodeType": "Block",
              "src": "28735:91:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5584,
                      "name": "_information",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11646,
                      "src": "28805:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                        "typeString": "function () view returns (string memory,bytes32,address)"
                      }
                    },
                    "id": 5585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28805:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(string memory,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 5583,
                  "id": 5586,
                  "nodeType": "Return",
                  "src": "28798:21:40"
                }
              ]
            },
            "baseFunctions": [
              1283
            ],
            "documentation": {
              "id": 5574,
              "nodeType": "StructuredDocumentation",
              "src": "28224:294:40",
              "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
            },
            "functionSelector": "f47b7740",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "information",
            "nameLocation": "28532:11:40",
            "overrides": {
              "id": 5576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28584:8:40"
            },
            "parameters": {
              "id": 5575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28543:2:40"
            },
            "returnParameters": {
              "id": 5583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5578,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "28637:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5588,
                  "src": "28623:21:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5577,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28623:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5580,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "28666:15:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5588,
                  "src": "28658:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5579,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28658:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5582,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "28703:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5588,
                  "src": "28695:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28695:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28609:121:40"
            },
            "scope": 5602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5601,
            "nodeType": "FunctionDefinition",
            "src": "28961:195:40",
            "body": {
              "id": 5600,
              "nodeType": "Block",
              "src": "29073:83:40",
              "statements": [
                {
                  "expression": {
                    "id": 5598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5595,
                      "name": "contractName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5593,
                      "src": "29127:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5596,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11655,
                        "src": "29142:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                          "typeString": "function () pure returns (string memory)"
                        }
                      },
                      "id": 5597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29142:7:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "29127:22:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5599,
                  "nodeType": "ExpressionStatement",
                  "src": "29127:22:40"
                }
              ]
            },
            "baseFunctions": [
              1289
            ],
            "documentation": {
              "id": 5589,
              "nodeType": "StructuredDocumentation",
              "src": "28832:124:40",
              "text": " @notice Retrieve the name of this contract.\n @return contractName The name of this contract."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "28970:4:40",
            "overrides": {
              "id": 5591,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29015:8:40"
            },
            "parameters": {
              "id": 5590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28974:2:40"
            },
            "returnParameters": {
              "id": 5594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5593,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "29055:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "29041:26:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "29041:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29040:28:40"
            },
            "scope": 5602,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5123,
              "name": "ConsiderationInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1290,
              "src": "1338:22:40"
            },
            "id": 5124,
            "nodeType": "InheritanceSpecifier",
            "src": "1338:22:40"
          },
          {
            "baseName": {
              "id": 5125,
              "name": "ReferenceOrderCombiner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12807,
              "src": "1366:22:40"
            },
            "id": 5126,
            "nodeType": "InheritanceSpecifier",
            "src": "1366:22:40"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5122,
          "nodeType": "StructuredDocumentation",
          "src": "613:685:40",
          "text": " @title ReferenceConsideration\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @custom:version rc-1.1\n @notice Consideration is a generalized ETH/ERC20/ERC721/ERC1155 marketplace.\n         It minimizes external calls to the greatest extent possible and\n         provides lightweight methods for common routes as well as more\n         flexible methods for composing advanced orders or groups of orders.\n         Each order contains an arbitrary number of items that may be spent\n         (the \"offer\") along with an arbitrary number of items that must be\n         received back by the indicated recipients (the \"consideration\")."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5602,
          12807,
          11339,
          1348,
          13471,
          6931,
          662,
          9868,
          1315,
          8737,
          14247,
          15005,
          1730,
          10424,
          14680,
          14837,
          14478,
          1639,
          7105,
          1699,
          9139,
          14293,
          11656,
          9004,
          1397,
          1066,
          1290
        ],
        "name": "ReferenceConsideration",
        "nameLocation": "1308:22:40",
        "scope": 5603,
        "usedErrors": [
          661,
          995,
          998,
          1005,
          1008,
          1013,
          1022,
          1025,
          1032,
          1035,
          1040,
          1045,
          1048,
          1051,
          1056,
          1059,
          1062,
          1065,
          1296,
          1299,
          1302,
          1305,
          1308,
          1311,
          1314,
          1338,
          1341,
          1344,
          1347,
          1396,
          1629,
          1632,
          1635,
          1638,
          1645,
          1648,
          1651,
          1664,
          1679,
          1690,
          1695,
          1698,
          1729
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 40
}