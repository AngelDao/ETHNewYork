{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPotentialOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPauser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerCanNotBeSetAsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PauserCanNotBeSetAsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "ZoneAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        }
      ],
      "name": "PauserUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "PotentialOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "ZoneCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operatorToAssign",
          "type": "address"
        }
      ],
      "name": "assignOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract SeaportInterface",
          "name": "seaport",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancelOrders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract SeaportInterface",
          "name": "seaport",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "executeMatchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract SeaportInterface",
          "name": "seaport",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "executeMatchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "zoneHash",
          "type": "bytes32"
        }
      ],
      "name": "isValidOrder",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "validOrderMagicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "priorOrderHashes",
          "type": "bytes32[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        }
      ],
      "name": "isValidOrderIncludingExtraData",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "validOrderMagicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50336080526040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a160805161181961007560003960008181610276015281816103d701528181610518015281816105c9015261072201526118196000f3fe60806040526004361061007b5760003560e01c806365c4eb721161004e57806365c4eb72146101b357806376a67a51146101c657806384385c6f146101e8578063e5c27af11461020857600080fd5b80630e1d31dc146100805780632718034d146100fa578063331315701461011a578063570ca73514610161575b600080fd5b34801561008c57600080fd5b506100c461009b366004610850565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009392505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010d6101083660046108e4565b610238565b6040516100f191906109aa565b34801561012657600080fd5b506100c4610135366004610a50565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009695505050505050565b34801561016d57600080fd5b5060005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f1565b61010d6101c1366004610b09565b610399565b3480156101d257600080fd5b506101e66101e1366004610b96565b610500565b005b3480156101f457600080fd5b506101e6610203366004610b96565b6105b1565b34801561021457600080fd5b50610228610223366004610bba565b6106e6565b60405190151581526020016100f1565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331480159061029957503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b156102d0576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa817440400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a817440490349061032a90899089908990899060040161117d565b60006040518083038185885af1158015610348573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261038f9190810190611313565b9695505050505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633148015906103fa57503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b15610431576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f55944a4200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906355944a4290349061048f908b908b908b908b908b908b9060040161160c565b60006040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104f49190810190611313565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461056f576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a18073ffffffffffffffffffffffffffffffffffffffff16ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610620576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661066d576040517fd0769d8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff16331480159061074557503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b1561077c576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ffd9f1e1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fd9f1e10906107d0908690869060040161174e565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081391906117c1565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b50565b803561084b8161081b565b919050565b6000806000806080858703121561086657600080fd5b8435935060208501356108788161081b565b925060408501356108888161081b565b9396929550929360600135925050565b60008083601f8401126108aa57600080fd5b50813567ffffffffffffffff8111156108c257600080fd5b6020830191508360208260051b85010111156108dd57600080fd5b9250929050565b6000806000806000606086880312156108fc57600080fd5b85356109078161081b565b9450602086013567ffffffffffffffff8082111561092457600080fd5b61093089838a01610898565b9096509450604088013591508082111561094957600080fd5b5061095688828901610898565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106109a6576109a6610967565b9052565b602080825282518282018190526000919060409081850190868401855b82811015610a4357815180516109de868251610996565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e090930192908501906001016109c7565b5091979650505050505050565b600080600080600080600060a0888a031215610a6b57600080fd5b873596506020880135610a7d8161081b565b9550604088013567ffffffffffffffff80821115610a9a57600080fd5b9089019060a0828c031215610aae57600080fd5b90955060608901359080821115610ac457600080fd5b610ad08b838c01610898565b909650945060808a0135915080821115610ae957600080fd5b50610af68a828b01610898565b989b979a50959850939692959293505050565b60008060008060008060006080888a031215610b2457600080fd5b8735610b2f8161081b565b9650602088013567ffffffffffffffff80821115610b4c57600080fd5b610b588b838c01610898565b909850965060408a0135915080821115610b7157600080fd5b610b7d8b838c01610898565b909650945060608a0135915080821115610ae957600080fd5b600060208284031215610ba857600080fd5b8135610bb38161081b565b9392505050565b600080600060408486031215610bcf57600080fd5b8335610bda8161081b565b9250602084013567ffffffffffffffff811115610bf657600080fd5b610c0286828701610898565b9497909650939450505050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112610c4357600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c8157600080fd5b830160208101925035905067ffffffffffffffff811115610ca157600080fd5b60a0810236038213156108dd57600080fd5b6006811061083d57600080fd5b8183526000602080850194508260005b85811015610d45578135610ce381610cb3565b610ced8882610996565b5082820135610cfb8161081b565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a09687019690910190600101610cd0565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8557600080fd5b830160208101925035905067ffffffffffffffff811115610da557600080fd5b60c0810236038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d45578135610dda81610cb3565b610de48882610996565b5082820135610df28161081b565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a09081840135610e3c8161081b565b169088015260c0968701969190910190600101610dc7565b80356004811061084b57600080fd5b600481106109a6576109a6610967565b6000610160610e9f84610e8585610840565b73ffffffffffffffffffffffffffffffffffffffff169052565b610eab60208401610840565b73ffffffffffffffffffffffffffffffffffffffff166020850152610ed36040840184610c4c565b826040870152610ee68387018284610cc0565b92505050610ef76060840184610d50565b8583036060870152610f0a838284610db7565b92505050610f1a60808401610e54565b610f276080860182610e63565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fa457600080fd5b830160208101925035905067ffffffffffffffff811115610fc457600080fd5b8036038213156108dd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610c4357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261108557600080fd5b830160208101925035905067ffffffffffffffff8111156110a557600080fd5b8060061b36038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d4557813587528282013583880152604096870196909101906001016110c7565b818352600060208085019450848460051b86018460005b8781101561117057838303895261111b828861101c565b60406111278283611050565b82875261113783880182846110b7565b9250505061114787830183611050565b92508582038887015261115b8284836110b7565b9b88019b955050509185019150600101611104565b5090979650505050505050565b60408082528181018590526000906060600587901b8401810190840188845b89811015611228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08785030183526111d5828c61101c565b6111df8182610c0f565b8686526111ee87870182610e73565b905060206111fe81840184610f6f565b935087830382890152611212838583610fd3565b975050948501949390930192505060010161119c565b50505083810360208501526104f48186886110ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b60405160a0810167ffffffffffffffff811182821017156112905761129061123e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113005761130061123e565b604052919050565b805161084b8161081b565b6000602080838503121561132657600080fd5b825167ffffffffffffffff8082111561133e57600080fd5b818501915085601f83011261135257600080fd5b8151818111156113645761136461123e565b611372848260051b016112b9565b818152848101925060e091820284018501918883111561139157600080fd5b938501935b8285101561144257848903818112156113af5760008081fd5b6113b761126d565b60a0808312156113c75760008081fd5b6113cf611296565b925087516113dc81610cb3565b8352878901516113eb8161081b565b838a0152604088810151818501526060808a0151908501526080808a01516114128161081b565b90850152838352611424898301611308565b838b015260c089015190830152508552509384019392850192611396565b50979650505050505050565b80356effffffffffffffffffffffffffffff8116811461084b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112610c4357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114d357600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352602080840193600091600585811b8301820185855b888110156115fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018a52611541828961146d565b60a081358552868201356002811061155857600080fd5b858801526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126115a757600080fd5b90920187810192903567ffffffffffffffff8111156115c557600080fd5b80881b36038413156115d657600080fd5b82828801526115e883880182866114a1565b9d89019d96505050928601925050600101611508565b509098975050505050505050565b6060808252818101879052600090608080840160058a901b850182018b855b8c811015611714577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888403018452611664828f61146d565b60a06116708283610c0f565b81865261167f82870182610e73565b915050602061168f81840161144e565b6effffffffffffffffffffffffffffff90811687830152604090806116b586840161144e565b168289015250506116c889840184610f6f565b8784038b8901526116da848284610fd3565b935050506116ea88840184610f6f565b9350868303898801526116fe838583610fd3565b978201979650509390930192505060010161162b565b50508581036020870152611729818a8c6114f0565b935050505082810360408401526117418185876110ed565b9998505050505050505050565b60208082528181018390526000906040600585901b8401810190840186845b87811015610a43577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08785030183526117af846117aa848c610c0f565b610e73565b9350918401919084019060010161176d565b6000602082840312156117d357600080fd5b81518015158114610bb357600080fdfea2646970667358221220c5f187cc817a02f98f5bbe1c970fe690696f52fb9b430e4b7cdc1128a337e69964736f6c634300080e0033",
    "sourceMap": "930:8521:46:-:0;;;2033:191;;;;;;;;;-1:-1:-1;2118:10:46;2104:24;;2207:10;;;;;;;930:8521;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061007b5760003560e01c806365c4eb721161004e57806365c4eb72146101b357806376a67a51146101c657806384385c6f146101e8578063e5c27af11461020857600080fd5b80630e1d31dc146100805780632718034d146100fa578063331315701461011a578063570ca73514610161575b600080fd5b34801561008c57600080fd5b506100c461009b366004610850565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009392505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010d6101083660046108e4565b610238565b6040516100f191906109aa565b34801561012657600080fd5b506100c4610135366004610a50565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009695505050505050565b34801561016d57600080fd5b5060005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f1565b61010d6101c1366004610b09565b610399565b3480156101d257600080fd5b506101e66101e1366004610b96565b610500565b005b3480156101f457600080fd5b506101e6610203366004610b96565b6105b1565b34801561021457600080fd5b50610228610223366004610bba565b6106e6565b60405190151581526020016100f1565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331480159061029957503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b156102d0576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa817440400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a817440490349061032a90899089908990899060040161117d565b60006040518083038185885af1158015610348573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261038f9190810190611313565b9695505050505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633148015906103fa57503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b15610431576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f55944a4200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906355944a4290349061048f908b908b908b908b908b908b9060040161160c565b60006040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104f49190810190611313565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461056f576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a18073ffffffffffffffffffffffffffffffffffffffff16ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610620576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661066d576040517fd0769d8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff16331480159061074557503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b1561077c576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ffd9f1e1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fd9f1e10906107d0908690869060040161174e565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081391906117c1565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b50565b803561084b8161081b565b919050565b6000806000806080858703121561086657600080fd5b8435935060208501356108788161081b565b925060408501356108888161081b565b9396929550929360600135925050565b60008083601f8401126108aa57600080fd5b50813567ffffffffffffffff8111156108c257600080fd5b6020830191508360208260051b85010111156108dd57600080fd5b9250929050565b6000806000806000606086880312156108fc57600080fd5b85356109078161081b565b9450602086013567ffffffffffffffff8082111561092457600080fd5b61093089838a01610898565b9096509450604088013591508082111561094957600080fd5b5061095688828901610898565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106109a6576109a6610967565b9052565b602080825282518282018190526000919060409081850190868401855b82811015610a4357815180516109de868251610996565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e090930192908501906001016109c7565b5091979650505050505050565b600080600080600080600060a0888a031215610a6b57600080fd5b873596506020880135610a7d8161081b565b9550604088013567ffffffffffffffff80821115610a9a57600080fd5b9089019060a0828c031215610aae57600080fd5b90955060608901359080821115610ac457600080fd5b610ad08b838c01610898565b909650945060808a0135915080821115610ae957600080fd5b50610af68a828b01610898565b989b979a50959850939692959293505050565b60008060008060008060006080888a031215610b2457600080fd5b8735610b2f8161081b565b9650602088013567ffffffffffffffff80821115610b4c57600080fd5b610b588b838c01610898565b909850965060408a0135915080821115610b7157600080fd5b610b7d8b838c01610898565b909650945060608a0135915080821115610ae957600080fd5b600060208284031215610ba857600080fd5b8135610bb38161081b565b9392505050565b600080600060408486031215610bcf57600080fd5b8335610bda8161081b565b9250602084013567ffffffffffffffff811115610bf657600080fd5b610c0286828701610898565b9497909650939450505050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112610c4357600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c8157600080fd5b830160208101925035905067ffffffffffffffff811115610ca157600080fd5b60a0810236038213156108dd57600080fd5b6006811061083d57600080fd5b8183526000602080850194508260005b85811015610d45578135610ce381610cb3565b610ced8882610996565b5082820135610cfb8161081b565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a09687019690910190600101610cd0565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8557600080fd5b830160208101925035905067ffffffffffffffff811115610da557600080fd5b60c0810236038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d45578135610dda81610cb3565b610de48882610996565b5082820135610df28161081b565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a09081840135610e3c8161081b565b169088015260c0968701969190910190600101610dc7565b80356004811061084b57600080fd5b600481106109a6576109a6610967565b6000610160610e9f84610e8585610840565b73ffffffffffffffffffffffffffffffffffffffff169052565b610eab60208401610840565b73ffffffffffffffffffffffffffffffffffffffff166020850152610ed36040840184610c4c565b826040870152610ee68387018284610cc0565b92505050610ef76060840184610d50565b8583036060870152610f0a838284610db7565b92505050610f1a60808401610e54565b610f276080860182610e63565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fa457600080fd5b830160208101925035905067ffffffffffffffff811115610fc457600080fd5b8036038213156108dd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610c4357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261108557600080fd5b830160208101925035905067ffffffffffffffff8111156110a557600080fd5b8060061b36038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d4557813587528282013583880152604096870196909101906001016110c7565b818352600060208085019450848460051b86018460005b8781101561117057838303895261111b828861101c565b60406111278283611050565b82875261113783880182846110b7565b9250505061114787830183611050565b92508582038887015261115b8284836110b7565b9b88019b955050509185019150600101611104565b5090979650505050505050565b60408082528181018590526000906060600587901b8401810190840188845b89811015611228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08785030183526111d5828c61101c565b6111df8182610c0f565b8686526111ee87870182610e73565b905060206111fe81840184610f6f565b935087830382890152611212838583610fd3565b975050948501949390930192505060010161119c565b50505083810360208501526104f48186886110ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b60405160a0810167ffffffffffffffff811182821017156112905761129061123e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113005761130061123e565b604052919050565b805161084b8161081b565b6000602080838503121561132657600080fd5b825167ffffffffffffffff8082111561133e57600080fd5b818501915085601f83011261135257600080fd5b8151818111156113645761136461123e565b611372848260051b016112b9565b818152848101925060e091820284018501918883111561139157600080fd5b938501935b8285101561144257848903818112156113af5760008081fd5b6113b761126d565b60a0808312156113c75760008081fd5b6113cf611296565b925087516113dc81610cb3565b8352878901516113eb8161081b565b838a0152604088810151818501526060808a0151908501526080808a01516114128161081b565b90850152838352611424898301611308565b838b015260c089015190830152508552509384019392850192611396565b50979650505050505050565b80356effffffffffffffffffffffffffffff8116811461084b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112610c4357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114d357600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352602080840193600091600585811b8301820185855b888110156115fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018a52611541828961146d565b60a081358552868201356002811061155857600080fd5b858801526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126115a757600080fd5b90920187810192903567ffffffffffffffff8111156115c557600080fd5b80881b36038413156115d657600080fd5b82828801526115e883880182866114a1565b9d89019d96505050928601925050600101611508565b509098975050505050505050565b6060808252818101879052600090608080840160058a901b850182018b855b8c811015611714577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888403018452611664828f61146d565b60a06116708283610c0f565b81865261167f82870182610e73565b915050602061168f81840161144e565b6effffffffffffffffffffffffffffff90811687830152604090806116b586840161144e565b168289015250506116c889840184610f6f565b8784038b8901526116da848284610fd3565b935050506116ea88840184610f6f565b9350868303898801526116fe838583610fd3565b978201979650509390930192505060010161162b565b50508581036020870152611729818a8c6114f0565b935050505082810360408401526117418185876110ed565b9998505050505050505050565b60208082528181018390526000906040600585901b8401810190840186845b87811015610a43577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08785030183526117af846117aa848c610c0f565b610e73565b9350918401919084019060010161176d565b6000602082840312156117d357600080fd5b81518015158114610bb357600080fdfea2646970667358221220c5f187cc817a02f98f5bbe1c970fe690696f52fb9b430e4b7cdc1128a337e69964736f6c634300080e0033",
    "sourceMap": "930:8521:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4638:404;;;;;;;;;;-1:-1:-1;4638:404:46;;;;;:::i;:::-;-1:-1:-1;5000:35:46;;4638:404;-1:-1:-1;;;4638:404:46;;;;1016:66:98;1004:79;;;986:98;;974:2;959:18;4638:404:46;;;;;;;;7151:527;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5897:542::-;;;;;;;;;;-1:-1:-1;5897:542:46;;;;;:::i;:::-;-1:-1:-1;6397:35:46;;5897:542;-1:-1:-1;;;;;;5897:542:46;1244:23;;;;;;;;;;-1:-1:-1;1244:23:46;;;;;;;;;;;5771:42:98;5759:55;;;5741:74;;5729:2;5714:18;1244:23:46;5595:226:98;8804:645:46;;;;;;:::i;:::-;;:::i;3157:268::-;;;;;;;;;;-1:-1:-1;3157:268:46;;;;;:::i;:::-;;:::i;:::-;;3602:485;;;;;;;;;;-1:-1:-1;3602:485:46;;;;;:::i;:::-;;:::i;2601:274::-;;;;;;;;;;-1:-1:-1;2601:274:46;;;;;:::i;:::-;;:::i;:::-;;;8290:14:98;;8283:22;8265:41;;8253:2;8238:18;2601:274:46;8125:187:98;7151:527:46;1489:8;;7383:29;;1489:8;;1475:10;:22;;;;:51;;-1:-1:-1;1501:10:46;:25;1515:11;1501:25;;;1475:51;1471:106;;;1549:17;;;;;;;;;;;;;;1471:106;7576:95:::1;::::0;;;;:19:::1;::::0;::::1;::::0;::::1;::::0;7604:9:::1;::::0;7576:95:::1;::::0;7629:6;;;;7649:12;;;;7576:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7563:108:::0;7151:527;-1:-1:-1;;;;;;7151:527:46:o;8804:645::-;1489:8;;9107:29;;1489:8;;1475:10;:22;;;;:51;;-1:-1:-1;1501:10:46;:25;1515:11;1501:25;;;1475:51;1471:106;;;1549:17;;;;;;;;;;;;;;1471:106;9308:134:::1;::::0;;;;:27:::1;::::0;::::1;::::0;::::1;::::0;9344:9:::1;::::0;9308:134:::1;::::0;9369:6;;;;9389:17;;;;9420:12;;;;9308:134:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;9295:147:::0;8804:645;-1:-1:-1;;;;;;;;8804:645:46:o;3157:268::-;1807:10;:25;1821:11;1807:25;;1803:82;;1855:19;;;;;;;;;;;;;;1803:82;3294:8:::1;::::0;::::1;::::0;;;::::1;3411:5;3390:28;;;3602:485:::0;1807:10;:25;1821:11;1807:25;;1803:82;;1855:19;;;;;;;;;;;;;;1803:82;3796:30:::1;::::0;::::1;3792:89;;3849:21;;;;;;;;;;;;;;3792:89;3945:8;:27:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;4055:25:::1;::::0;5741:74:98;;;4055:25:46::1;::::0;5729:2:98;5714:18;4055:25:46::1;;;;;;;3602:485:::0;:::o;2601:274::-;2744:14;1489:8;;;;1475:10;:22;;;;:51;;-1:-1:-1;1501:10:46;:25;1515:11;1501:25;;;1475:51;1471:106;;;1549:17;;;;;;;;;;;;;;1471:106;2846:22:::1;::::0;;;;:14:::1;::::0;::::1;::::0;::::1;::::0;:22:::1;::::0;2861:6;;;;2846:22:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2834:34:::0;2601:274;-1:-1:-1;;;;2601:274:46:o;14:154:98:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:525::-;398:6;406;414;422;475:3;463:9;454:7;450:23;446:33;443:53;;;492:1;489;482:12;443:53;528:9;515:23;505:33;;588:2;577:9;573:18;560:32;601:31;626:5;601:31;:::i;:::-;651:5;-1:-1:-1;708:2:98;693:18;;680:32;721:33;680:32;721:33;:::i;:::-;312:525;;;;-1:-1:-1;773:7:98;;827:2;812:18;799:32;;-1:-1:-1;;312:525:98:o;1095:381::-;1172:8;1182:6;1236:3;1229:4;1221:6;1217:17;1213:27;1203:55;;1254:1;1251;1244:12;1203:55;-1:-1:-1;1277:20:98;;1320:18;1309:30;;1306:50;;;1352:1;1349;1342:12;1306:50;1389:4;1381:6;1377:17;1365:29;;1449:3;1442:4;1432:6;1429:1;1425:14;1417:6;1413:27;1409:38;1406:47;1403:67;;;1466:1;1463;1456:12;1403:67;1095:381;;;;;:::o;1481:1017::-;1693:6;1701;1709;1717;1725;1778:2;1766:9;1757:7;1753:23;1749:32;1746:52;;;1794:1;1791;1784:12;1746:52;1833:9;1820:23;1852:31;1877:5;1852:31;:::i;:::-;1902:5;-1:-1:-1;1958:2:98;1943:18;;1930:32;1981:18;2011:14;;;2008:34;;;2038:1;2035;2028:12;2008:34;2077:84;2153:7;2144:6;2133:9;2129:22;2077:84;:::i;:::-;2180:8;;-1:-1:-1;2051:110:98;-1:-1:-1;2268:2:98;2253:18;;2240:32;;-1:-1:-1;2284:16:98;;;2281:36;;;2313:1;2310;2303:12;2281:36;;2352:86;2430:7;2419:8;2408:9;2404:24;2352:86;:::i;:::-;1481:1017;;;;-1:-1:-1;1481:1017:98;;-1:-1:-1;2457:8:98;;2326:112;1481:1017;-1:-1:-1;;;1481:1017:98:o;2503:184::-;2555:77;2552:1;2545:88;2652:4;2649:1;2642:15;2676:4;2673:1;2666:15;2692:139;2772:1;2765:5;2762:12;2752:46;;2778:18;;:::i;:::-;2807;;2692:139::o;2968:1304::-;3193:2;3245:21;;;3315:13;;3218:18;;;3337:22;;;3164:4;;3193:2;3378;;3396:18;;;;3437:15;;;3164:4;3480:766;3494:6;3491:1;3488:13;3480:766;;;3559:6;3553:13;3595:2;3589:9;3611:40;3647:3;3642:2;3636:9;3611:40;:::i;:::-;3690:11;;;3684:18;3725:42;3801:21;;;3787:12;;;3780:43;3863:11;;;3857:18;3843:12;;;3836:40;3899:4;3943:11;;;3937:18;3923:12;;;3916:40;3979:4;4027:11;;;4021:18;4017:27;;4003:12;;;3996:49;;;;4091:11;;;4085:18;4081:27;4074:4;4065:14;;4058:51;4151:11;;4145:18;4138:4;4129:14;;4122:42;4193:4;4184:14;;;;4221:15;;;;3516:1;3509:9;3480:766;;;-1:-1:-1;4263:3:98;;2968:1304;-1:-1:-1;;;;;;;2968:1304:98:o;4277:1313::-;4495:6;4503;4511;4519;4527;4535;4543;4596:3;4584:9;4575:7;4571:23;4567:33;4564:53;;;4613:1;4610;4603:12;4564:53;4649:9;4636:23;4626:33;;4709:2;4698:9;4694:18;4681:32;4722:31;4747:5;4722:31;:::i;:::-;4772:5;-1:-1:-1;4828:2:98;4813:18;;4800:32;4851:18;4881:14;;;4878:34;;;4908:1;4905;4898:12;4878:34;4931:22;;;;4987:3;4969:16;;;4965:26;4962:46;;;5004:1;5001;4994:12;4962:46;5027:2;;-1:-1:-1;5082:2:98;5067:18;;5054:32;;5098:16;;;5095:36;;;5127:1;5124;5117:12;5095:36;5166:86;5244:7;5233:8;5222:9;5218:24;5166:86;:::i;:::-;5271:8;;-1:-1:-1;5140:112:98;-1:-1:-1;5359:3:98;5344:19;;5331:33;;-1:-1:-1;5376:16:98;;;5373:36;;;5405:1;5402;5395:12;5373:36;;5444:86;5522:7;5511:8;5500:9;5496:24;5444:86;:::i;:::-;4277:1313;;;;-1:-1:-1;4277:1313:98;;-1:-1:-1;4277:1313:98;;;;5418:112;;-1:-1:-1;;;4277:1313:98:o;5826:1391::-;6118:6;6126;6134;6142;6150;6158;6166;6219:3;6207:9;6198:7;6194:23;6190:33;6187:53;;;6236:1;6233;6226:12;6187:53;6275:9;6262:23;6294:31;6319:5;6294:31;:::i;:::-;6344:5;-1:-1:-1;6400:2:98;6385:18;;6372:32;6423:18;6453:14;;;6450:34;;;6480:1;6477;6470:12;6450:34;6519:84;6595:7;6586:6;6575:9;6571:22;6519:84;:::i;:::-;6622:8;;-1:-1:-1;6493:110:98;-1:-1:-1;6710:2:98;6695:18;;6682:32;;-1:-1:-1;6726:16:98;;;6723:36;;;6755:1;6752;6745:12;6723:36;6794:86;6872:7;6861:8;6850:9;6846:24;6794:86;:::i;:::-;6899:8;;-1:-1:-1;6768:112:98;-1:-1:-1;6987:2:98;6972:18;;6959:32;;-1:-1:-1;7003:16:98;;;7000:36;;;7032:1;7029;7022:12;7222:247;7281:6;7334:2;7322:9;7313:7;7309:23;7305:32;7302:52;;;7350:1;7347;7340:12;7302:52;7389:9;7376:23;7408:31;7433:5;7408:31;:::i;:::-;7458:5;7222:247;-1:-1:-1;;;7222:247:98:o;7474:646::-;7629:6;7637;7645;7698:2;7686:9;7677:7;7673:23;7669:32;7666:52;;;7714:1;7711;7704:12;7666:52;7753:9;7740:23;7772:31;7797:5;7772:31;:::i;:::-;7822:5;-1:-1:-1;7878:2:98;7863:18;;7850:32;7905:18;7894:30;;7891:50;;;7937:1;7934;7927:12;7891:50;7976:84;8052:7;8043:6;8032:9;8028:22;7976:84;:::i;:::-;7474:646;;8079:8;;-1:-1:-1;7950:110:98;;-1:-1:-1;;;;7474:646:98:o;8317:359::-;8392:5;8451:3;8438:17;8533:66;8522:8;8506:14;8502:29;8498:102;8478:18;8474:127;8464:155;;8615:1;8612;8605:12;8464:155;8637:33;;;;8317:359;-1:-1:-1;;8317:359:98:o;8681:600::-;8769:5;8776:6;8836:3;8823:17;8918:66;8907:8;8891:14;8887:29;8883:102;8863:18;8859:127;8849:155;;9000:1;8997;8990:12;8849:155;9028:33;;9132:4;9119:18;;;-1:-1:-1;9080:21:98;;-1:-1:-1;9160:18:98;9149:30;;9146:50;;;9192:1;9189;9182:12;9146:50;9251:4;9243:6;9239:17;9223:14;9219:38;9212:5;9208:50;9205:70;;;9271:1;9268;9261:12;9286:107;9367:1;9360:5;9357:12;9347:40;;9383:1;9380;9373:12;9398:1032;9516:6;9511:3;9504:19;9486:3;9542:4;9571:2;9566:3;9562:12;9555:19;;9597:5;9620:1;9630:775;9644:6;9641:1;9638:13;9630:775;;;9721:6;9708:20;9741:39;9772:7;9741:39;:::i;:::-;9793:38;9827:3;9818:7;9793:38;:::i;:::-;;9884:2;9876:6;9872:15;9859:29;9901:33;9926:7;9901:33;:::i;:::-;9981:42;9968:56;9954:12;;;9947:78;10048:4;10099:15;;;10086:29;10072:12;;;10065:51;10139:4;10190:15;;;10177:29;10163:12;;;10156:51;10230:4;10281:15;;;10268:29;10254:12;;;10247:51;10321:4;10345:12;;;;10380:15;;;;9666:1;9659:9;9630:775;;;-1:-1:-1;10421:3:98;;9398:1032;-1:-1:-1;;;;;9398:1032:98:o;10435:608::-;10531:5;10538:6;10598:3;10585:17;10680:66;10669:8;10653:14;10649:29;10645:102;10625:18;10621:127;10611:155;;10762:1;10759;10752:12;10611:155;10790:33;;10894:4;10881:18;;;-1:-1:-1;10842:21:98;;-1:-1:-1;10922:18:98;10911:30;;10908:50;;;10954:1;10951;10944:12;10908:50;11013:4;11005:6;11001:17;10985:14;10981:38;10974:5;10970:50;10967:70;;;11033:1;11030;11023:12;11048:1246;11174:6;11169:3;11162:19;11144:3;11200:4;11229:2;11224:3;11220:12;11213:19;;11255:5;11278:1;11288:981;11302:6;11299:1;11296:13;11288:981;;;11379:6;11366:20;11399:39;11430:7;11399:39;:::i;:::-;11451:38;11485:3;11476:7;11451:38;:::i;:::-;;11542:2;11534:6;11530:15;11517:29;11559:33;11584:7;11559:33;:::i;:::-;11615:42;11691:16;;;11677:12;;;11670:38;11731:4;11782:15;;;11769:29;11755:12;;;11748:51;11822:4;11873:15;;;11860:29;11846:12;;;11839:51;11913:4;11964:15;;;11951:29;11937:12;;;11930:51;12004:4;;12049:15;;;12036:29;12078:33;12036:29;12078:33;:::i;:::-;12145:16;12131:12;;;12124:38;12185:4;12209:12;;;;12244:15;;;;;11324:1;11317:9;11288:981;;12299:150;12374:20;;12423:1;12413:12;;12403:40;;12439:1;12436;12429:12;12454:140;12535:1;12528:5;12525:12;12515:46;;12541:18;;:::i;12599:1487::-;12666:3;12694:6;12709:50;12755:3;12728:25;12747:5;12728:25;:::i;:::-;2913:42;2902:54;2890:67;;2836:127;12709:50;12788:36;12818:4;12811:5;12807:16;12788:36;:::i;:::-;2913:42;2902:54;12875:4;12866:14;;2890:67;12926:85;13005:4;12994:16;;12998:5;12926:85;:::i;:::-;13043:2;13036:4;13031:3;13027:14;13020:26;13067:99;13162:2;13157:3;13153:12;13139;13123:14;13067:99;:::i;:::-;13055:111;;;;13213:93;13300:4;13293:5;13289:16;13282:5;13213:93;:::i;:::-;13348:3;13342:4;13338:14;13331:4;13326:3;13322:14;13315:38;13376:101;13472:4;13456:14;13440;13376:101;:::i;:::-;13362:115;;;;13508:43;13545:4;13538:5;13534:16;13508:43;:::i;:::-;13560:57;13611:4;13606:3;13602:14;13586;13560:57;:::i;:::-;-1:-1:-1;13673:4:98;13662:16;;;13649:30;13633:14;;;13626:54;13736:4;13725:16;;;13712:30;13696:14;;;13689:54;13799:4;13788:16;;;13775:30;13759:14;;;13752:54;13825:6;13874:14;;;13861:28;13847:12;;;13840:50;13909:6;13958:14;;;13945:28;13931:12;;;13924:50;13993:6;14042:14;;;14029:28;14015:12;;;;14008:50;;;;-1:-1:-1;14074:6:98;12599:1487::o;14091:559::-;14149:5;14156:6;14216:3;14203:17;14298:66;14287:8;14271:14;14267:29;14263:102;14243:18;14239:127;14229:155;;14380:1;14377;14370:12;14229:155;14408:33;;14512:4;14499:18;;;-1:-1:-1;14460:21:98;;-1:-1:-1;14540:18:98;14529:30;;14526:50;;;14572:1;14569;14562:12;14526:50;14619:6;14603:14;14599:27;14592:5;14588:39;14585:59;;;14640:1;14637;14630:12;14655:325;14743:6;14738:3;14731:19;14795:6;14788:5;14781:4;14776:3;14772:14;14759:43;;14847:1;14840:4;14831:6;14826:3;14822:16;14818:27;14811:38;14713:3;14969:4;14899:66;14894:2;14886:6;14882:15;14878:88;14873:3;14869:98;14865:109;14858:116;;14655:325;;;;:::o;14985:349::-;15050:5;15109:3;15096:17;15191:66;15180:8;15164:14;15160:29;15156:102;15136:18;15132:127;15122:155;;15273:1;15270;15263:12;15339:608;15438:5;15445:6;15505:3;15492:17;15587:66;15576:8;15560:14;15556:29;15552:102;15532:18;15528:127;15518:155;;15669:1;15666;15659:12;15518:155;15697:33;;15801:4;15788:18;;;-1:-1:-1;15749:21:98;;-1:-1:-1;15829:18:98;15818:30;;15815:50;;;15861:1;15858;15851:12;15815:50;15915:6;15912:1;15908:14;15892;15888:35;15881:5;15877:47;15874:67;;;15937:1;15934;15927:12;15952:535;16081:6;16076:3;16069:19;16051:3;16107:4;16136:2;16131:3;16127:12;16120:19;;16162:5;16185:1;16195:267;16209:6;16206:1;16203:13;16195:267;;;16270:20;;16258:33;;16338:15;;;16325:29;16311:12;;;16304:51;16378:4;16402:12;;;;16437:15;;;;16231:1;16224:9;16195:267;;16492:1214;16612:6;16607:3;16600:19;16582:3;16638:4;16667:2;16662:3;16658:12;16651:19;;16692:3;16732:6;16729:1;16725:14;16720:3;16716:24;16763:5;16786:1;16796:884;16810:6;16807:1;16804:13;16796:884;;;16881:5;16875:4;16871:16;16866:3;16859:29;16911:52;16956:6;16949:5;16911:52;:::i;:::-;16986:4;17037:79;17113:2;17109;17037:79;:::i;:::-;17142:2;17136:4;17129:16;17172:109;17277:2;17271:4;17267:13;17253:12;17239;17172:109;:::i;:::-;17158:123;;;;17332:88;17416:2;17412;17408:11;17404:2;17332:88;:::i;:::-;17294:126;;17467:4;17459:6;17455:17;17450:2;17444:4;17440:13;17433:40;17494:106;17593:6;17577:14;17561;17494:106;:::i;:::-;17658:12;;;;17486:114;-1:-1:-1;;;17623:15:98;;;;-1:-1:-1;16832:1:98;16825:9;16796:884;;;-1:-1:-1;17696:4:98;;16492:1214;-1:-1:-1;;;;;;;16492:1214:98:o;17711:1637::-;18088:2;18140:21;;;18113:18;;;18196:22;;;-1:-1:-1;;18249:2:98;18298:1;18294:14;;;18279:30;;18275:39;;;18234:18;;18337:6;-1:-1:-1;18371:812:98;18385:6;18382:1;18379:13;18371:812;;;18474:66;18462:9;18454:6;18450:22;18446:95;18441:3;18434:108;18565:53;18611:6;18603;18565:53;:::i;:::-;18651:55;18703:2;18699;18651:55;:::i;:::-;18734:2;18726:6;18719:18;18764:73;18833:2;18825:6;18821:15;18807:12;18764:73;:::i;:::-;18750:87;;18860:4;18913:47;18956:2;18952;18948:11;18944:2;18913:47;:::i;:::-;18877:83;;19009:6;19001;18997:19;18992:2;18984:6;18980:15;18973:44;19040:63;19096:6;19082:12;19066:14;19040:63;:::i;:::-;19030:73;-1:-1:-1;;19161:12:98;;;;19126:15;;;;;-1:-1:-1;;18407:1:98;18400:9;18371:812;;;18375:3;;;19233:9;19225:6;19221:22;19214:4;19203:9;19199:20;19192:52;19261:81;19335:6;19327;19319;19261:81;:::i;19353:184::-;19405:77;19402:1;19395:88;19502:4;19499:1;19492:15;19526:4;19523:1;19516:15;19542:253;19614:2;19608:9;19656:4;19644:17;;19691:18;19676:34;;19712:22;;;19673:62;19670:88;;;19738:18;;:::i;:::-;19774:2;19767:22;19542:253;:::o;19800:::-;19872:2;19866:9;19914:4;19902:17;;19949:18;19934:34;;19970:22;;;19931:62;19928:88;;;19996:18;;:::i;20058:334::-;20129:2;20123:9;20185:2;20175:13;;20190:66;20171:86;20159:99;;20288:18;20273:34;;20309:22;;;20270:62;20267:88;;;20335:18;;:::i;:::-;20371:2;20364:22;20058:334;;-1:-1:-1;20058:334:98:o;20397:138::-;20476:13;;20498:31;20476:13;20498:31;:::i;20540:2143::-;20662:6;20693:2;20736;20724:9;20715:7;20711:23;20707:32;20704:52;;;20752:1;20749;20742:12;20704:52;20785:9;20779:16;20814:18;20855:2;20847:6;20844:14;20841:34;;;20871:1;20868;20861:12;20841:34;20909:6;20898:9;20894:22;20884:32;;20954:7;20947:4;20943:2;20939:13;20935:27;20925:55;;20976:1;20973;20966:12;20925:55;21005:2;20999:9;21027:2;21023;21020:10;21017:36;;;21033:18;;:::i;:::-;21073:36;21105:2;21100;21097:1;21093:10;21089:19;21073:36;:::i;:::-;21143:15;;;21174:12;;;;-1:-1:-1;21205:4:98;21244:11;;;21236:20;;21232:29;;;21273:19;;;21270:39;;;21305:1;21302;21295:12;21270:39;21329:11;;;;21349:1304;21365:6;21360:3;21357:15;21349:1304;;;21442:3;21433:7;21429:17;21470:2;21466;21462:11;21459:101;;;21514:1;21543:2;21539;21532:14;21459:101;21586:22;;:::i;:::-;21631:4;21659:2;21655;21651:11;21648:101;;;21703:1;21732:2;21728;21721:14;21648:101;21777:22;;:::i;:::-;21762:37;;21833:3;21827:10;21850:39;21881:7;21850:39;:::i;:::-;21902:24;;21960:12;;;21954:19;21986:33;21954:19;21986:33;:::i;:::-;22039:16;;;22032:33;22089:2;22136:13;;;22130:20;22111:17;;;22104:47;22175:4;22224:13;;;22218:20;22199:17;;;22192:47;22263:3;22300:13;;;22294:20;22327:33;22294:20;22327:33;:::i;:::-;22380:17;;;22373:34;22420:22;;;22478:43;22508:12;;;22478:43;:::i;:::-;22462:14;;;22455:67;22574:3;22565:13;;22559:20;22542:15;;;22535:45;-1:-1:-1;22593:18:98;;-1:-1:-1;21382:12:98;;;;22631;;;;21349:1304;;;-1:-1:-1;22672:5:98;20540:2143;-1:-1:-1;;;;;;;20540:2143:98:o;22688:186::-;22756:20;;22816:32;22805:44;;22795:55;;22785:83;;22864:1;22861;22854:12;22879:357;22952:5;23011:3;22998:17;23093:66;23082:8;23066:14;23062:29;23058:102;23038:18;23034:127;23024:155;;23175:1;23172;23165:12;23241:401;23341:6;23336:3;23329:19;23311:3;23371:66;23363:6;23360:78;23357:98;;;23451:1;23448;23441:12;23357:98;23487:6;23484:1;23480:14;23539:8;23532:5;23525:4;23520:3;23516:14;23503:45;23616:1;23571:18;;23591:4;23567:29;23605:13;;;-1:-1:-1;23567:29:98;;23241:401;-1:-1:-1;;23241:401:98:o;23647:1774::-;23785:19;;;23823:4;23843:12;;;;23742:3;;23874:1;23911:15;;;23900:27;;23896:36;;23955:5;23742:3;23988:1407;24002:6;23999:1;23996:13;23988:1407;;;24085:66;24077:5;24071:4;24067:16;24063:89;24058:3;24051:102;24176:60;24229:6;24222:5;24176:60;:::i;:::-;24259:4;24302:2;24289:16;24283:4;24276:30;24355:2;24351;24347:11;24334:25;24394:1;24385:7;24382:14;24372:42;;24410:1;24407;24400:12;24372:42;24434:13;;;24427:30;24480:4;24532:11;;;24519:25;24504:13;;;24497:48;24568:4;24620:11;;;24607:25;24592:13;;;24585:48;24656:4;24712:11;;;24699:25;24779:14;24775:23;;;24800:66;24771:96;24747:121;;24737:149;;24882:1;24879;24872:12;24737:149;24914:27;;;25019:16;;;;-1:-1:-1;24970:21:98;25064:18;25051:32;;25048:52;;;25096:1;25093;25086:12;25048:52;25157:8;25153:2;25149:17;25133:14;25129:38;25120:7;25116:52;25113:72;;;25181:1;25178;25171:12;25113:72;25220:2;25215;25209:4;25205:13;25198:25;25244:71;25311:2;25305:4;25301:13;25291:8;25282:7;25244:71;:::i;:::-;25373:12;;;;25236:79;-1:-1:-1;;;25338:15:98;;;;-1:-1:-1;;24024:1:98;24017:9;23988:1407;;;-1:-1:-1;25411:4:98;;23647:1774;-1:-1:-1;;;;;;;;23647:1774:98:o;25426:2572::-;25977:2;26029:21;;;26002:18;;;26085:22;;;25948:4;;26126:3;26145:18;;;26209:1;26205:14;;;26190:30;;26186:39;;26248:6;25948:4;26282:1381;26296:6;26293:1;26290:13;26282:1381;;;26385:66;26373:9;26365:6;26361:22;26357:95;26352:3;26345:108;26476:61;26530:6;26522;26476:61;:::i;:::-;26560:4;26597:55;26649:2;26645;26597:55;:::i;:::-;26680:2;26672:6;26665:18;26710:73;26779:2;26771:6;26767:15;26753:12;26710:73;:::i;:::-;26696:87;;;26806:4;26845:31;26872:2;26868;26864:11;26845:31;:::i;:::-;26899:32;26968:23;;;26951:15;;;26944:48;27015:4;;26899:32;27060:31;27079:11;;;27060:31;:::i;:::-;27056:40;27051:2;27043:6;27039:15;27032:65;;;27146:47;27189:2;27185;27181:11;27177:2;27146:47;:::i;:::-;27242:6;27234;27230:19;27225:2;27217:6;27213:15;27206:44;27277:63;27333:6;27319:12;27303:14;27277:63;:::i;:::-;27263:77;;;;27391:47;27434:2;27430;27426:11;27422:2;27391:47;:::i;:::-;27353:85;;27487:6;27479;27475:19;27470:2;27462:6;27458:15;27451:44;27518:65;27576:6;27560:14;27544;27518:65;:::i;:::-;27641:12;;;;27508:75;-1:-1:-1;;27606:15:98;;;;;-1:-1:-1;;26318:1:98;26311:9;26282:1381;;;26286:3;;27713:9;27705:6;27701:22;27694:4;27683:9;27679:20;27672:52;27747:86;27826:6;27818;27810;27747:86;:::i;:::-;27733:100;;;;;27883:9;27875:6;27871:22;27864:4;27853:9;27849:20;27842:52;27911:81;27985:6;27977;27969;27911:81;:::i;:::-;27903:89;25426:2572;-1:-1:-1;;;;;;;;;25426:2572:98:o;28003:950::-;28252:2;28304:21;;;28277:18;;;28360:22;;;-1:-1:-1;;28413:2:98;28462:1;28458:14;;;28443:30;;28439:39;;;28398:18;;28501:6;-1:-1:-1;28535:389:98;28549:6;28546:1;28543:13;28535:389;;;28638:66;28626:9;28618:6;28614:22;28610:95;28605:3;28598:108;28729:115;28837:6;28772:63;28828:6;28820;28772:63;:::i;:::-;28729:115;:::i;:::-;28719:125;-1:-1:-1;28902:12:98;;;;28867:15;;;;28571:1;28564:9;28535:389;;28958:277;29025:6;29078:2;29066:9;29057:7;29053:23;29049:32;29046:52;;;29094:1;29091;29084:12;29046:52;29126:9;29120:16;29179:5;29172:13;29165:21;29158:5;29155:32;29145:60;;29201:1;29198;29191:12",
    "linkReferences": {},
    "immutableReferences": {
      "9188": [
        {
          "start": 630,
          "length": 32
        },
        {
          "start": 983,
          "length": 32
        },
        {
          "start": 1304,
          "length": 32
        },
        {
          "start": 1481,
          "length": 32
        },
        {
          "start": 1826,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assignOperator(address)": "84385c6f",
    "cancelOrders(address,(address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "e5c27af1",
    "executeMatchAdvancedOrders(address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "65c4eb72",
    "executeMatchOrders(address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "2718034d",
    "isValidOrder(bytes32,address,address,bytes32)": "0e1d31dc",
    "isValidOrderIncludingExtraData(bytes32,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),bytes32[],(uint256,uint8,uint256,uint256,bytes32[])[])": "33131570",
    "operator()": "570ca735",
    "pause(address)": "76a67a51"
  },
  "ast": {
    "absolutePath": "contracts/zones/PausableZone.sol",
    "id": 9452,
    "exportedSymbols": {
      "AdvancedOrder": [
        4481
      ],
      "CriteriaResolver": [
        4503
      ],
      "Execution": [
        4525
      ],
      "Fulfillment": [
        4512
      ],
      "Order": [
        4469
      ],
      "OrderComponents": [
        4342
      ],
      "PausableZone": [
        9451
      ],
      "PausableZoneEventsAndErrors": [
        10160
      ],
      "PausableZoneInterface": [
        10240
      ],
      "SeaportInterface": [
        2075
      ],
      "ZoneInteractionErrors": [
        2162
      ],
      "ZoneInterface": [
        2200
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9420:46",
    "nodes": [
      {
        "id": 9162,
        "nodeType": "PragmaDirective",
        "src": "32:24:46",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 9164,
        "nodeType": "ImportDirective",
        "src": "58:64:46",
        "absolutePath": "contracts/interfaces/ZoneInterface.sol",
        "file": "../interfaces/ZoneInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 2201,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9163,
              "name": "ZoneInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2200,
              "src": "67:13:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9166,
        "nodeType": "ImportDirective",
        "src": "123:80:46",
        "absolutePath": "contracts/interfaces/ZoneInteractionErrors.sol",
        "file": "../interfaces/ZoneInteractionErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 2163,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9165,
              "name": "ZoneInteractionErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2162,
              "src": "132:21:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9168,
        "nodeType": "ImportDirective",
        "src": "224:95:46",
        "absolutePath": "contracts/zones/interfaces/PausableZoneEventsAndErrors.sol",
        "file": "./interfaces/PausableZoneEventsAndErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 10161,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9167,
              "name": "PausableZoneEventsAndErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10160,
              "src": "237:27:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9170,
        "nodeType": "ImportDirective",
        "src": "321:70:46",
        "absolutePath": "contracts/interfaces/SeaportInterface.sol",
        "file": "../interfaces/SeaportInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 2076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9169,
              "name": "SeaportInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2075,
              "src": "330:16:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9177,
        "nodeType": "ImportDirective",
        "src": "412:154:46",
        "absolutePath": "contracts/lib/ConsiderationStructs.sol",
        "file": "../lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 4526,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9171,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4481,
              "src": "425:13:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9172,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4503,
              "src": "444:16:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9173,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4469,
              "src": "466:5:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9174,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4342,
              "src": "477:15:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9175,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4512,
              "src": "498:11:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9176,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4525,
              "src": "515:9:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9179,
        "nodeType": "ImportDirective",
        "src": "568:79:46",
        "absolutePath": "contracts/zones/interfaces/PausableZoneInterface.sol",
        "file": "./interfaces/PausableZoneInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9452,
        "sourceUnit": 10241,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9178,
              "name": "PausableZoneInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10240,
              "src": "577:21:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9451,
        "nodeType": "ContractDefinition",
        "src": "930:8521:46",
        "nodes": [
          {
            "id": 9188,
            "nodeType": "VariableDeclaration",
            "src": "1120:38:46",
            "constant": false,
            "mutability": "immutable",
            "name": "_controller",
            "nameLocation": "1147:11:46",
            "scope": 9451,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9187,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1120:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9190,
            "nodeType": "VariableDeclaration",
            "src": "1244:23:46",
            "constant": false,
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1259:8:46",
            "scope": 9451,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9189,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1244:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9209,
            "nodeType": "ModifierDefinition",
            "src": "1363:277:46",
            "body": {
              "id": 9208,
              "nodeType": "Block",
              "src": "1385:255:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 9193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1475:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 9195,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9190,
                        "src": "1489:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1475:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 9197,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1501:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1501:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 9199,
                        "name": "_controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9188,
                        "src": "1515:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1501:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1475:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9206,
                  "nodeType": "IfStatement",
                  "src": "1471:106:46",
                  "trueBody": {
                    "id": 9205,
                    "nodeType": "Block",
                    "src": "1528:49:46",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9202,
                            "name": "InvalidOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10136,
                            "src": "1549:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1549:17:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9204,
                        "nodeType": "RevertStatement",
                        "src": "1542:24:46"
                      }
                    ]
                  }
                },
                {
                  "id": 9207,
                  "nodeType": "PlaceholderStatement",
                  "src": "1632:1:46"
                }
              ]
            },
            "documentation": {
              "id": 9191,
              "nodeType": "StructuredDocumentation",
              "src": "1274:84:46",
              "text": " @dev Ensure that the caller is either the operator or controller."
            },
            "name": "isOperator",
            "nameLocation": "1372:10:46",
            "parameters": {
              "id": 9192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:46"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 9223,
            "nodeType": "ModifierDefinition",
            "src": "1716:232:46",
            "body": {
              "id": 9222,
              "nodeType": "Block",
              "src": "1740:208:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9212,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1807:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1807:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 9214,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9188,
                      "src": "1821:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1807:25:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9220,
                  "nodeType": "IfStatement",
                  "src": "1803:82:46",
                  "trueBody": {
                    "id": 9219,
                    "nodeType": "Block",
                    "src": "1834:51:46",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9216,
                            "name": "InvalidController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10139,
                            "src": "1855:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:19:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9218,
                        "nodeType": "RevertStatement",
                        "src": "1848:26:46"
                      }
                    ]
                  }
                },
                {
                  "id": 9221,
                  "nodeType": "PlaceholderStatement",
                  "src": "1940:1:46"
                }
              ]
            },
            "documentation": {
              "id": 9210,
              "nodeType": "StructuredDocumentation",
              "src": "1646:65:46",
              "text": " @dev Ensure that the caller is the controller."
            },
            "name": "isController",
            "nameLocation": "1725:12:46",
            "parameters": {
              "id": 9211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:2:46"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 9236,
            "nodeType": "FunctionDefinition",
            "src": "2033:191:46",
            "body": {
              "id": 9235,
              "nodeType": "Block",
              "src": "2047:177:46",
              "statements": [
                {
                  "expression": {
                    "id": 9230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9227,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9188,
                      "src": "2104:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9228,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2118:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2118:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2104:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9231,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:24:46"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9232,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10101,
                      "src": "2207:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:10:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9234,
                  "nodeType": "EmitStatement",
                  "src": "2202:15:46"
                }
              ]
            },
            "documentation": {
              "id": 9224,
              "nodeType": "StructuredDocumentation",
              "src": "1954:74:46",
              "text": " @notice Set the deployer as the controller of the zone."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 9225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:2:46"
            },
            "returnParameters": {
              "id": 9226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:0:46"
            },
            "scope": 9451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9260,
            "nodeType": "FunctionDefinition",
            "src": "2601:274:46",
            "body": {
              "id": 9259,
              "nodeType": "Block",
              "src": "2760:115:46",
              "statements": [
                {
                  "expression": {
                    "id": 9257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9252,
                      "name": "cancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9250,
                      "src": "2834:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9255,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9244,
                          "src": "2861:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4342_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4342_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "id": 9253,
                          "name": "seaport",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9240,
                          "src": "2846:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                            "typeString": "contract SeaportInterface"
                          }
                        },
                        "id": 9254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cancel",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2011,
                        "src": "2846:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_OrderComponents_$4342_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct OrderComponents memory[] memory) external returns (bool)"
                        }
                      },
                      "id": 9256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2846:22:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2834:34:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9258,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:34:46"
                }
              ]
            },
            "baseFunctions": [
              10185
            ],
            "documentation": {
              "id": 9237,
              "nodeType": "StructuredDocumentation",
              "src": "2230:366:46",
              "text": " @notice Cancel an arbitrary number of orders that have agreed to use the\n         contract as their zone.\n @param seaport  The Seaport address.\n @param orders   The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n                   been successfully cancelled."
            },
            "functionSelector": "e5c27af1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9247,
                  "name": "isOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9209,
                  "src": "2724:10:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "2724:10:46"
              }
            ],
            "name": "cancelOrders",
            "nameLocation": "2610:12:46",
            "overrides": {
              "id": 9246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2715:8:46"
            },
            "parameters": {
              "id": 9245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9240,
                  "mutability": "mutable",
                  "name": "seaport",
                  "nameLocation": "2649:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "2632:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 9239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9238,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2075,
                      "src": "2632:16:46"
                    },
                    "referencedDeclaration": 2075,
                    "src": "2632:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9244,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "2693:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "2666:33:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4342_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9242,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9241,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4342,
                        "src": "2666:15:46"
                      },
                      "referencedDeclaration": 4342,
                      "src": "2666:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$4342_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 9243,
                    "nodeType": "ArrayTypeName",
                    "src": "2666:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4342_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:83:46"
            },
            "returnParameters": {
              "id": 9251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9250,
                  "mutability": "mutable",
                  "name": "cancelled",
                  "nameLocation": "2749:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "2744:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2743:16:46"
            },
            "scope": 9451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9280,
            "nodeType": "FunctionDefinition",
            "src": "3157:268:46",
            "body": {
              "id": 9279,
              "nodeType": "Block",
              "src": "3218:207:46",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9269,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10098,
                      "src": "3294:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3294:8:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9271,
                  "nodeType": "EmitStatement",
                  "src": "3289:13:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9275,
                            "name": "payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9263,
                            "src": "3411:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3403:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3403:8:46",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3403:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 9272,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "3390:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 9277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:28:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9278,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:28:46"
                }
              ]
            },
            "baseFunctions": [
              10233
            ],
            "documentation": {
              "id": 9261,
              "nodeType": "StructuredDocumentation",
              "src": "2881:271:46",
              "text": " @notice Pause this contract, safely stopping orders from using\n         the contract as a zone. Restricted orders with this address as a\n         zone will not be fulfillable unless the zone is redeployed to the\n         same address."
            },
            "functionSelector": "76a67a51",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9266,
                  "name": "isController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9223,
                  "src": "3205:12:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "3205:12:46"
              }
            ],
            "name": "pause",
            "nameLocation": "3166:5:46",
            "overrides": {
              "id": 9265,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3196:8:46"
            },
            "parameters": {
              "id": 9264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9263,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "3180:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9280,
                  "src": "3172:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3171:15:46"
            },
            "returnParameters": {
              "id": 9268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3218:0:46"
            },
            "scope": 9451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9309,
            "nodeType": "FunctionDefinition",
            "src": "3602:485:46",
            "body": {
              "id": 9308,
              "nodeType": "Block",
              "src": "3711:376:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9289,
                      "name": "operatorToAssign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9283,
                      "src": "3796:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3824:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3816:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3816:7:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3816:10:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3796:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9299,
                  "nodeType": "IfStatement",
                  "src": "3792:89:46",
                  "trueBody": {
                    "id": 9298,
                    "nodeType": "Block",
                    "src": "3828:53:46",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9295,
                            "name": "CallerIsNotOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10150,
                            "src": "3849:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3849:21:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9297,
                        "nodeType": "RevertStatement",
                        "src": "3842:28:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9300,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "3945:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9301,
                      "name": "operatorToAssign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9283,
                      "src": "3956:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3945:27:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9303,
                  "nodeType": "ExpressionStatement",
                  "src": "3945:27:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9305,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9190,
                        "src": "4071:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9304,
                      "name": "OperatorUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10130,
                      "src": "4055:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4055:25:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9307,
                  "nodeType": "EmitStatement",
                  "src": "4050:30:46"
                }
              ]
            },
            "baseFunctions": [
              10239
            ],
            "documentation": {
              "id": 9281,
              "nodeType": "StructuredDocumentation",
              "src": "3431:166:46",
              "text": " @notice Assign the given address with the ability to operate the zone.\n @param operatorToAssign The address to assign as the operator."
            },
            "functionSelector": "84385c6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9286,
                  "name": "isController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9223,
                  "src": "3694:12:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "3694:12:46"
              }
            ],
            "name": "assignOperator",
            "nameLocation": "3611:14:46",
            "overrides": {
              "id": 9285,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3677:8:46"
            },
            "parameters": {
              "id": 9284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9283,
                  "mutability": "mutable",
                  "name": "operatorToAssign",
                  "nameLocation": "3634:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9309,
                  "src": "3626:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3626:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3625:26:46"
            },
            "returnParameters": {
              "id": 9288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3711:0:46"
            },
            "scope": 9451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9339,
            "nodeType": "FunctionDefinition",
            "src": "4638:404:46",
            "body": {
              "id": 9338,
              "nodeType": "Block",
              "src": "4829:213:46",
              "statements": [
                {
                  "expression": {
                    "id": 9324,
                    "name": "orderHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9312,
                    "src": "4839:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 9325,
                  "nodeType": "ExpressionStatement",
                  "src": "4839:9:46"
                },
                {
                  "expression": {
                    "id": 9326,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9314,
                    "src": "4858:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9327,
                  "nodeType": "ExpressionStatement",
                  "src": "4858:6:46"
                },
                {
                  "expression": {
                    "id": 9328,
                    "name": "offerer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9316,
                    "src": "4874:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9329,
                  "nodeType": "ExpressionStatement",
                  "src": "4874:7:46"
                },
                {
                  "expression": {
                    "id": 9330,
                    "name": "zoneHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9318,
                    "src": "4891:8:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 9331,
                  "nodeType": "ExpressionStatement",
                  "src": "4891:8:46"
                },
                {
                  "expression": {
                    "id": 9336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9332,
                      "name": "validOrderMagicValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9322,
                      "src": "4977:20:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 9333,
                          "name": "ZoneInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2200,
                          "src": "5000:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZoneInterface_$2200_$",
                            "typeString": "type(contract ZoneInterface)"
                          }
                        },
                        "id": 9334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "isValidOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2180,
                        "src": "5000:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                          "typeString": "function ZoneInterface.isValidOrder(bytes32,address,address,bytes32) view returns (bytes4)"
                        }
                      },
                      "id": 9335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "5000:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "4977:58:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 9337,
                  "nodeType": "ExpressionStatement",
                  "src": "4977:58:46"
                }
              ]
            },
            "baseFunctions": [
              2180
            ],
            "documentation": {
              "id": 9310,
              "nodeType": "StructuredDocumentation",
              "src": "4093:540:46",
              "text": " @notice Check if a given order is currently valid.\n @dev This function is called by Seaport whenever extraData is not\n      provided by the caller.\n @param orderHash The hash of the order.\n @param caller    The caller in question.\n @param offerer   The offerer in question.\n @param zoneHash  The hash to provide upon calling the zone.\n @return validOrderMagicValue A magic value indicating if the order is\n                              currently valid."
            },
            "functionSelector": "0e1d31dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidOrder",
            "nameLocation": "4647:12:46",
            "overrides": {
              "id": 9320,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4782:8:46"
            },
            "parameters": {
              "id": 9319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9312,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "4677:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "4669:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9311,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4669:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9314,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4704:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "4696:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4696:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9316,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "4728:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "4720:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9318,
                  "mutability": "mutable",
                  "name": "zoneHash",
                  "nameLocation": "4753:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "4745:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9317,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4745:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4659:108:46"
            },
            "returnParameters": {
              "id": 9323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9322,
                  "mutability": "mutable",
                  "name": "validOrderMagicValue",
                  "nameLocation": "4807:20:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "4800:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9321,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:29:46"
            },
            "scope": 9451,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9377,
            "nodeType": "FunctionDefinition",
            "src": "5897:542:46",
            "body": {
              "id": 9376,
              "nodeType": "Block",
              "src": "6193:246:46",
              "statements": [
                {
                  "expression": {
                    "id": 9360,
                    "name": "orderHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9342,
                    "src": "6203:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 9361,
                  "nodeType": "ExpressionStatement",
                  "src": "6203:9:46"
                },
                {
                  "expression": {
                    "id": 9362,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9344,
                    "src": "6222:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9363,
                  "nodeType": "ExpressionStatement",
                  "src": "6222:6:46"
                },
                {
                  "expression": {
                    "id": 9364,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9347,
                    "src": "6238:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$4481_calldata_ptr",
                      "typeString": "struct AdvancedOrder calldata"
                    }
                  },
                  "id": 9365,
                  "nodeType": "ExpressionStatement",
                  "src": "6238:5:46"
                },
                {
                  "expression": {
                    "id": 9366,
                    "name": "priorOrderHashes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9350,
                    "src": "6253:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  },
                  "id": 9367,
                  "nodeType": "ExpressionStatement",
                  "src": "6253:16:46"
                },
                {
                  "expression": {
                    "id": 9368,
                    "name": "criteriaResolvers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9354,
                    "src": "6279:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                      "typeString": "struct CriteriaResolver calldata[] calldata"
                    }
                  },
                  "id": 9369,
                  "nodeType": "ExpressionStatement",
                  "src": "6279:17:46"
                },
                {
                  "expression": {
                    "id": 9374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9370,
                      "name": "validOrderMagicValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9358,
                      "src": "6374:20:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 9371,
                          "name": "ZoneInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2200,
                          "src": "6397:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZoneInterface_$2200_$",
                            "typeString": "type(contract ZoneInterface)"
                          }
                        },
                        "id": 9372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "isValidOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2180,
                        "src": "6397:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                          "typeString": "function ZoneInterface.isValidOrder(bytes32,address,address,bytes32) view returns (bytes4)"
                        }
                      },
                      "id": 9373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "6397:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "6374:58:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 9375,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:58:46"
                }
              ]
            },
            "baseFunctions": [
              2199
            ],
            "documentation": {
              "id": 9340,
              "nodeType": "StructuredDocumentation",
              "src": "5048:844:46",
              "text": " @notice Check if a given order including extraData is currently valid.\n @dev This function is called by Seaport whenever any extraData is\n      provided by the caller.\n @param orderHash         The hash of the order.\n @param caller            The caller in question.\n @param order             The order in question.\n @param priorOrderHashes  The order hashes of each order supplied prior to\n                          the current order as part of a \"match\" variety\n                          of order fulfillment.\n @param criteriaResolvers The criteria resolvers corresponding to\n                          the order.\n @return validOrderMagicValue A magic value indicating if the order is\n                              currently valid."
            },
            "functionSelector": "33131570",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidOrderIncludingExtraData",
            "nameLocation": "5906:30:46",
            "overrides": {
              "id": 9356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6146:8:46"
            },
            "parameters": {
              "id": 9355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9342,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "5954:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "5946:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9341,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5946:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9344,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5981:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "5973:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9347,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "6020:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "5997:28:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$4481_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 9346,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9345,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4481,
                      "src": "5997:13:46"
                    },
                    "referencedDeclaration": 4481,
                    "src": "5997:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$4481_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9350,
                  "mutability": "mutable",
                  "name": "priorOrderHashes",
                  "nameLocation": "6054:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "6035:35:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9348,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6035:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 9349,
                    "nodeType": "ArrayTypeName",
                    "src": "6035:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9354,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "6108:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "6080:45:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9352,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9351,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4503,
                        "src": "6080:16:46"
                      },
                      "referencedDeclaration": 4503,
                      "src": "6080:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$4503_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 9353,
                    "nodeType": "ArrayTypeName",
                    "src": "6080:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5936:195:46"
            },
            "returnParameters": {
              "id": 9359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9358,
                  "mutability": "mutable",
                  "name": "validOrderMagicValue",
                  "nameLocation": "6171:20:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9377,
                  "src": "6164:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9357,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6164:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6163:29:46"
            },
            "scope": 9451,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9411,
            "nodeType": "FunctionDefinition",
            "src": "7151:527:46",
            "body": {
              "id": 9410,
              "nodeType": "Block",
              "src": "7418:260:46",
              "statements": [
                {
                  "expression": {
                    "id": 9408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9399,
                      "name": "executions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9397,
                      "src": "7563:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9405,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9385,
                          "src": "7629:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$4469_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        },
                        {
                          "id": 9406,
                          "name": "fulfillments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9389,
                          "src": "7649:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$4469_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_Order_$4469_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Fulfillment calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 9400,
                            "name": "seaport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9381,
                            "src": "7576:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                              "typeString": "contract SeaportInterface"
                            }
                          },
                          "id": 9401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matchOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "7576:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$4469_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4512_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct Order memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                          }
                        },
                        "id": 9404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 9402,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7604:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "7604:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "7576:39:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$4469_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4512_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr_$value",
                          "typeString": "function (struct Order memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                        }
                      },
                      "id": 9407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7576:95:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "src": "7563:108:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "id": 9409,
                  "nodeType": "ExpressionStatement",
                  "src": "7563:108:46"
                }
              ]
            },
            "baseFunctions": [
              10204
            ],
            "documentation": {
              "id": 9378,
              "nodeType": "StructuredDocumentation",
              "src": "6445:701:46",
              "text": " @notice Execute an arbitrary number of matched orders, each with\n         an arbitrary number of items for offer and consideration\n         along with a set of fulfillments allocating offer components\n         to consideration components.\n @param seaport      The Seaport address.\n @param orders       The orders to match.\n @param fulfillments An array of elements allocating offer components\n                     to consideration components.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "2718034d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9392,
                  "name": "isOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9209,
                  "src": "7355:10:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "7355:10:46"
              }
            ],
            "name": "executeMatchOrders",
            "nameLocation": "7160:18:46",
            "overrides": {
              "id": 9391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7338:8:46"
            },
            "parameters": {
              "id": 9390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9381,
                  "mutability": "mutable",
                  "name": "seaport",
                  "nameLocation": "7205:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9411,
                  "src": "7188:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 9380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9379,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2075,
                      "src": "7188:16:46"
                    },
                    "referencedDeclaration": 2075,
                    "src": "7188:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9385,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "7239:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9411,
                  "src": "7222:23:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4469_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9383,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9382,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4469,
                        "src": "7222:5:46"
                      },
                      "referencedDeclaration": 4469,
                      "src": "7222:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4469_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 9384,
                    "nodeType": "ArrayTypeName",
                    "src": "7222:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4469_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9389,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "7278:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9411,
                  "src": "7255:35:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9387,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9386,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4512,
                        "src": "7255:11:46"
                      },
                      "referencedDeclaration": 4512,
                      "src": "7255:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$4512_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 9388,
                    "nodeType": "ArrayTypeName",
                    "src": "7255:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7178:118:46"
            },
            "returnParameters": {
              "id": 9398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9397,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "7402:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9411,
                  "src": "7383:29:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9395,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9394,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4525,
                        "src": "7383:9:46"
                      },
                      "referencedDeclaration": 4525,
                      "src": "7383:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4525_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 9396,
                    "nodeType": "ArrayTypeName",
                    "src": "7383:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4525_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7382:31:46"
            },
            "scope": 9451,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9450,
            "nodeType": "FunctionDefinition",
            "src": "8804:645:46",
            "body": {
              "id": 9449,
              "nodeType": "Block",
              "src": "9142:307:46",
              "statements": [
                {
                  "expression": {
                    "id": 9447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9437,
                      "name": "executions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9435,
                      "src": "9295:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9443,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9419,
                          "src": "9369:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4481_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata[] calldata"
                          }
                        },
                        {
                          "id": 9444,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9423,
                          "src": "9389:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        {
                          "id": 9445,
                          "name": "fulfillments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9427,
                          "src": "9420:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4481_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4481_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct AdvancedOrder calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct CriteriaResolver calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Fulfillment calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 9438,
                            "name": "seaport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9415,
                            "src": "9308:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                              "typeString": "contract SeaportInterface"
                            }
                          },
                          "id": 9439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matchAdvancedOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2001,
                          "src": "9308:27:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_AdvancedOrder_$4481_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4503_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4512_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                          }
                        },
                        "id": 9442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 9440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9344:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "9344:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "9308:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_AdvancedOrder_$4481_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4503_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4512_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr_$value",
                          "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                        }
                      },
                      "id": 9446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9308:134:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "src": "9295:147:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "id": 9448,
                  "nodeType": "ExpressionStatement",
                  "src": "9295:147:46"
                }
              ]
            },
            "baseFunctions": [
              10227
            ],
            "documentation": {
              "id": 9412,
              "nodeType": "StructuredDocumentation",
              "src": "7684:1115:46",
              "text": " @notice Execute an arbitrary number of matched advanced orders,\n         each with an arbitrary number of items for offer and\n         consideration along with a set of fulfillments allocating\n         offer components to consideration components.\n @param seaport           The Seaport address.\n @param orders            The orders to match.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "65c4eb72",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9430,
                  "name": "isOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9209,
                  "src": "9079:10:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "9079:10:46"
              }
            ],
            "name": "executeMatchAdvancedOrders",
            "nameLocation": "8813:26:46",
            "overrides": {
              "id": 9429,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9062:8:46"
            },
            "parameters": {
              "id": 9428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9415,
                  "mutability": "mutable",
                  "name": "seaport",
                  "nameLocation": "8866:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9450,
                  "src": "8849:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 9414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9413,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2075,
                      "src": "8849:16:46"
                    },
                    "referencedDeclaration": 2075,
                    "src": "8849:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$2075",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9419,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "8908:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9450,
                  "src": "8883:31:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4481_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9417,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9416,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4481,
                        "src": "8883:13:46"
                      },
                      "referencedDeclaration": 4481,
                      "src": "8883:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$4481_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 9418,
                    "nodeType": "ArrayTypeName",
                    "src": "8883:15:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4481_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9423,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "8952:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9450,
                  "src": "8924:45:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9421,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9420,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4503,
                        "src": "8924:16:46"
                      },
                      "referencedDeclaration": 4503,
                      "src": "8924:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$4503_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 9422,
                    "nodeType": "ArrayTypeName",
                    "src": "8924:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4503_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9427,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "9002:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9450,
                  "src": "8979:35:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9425,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9424,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4512,
                        "src": "8979:11:46"
                      },
                      "referencedDeclaration": 4512,
                      "src": "8979:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$4512_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 9426,
                    "nodeType": "ArrayTypeName",
                    "src": "8979:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4512_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8839:181:46"
            },
            "returnParameters": {
              "id": 9436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9435,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "9126:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 9450,
                  "src": "9107:29:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4525_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9433,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9432,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4525,
                        "src": "9107:9:46"
                      },
                      "referencedDeclaration": 4525,
                      "src": "9107:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4525_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 9434,
                    "nodeType": "ArrayTypeName",
                    "src": "9107:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4525_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9106:31:46"
            },
            "scope": 9451,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9181,
              "name": "PausableZoneEventsAndErrors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10160,
              "src": "959:27:46"
            },
            "id": 9182,
            "nodeType": "InheritanceSpecifier",
            "src": "959:27:46"
          },
          {
            "baseName": {
              "id": 9183,
              "name": "ZoneInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2200,
              "src": "992:13:46"
            },
            "id": 9184,
            "nodeType": "InheritanceSpecifier",
            "src": "992:13:46"
          },
          {
            "baseName": {
              "id": 9185,
              "name": "PausableZoneInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10240,
              "src": "1011:21:46"
            },
            "id": 9186,
            "nodeType": "InheritanceSpecifier",
            "src": "1011:21:46"
          }
        ],
        "canonicalName": "PausableZone",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9180,
          "nodeType": "StructuredDocumentation",
          "src": "649:280:46",
          "text": " @title  PausableZone\n @author cupOJoseph, BCLeFevre, ryanio\n @notice PausableZone is a simple zone implementation that approves every\n         order. It can be self-destructed by its controller to pause\n         restricted orders that have it set as their zone."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9451,
          10240,
          2200,
          10160
        ],
        "name": "PausableZone",
        "nameLocation": "939:12:46",
        "scope": 9452,
        "usedErrors": [
          10133,
          10136,
          10139,
          10144,
          10147,
          10150,
          10153,
          10156,
          10159
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 46
}