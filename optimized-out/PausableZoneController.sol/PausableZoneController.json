{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPotentialOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPauser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerCanNotBeSetAsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PauserCanNotBeSetAsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "ZoneAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        }
      ],
      "name": "PauserUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "PotentialOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "ZoneCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pausableZoneAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operatorToAssign",
          "type": "address"
        }
      ],
      "name": "assignOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pauserToAssign",
          "type": "address"
        }
      ],
      "name": "assignPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pausableZoneAddress",
          "type": "address"
        },
        {
          "internalType": "contract SeaportInterface",
          "name": "seaportAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancelOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createZone",
      "outputs": [
        {
          "internalType": "address",
          "name": "derivedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pausableZoneAddress",
          "type": "address"
        },
        {
          "internalType": "contract SeaportInterface",
          "name": "seaportAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "executeMatchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pausableZoneAddress",
          "type": "address"
        },
        {
          "internalType": "contract SeaportInterface",
          "name": "seaportAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "executeMatchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPotentialOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zoneCreationCode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200502738038062005027833981016040819052620000349162000094565b600080546001600160a01b0319166001600160a01b038316179055604051620000606020820162000086565b601f1982820381018352601f9091011660405280516020919091012060805250620000c6565b61188e806200379983390190565b600060208284031215620000a757600080fd5b81516001600160a01b0381168114620000bf57600080fd5b9392505050565b6080516136b0620000e960003960008181610179015261058301526136b06000f3fe6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063d6f3b11011610059578063d6f3b11014610282578063dcd5b13e146102a2578063f2fde38b146102c2578063f7e4aac6146102e257600080fd5b80638da5cb5b146102195780639fd0506d14610244578063b44f66081461026f57600080fd5b80637242512f116100bb5780637242512f1461016757806376a67a51146101a95780637762df25146101d957806379ba50971461020457600080fd5b806323452b9c146100e257806340ddc788146100f957806346b3ce9f14610122575b600080fd5b3480156100ee57600080fd5b506100f7610302565b005b61010c610107366004610ec5565b6103b1565b6040516101199190610f9d565b60405180910390f35b34801561012e57600080fd5b5061014261013d366004611043565b6104d4565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b34801561017357600080fd5b5061019b7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610119565b3480156101b557600080fd5b506101c96101c436600461105c565b6106cf565b6040519015158152602001610119565b3480156101e557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff16610142565b34801561021057600080fd5b506100f76107d0565b34801561022557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610142565b34801561025057600080fd5b5060025473ffffffffffffffffffffffffffffffffffffffff16610142565b61010c61027d366004611080565b6108fb565b34801561028e57600080fd5b506100f761029d36600461113f565b610a24565b3480156102ae57600080fd5b506100f76102bd36600461105c565b610b18565b3480156102ce57600080fd5b506100f76102dd36600461105c565b610c2f565b3480156102ee57600080fd5b506100f76102fd3660046111a4565b610d5d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610353576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600081527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005460609073ffffffffffffffffffffffffffffffffffffffff163314610405576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f2718034d000000000000000000000000000000000000000000000000000000008152879073ffffffffffffffffffffffffffffffffffffffff821690632718034d903490610463908b908b908b908b908b90600401611741565b60006040518083038185885af1158015610481573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104c891908101906118f9565b98975050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610526576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166021820152603581018390527f00000000000000000000000000000000000000000000000000000000000000006055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120905073ffffffffffffffffffffffffffffffffffffffff81163b1561064c576040517e83438500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240160405180910390fd5b8160405161065990610e37565b8190604051809103906000f5905080158015610679573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff83168152602081018490527fd1fa916c9f898e9a8dcedb0f78093657d07014799896193f2b219bed6ac7399c910160405180910390a1919050565b60025460009073ffffffffffffffffffffffffffffffffffffffff163314801590610712575060005473ffffffffffffffffffffffffffffffffffffffff163314155b15610749576040517fc726084300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f76a67a5100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8316906376a67a5190602401600060405180830381600087803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b50600195945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610821576040517f1ff958b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600081527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556000546040805173ffffffffffffffffffffffffffffffffffffffff90921682523360208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331461094f576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f65c4eb72000000000000000000000000000000000000000000000000000000008152899073ffffffffffffffffffffffffffffffffffffffff8216906365c4eb729034906109b1908d908d908d908d908d908d908d90600401611bd3565b60006040518083038185885af11580156109cf573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a1691908101906118f9565b9a9950505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a75576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fe5c27af1000000000000000000000000000000000000000000000000000000008152849073ffffffffffffffffffffffffffffffffffffffff82169063e5c27af190610acd90879087908790600401611d28565b6020604051808303816000875af1158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190611dca565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b69576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610bb6576040517f5384e6f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fa4336c0cb1e245b95ad204faed7e940d6dc999684fd8b5e1ff597a0c4efca8ab9060200160405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c80576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610ccd576040517fda72ecf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dae576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f84385c6f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528391908216906384385c6f90602401600060405180830381600087803b158015610e1a57600080fd5b505af1158015610e2e573d6000803e3d6000fd5b50505050505050565b61188e80611ded83390190565b73ffffffffffffffffffffffffffffffffffffffff81168114610e6657600080fd5b50565b8035610e7481610e44565b919050565b60008083601f840112610e8b57600080fd5b50813567ffffffffffffffff811115610ea357600080fd5b6020830191508360208260051b8501011115610ebe57600080fd5b9250929050565b60008060008060008060808789031215610ede57600080fd5b8635610ee981610e44565b95506020870135610ef981610e44565b9450604087013567ffffffffffffffff80821115610f1657600080fd5b610f228a838b01610e79565b90965094506060890135915080821115610f3b57600080fd5b50610f4889828a01610e79565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610f9957610f99610f5a565b9052565b602080825282518282018190526000919060409081850190868401855b828110156110365781518051610fd1868251610f89565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e09093019290850190600101610fba565b5091979650505050505050565b60006020828403121561105557600080fd5b5035919050565b60006020828403121561106e57600080fd5b813561107981610e44565b9392505050565b60008060008060008060008060a0898b03121561109c57600080fd5b88356110a781610e44565b975060208901356110b781610e44565b9650604089013567ffffffffffffffff808211156110d457600080fd5b6110e08c838d01610e79565b909850965060608b01359150808211156110f957600080fd5b6111058c838d01610e79565b909650945060808b013591508082111561111e57600080fd5b5061112b8b828c01610e79565b999c989b5096995094979396929594505050565b6000806000806060858703121561115557600080fd5b843561116081610e44565b9350602085013561117081610e44565b9250604085013567ffffffffffffffff81111561118c57600080fd5b61119887828801610e79565b95989497509550505050565b600080604083850312156111b757600080fd5b82356111c281610e44565b915060208301356111d281610e44565b809150509250929050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261121157600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261124f57600080fd5b830160208101925035905067ffffffffffffffff81111561126f57600080fd5b60a081023603821315610ebe57600080fd5b60068110610e6657600080fd5b8183526000602080850194508260005b858110156113135781356112b181611281565b6112bb8882610f89565b50828201356112c981610e44565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a0968701969091019060010161129e565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261135357600080fd5b830160208101925035905067ffffffffffffffff81111561137357600080fd5b60c081023603821315610ebe57600080fd5b8183526000602080850194508260005b858110156113135781356113a881611281565b6113b28882610f89565b50828201356113c081610e44565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a0908184013561140a81610e44565b169088015260c0968701969190910190600101611395565b803560048110610e7457600080fd5b60048110610f9957610f99610f5a565b600061016061146d8461145385610e69565b73ffffffffffffffffffffffffffffffffffffffff169052565b61147960208401610e69565b73ffffffffffffffffffffffffffffffffffffffff1660208501526114a1604084018461121a565b8260408701526114b4838701828461128e565b925050506114c5606084018461131e565b85830360608701526114d8838284611385565b925050506114e860808401611422565b6114f56080860182611431565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261157257600080fd5b830160208101925035905067ffffffffffffffff81111561159257600080fd5b803603821315610ebe57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261121157600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261165357600080fd5b830160208101925035905067ffffffffffffffff81111561167357600080fd5b8060061b3603821315610ebe57600080fd5b8183526000602080850194508260005b858110156113135781358752828201358388015260409687019690910190600101611695565b81835260006020808501808196508560051b810191508460005b878110156110365782840389526116ec82886115ea565b60406116f8828361161e565b8288526117088389018284611685565b925050506117188783018361161e565b92508682038888015261172c828483611685565b9b88019b9650505091850191506001016116d5565b60006060820173ffffffffffffffffffffffffffffffffffffffff8816835260206060818501528187835260808501905060808860051b86010192508860005b8981101561180d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808786030183526117ba828c6115ea565b60406117c682836111dd565b8188526117d582890182611441565b9150506117e48683018361153d565b9250878203878901526117f88284836115a1565b97505050928401925090830190600101611781565b5050505082810360408401526104c88185876116bb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561187657611876611824565b60405290565b60405160a0810167ffffffffffffffff8111828210171561187657611876611824565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118e6576118e6611824565b604052919050565b8051610e7481610e44565b6000602080838503121561190c57600080fd5b825167ffffffffffffffff8082111561192457600080fd5b818501915085601f83011261193857600080fd5b81518181111561194a5761194a611824565b611958848260051b0161189f565b818152848101925060e091820284018501918883111561197757600080fd5b938501935b82851015611a2857848903818112156119955760008081fd5b61199d611853565b60a0808312156119ad5760008081fd5b6119b561187c565b925087516119c281611281565b8352878901516119d181610e44565b838a0152604088810151818501526060808a0151908501526080808a01516119f881610e44565b90850152838352611a0a8983016118ee565b838b015260c08901519083015250855250938401939285019261197c565b50979650505050505050565b80356effffffffffffffffffffffffffffff81168114610e7457600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6183360301811261121157600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611ab957600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835260006020808501808196506005915085821b81018560005b88811015611bc5578383038a52611b088289611a53565b60a0813585528782013560028110611b1f57600080fd5b858901526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112611b6e57600080fd5b90920188810192903567ffffffffffffffff811115611b8c57600080fd5b80891b3603841315611b9d57600080fd5b8282880152611baf8388018286611a87565b9d8a019d96505050928701925050600101611af1565b509098975050505050505050565b60006080820173ffffffffffffffffffffffffffffffffffffffff8a16835260206080818501528189835260a092508285019050828a60051b8601018b60005b8c811015611cfb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888403018452611c4c828f611a53565b611c5681826111dd565b878552611c6588860182611441565b9050611c72878301611a34565b6effffffffffffffffffffffffffffff9081168689015260409080611c98858401611a34565b168288015250506060611cad8184018461153d565b87840383890152611cbf8482846115a1565b9350505050611cd1608083018361153d565b92508582036080870152611ce68284836115a1565b96880196955050509185019150600101611c13565b50508581036040870152611d10818a8c611ad6565b93505050508281036060840152610a168185876116bb565b60006040820173ffffffffffffffffffffffffffffffffffffffff8616835260206040818501528185835260608501905060608660051b86010192508660005b87811015611dbc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018352611daa85611da5848c6111dd565b611441565b94509183019190830190600101611d68565b509298975050505050505050565b600060208284031215611ddc57600080fd5b8151801515811461107957600080fdfe60a060405234801561001057600080fd5b50336080526040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a160805161181961007560003960008181610276015281816103d701528181610518015281816105c9015261072201526118196000f3fe60806040526004361061007b5760003560e01c806365c4eb721161004e57806365c4eb72146101b357806376a67a51146101c657806384385c6f146101e8578063e5c27af11461020857600080fd5b80630e1d31dc146100805780632718034d146100fa578063331315701461011a578063570ca73514610161575b600080fd5b34801561008c57600080fd5b506100c461009b366004610850565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009392505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010d6101083660046108e4565b610238565b6040516100f191906109aa565b34801561012657600080fd5b506100c4610135366004610a50565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009695505050505050565b34801561016d57600080fd5b5060005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f1565b61010d6101c1366004610b09565b610399565b3480156101d257600080fd5b506101e66101e1366004610b96565b610500565b005b3480156101f457600080fd5b506101e6610203366004610b96565b6105b1565b34801561021457600080fd5b50610228610223366004610bba565b6106e6565b60405190151581526020016100f1565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331480159061029957503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b156102d0576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa817440400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a817440490349061032a90899089908990899060040161117d565b60006040518083038185885af1158015610348573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261038f9190810190611313565b9695505050505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633148015906103fa57503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b15610431576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f55944a4200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906355944a4290349061048f908b908b908b908b908b908b9060040161160c565b60006040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104f49190810190611313565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461056f576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a18073ffffffffffffffffffffffffffffffffffffffff16ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610620576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661066d576040517fd0769d8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff16331480159061074557503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b1561077c576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ffd9f1e1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fd9f1e10906107d0908690869060040161174e565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081391906117c1565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b50565b803561084b8161081b565b919050565b6000806000806080858703121561086657600080fd5b8435935060208501356108788161081b565b925060408501356108888161081b565b9396929550929360600135925050565b60008083601f8401126108aa57600080fd5b50813567ffffffffffffffff8111156108c257600080fd5b6020830191508360208260051b85010111156108dd57600080fd5b9250929050565b6000806000806000606086880312156108fc57600080fd5b85356109078161081b565b9450602086013567ffffffffffffffff8082111561092457600080fd5b61093089838a01610898565b9096509450604088013591508082111561094957600080fd5b5061095688828901610898565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106109a6576109a6610967565b9052565b602080825282518282018190526000919060409081850190868401855b82811015610a4357815180516109de868251610996565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e090930192908501906001016109c7565b5091979650505050505050565b600080600080600080600060a0888a031215610a6b57600080fd5b873596506020880135610a7d8161081b565b9550604088013567ffffffffffffffff80821115610a9a57600080fd5b9089019060a0828c031215610aae57600080fd5b90955060608901359080821115610ac457600080fd5b610ad08b838c01610898565b909650945060808a0135915080821115610ae957600080fd5b50610af68a828b01610898565b989b979a50959850939692959293505050565b60008060008060008060006080888a031215610b2457600080fd5b8735610b2f8161081b565b9650602088013567ffffffffffffffff80821115610b4c57600080fd5b610b588b838c01610898565b909850965060408a0135915080821115610b7157600080fd5b610b7d8b838c01610898565b909650945060608a0135915080821115610ae957600080fd5b600060208284031215610ba857600080fd5b8135610bb38161081b565b9392505050565b600080600060408486031215610bcf57600080fd5b8335610bda8161081b565b9250602084013567ffffffffffffffff811115610bf657600080fd5b610c0286828701610898565b9497909650939450505050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112610c4357600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c8157600080fd5b830160208101925035905067ffffffffffffffff811115610ca157600080fd5b60a0810236038213156108dd57600080fd5b6006811061083d57600080fd5b8183526000602080850194508260005b85811015610d45578135610ce381610cb3565b610ced8882610996565b5082820135610cfb8161081b565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a09687019690910190600101610cd0565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8557600080fd5b830160208101925035905067ffffffffffffffff811115610da557600080fd5b60c0810236038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d45578135610dda81610cb3565b610de48882610996565b5082820135610df28161081b565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a09081840135610e3c8161081b565b169088015260c0968701969190910190600101610dc7565b80356004811061084b57600080fd5b600481106109a6576109a6610967565b6000610160610e9f84610e8585610840565b73ffffffffffffffffffffffffffffffffffffffff169052565b610eab60208401610840565b73ffffffffffffffffffffffffffffffffffffffff166020850152610ed36040840184610c4c565b826040870152610ee68387018284610cc0565b92505050610ef76060840184610d50565b8583036060870152610f0a838284610db7565b92505050610f1a60808401610e54565b610f276080860182610e63565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fa457600080fd5b830160208101925035905067ffffffffffffffff811115610fc457600080fd5b8036038213156108dd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610c4357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261108557600080fd5b830160208101925035905067ffffffffffffffff8111156110a557600080fd5b8060061b36038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d4557813587528282013583880152604096870196909101906001016110c7565b818352600060208085019450848460051b86018460005b8781101561117057838303895261111b828861101c565b60406111278283611050565b82875261113783880182846110b7565b9250505061114787830183611050565b92508582038887015261115b8284836110b7565b9b88019b955050509185019150600101611104565b5090979650505050505050565b60408082528181018590526000906060600587901b8401810190840188845b89811015611228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08785030183526111d5828c61101c565b6111df8182610c0f565b8686526111ee87870182610e73565b905060206111fe81840184610f6f565b935087830382890152611212838583610fd3565b975050948501949390930192505060010161119c565b50505083810360208501526104f48186886110ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b60405160a0810167ffffffffffffffff811182821017156112905761129061123e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113005761130061123e565b604052919050565b805161084b8161081b565b6000602080838503121561132657600080fd5b825167ffffffffffffffff8082111561133e57600080fd5b818501915085601f83011261135257600080fd5b8151818111156113645761136461123e565b611372848260051b016112b9565b818152848101925060e091820284018501918883111561139157600080fd5b938501935b8285101561144257848903818112156113af5760008081fd5b6113b761126d565b60a0808312156113c75760008081fd5b6113cf611296565b925087516113dc81610cb3565b8352878901516113eb8161081b565b838a0152604088810151818501526060808a0151908501526080808a01516114128161081b565b90850152838352611424898301611308565b838b015260c089015190830152508552509384019392850192611396565b50979650505050505050565b80356effffffffffffffffffffffffffffff8116811461084b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112610c4357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114d357600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352602080840193600091600585811b8301820185855b888110156115fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018a52611541828961146d565b60a081358552868201356002811061155857600080fd5b858801526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126115a757600080fd5b90920187810192903567ffffffffffffffff8111156115c557600080fd5b80881b36038413156115d657600080fd5b82828801526115e883880182866114a1565b9d89019d96505050928601925050600101611508565b509098975050505050505050565b6060808252818101879052600090608080840160058a901b850182018b855b8c811015611714577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888403018452611664828f61146d565b60a06116708283610c0f565b81865261167f82870182610e73565b915050602061168f81840161144e565b6effffffffffffffffffffffffffffff90811687830152604090806116b586840161144e565b168289015250506116c889840184610f6f565b8784038b8901526116da848284610fd3565b935050506116ea88840184610f6f565b9350868303898801526116fe838583610fd3565b978201979650509390930192505060010161162b565b50508581036020870152611729818a8c6114f0565b935050505082810360408401526117418185876110ed565b9998505050505050505050565b60208082528181018390526000906040600585901b8401810190840186845b87811015610a43577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08785030183526117af846117aa848c610c0f565b610e73565b9350918401919084019060010161176d565b6000602082840312156117d357600080fd5b81518015158114610bb357600080fdfea2646970667358221220470f403ab2d37142cb68786faec537cbc245304262abd10a2ade8d7e3efc2a1b64736f6c634300080e0033a264697066735822122053cad6021b0510688ec43c13afb4833a3f155afa5b235e4e8ed10129e67d08bb64736f6c634300080e003360a060405234801561001057600080fd5b50336080526040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a160805161181961007560003960008181610276015281816103d701528181610518015281816105c9015261072201526118196000f3fe60806040526004361061007b5760003560e01c806365c4eb721161004e57806365c4eb72146101b357806376a67a51146101c657806384385c6f146101e8578063e5c27af11461020857600080fd5b80630e1d31dc146100805780632718034d146100fa578063331315701461011a578063570ca73514610161575b600080fd5b34801561008c57600080fd5b506100c461009b366004610850565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009392505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010d6101083660046108e4565b610238565b6040516100f191906109aa565b34801561012657600080fd5b506100c4610135366004610a50565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009695505050505050565b34801561016d57600080fd5b5060005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f1565b61010d6101c1366004610b09565b610399565b3480156101d257600080fd5b506101e66101e1366004610b96565b610500565b005b3480156101f457600080fd5b506101e6610203366004610b96565b6105b1565b34801561021457600080fd5b50610228610223366004610bba565b6106e6565b60405190151581526020016100f1565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331480159061029957503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b156102d0576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa817440400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a817440490349061032a90899089908990899060040161117d565b60006040518083038185885af1158015610348573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261038f9190810190611313565b9695505050505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633148015906103fa57503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b15610431576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f55944a4200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906355944a4290349061048f908b908b908b908b908b908b9060040161160c565b60006040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104f49190810190611313565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461056f576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a18073ffffffffffffffffffffffffffffffffffffffff16ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610620576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661066d576040517fd0769d8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff16331480159061074557503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b1561077c576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ffd9f1e1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fd9f1e10906107d0908690869060040161174e565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081391906117c1565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b50565b803561084b8161081b565b919050565b6000806000806080858703121561086657600080fd5b8435935060208501356108788161081b565b925060408501356108888161081b565b9396929550929360600135925050565b60008083601f8401126108aa57600080fd5b50813567ffffffffffffffff8111156108c257600080fd5b6020830191508360208260051b85010111156108dd57600080fd5b9250929050565b6000806000806000606086880312156108fc57600080fd5b85356109078161081b565b9450602086013567ffffffffffffffff8082111561092457600080fd5b61093089838a01610898565b9096509450604088013591508082111561094957600080fd5b5061095688828901610898565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106109a6576109a6610967565b9052565b602080825282518282018190526000919060409081850190868401855b82811015610a4357815180516109de868251610996565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e090930192908501906001016109c7565b5091979650505050505050565b600080600080600080600060a0888a031215610a6b57600080fd5b873596506020880135610a7d8161081b565b9550604088013567ffffffffffffffff80821115610a9a57600080fd5b9089019060a0828c031215610aae57600080fd5b90955060608901359080821115610ac457600080fd5b610ad08b838c01610898565b909650945060808a0135915080821115610ae957600080fd5b50610af68a828b01610898565b989b979a50959850939692959293505050565b60008060008060008060006080888a031215610b2457600080fd5b8735610b2f8161081b565b9650602088013567ffffffffffffffff80821115610b4c57600080fd5b610b588b838c01610898565b909850965060408a0135915080821115610b7157600080fd5b610b7d8b838c01610898565b909650945060608a0135915080821115610ae957600080fd5b600060208284031215610ba857600080fd5b8135610bb38161081b565b9392505050565b600080600060408486031215610bcf57600080fd5b8335610bda8161081b565b9250602084013567ffffffffffffffff811115610bf657600080fd5b610c0286828701610898565b9497909650939450505050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112610c4357600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c8157600080fd5b830160208101925035905067ffffffffffffffff811115610ca157600080fd5b60a0810236038213156108dd57600080fd5b6006811061083d57600080fd5b8183526000602080850194508260005b85811015610d45578135610ce381610cb3565b610ced8882610996565b5082820135610cfb8161081b565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a09687019690910190600101610cd0565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8557600080fd5b830160208101925035905067ffffffffffffffff811115610da557600080fd5b60c0810236038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d45578135610dda81610cb3565b610de48882610996565b5082820135610df28161081b565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a09081840135610e3c8161081b565b169088015260c0968701969190910190600101610dc7565b80356004811061084b57600080fd5b600481106109a6576109a6610967565b6000610160610e9f84610e8585610840565b73ffffffffffffffffffffffffffffffffffffffff169052565b610eab60208401610840565b73ffffffffffffffffffffffffffffffffffffffff166020850152610ed36040840184610c4c565b826040870152610ee68387018284610cc0565b92505050610ef76060840184610d50565b8583036060870152610f0a838284610db7565b92505050610f1a60808401610e54565b610f276080860182610e63565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fa457600080fd5b830160208101925035905067ffffffffffffffff811115610fc457600080fd5b8036038213156108dd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610c4357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261108557600080fd5b830160208101925035905067ffffffffffffffff8111156110a557600080fd5b8060061b36038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d4557813587528282013583880152604096870196909101906001016110c7565b818352600060208085019450848460051b86018460005b8781101561117057838303895261111b828861101c565b60406111278283611050565b82875261113783880182846110b7565b9250505061114787830183611050565b92508582038887015261115b8284836110b7565b9b88019b955050509185019150600101611104565b5090979650505050505050565b60408082528181018590526000906060600587901b8401810190840188845b89811015611228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08785030183526111d5828c61101c565b6111df8182610c0f565b8686526111ee87870182610e73565b905060206111fe81840184610f6f565b935087830382890152611212838583610fd3565b975050948501949390930192505060010161119c565b50505083810360208501526104f48186886110ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b60405160a0810167ffffffffffffffff811182821017156112905761129061123e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113005761130061123e565b604052919050565b805161084b8161081b565b6000602080838503121561132657600080fd5b825167ffffffffffffffff8082111561133e57600080fd5b818501915085601f83011261135257600080fd5b8151818111156113645761136461123e565b611372848260051b016112b9565b818152848101925060e091820284018501918883111561139157600080fd5b938501935b8285101561144257848903818112156113af5760008081fd5b6113b761126d565b60a0808312156113c75760008081fd5b6113cf611296565b925087516113dc81610cb3565b8352878901516113eb8161081b565b838a0152604088810151818501526060808a0151908501526080808a01516114128161081b565b90850152838352611424898301611308565b838b015260c089015190830152508552509384019392850192611396565b50979650505050505050565b80356effffffffffffffffffffffffffffff8116811461084b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112610c4357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114d357600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352602080840193600091600585811b8301820185855b888110156115fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018a52611541828961146d565b60a081358552868201356002811061155857600080fd5b858801526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126115a757600080fd5b90920187810192903567ffffffffffffffff8111156115c557600080fd5b80881b36038413156115d657600080fd5b82828801526115e883880182866114a1565b9d89019d96505050928601925050600101611508565b509098975050505050505050565b6060808252818101879052600090608080840160058a901b850182018b855b8c811015611714577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888403018452611664828f61146d565b60a06116708283610c0f565b81865261167f82870182610e73565b915050602061168f81840161144e565b6effffffffffffffffffffffffffffff90811687830152604090806116b586840161144e565b168289015250506116c889840184610f6f565b8784038b8901526116da848284610fd3565b935050506116ea88840184610f6f565b9350868303898801526116fe838583610fd3565b978201979650509390930192505060010161162b565b50508581036020870152611729818a8c6114f0565b935050505082810360408401526117418185876110ed565b9998505050505050505050565b60208082528181018390526000906040600585901b8401810190840186845b87811015610a43577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08785030183526117af846117aa848c610c0f565b610e73565b9350918401919084019060010161176d565b6000602082840312156117d357600080fd5b81518015158114610bb357600080fdfea2646970667358221220470f403ab2d37142cb68786faec537cbc245304262abd10a2ade8d7e3efc2a1b64736f6c634300080e0033",
    "sourceMap": "905:11967:66:-:0;;;1841:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1932:6;:21;;-1:-1:-1;;;;;;1932:21:66;-1:-1:-1;;;;;1932:21:66;;;;;2043:31;;;;;;;:::i;:::-;-1:-1:-1;;2043:31:66;;;;;;;;;;;;;;2033:42;;2043:31;;;;;2033:42;2014:61;;-1:-1:-1;905:11967:66;;;;;;;;;;:::o;14:290:127:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:127;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:127:o;:::-;905:11967:66;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063d6f3b11011610059578063d6f3b11014610282578063dcd5b13e146102a2578063f2fde38b146102c2578063f7e4aac6146102e257600080fd5b80638da5cb5b146102195780639fd0506d14610244578063b44f66081461026f57600080fd5b80637242512f116100bb5780637242512f1461016757806376a67a51146101a95780637762df25146101d957806379ba50971461020457600080fd5b806323452b9c146100e257806340ddc788146100f957806346b3ce9f14610122575b600080fd5b3480156100ee57600080fd5b506100f7610302565b005b61010c610107366004610ec5565b6103b1565b6040516101199190610f9d565b60405180910390f35b34801561012e57600080fd5b5061014261013d366004611043565b6104d4565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b34801561017357600080fd5b5061019b7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610119565b3480156101b557600080fd5b506101c96101c436600461105c565b6106cf565b6040519015158152602001610119565b3480156101e557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff16610142565b34801561021057600080fd5b506100f76107d0565b34801561022557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610142565b34801561025057600080fd5b5060025473ffffffffffffffffffffffffffffffffffffffff16610142565b61010c61027d366004611080565b6108fb565b34801561028e57600080fd5b506100f761029d36600461113f565b610a24565b3480156102ae57600080fd5b506100f76102bd36600461105c565b610b18565b3480156102ce57600080fd5b506100f76102dd36600461105c565b610c2f565b3480156102ee57600080fd5b506100f76102fd3660046111a4565b610d5d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610353576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600081527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005460609073ffffffffffffffffffffffffffffffffffffffff163314610405576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f2718034d000000000000000000000000000000000000000000000000000000008152879073ffffffffffffffffffffffffffffffffffffffff821690632718034d903490610463908b908b908b908b908b90600401611741565b60006040518083038185885af1158015610481573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104c891908101906118f9565b98975050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff163314610526576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166021820152603581018390527f00000000000000000000000000000000000000000000000000000000000000006055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120905073ffffffffffffffffffffffffffffffffffffffff81163b1561064c576040517e83438500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240160405180910390fd5b8160405161065990610e37565b8190604051809103906000f5905080158015610679573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff83168152602081018490527fd1fa916c9f898e9a8dcedb0f78093657d07014799896193f2b219bed6ac7399c910160405180910390a1919050565b60025460009073ffffffffffffffffffffffffffffffffffffffff163314801590610712575060005473ffffffffffffffffffffffffffffffffffffffff163314155b15610749576040517fc726084300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f76a67a5100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8316906376a67a5190602401600060405180830381600087803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b50600195945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610821576040517f1ff958b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600081527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556000546040805173ffffffffffffffffffffffffffffffffffffffff90921682523360208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331461094f576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f65c4eb72000000000000000000000000000000000000000000000000000000008152899073ffffffffffffffffffffffffffffffffffffffff8216906365c4eb729034906109b1908d908d908d908d908d908d908d90600401611bd3565b60006040518083038185885af11580156109cf573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a1691908101906118f9565b9a9950505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a75576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fe5c27af1000000000000000000000000000000000000000000000000000000008152849073ffffffffffffffffffffffffffffffffffffffff82169063e5c27af190610acd90879087908790600401611d28565b6020604051808303816000875af1158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190611dca565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b69576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610bb6576040517f5384e6f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fa4336c0cb1e245b95ad204faed7e940d6dc999684fd8b5e1ff597a0c4efca8ab9060200160405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c80576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610ccd576040517fda72ecf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da9060200160405180910390a1600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dae576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f84385c6f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528391908216906384385c6f90602401600060405180830381600087803b158015610e1a57600080fd5b505af1158015610e2e573d6000803e3d6000fd5b50505050505050565b61188e80611ded83390190565b73ffffffffffffffffffffffffffffffffffffffff81168114610e6657600080fd5b50565b8035610e7481610e44565b919050565b60008083601f840112610e8b57600080fd5b50813567ffffffffffffffff811115610ea357600080fd5b6020830191508360208260051b8501011115610ebe57600080fd5b9250929050565b60008060008060008060808789031215610ede57600080fd5b8635610ee981610e44565b95506020870135610ef981610e44565b9450604087013567ffffffffffffffff80821115610f1657600080fd5b610f228a838b01610e79565b90965094506060890135915080821115610f3b57600080fd5b50610f4889828a01610e79565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610f9957610f99610f5a565b9052565b602080825282518282018190526000919060409081850190868401855b828110156110365781518051610fd1868251610f89565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e09093019290850190600101610fba565b5091979650505050505050565b60006020828403121561105557600080fd5b5035919050565b60006020828403121561106e57600080fd5b813561107981610e44565b9392505050565b60008060008060008060008060a0898b03121561109c57600080fd5b88356110a781610e44565b975060208901356110b781610e44565b9650604089013567ffffffffffffffff808211156110d457600080fd5b6110e08c838d01610e79565b909850965060608b01359150808211156110f957600080fd5b6111058c838d01610e79565b909650945060808b013591508082111561111e57600080fd5b5061112b8b828c01610e79565b999c989b5096995094979396929594505050565b6000806000806060858703121561115557600080fd5b843561116081610e44565b9350602085013561117081610e44565b9250604085013567ffffffffffffffff81111561118c57600080fd5b61119887828801610e79565b95989497509550505050565b600080604083850312156111b757600080fd5b82356111c281610e44565b915060208301356111d281610e44565b809150509250929050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261121157600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261124f57600080fd5b830160208101925035905067ffffffffffffffff81111561126f57600080fd5b60a081023603821315610ebe57600080fd5b60068110610e6657600080fd5b8183526000602080850194508260005b858110156113135781356112b181611281565b6112bb8882610f89565b50828201356112c981610e44565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a0968701969091019060010161129e565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261135357600080fd5b830160208101925035905067ffffffffffffffff81111561137357600080fd5b60c081023603821315610ebe57600080fd5b8183526000602080850194508260005b858110156113135781356113a881611281565b6113b28882610f89565b50828201356113c081610e44565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a0908184013561140a81610e44565b169088015260c0968701969190910190600101611395565b803560048110610e7457600080fd5b60048110610f9957610f99610f5a565b600061016061146d8461145385610e69565b73ffffffffffffffffffffffffffffffffffffffff169052565b61147960208401610e69565b73ffffffffffffffffffffffffffffffffffffffff1660208501526114a1604084018461121a565b8260408701526114b4838701828461128e565b925050506114c5606084018461131e565b85830360608701526114d8838284611385565b925050506114e860808401611422565b6114f56080860182611431565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261157257600080fd5b830160208101925035905067ffffffffffffffff81111561159257600080fd5b803603821315610ebe57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261121157600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261165357600080fd5b830160208101925035905067ffffffffffffffff81111561167357600080fd5b8060061b3603821315610ebe57600080fd5b8183526000602080850194508260005b858110156113135781358752828201358388015260409687019690910190600101611695565b81835260006020808501808196508560051b810191508460005b878110156110365782840389526116ec82886115ea565b60406116f8828361161e565b8288526117088389018284611685565b925050506117188783018361161e565b92508682038888015261172c828483611685565b9b88019b9650505091850191506001016116d5565b60006060820173ffffffffffffffffffffffffffffffffffffffff8816835260206060818501528187835260808501905060808860051b86010192508860005b8981101561180d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808786030183526117ba828c6115ea565b60406117c682836111dd565b8188526117d582890182611441565b9150506117e48683018361153d565b9250878203878901526117f88284836115a1565b97505050928401925090830190600101611781565b5050505082810360408401526104c88185876116bb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561187657611876611824565b60405290565b60405160a0810167ffffffffffffffff8111828210171561187657611876611824565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118e6576118e6611824565b604052919050565b8051610e7481610e44565b6000602080838503121561190c57600080fd5b825167ffffffffffffffff8082111561192457600080fd5b818501915085601f83011261193857600080fd5b81518181111561194a5761194a611824565b611958848260051b0161189f565b818152848101925060e091820284018501918883111561197757600080fd5b938501935b82851015611a2857848903818112156119955760008081fd5b61199d611853565b60a0808312156119ad5760008081fd5b6119b561187c565b925087516119c281611281565b8352878901516119d181610e44565b838a0152604088810151818501526060808a0151908501526080808a01516119f881610e44565b90850152838352611a0a8983016118ee565b838b015260c08901519083015250855250938401939285019261197c565b50979650505050505050565b80356effffffffffffffffffffffffffffff81168114610e7457600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6183360301811261121157600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611ab957600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835260006020808501808196506005915085821b81018560005b88811015611bc5578383038a52611b088289611a53565b60a0813585528782013560028110611b1f57600080fd5b858901526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112611b6e57600080fd5b90920188810192903567ffffffffffffffff811115611b8c57600080fd5b80891b3603841315611b9d57600080fd5b8282880152611baf8388018286611a87565b9d8a019d96505050928701925050600101611af1565b509098975050505050505050565b60006080820173ffffffffffffffffffffffffffffffffffffffff8a16835260206080818501528189835260a092508285019050828a60051b8601018b60005b8c811015611cfb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888403018452611c4c828f611a53565b611c5681826111dd565b878552611c6588860182611441565b9050611c72878301611a34565b6effffffffffffffffffffffffffffff9081168689015260409080611c98858401611a34565b168288015250506060611cad8184018461153d565b87840383890152611cbf8482846115a1565b9350505050611cd1608083018361153d565b92508582036080870152611ce68284836115a1565b96880196955050509185019150600101611c13565b50508581036040870152611d10818a8c611ad6565b93505050508281036060840152610a168185876116bb565b60006040820173ffffffffffffffffffffffffffffffffffffffff8616835260206040818501528185835260608501905060608660051b86010192508660005b87811015611dbc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018352611daa85611da5848c6111dd565b611441565b94509183019190830190600101611d68565b509298975050505050505050565b600060208284031215611ddc57600080fd5b8151801515811461107957600080fdfe60a060405234801561001057600080fd5b50336080526040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a160805161181961007560003960008181610276015281816103d701528181610518015281816105c9015261072201526118196000f3fe60806040526004361061007b5760003560e01c806365c4eb721161004e57806365c4eb72146101b357806376a67a51146101c657806384385c6f146101e8578063e5c27af11461020857600080fd5b80630e1d31dc146100805780632718034d146100fa578063331315701461011a578063570ca73514610161575b600080fd5b34801561008c57600080fd5b506100c461009b366004610850565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009392505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010d6101083660046108e4565b610238565b6040516100f191906109aa565b34801561012657600080fd5b506100c4610135366004610a50565b507f0e1d31dc000000000000000000000000000000000000000000000000000000009695505050505050565b34801561016d57600080fd5b5060005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f1565b61010d6101c1366004610b09565b610399565b3480156101d257600080fd5b506101e66101e1366004610b96565b610500565b005b3480156101f457600080fd5b506101e6610203366004610b96565b6105b1565b34801561021457600080fd5b50610228610223366004610bba565b6106e6565b60405190151581526020016100f1565b60005460609073ffffffffffffffffffffffffffffffffffffffff16331480159061029957503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b156102d0576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa817440400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a817440490349061032a90899089908990899060040161117d565b60006040518083038185885af1158015610348573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261038f9190810190611313565b9695505050505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633148015906103fa57503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b15610431576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f55944a4200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916906355944a4290349061048f908b908b908b908b908b908b9060040161160c565b60006040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104f49190810190611313565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461056f576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a18073ffffffffffffffffffffffffffffffffffffffff16ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610620576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661066d576040517fd0769d8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec49060200160405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff16331480159061074557503373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614155b1561077c576040517fccea9e6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ffd9f1e1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fd9f1e10906107d0908690869060040161174e565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081391906117c1565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b50565b803561084b8161081b565b919050565b6000806000806080858703121561086657600080fd5b8435935060208501356108788161081b565b925060408501356108888161081b565b9396929550929360600135925050565b60008083601f8401126108aa57600080fd5b50813567ffffffffffffffff8111156108c257600080fd5b6020830191508360208260051b85010111156108dd57600080fd5b9250929050565b6000806000806000606086880312156108fc57600080fd5b85356109078161081b565b9450602086013567ffffffffffffffff8082111561092457600080fd5b61093089838a01610898565b9096509450604088013591508082111561094957600080fd5b5061095688828901610898565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106109a6576109a6610967565b9052565b602080825282518282018190526000919060409081850190868401855b82811015610a4357815180516109de868251610996565b8088015173ffffffffffffffffffffffffffffffffffffffff908116878a0152878201518888015260608083015190880152608091820151811691870191909152818801511660a086015285015160c085015260e090930192908501906001016109c7565b5091979650505050505050565b600080600080600080600060a0888a031215610a6b57600080fd5b873596506020880135610a7d8161081b565b9550604088013567ffffffffffffffff80821115610a9a57600080fd5b9089019060a0828c031215610aae57600080fd5b90955060608901359080821115610ac457600080fd5b610ad08b838c01610898565b909650945060808a0135915080821115610ae957600080fd5b50610af68a828b01610898565b989b979a50959850939692959293505050565b60008060008060008060006080888a031215610b2457600080fd5b8735610b2f8161081b565b9650602088013567ffffffffffffffff80821115610b4c57600080fd5b610b588b838c01610898565b909850965060408a0135915080821115610b7157600080fd5b610b7d8b838c01610898565b909650945060608a0135915080821115610ae957600080fd5b600060208284031215610ba857600080fd5b8135610bb38161081b565b9392505050565b600080600060408486031215610bcf57600080fd5b8335610bda8161081b565b9250602084013567ffffffffffffffff811115610bf657600080fd5b610c0286828701610898565b9497909650939450505050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112610c4357600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c8157600080fd5b830160208101925035905067ffffffffffffffff811115610ca157600080fd5b60a0810236038213156108dd57600080fd5b6006811061083d57600080fd5b8183526000602080850194508260005b85811015610d45578135610ce381610cb3565b610ced8882610996565b5082820135610cfb8161081b565b73ffffffffffffffffffffffffffffffffffffffff168784015260408281013590880152606080830135908801526080808301359088015260a09687019690910190600101610cd0565b509495945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8557600080fd5b830160208101925035905067ffffffffffffffff811115610da557600080fd5b60c0810236038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d45578135610dda81610cb3565b610de48882610996565b5082820135610df28161081b565b73ffffffffffffffffffffffffffffffffffffffff9081168885015260408381013590890152606080840135908901526080808401359089015260a09081840135610e3c8161081b565b169088015260c0968701969190910190600101610dc7565b80356004811061084b57600080fd5b600481106109a6576109a6610967565b6000610160610e9f84610e8585610840565b73ffffffffffffffffffffffffffffffffffffffff169052565b610eab60208401610840565b73ffffffffffffffffffffffffffffffffffffffff166020850152610ed36040840184610c4c565b826040870152610ee68387018284610cc0565b92505050610ef76060840184610d50565b8583036060870152610f0a838284610db7565b92505050610f1a60808401610e54565b610f276080860182610e63565b5060a0838101359085015260c0808401359085015260e08084013590850152610100808401359085015261012080840135908501526101409283013592909301919091525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fa457600080fd5b830160208101925035905067ffffffffffffffff811115610fc457600080fd5b8036038213156108dd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610c4357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261108557600080fd5b830160208101925035905067ffffffffffffffff8111156110a557600080fd5b8060061b36038213156108dd57600080fd5b8183526000602080850194508260005b85811015610d4557813587528282013583880152604096870196909101906001016110c7565b818352600060208085019450848460051b86018460005b8781101561117057838303895261111b828861101c565b60406111278283611050565b82875261113783880182846110b7565b9250505061114787830183611050565b92508582038887015261115b8284836110b7565b9b88019b955050509185019150600101611104565b5090979650505050505050565b60408082528181018590526000906060600587901b8401810190840188845b89811015611228577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08785030183526111d5828c61101c565b6111df8182610c0f565b8686526111ee87870182610e73565b905060206111fe81840184610f6f565b935087830382890152611212838583610fd3565b975050948501949390930192505060010161119c565b50505083810360208501526104f48186886110ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b60405160a0810167ffffffffffffffff811182821017156112905761129061123e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113005761130061123e565b604052919050565b805161084b8161081b565b6000602080838503121561132657600080fd5b825167ffffffffffffffff8082111561133e57600080fd5b818501915085601f83011261135257600080fd5b8151818111156113645761136461123e565b611372848260051b016112b9565b818152848101925060e091820284018501918883111561139157600080fd5b938501935b8285101561144257848903818112156113af5760008081fd5b6113b761126d565b60a0808312156113c75760008081fd5b6113cf611296565b925087516113dc81610cb3565b8352878901516113eb8161081b565b838a0152604088810151818501526060808a0151908501526080808a01516114128161081b565b90850152838352611424898301611308565b838b015260c089015190830152508552509384019392850192611396565b50979650505050505050565b80356effffffffffffffffffffffffffffff8116811461084b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112610c4357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114d357600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352602080840193600091600585811b8301820185855b888110156115fe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018a52611541828961146d565b60a081358552868201356002811061155857600080fd5b858801526040828101359086015260608083013590860152608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126115a757600080fd5b90920187810192903567ffffffffffffffff8111156115c557600080fd5b80881b36038413156115d657600080fd5b82828801526115e883880182866114a1565b9d89019d96505050928601925050600101611508565b509098975050505050505050565b6060808252818101879052600090608080840160058a901b850182018b855b8c811015611714577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888403018452611664828f61146d565b60a06116708283610c0f565b81865261167f82870182610e73565b915050602061168f81840161144e565b6effffffffffffffffffffffffffffff90811687830152604090806116b586840161144e565b168289015250506116c889840184610f6f565b8784038b8901526116da848284610fd3565b935050506116ea88840184610f6f565b9350868303898801526116fe838583610fd3565b978201979650509390930192505060010161162b565b50508581036020870152611729818a8c6114f0565b935050505082810360408401526117418185876110ed565b9998505050505050505050565b60208082528181018390526000906040600585901b8401810190840186845b87811015610a43577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08785030183526117af846117aa848c610c0f565b610e73565b9350918401919084019060010161176d565b6000602082840312156117d357600080fd5b81518015158114610bb357600080fdfea2646970667358221220470f403ab2d37142cb68786faec537cbc245304262abd10a2ade8d7e3efc2a1b64736f6c634300080e0033a264697066735822122053cad6021b0510688ec43c13afb4833a3f155afa5b235e4e8ed10129e67d08bb64736f6c634300080e0033",
    "sourceMap": "905:11967:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9420:407;;;;;;;;;;;;;:::i;:::-;;5444:810;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2311:1175;;;;;;;;;;-1:-1:-1;2311:1175:66;;;;;:::i;:::-;;:::i;:::-;;;3997:42:127;3985:55;;;3967:74;;3955:2;3940:18;2311:1175:66;3821:226:127;1367:41:66;;;;;;;;;;;;;;;;;;4198:25:127;;;4186:2;4171:18;1367:41:66;4052:177:127;3694:299:66;;;;;;;;;;-1:-1:-1;3694:299:66;;;;;:::i;:::-;;:::i;:::-;;;4651:14:127;;4644:22;4626:41;;4614:2;4599:18;3694:299:66;4486:187:127;12537:106:66;;;;;;;;;;-1:-1:-1;12621:15:66;;;;12537:106;;10028:629;;;;;;;;;;;;;:::i;12295:88::-;;;;;;;;;;-1:-1:-1;12344:7:66;12370:6;;;12295:88;;12780:90;;;;;;;;;;-1:-1:-1;12856:7:66;;;;12780:90;;7296:920;;;;;;:::i;:::-;;:::i;4278:521::-;;;;;;;;;;-1:-1:-1;4278:521:66;;;;;:::i;:::-;;:::i;10830:552::-;;;;;;;;;;-1:-1:-1;10830:552:66;;;;;:::i;:::-;;:::i;8641:622::-;;;;;;;;;;-1:-1:-1;8641:622:66;;;;;:::i;:::-;;:::i;11655:505::-;;;;;;;;;;-1:-1:-1;11655:505:66;;;;;:::i;:::-;;:::i;9420:407::-;9552:6;;;;9538:10;:20;9534:76;;9581:18;;;;;;;;;;;;;;9534:76;9704:33;;9734:1;3967:74:127;;9704:33:66;;3955:2:127;3940:18;9704:33:66;;;;;;;9805:15;9798:22;;;;;;9420:407::o;5444:810::-;5771:6;;5669:29;;5771:6;;5757:10;:20;5753:76;;5800:18;;;;;;;;;;;;;;5753:76;6120:127;;;;;5927:19;;6120:23;;;;;;6152:9;;6120:127;;6177:14;;6205:6;;;;6225:12;;;;6120:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6107:140;5444:810;-1:-1:-1;;;;;;;;5444:810:66:o;2311:1175::-;2396:22;2495:6;;;;2481:10;:20;2477:76;;2524:18;;;;;;;;;;;;;;2477:76;2815:207;;2861:12;2815:207;;;22179:92:127;22321:66;2911:4:66;22308:2:127;22304:15;22300:88;22287:11;;;22280:109;22405:12;;;22398:28;;;2980:16:66;22442:12:127;;;22435:28;22479:12;;2815:207:66;;;;;;;;;;;;;2780:264;;2815:207;2780:264;;;;;-1:-1:-1;3175:26:66;;;;:31;3171:102;;3229:33;;;;;3997:42:127;3985:55;;3229:33:66;;;3967:74:127;3940:18;;3229:33:66;;;;;;;3171:102;3359:4;3335:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3446:33:66;;;22706:42:127;22694:55;;22676:74;;22781:2;22766:18;;22759:34;;;3446:33:66;;22649:18:127;3446:33:66;;;;;;;2311:1175;;;:::o;3694:299::-;1555:7;;3791:12;;1555:7;;1541:10;:21;;;;:45;;-1:-1:-1;1580:6:66;;;;1566:10;:20;;1541:45;1537:98;;;1609:15;;;;;;;;;;;;;;1537:98;3860:36:::1;::::0;;;;3885:10:::1;3860:36;::::0;::::1;3967:74:127::0;3860:24:66::1;::::0;::::1;::::0;::::1;::::0;3940:18:127;;3860:36:66::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3982:4:66::1;::::0;3694:299;-1:-1:-1;;;;;3694:299:66:o;10028:629::-;10154:15;;;;10140:10;:29;10136:94;;10192:27;;;;;;;;;;;;;;10136:94;10324:33;;10354:1;3967:74:127;;10324:33:66;;3955:2:127;3940:18;10324:33:66;;;;;;;10424:15;10417:22;;;;;;-1:-1:-1;10544:6:66;10523:40;;;10417:22;10544:6;;;23039:34:127;;10552:10:66;23104:2:127;23089:18;;23082:43;10523:40:66;;22951:18:127;10523:40:66;;;;;;;10631:6;:19;;;;10640:10;10631:19;;;10028:629::o;7296:920::-;7694:6;;7592:29;;7694:6;;7680:10;:20;7676:76;;7723:18;;;;;;;;;;;;;;7676:76;8043:166;;;;;7850:19;;8043:31;;;;;;8083:9;;8043:166;;8108:14;;8136:6;;;;8156:17;;;;8187:12;;;;8043:166;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8030:179;7296:920;-1:-1:-1;;;;;;;;;;7296:920:66:o;4278:521::-;4516:6;;;;4502:10;:20;4498:76;;4545:18;;;;;;;;;;;;;;4498:76;4751:41;;;;;4672:19;;4751:17;;;;;;:41;;4769:14;;4785:6;;;;4751:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4445:354;4278:521;;;;:::o;10830:552::-;10965:6;;;;10951:10;:20;10947:76;;10994:18;;;;;;;;;;;;;;10947:76;11102:28;;;11098:91;;11153:25;;;;;;;;;;;;;;11098:91;11247:7;:24;;;;;;;;;;;;;11353:22;;3967:74:127;;;11353:22:66;;3955:2:127;3940:18;11353:22:66;;;;;;;10830:552;:::o;8641:622::-;8784:6;;;;8770:10;:20;8766:76;;8813:18;;;;;;;;;;;;;;8766:76;8924:31;;;8920:93;;8978:24;;;;;;;;;;;;;;8920:93;9107:40;;3997:42:127;3985:55;;3967:74;;9107:40:66;;3955:2:127;3940:18;9107:40:66;;;;;;;9221:15;:35;;;;;;;;;;;;;;;8641:622::o;11655:505::-;11845:6;;;;11831:10;:20;11827:76;;11874:18;;;;;;;;;;;;;;11827:76;12116:37;;;;;:19;3985:55:127;;;12116:37:66;;;3967:74:127;12000:19:66;;12116;;;;;;3940:18:127;;12116:37:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11774:386;11655:505;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:154:127:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:381::-;389:8;399:6;453:3;446:4;438:6;434:17;430:27;420:55;;471:1;468;461:12;420:55;-1:-1:-1;494:20:127;;537:18;526:30;;523:50;;;569:1;566;559:12;523:50;606:4;598:6;594:17;582:29;;666:3;659:4;649:6;646:1;642:14;634:6;630:27;626:38;623:47;620:67;;;683:1;680;673:12;620:67;312:381;;;;;:::o;698:1159::-;919:6;927;935;943;951;959;1012:3;1000:9;991:7;987:23;983:33;980:53;;;1029:1;1026;1019:12;980:53;1068:9;1055:23;1087:31;1112:5;1087:31;:::i;:::-;1137:5;-1:-1:-1;1194:2:127;1179:18;;1166:32;1207:33;1166:32;1207:33;:::i;:::-;1259:7;-1:-1:-1;1317:2:127;1302:18;;1289:32;1340:18;1370:14;;;1367:34;;;1397:1;1394;1387:12;1367:34;1436:84;1512:7;1503:6;1492:9;1488:22;1436:84;:::i;:::-;1539:8;;-1:-1:-1;1410:110:127;-1:-1:-1;1627:2:127;1612:18;;1599:32;;-1:-1:-1;1643:16:127;;;1640:36;;;1672:1;1669;1662:12;1640:36;;1711:86;1789:7;1778:8;1767:9;1763:24;1711:86;:::i;:::-;698:1159;;;;-1:-1:-1;698:1159:127;;-1:-1:-1;698:1159:127;;1816:8;;698:1159;-1:-1:-1;;;698:1159:127:o;1862:184::-;1914:77;1911:1;1904:88;2011:4;2008:1;2001:15;2035:4;2032:1;2025:15;2051:139;2131:1;2124:5;2121:12;2111:46;;2137:18;;:::i;:::-;2166;;2051:139::o;2327:1304::-;2552:2;2604:21;;;2674:13;;2577:18;;;2696:22;;;2523:4;;2552:2;2737;;2755:18;;;;2796:15;;;2523:4;2839:766;2853:6;2850:1;2847:13;2839:766;;;2918:6;2912:13;2954:2;2948:9;2970:40;3006:3;3001:2;2995:9;2970:40;:::i;:::-;3049:11;;;3043:18;3084:42;3160:21;;;3146:12;;;3139:43;3222:11;;;3216:18;3202:12;;;3195:40;3258:4;3302:11;;;3296:18;3282:12;;;3275:40;3338:4;3386:11;;;3380:18;3376:27;;3362:12;;;3355:49;;;;3450:11;;;3444:18;3440:27;3433:4;3424:14;;3417:51;3510:11;;3504:18;3497:4;3488:14;;3481:42;3552:4;3543:14;;;;3580:15;;;;2875:1;2868:9;2839:766;;;-1:-1:-1;3622:3:127;;2327:1304;-1:-1:-1;;;;;;;2327:1304:127:o;3636:180::-;3695:6;3748:2;3736:9;3727:7;3723:23;3719:32;3716:52;;;3764:1;3761;3754:12;3716:52;-1:-1:-1;3787:23:127;;3636:180;-1:-1:-1;3636:180:127:o;4234:247::-;4293:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:52;;;4362:1;4359;4352:12;4314:52;4401:9;4388:23;4420:31;4445:5;4420:31;:::i;:::-;4470:5;4234:247;-1:-1:-1;;;4234:247:127:o;4678:1533::-;4979:6;4987;4995;5003;5011;5019;5027;5035;5088:3;5076:9;5067:7;5063:23;5059:33;5056:53;;;5105:1;5102;5095:12;5056:53;5144:9;5131:23;5163:31;5188:5;5163:31;:::i;:::-;5213:5;-1:-1:-1;5270:2:127;5255:18;;5242:32;5283:33;5242:32;5283:33;:::i;:::-;5335:7;-1:-1:-1;5393:2:127;5378:18;;5365:32;5416:18;5446:14;;;5443:34;;;5473:1;5470;5463:12;5443:34;5512:84;5588:7;5579:6;5568:9;5564:22;5512:84;:::i;:::-;5615:8;;-1:-1:-1;5486:110:127;-1:-1:-1;5703:2:127;5688:18;;5675:32;;-1:-1:-1;5719:16:127;;;5716:36;;;5748:1;5745;5738:12;5716:36;5787:86;5865:7;5854:8;5843:9;5839:24;5787:86;:::i;:::-;5892:8;;-1:-1:-1;5761:112:127;-1:-1:-1;5980:3:127;5965:19;;5952:33;;-1:-1:-1;5997:16:127;;;5994:36;;;6026:1;6023;6016:12;5994:36;;6065:86;6143:7;6132:8;6121:9;6117:24;6065:86;:::i;:::-;4678:1533;;;;-1:-1:-1;4678:1533:127;;-1:-1:-1;4678:1533:127;;;;;;6170:8;-1:-1:-1;;;4678:1533:127:o;6216:787::-;6380:6;6388;6396;6404;6457:2;6445:9;6436:7;6432:23;6428:32;6425:52;;;6473:1;6470;6463:12;6425:52;6512:9;6499:23;6531:31;6556:5;6531:31;:::i;:::-;6581:5;-1:-1:-1;6638:2:127;6623:18;;6610:32;6651:33;6610:32;6651:33;:::i;:::-;6703:7;-1:-1:-1;6761:2:127;6746:18;;6733:32;6788:18;6777:30;;6774:50;;;6820:1;6817;6810:12;6774:50;6859:84;6935:7;6926:6;6915:9;6911:22;6859:84;:::i;:::-;6216:787;;;;-1:-1:-1;6962:8:127;-1:-1:-1;;;;6216:787:127:o;7008:388::-;7076:6;7084;7137:2;7125:9;7116:7;7112:23;7108:32;7105:52;;;7153:1;7150;7143:12;7105:52;7192:9;7179:23;7211:31;7236:5;7211:31;:::i;:::-;7261:5;-1:-1:-1;7318:2:127;7303:18;;7290:32;7331:33;7290:32;7331:33;:::i;:::-;7383:7;7373:17;;;7008:388;;;;;:::o;7401:359::-;7476:5;7535:3;7522:17;7617:66;7606:8;7590:14;7586:29;7582:102;7562:18;7558:127;7548:155;;7699:1;7696;7689:12;7548:155;7721:33;;;;7401:359;-1:-1:-1;;7401:359:127:o;7765:600::-;7853:5;7860:6;7920:3;7907:17;8002:66;7991:8;7975:14;7971:29;7967:102;7947:18;7943:127;7933:155;;8084:1;8081;8074:12;7933:155;8112:33;;8216:4;8203:18;;;-1:-1:-1;8164:21:127;;-1:-1:-1;8244:18:127;8233:30;;8230:50;;;8276:1;8273;8266:12;8230:50;8335:4;8327:6;8323:17;8307:14;8303:38;8296:5;8292:50;8289:70;;;8355:1;8352;8345:12;8370:107;8451:1;8444:5;8441:12;8431:40;;8467:1;8464;8457:12;8482:1032;8600:6;8595:3;8588:19;8570:3;8626:4;8655:2;8650:3;8646:12;8639:19;;8681:5;8704:1;8714:775;8728:6;8725:1;8722:13;8714:775;;;8805:6;8792:20;8825:39;8856:7;8825:39;:::i;:::-;8877:38;8911:3;8902:7;8877:38;:::i;:::-;;8968:2;8960:6;8956:15;8943:29;8985:33;9010:7;8985:33;:::i;:::-;9065:42;9052:56;9038:12;;;9031:78;9132:4;9183:15;;;9170:29;9156:12;;;9149:51;9223:4;9274:15;;;9261:29;9247:12;;;9240:51;9314:4;9365:15;;;9352:29;9338:12;;;9331:51;9405:4;9429:12;;;;9464:15;;;;8750:1;8743:9;8714:775;;;-1:-1:-1;9505:3:127;;8482:1032;-1:-1:-1;;;;;8482:1032:127:o;9519:608::-;9615:5;9622:6;9682:3;9669:17;9764:66;9753:8;9737:14;9733:29;9729:102;9709:18;9705:127;9695:155;;9846:1;9843;9836:12;9695:155;9874:33;;9978:4;9965:18;;;-1:-1:-1;9926:21:127;;-1:-1:-1;10006:18:127;9995:30;;9992:50;;;10038:1;10035;10028:12;9992:50;10097:4;10089:6;10085:17;10069:14;10065:38;10058:5;10054:50;10051:70;;;10117:1;10114;10107:12;10132:1246;10258:6;10253:3;10246:19;10228:3;10284:4;10313:2;10308:3;10304:12;10297:19;;10339:5;10362:1;10372:981;10386:6;10383:1;10380:13;10372:981;;;10463:6;10450:20;10483:39;10514:7;10483:39;:::i;:::-;10535:38;10569:3;10560:7;10535:38;:::i;:::-;;10626:2;10618:6;10614:15;10601:29;10643:33;10668:7;10643:33;:::i;:::-;10699:42;10775:16;;;10761:12;;;10754:38;10815:4;10866:15;;;10853:29;10839:12;;;10832:51;10906:4;10957:15;;;10944:29;10930:12;;;10923:51;10997:4;11048:15;;;11035:29;11021:12;;;11014:51;11088:4;;11133:15;;;11120:29;11162:33;11120:29;11162:33;:::i;:::-;11229:16;11215:12;;;11208:38;11269:4;11293:12;;;;11328:15;;;;;10408:1;10401:9;10372:981;;11383:150;11458:20;;11507:1;11497:12;;11487:40;;11523:1;11520;11513:12;11538:140;11619:1;11612:5;11609:12;11599:46;;11625:18;;:::i;11683:1487::-;11750:3;11778:6;11793:50;11839:3;11812:25;11831:5;11812:25;:::i;:::-;2272:42;2261:54;2249:67;;2195:127;11793:50;11872:36;11902:4;11895:5;11891:16;11872:36;:::i;:::-;2272:42;2261:54;11959:4;11950:14;;2249:67;12010:85;12089:4;12078:16;;12082:5;12010:85;:::i;:::-;12127:2;12120:4;12115:3;12111:14;12104:26;12151:99;12246:2;12241:3;12237:12;12223;12207:14;12151:99;:::i;:::-;12139:111;;;;12297:93;12384:4;12377:5;12373:16;12366:5;12297:93;:::i;:::-;12432:3;12426:4;12422:14;12415:4;12410:3;12406:14;12399:38;12460:101;12556:4;12540:14;12524;12460:101;:::i;:::-;12446:115;;;;12592:43;12629:4;12622:5;12618:16;12592:43;:::i;:::-;12644:57;12695:4;12690:3;12686:14;12670;12644:57;:::i;:::-;-1:-1:-1;12757:4:127;12746:16;;;12733:30;12717:14;;;12710:54;12820:4;12809:16;;;12796:30;12780:14;;;12773:54;12883:4;12872:16;;;12859:30;12843:14;;;12836:54;12909:6;12958:14;;;12945:28;12931:12;;;12924:50;12993:6;13042:14;;;13029:28;13015:12;;;13008:50;13077:6;13126:14;;;13113:28;13099:12;;;;13092:50;;;;-1:-1:-1;13158:6:127;11683:1487::o;13175:559::-;13233:5;13240:6;13300:3;13287:17;13382:66;13371:8;13355:14;13351:29;13347:102;13327:18;13323:127;13313:155;;13464:1;13461;13454:12;13313:155;13492:33;;13596:4;13583:18;;;-1:-1:-1;13544:21:127;;-1:-1:-1;13624:18:127;13613:30;;13610:50;;;13656:1;13653;13646:12;13610:50;13703:6;13687:14;13683:27;13676:5;13672:39;13669:59;;;13724:1;13721;13714:12;13739:325;13827:6;13822:3;13815:19;13879:6;13872:5;13865:4;13860:3;13856:14;13843:43;;13931:1;13924:4;13915:6;13910:3;13906:16;13902:27;13895:38;13797:3;14053:4;13983:66;13978:2;13970:6;13966:15;13962:88;13957:3;13953:98;13949:109;13942:116;;13739:325;;;;:::o;14069:349::-;14134:5;14193:3;14180:17;14275:66;14264:8;14248:14;14244:29;14240:102;14220:18;14216:127;14206:155;;14357:1;14354;14347:12;14423:608;14522:5;14529:6;14589:3;14576:17;14671:66;14660:8;14644:14;14640:29;14636:102;14616:18;14612:127;14602:155;;14753:1;14750;14743:12;14602:155;14781:33;;14885:4;14872:18;;;-1:-1:-1;14833:21:127;;-1:-1:-1;14913:18:127;14902:30;;14899:50;;;14945:1;14942;14935:12;14899:50;14999:6;14996:1;14992:14;14976;14972:35;14965:5;14961:47;14958:67;;;15021:1;15018;15011:12;15036:535;15165:6;15160:3;15153:19;15135:3;15191:4;15220:2;15215:3;15211:12;15204:19;;15246:5;15269:1;15279:267;15293:6;15290:1;15287:13;15279:267;;;15354:20;;15342:33;;15422:15;;;15409:29;15395:12;;;15388:51;15462:4;15486:12;;;;15521:15;;;;15315:1;15308:9;15279:267;;15576:1263;15696:6;15691:3;15684:19;15666:3;15722:4;15763:2;15758:3;15754:12;15788:11;15815;15808:18;;15865:6;15862:1;15858:14;15851:5;15847:26;15835:38;;15896:5;15919:1;15929:884;15943:6;15940:1;15937:13;15929:884;;;16014:5;16008:4;16004:16;15999:3;15992:29;16044:52;16089:6;16082:5;16044:52;:::i;:::-;16119:4;16170:79;16246:2;16242;16170:79;:::i;:::-;16275:2;16269:4;16262:16;16305:109;16410:2;16404:4;16400:13;16386:12;16372;16305:109;:::i;:::-;16291:123;;;;16465:88;16549:2;16545;16541:11;16537:2;16465:88;:::i;:::-;16427:126;;16600:4;16592:6;16588:17;16583:2;16577:4;16573:13;16566:40;16627:106;16726:6;16710:14;16694;16627:106;:::i;:::-;16791:12;;;;16619:114;-1:-1:-1;;;16756:15:127;;;;-1:-1:-1;15965:1:127;15958:9;15929:884;;16844:1784;17245:4;17293:2;17282:9;17278:18;17335:42;17327:6;17323:55;17312:9;17305:74;17398:2;17436;17431;17420:9;17416:18;17409:30;17459:6;17489;17481;17474:22;17527:3;17516:9;17512:19;17505:26;;17590:3;17580:6;17577:1;17573:14;17562:9;17558:30;17554:40;17540:54;;17617:6;17641:1;17651:812;17665:6;17662:1;17659:13;17651:812;;;17754:66;17742:9;17734:6;17730:22;17726:95;17721:3;17714:108;17845:53;17891:6;17883;17845:53;:::i;:::-;17921:4;17958:55;18010:2;18006;17958:55;:::i;:::-;18041:2;18033:6;18026:18;18071:73;18140:2;18132:6;18128:15;18114:12;18071:73;:::i;:::-;18057:87;;;18193:47;18236:2;18232;18228:11;18224:2;18193:47;:::i;:::-;18157:83;;18289:6;18281;18277:19;18272:2;18264:6;18260:15;18253:44;18320:63;18376:6;18362:12;18346:14;18320:63;:::i;:::-;18310:73;-1:-1:-1;;;18441:12:127;;;;-1:-1:-1;18406:15:127;;;;17687:1;17680:9;17651:812;;;17655:3;;;;18513:9;18505:6;18501:22;18494:4;18483:9;18479:20;18472:52;18541:81;18615:6;18607;18599;18541:81;:::i;18633:184::-;18685:77;18682:1;18675:88;18782:4;18779:1;18772:15;18806:4;18803:1;18796:15;18822:253;18894:2;18888:9;18936:4;18924:17;;18971:18;18956:34;;18992:22;;;18953:62;18950:88;;;19018:18;;:::i;:::-;19054:2;19047:22;18822:253;:::o;19080:::-;19152:2;19146:9;19194:4;19182:17;;19229:18;19214:34;;19250:22;;;19211:62;19208:88;;;19276:18;;:::i;19338:334::-;19409:2;19403:9;19465:2;19455:13;;19470:66;19451:86;19439:99;;19568:18;19553:34;;19589:22;;;19550:62;19547:88;;;19615:18;;:::i;:::-;19651:2;19644:22;19338:334;;-1:-1:-1;19338:334:127:o;19677:138::-;19756:13;;19778:31;19756:13;19778:31;:::i;19820:2143::-;19942:6;19973:2;20016;20004:9;19995:7;19991:23;19987:32;19984:52;;;20032:1;20029;20022:12;19984:52;20065:9;20059:16;20094:18;20135:2;20127:6;20124:14;20121:34;;;20151:1;20148;20141:12;20121:34;20189:6;20178:9;20174:22;20164:32;;20234:7;20227:4;20223:2;20219:13;20215:27;20205:55;;20256:1;20253;20246:12;20205:55;20285:2;20279:9;20307:2;20303;20300:10;20297:36;;;20313:18;;:::i;:::-;20353:36;20385:2;20380;20377:1;20373:10;20369:19;20353:36;:::i;:::-;20423:15;;;20454:12;;;;-1:-1:-1;20485:4:127;20524:11;;;20516:20;;20512:29;;;20553:19;;;20550:39;;;20585:1;20582;20575:12;20550:39;20609:11;;;;20629:1304;20645:6;20640:3;20637:15;20629:1304;;;20722:3;20713:7;20709:17;20750:2;20746;20742:11;20739:101;;;20794:1;20823:2;20819;20812:14;20739:101;20866:22;;:::i;:::-;20911:4;20939:2;20935;20931:11;20928:101;;;20983:1;21012:2;21008;21001:14;20928:101;21057:22;;:::i;:::-;21042:37;;21113:3;21107:10;21130:39;21161:7;21130:39;:::i;:::-;21182:24;;21240:12;;;21234:19;21266:33;21234:19;21266:33;:::i;:::-;21319:16;;;21312:33;21369:2;21416:13;;;21410:20;21391:17;;;21384:47;21455:4;21504:13;;;21498:20;21479:17;;;21472:47;21543:3;21580:13;;;21574:20;21607:33;21574:20;21607:33;:::i;:::-;21660:17;;;21653:34;21700:22;;;21758:43;21788:12;;;21758:43;:::i;:::-;21742:14;;;21735:67;21854:3;21845:13;;21839:20;21822:15;;;21815:45;-1:-1:-1;21873:18:127;;-1:-1:-1;20662:12:127;;;;21911;;;;20629:1304;;;-1:-1:-1;21952:5:127;19820:2143;-1:-1:-1;;;;;;;19820:2143:127:o;23136:186::-;23204:20;;23264:32;23253:44;;23243:55;;23233:83;;23312:1;23309;23302:12;23327:357;23400:5;23459:3;23446:17;23541:66;23530:8;23514:14;23510:29;23506:102;23486:18;23482:127;23472:155;;23623:1;23620;23613:12;23689:401;23789:6;23784:3;23777:19;23759:3;23819:66;23811:6;23808:78;23805:98;;;23899:1;23896;23889:12;23805:98;23935:6;23932:1;23928:14;23987:8;23980:5;23973:4;23968:3;23964:14;23951:45;24064:1;24019:18;;24039:4;24015:29;24053:13;;;-1:-1:-1;24015:29:127;;23689:401;-1:-1:-1;;23689:401:127:o;24095:1739::-;24220:6;24215:3;24208:19;24190:3;24246:4;24287:2;24282:3;24278:12;24312:11;24339;24332:18;;24369:1;24359:11;;24410:6;24406:2;24402:15;24395:5;24391:27;24441:5;24464:1;24474:1334;24488:6;24485:1;24482:13;24474:1334;;;24559:5;24553:4;24549:16;24544:3;24537:29;24589:60;24642:6;24635:5;24589:60;:::i;:::-;24672:4;24715:2;24702:16;24696:4;24689:30;24768:2;24764;24760:11;24747:25;24807:1;24798:7;24795:14;24785:42;;24823:1;24820;24813:12;24785:42;24847:13;;;24840:30;24893:4;24945:11;;;24932:25;24917:13;;;24910:48;24981:4;25033:11;;;25020:25;25005:13;;;24998:48;25069:4;25125:11;;;25112:25;25192:14;25188:23;;;25213:66;25184:96;25160:121;;25150:149;;25295:1;25292;25285:12;25150:149;25327:27;;;25432:16;;;;-1:-1:-1;25383:21:127;25477:18;25464:32;;25461:52;;;25509:1;25506;25499:12;25461:52;25570:8;25566:2;25562:17;25546:14;25542:38;25533:7;25529:52;25526:72;;;25594:1;25591;25584:12;25526:72;25633:2;25628;25622:4;25618:13;25611:25;25657:71;25724:2;25718:4;25714:13;25704:8;25695:7;25657:71;:::i;:::-;25786:12;;;;25649:79;-1:-1:-1;;;25751:15:127;;;;-1:-1:-1;;24510:1:127;24503:9;24474:1334;;;-1:-1:-1;25824:4:127;;24095:1739;-1:-1:-1;;;;;;;;24095:1739:127:o;25839:2694::-;26414:4;26462:3;26451:9;26447:19;26505:42;26497:6;26493:55;26482:9;26475:74;26568:2;26606:3;26601:2;26590:9;26586:18;26579:31;26630:6;26660;26652;26645:22;26686:3;26676:13;;26720:2;26709:9;26705:18;26698:25;;26782:2;26772:6;26769:1;26765:14;26754:9;26750:30;26746:39;26808:6;26832:1;26842:1356;26856:6;26853:1;26850:13;26842:1356;;;26945:66;26933:9;26925:6;26921:22;26917:95;26912:3;26905:108;27036:61;27090:6;27082;27036:61;:::i;:::-;27130:55;27182:2;27178;27130:55;:::i;:::-;27213:2;27205:6;27198:18;27243:73;27312:2;27304:6;27300:15;27286:12;27243:73;:::i;:::-;27229:87;;27351:31;27378:2;27374;27370:11;27351:31;:::i;:::-;27405:32;27474:23;;;27457:15;;;27450:48;27521:4;;27405:32;27566:31;27585:11;;;27566:31;:::i;:::-;27562:40;27557:2;27549:6;27545:15;27538:65;;;27626:4;27679:47;27722:2;27718;27714:11;27710:2;27679:47;:::i;:::-;27775:6;27767;27763:19;27758:2;27750:6;27746:15;27739:44;27810:63;27866:6;27852:12;27836:14;27810:63;:::i;:::-;27796:77;;;;;27924:48;27967:3;27963:2;27959:12;27955:2;27924:48;:::i;:::-;27886:86;;28022:6;28014;28010:19;28004:3;27996:6;27992:16;27985:45;28053:65;28111:6;28095:14;28079;28053:65;:::i;:::-;28176:12;;;;28043:75;-1:-1:-1;;;28141:15:127;;;;-1:-1:-1;26878:1:127;26871:9;26842:1356;;;26846:3;;28248:9;28240:6;28236:22;28229:4;28218:9;28214:20;28207:52;28282:86;28361:6;28353;28345;28282:86;:::i;:::-;28268:100;;;;;28418:9;28410:6;28406:22;28399:4;28388:9;28384:20;28377:52;28446:81;28520:6;28512;28504;28446:81;:::i;28538:1095::-;28811:4;28859:2;28848:9;28844:18;28901:42;28893:6;28889:55;28878:9;28871:74;28964:2;29002;28997;28986:9;28982:18;28975:30;29025:6;29055;29047;29040:22;29093:2;29082:9;29078:18;29071:25;;29155:2;29145:6;29142:1;29138:14;29127:9;29123:30;29119:39;29105:53;;29181:6;29205:1;29215:389;29229:6;29226:1;29223:13;29215:389;;;29318:66;29306:9;29298:6;29294:22;29290:95;29285:3;29278:108;29409:115;29517:6;29452:63;29508:6;29500;29452:63;:::i;:::-;29409:115;:::i;:::-;29399:125;-1:-1:-1;29582:12:127;;;;29547:15;;;;29251:1;29244:9;29215:389;;;-1:-1:-1;29621:6:127;;28538:1095;-1:-1:-1;;;;;;;;28538:1095:127:o;29638:277::-;29705:6;29758:2;29746:9;29737:7;29733:23;29729:32;29726:52;;;29774:1;29771;29764:12;29726:52;29806:9;29800:16;29859:5;29852:13;29845:21;29838:5;29835:32;29825:60;;29881:1;29878;29871:12",
    "linkReferences": {},
    "immutableReferences": {
      "11787": [
        {
          "start": 377,
          "length": 32
        },
        {
          "start": 1411,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "assignOperator(address,address)": "f7e4aac6",
    "assignPauser(address)": "dcd5b13e",
    "cancelOrders(address,address,(address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "d6f3b110",
    "cancelOwnershipTransfer()": "23452b9c",
    "createZone(bytes32)": "46b3ce9f",
    "executeMatchAdvancedOrders(address,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "b44f6608",
    "executeMatchOrders(address,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "40ddc788",
    "owner()": "8da5cb5b",
    "pause(address)": "76a67a51",
    "pauser()": "9fd0506d",
    "potentialOwner()": "7762df25",
    "transferOwnership(address)": "f2fde38b",
    "zoneCreationCode()": "7242512f"
  },
  "ast": {
    "absolutePath": "contracts/zones/pausable/PausableZoneController.sol",
    "id": 12261,
    "exportedSymbols": {
      "AdvancedOrder": [
        5460
      ],
      "CriteriaResolver": [
        5482
      ],
      "Execution": [
        5504
      ],
      "Fulfillment": [
        5491
      ],
      "Order": [
        5448
      ],
      "OrderComponents": [
        5321
      ],
      "PausableZone": [
        11757
      ],
      "PausableZoneController": [
        12260
      ],
      "PausableZoneControllerInterface": [
        12398
      ],
      "PausableZoneEventsAndErrors": [
        12466
      ],
      "SeaportInterface": [
        3032
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:12841:66",
    "nodes": [
      {
        "id": 11759,
        "nodeType": "PragmaDirective",
        "src": "32:24:66",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 11761,
        "nodeType": "ImportDirective",
        "src": "57:50:66",
        "absolutePath": "contracts/zones/pausable/PausableZone.sol",
        "file": "./PausableZone.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12261,
        "sourceUnit": 11758,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11760,
              "name": "PausableZone",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11757,
              "src": "66:12:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11763,
        "nodeType": "ImportDirective",
        "src": "128:103:66",
        "absolutePath": "contracts/zones/pausable/interfaces/PausableZoneControllerInterface.sol",
        "file": "./interfaces/PausableZoneControllerInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12261,
        "sourceUnit": 12399,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11762,
              "name": "PausableZoneControllerInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12398,
              "src": "141:31:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11765,
        "nodeType": "ImportDirective",
        "src": "252:95:66",
        "absolutePath": "contracts/zones/pausable/interfaces/PausableZoneEventsAndErrors.sol",
        "file": "./interfaces/PausableZoneEventsAndErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12261,
        "sourceUnit": 12467,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11764,
              "name": "PausableZoneEventsAndErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12466,
              "src": "265:27:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11772,
        "nodeType": "ImportDirective",
        "src": "368:157:66",
        "absolutePath": "contracts/lib/ConsiderationStructs.sol",
        "file": "../../lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12261,
        "sourceUnit": 5505,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11766,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5448,
              "src": "381:5:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11767,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5491,
              "src": "392:11:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11768,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5321,
              "src": "409:15:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11769,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5460,
              "src": "430:13:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11770,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5482,
              "src": "449:16:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11771,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5504,
              "src": "471:9:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11774,
        "nodeType": "ImportDirective",
        "src": "527:73:66",
        "absolutePath": "contracts/interfaces/SeaportInterface.sol",
        "file": "../../interfaces/SeaportInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12261,
        "sourceUnit": 3033,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11773,
              "name": "SeaportInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3032,
              "src": "536:16:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12260,
        "nodeType": "ContractDefinition",
        "src": "905:11967:66",
        "nodes": [
          {
            "id": 11781,
            "nodeType": "VariableDeclaration",
            "src": "1096:23:66",
            "constant": false,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "1113:6:66",
            "scope": 12260,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11780,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1096:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11783,
            "nodeType": "VariableDeclaration",
            "src": "1189:31:66",
            "constant": false,
            "mutability": "mutable",
            "name": "_potentialOwner",
            "nameLocation": "1205:15:66",
            "scope": 12260,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11782,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1189:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 11785,
            "nodeType": "VariableDeclaration",
            "src": "1286:24:66",
            "constant": false,
            "mutability": "mutable",
            "name": "_pauser",
            "nameLocation": "1303:7:66",
            "scope": 12260,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11784,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1286:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11787,
            "nodeType": "VariableDeclaration",
            "src": "1367:41:66",
            "constant": false,
            "functionSelector": "7242512f",
            "mutability": "immutable",
            "name": "zoneCreationCode",
            "nameLocation": "1392:16:66",
            "scope": 12260,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11786,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1367:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11806,
            "nodeType": "ModifierDefinition",
            "src": "1507:145:66",
            "body": {
              "id": 11805,
              "nodeType": "Block",
              "src": "1527:125:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 11793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11790,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1541:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1541:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 11792,
                        "name": "_pauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11785,
                        "src": "1555:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1541:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 11797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11794,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1566:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1566:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 11796,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11781,
                        "src": "1580:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1566:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1541:45:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11803,
                  "nodeType": "IfStatement",
                  "src": "1537:98:66",
                  "trueBody": {
                    "id": 11802,
                    "nodeType": "Block",
                    "src": "1588:47:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11799,
                            "name": "InvalidPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12439,
                            "src": "1609:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:15:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11801,
                        "nodeType": "RevertStatement",
                        "src": "1602:22:66"
                      }
                    ]
                  }
                },
                {
                  "id": 11804,
                  "nodeType": "PlaceholderStatement",
                  "src": "1644:1:66"
                }
              ]
            },
            "documentation": {
              "id": 11788,
              "nodeType": "StructuredDocumentation",
              "src": "1415:87:66",
              "text": " @dev Throws if called by any account other than the owner or pauser."
            },
            "name": "isPauser",
            "nameLocation": "1516:8:66",
            "parameters": {
              "id": 11789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:2:66"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11826,
            "nodeType": "FunctionDefinition",
            "src": "1841:241:66",
            "body": {
              "id": 11825,
              "nodeType": "Block",
              "src": "1875:207:66",
              "statements": [
                {
                  "expression": {
                    "id": 11814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11812,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "1932:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11813,
                      "name": "ownerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11809,
                      "src": "1941:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1932:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11815,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:21:66"
                },
                {
                  "expression": {
                    "id": 11823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11816,
                      "name": "zoneCreationCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11787,
                      "src": "2014:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 11819,
                                "name": "PausableZone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11757,
                                "src": "2048:12:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                                  "typeString": "type(contract PausableZone)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                                  "typeString": "type(contract PausableZone)"
                                }
                              ],
                              "id": 11818,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2043:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 11820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2043:18:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_PausableZone_$11757",
                              "typeString": "type(contract PausableZone)"
                            }
                          },
                          "id": 11821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "2043:31:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 11817,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2033:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 11822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2033:42:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2014:61:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 11824,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:61:66"
                }
              ]
            },
            "documentation": {
              "id": 11807,
              "nodeType": "StructuredDocumentation",
              "src": "1658:178:66",
              "text": " @notice Set the owner of the controller and store\n         the zone creation code.\n @param ownerAddress The deployer to be set as the owner."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11809,
                  "mutability": "mutable",
                  "name": "ownerAddress",
                  "nameLocation": "1861:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11826,
                  "src": "1853:20:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:22:66"
            },
            "returnParameters": {
              "id": 11811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1875:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11895,
            "nodeType": "FunctionDefinition",
            "src": "2311:1175:66",
            "body": {
              "id": 11894,
              "nodeType": "Block",
              "src": "2424:1062:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11835,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2481:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2481:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 11837,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "2495:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2481:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11843,
                  "nodeType": "IfStatement",
                  "src": "2477:76:66",
                  "trueBody": {
                    "id": 11842,
                    "nodeType": "Block",
                    "src": "2503:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11839,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "2524:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2524:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11841,
                        "nodeType": "RevertStatement",
                        "src": "2517:25:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11844,
                      "name": "derivedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11833,
                      "src": "2688:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "30786666",
                                              "id": 11856,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2868:4:66",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_255_by_1",
                                                "typeString": "int_const 255"
                                              },
                                              "value": "0xff"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_255_by_1",
                                                "typeString": "int_const 255"
                                              }
                                            ],
                                            "id": 11855,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2861:6:66",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes1_$",
                                              "typeString": "type(bytes1)"
                                            },
                                            "typeName": {
                                              "id": 11854,
                                              "name": "bytes1",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2861:6:66",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 11857,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2861:12:66",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 11860,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "2911:4:66",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_PausableZoneController_$12260",
                                                "typeString": "contract PausableZoneController"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_PausableZoneController_$12260",
                                                "typeString": "contract PausableZoneController"
                                              }
                                            ],
                                            "id": 11859,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2903:7:66",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 11858,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2903:7:66",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 11861,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2903:13:66",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 11862,
                                          "name": "salt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11829,
                                          "src": "2946:4:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 11863,
                                          "name": "zoneCreationCode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11787,
                                          "src": "2980:16:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 11852,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2815:3:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 11853,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "2815:16:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 11864,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2815:207:66",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 11851,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "2780:9:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 11865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2780:264:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 11850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2751:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 11849,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2751:7:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2751:311:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2726:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 11847,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "2726:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2726:350:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 11846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2705:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:66",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2705:381:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2688:398:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11870,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:398:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 11871,
                          "name": "derivedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11833,
                          "src": "3175:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "3175:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 11873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3175:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3205:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3175:31:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11881,
                  "nodeType": "IfStatement",
                  "src": "3171:102:66",
                  "trueBody": {
                    "id": 11880,
                    "nodeType": "Block",
                    "src": "3208:65:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 11877,
                              "name": "derivedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11833,
                              "src": "3247:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11876,
                            "name": "ZoneAlreadyExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12450,
                            "src": "3229:17:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 11878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3229:33:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11879,
                        "nodeType": "RevertStatement",
                        "src": "3222:40:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3335:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PausableZone_$11757_$",
                          "typeString": "function () returns (contract PausableZone)"
                        },
                        "typeName": {
                          "id": 11883,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11882,
                            "name": "PausableZone",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11757,
                            "src": "3339:12:66"
                          },
                          "referencedDeclaration": 11757,
                          "src": "3339:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PausableZone_$11757",
                            "typeString": "contract PausableZone"
                          }
                        }
                      },
                      "id": 11886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 11885,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11829,
                          "src": "3359:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "3335:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PausableZone_$11757_$salt",
                        "typeString": "function () returns (contract PausableZone)"
                      }
                    },
                    "id": 11887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PausableZone_$11757",
                      "typeString": "contract PausableZone"
                    }
                  },
                  "id": 11888,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:32:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11890,
                        "name": "derivedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11833,
                        "src": "3458:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11891,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11829,
                        "src": "3474:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 11889,
                      "name": "ZoneCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12426,
                      "src": "3446:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 11892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11893,
                  "nodeType": "EmitStatement",
                  "src": "3441:38:66"
                }
              ]
            },
            "baseFunctions": [
              12284
            ],
            "documentation": {
              "id": 11827,
              "nodeType": "StructuredDocumentation",
              "src": "2088:218:66",
              "text": " @notice Deploy a PausableZone to a precomputed address.\n @param salt The salt to be used to derive the zone address\n @return derivedAddress The derived address for the zone."
            },
            "functionSelector": "46b3ce9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createZone",
            "nameLocation": "2320:10:66",
            "overrides": {
              "id": 11831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2370:8:66"
            },
            "parameters": {
              "id": 11830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11829,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2339:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11895,
                  "src": "2331:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11828,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2330:14:66"
            },
            "returnParameters": {
              "id": 11834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11833,
                  "mutability": "mutable",
                  "name": "derivedAddress",
                  "nameLocation": "2404:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11895,
                  "src": "2396:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2395:24:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11919,
            "nodeType": "FunctionDefinition",
            "src": "3694:299:66",
            "body": {
              "id": 11918,
              "nodeType": "Block",
              "src": "3809:184:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11910,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3885:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3885:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11907,
                            "name": "zone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11898,
                            "src": "3873:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11906,
                          "name": "PausableZone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11757,
                          "src": "3860:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                            "typeString": "type(contract PausableZone)"
                          }
                        },
                        "id": 11908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3860:18:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "id": 11909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11586,
                      "src": "3860:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11913,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:36:66"
                },
                {
                  "expression": {
                    "id": 11916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11914,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11904,
                      "src": "3972:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3982:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3972:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11917,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:14:66"
                }
              ]
            },
            "baseFunctions": [
              12292
            ],
            "documentation": {
              "id": 11896,
              "nodeType": "StructuredDocumentation",
              "src": "3492:197:66",
              "text": " @notice Pause orders on a given zone.\n @param zone The address of the zone to be paused.\n @return success A boolean indicating the zone has been paused."
            },
            "functionSelector": "76a67a51",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11902,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11901,
                  "name": "isPauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11806,
                  "src": "3765:8:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "3765:8:66"
              }
            ],
            "name": "pause",
            "nameLocation": "3703:5:66",
            "overrides": {
              "id": 11900,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3748:8:66"
            },
            "parameters": {
              "id": 11899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11898,
                  "mutability": "mutable",
                  "name": "zone",
                  "nameLocation": "3717:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11919,
                  "src": "3709:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:14:66"
            },
            "returnParameters": {
              "id": 11905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11904,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3796:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11919,
                  "src": "3791:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3790:14:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11957,
            "nodeType": "FunctionDefinition",
            "src": "4278:521:66",
            "body": {
              "id": 11956,
              "nodeType": "Block",
              "src": "4445:354:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11933,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4502:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4502:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 11935,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "4516:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4502:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11941,
                  "nodeType": "IfStatement",
                  "src": "4498:76:66",
                  "trueBody": {
                    "id": 11940,
                    "nodeType": "Block",
                    "src": "4524:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11937,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "4545:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4545:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11939,
                        "nodeType": "RevertStatement",
                        "src": "4538:25:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11944,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "4652:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 11956,
                      "src": "4639:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PausableZone_$11757",
                        "typeString": "contract PausableZone"
                      },
                      "typeName": {
                        "id": 11943,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11942,
                          "name": "PausableZone",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11757,
                          "src": "4639:12:66"
                        },
                        "referencedDeclaration": 11757,
                        "src": "4639:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11948,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11946,
                        "name": "pausableZoneAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11922,
                        "src": "4672:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11945,
                      "name": "PausableZone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11757,
                      "src": "4659:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                        "typeString": "type(contract PausableZone)"
                      }
                    },
                    "id": 11947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4659:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PausableZone_$11757",
                      "typeString": "contract PausableZone"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4639:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11952,
                        "name": "seaportAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11925,
                        "src": "4769:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                          "typeString": "contract SeaportInterface"
                        }
                      },
                      {
                        "id": 11953,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11929,
                        "src": "4785:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5321_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderComponents calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                          "typeString": "contract SeaportInterface"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5321_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderComponents calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 11949,
                        "name": "zone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11944,
                        "src": "4751:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "id": 11951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancelOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11566,
                      "src": "4751:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_SeaportInterface_$3032_$_t_array$_t_struct$_OrderComponents_$5321_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (contract SeaportInterface,struct OrderComponents memory[] memory) external returns (bool)"
                      }
                    },
                    "id": 11954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11955,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:41:66"
                }
              ]
            },
            "baseFunctions": [
              12305
            ],
            "documentation": {
              "id": 11920,
              "nodeType": "StructuredDocumentation",
              "src": "3999:274:66",
              "text": " @notice Cancel Seaport orders on a given zone.\n @param pausableZoneAddress The zone that manages the\n orders to be cancelled.\n @param seaportAddress      The Seaport address.\n @param orders              The orders to cancel."
            },
            "functionSelector": "d6f3b110",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrders",
            "nameLocation": "4287:12:66",
            "overrides": {
              "id": 11931,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4436:8:66"
            },
            "parameters": {
              "id": 11930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11922,
                  "mutability": "mutable",
                  "name": "pausableZoneAddress",
                  "nameLocation": "4317:19:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11957,
                  "src": "4309:27:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11925,
                  "mutability": "mutable",
                  "name": "seaportAddress",
                  "nameLocation": "4363:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11957,
                  "src": "4346:31:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 11924,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11923,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3032,
                      "src": "4346:16:66"
                    },
                    "referencedDeclaration": 3032,
                    "src": "4346:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11929,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "4414:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 11957,
                  "src": "4387:33:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5321_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11927,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11926,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5321,
                        "src": "4387:15:66"
                      },
                      "referencedDeclaration": 5321,
                      "src": "4387:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$5321_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 11928,
                    "nodeType": "ArrayTypeName",
                    "src": "4387:17:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$5321_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:127:66"
            },
            "returnParameters": {
              "id": 11932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4445:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12008,
            "nodeType": "FunctionDefinition",
            "src": "5444:810:66",
            "body": {
              "id": 12007,
              "nodeType": "Block",
              "src": "5700:554:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11979,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5757:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5757:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 11981,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "5771:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5757:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11987,
                  "nodeType": "IfStatement",
                  "src": "5753:76:66",
                  "trueBody": {
                    "id": 11986,
                    "nodeType": "Block",
                    "src": "5779:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11983,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "5800:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5800:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11985,
                        "nodeType": "RevertStatement",
                        "src": "5793:25:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11990,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "5907:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12007,
                      "src": "5894:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PausableZone_$11757",
                        "typeString": "contract PausableZone"
                      },
                      "typeName": {
                        "id": 11989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11988,
                          "name": "PausableZone",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11757,
                          "src": "5894:12:66"
                        },
                        "referencedDeclaration": 11757,
                        "src": "5894:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11992,
                        "name": "pausableZoneAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11960,
                        "src": "5927:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11991,
                      "name": "PausableZone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11757,
                      "src": "5914:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                        "typeString": "type(contract PausableZone)"
                      }
                    },
                    "id": 11993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PausableZone_$11757",
                      "typeString": "contract PausableZone"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5894:53:66"
                },
                {
                  "expression": {
                    "id": 12005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11995,
                      "name": "executions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11977,
                      "src": "6107:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12001,
                          "name": "seaportAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11963,
                          "src": "6177:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                            "typeString": "contract SeaportInterface"
                          }
                        },
                        {
                          "id": 12002,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11967,
                          "src": "6205:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$5448_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        },
                        {
                          "id": 12003,
                          "name": "fulfillments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11971,
                          "src": "6225:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                            "typeString": "contract SeaportInterface"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$5448_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                              "typeString": "contract SeaportInterface"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5448_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Fulfillment calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 11996,
                            "name": "zone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11990,
                            "src": "6120:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableZone_$11757",
                              "typeString": "contract PausableZone"
                            }
                          },
                          "id": 11997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeMatchOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11717,
                          "src": "6120:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_SeaportInterface_$3032_$_t_array$_t_struct$_Order_$5448_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5491_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (contract SeaportInterface,struct Order memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                          }
                        },
                        "id": 12000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 11998,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6152:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6152:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "6120:43:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_SeaportInterface_$3032_$_t_array$_t_struct$_Order_$5448_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5491_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr_$value",
                          "typeString": "function (contract SeaportInterface,struct Order memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                        }
                      },
                      "id": 12004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6120:127:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "src": "6107:140:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "id": 12006,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:140:66"
                }
              ]
            },
            "baseFunctions": [
              12326
            ],
            "documentation": {
              "id": 11958,
              "nodeType": "StructuredDocumentation",
              "src": "4805:634:66",
              "text": " @notice Execute an arbitrary number of matched orders on a given zone.\n @param pausableZoneAddress The zone that manages the orders\n to be cancelled.\n @param seaportAddress      The Seaport address.\n @param orders              The orders to match.\n @param fulfillments        An array of elements allocating offer\n                            components to consideration components.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "40ddc788",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeMatchOrders",
            "nameLocation": "5453:18:66",
            "overrides": {
              "id": 11973,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5651:8:66"
            },
            "parameters": {
              "id": 11972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11960,
                  "mutability": "mutable",
                  "name": "pausableZoneAddress",
                  "nameLocation": "5489:19:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12008,
                  "src": "5481:27:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11963,
                  "mutability": "mutable",
                  "name": "seaportAddress",
                  "nameLocation": "5535:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12008,
                  "src": "5518:31:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 11962,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11961,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3032,
                      "src": "5518:16:66"
                    },
                    "referencedDeclaration": 3032,
                    "src": "5518:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11967,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "5576:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12008,
                  "src": "5559:23:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5448_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11965,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11964,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5448,
                        "src": "5559:5:66"
                      },
                      "referencedDeclaration": 5448,
                      "src": "5559:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5448_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 11966,
                    "nodeType": "ArrayTypeName",
                    "src": "5559:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5448_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11971,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "5615:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12008,
                  "src": "5592:35:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11969,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11968,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5491,
                        "src": "5592:11:66"
                      },
                      "referencedDeclaration": 5491,
                      "src": "5592:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$5491_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 11970,
                    "nodeType": "ArrayTypeName",
                    "src": "5592:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5471:162:66"
            },
            "returnParameters": {
              "id": 11978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11977,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "5688:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12008,
                  "src": "5669:29:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11975,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11974,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5504,
                        "src": "5669:9:66"
                      },
                      "referencedDeclaration": 5504,
                      "src": "5669:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5504_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 11976,
                    "nodeType": "ArrayTypeName",
                    "src": "5669:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5504_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5668:31:66"
            },
            "scope": 12260,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12064,
            "nodeType": "FunctionDefinition",
            "src": "7296:920:66",
            "body": {
              "id": 12063,
              "nodeType": "Block",
              "src": "7623:593:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12034,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7680:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7680:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12036,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "7694:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7680:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12042,
                  "nodeType": "IfStatement",
                  "src": "7676:76:66",
                  "trueBody": {
                    "id": 12041,
                    "nodeType": "Block",
                    "src": "7702:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12038,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "7723:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7723:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12040,
                        "nodeType": "RevertStatement",
                        "src": "7716:25:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12045,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "7830:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12063,
                      "src": "7817:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PausableZone_$11757",
                        "typeString": "contract PausableZone"
                      },
                      "typeName": {
                        "id": 12044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12043,
                          "name": "PausableZone",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11757,
                          "src": "7817:12:66"
                        },
                        "referencedDeclaration": 11757,
                        "src": "7817:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12049,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12047,
                        "name": "pausableZoneAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12011,
                        "src": "7850:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12046,
                      "name": "PausableZone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11757,
                      "src": "7837:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                        "typeString": "type(contract PausableZone)"
                      }
                    },
                    "id": 12048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7837:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PausableZone_$11757",
                      "typeString": "contract PausableZone"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7817:53:66"
                },
                {
                  "expression": {
                    "id": 12061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12050,
                      "name": "executions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12032,
                      "src": "8030:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12056,
                          "name": "seaportAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12014,
                          "src": "8108:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                            "typeString": "contract SeaportInterface"
                          }
                        },
                        {
                          "id": 12057,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12018,
                          "src": "8136:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5460_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata[] calldata"
                          }
                        },
                        {
                          "id": 12058,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12022,
                          "src": "8156:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5482_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        {
                          "id": 12059,
                          "name": "fulfillments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12026,
                          "src": "8187:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                            "typeString": "contract SeaportInterface"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5460_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5482_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Fulfillment calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                              "typeString": "contract SeaportInterface"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5460_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct AdvancedOrder calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5482_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct CriteriaResolver calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Fulfillment calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 12051,
                            "name": "zone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12045,
                            "src": "8043:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableZone_$11757",
                              "typeString": "contract PausableZone"
                            }
                          },
                          "id": 12052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeMatchAdvancedOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11756,
                          "src": "8043:31:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_SeaportInterface_$3032_$_t_array$_t_struct$_AdvancedOrder_$5460_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5482_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5491_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (contract SeaportInterface,struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                          }
                        },
                        "id": 12055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 12053,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8083:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8083:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "8043:51:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_SeaportInterface_$3032_$_t_array$_t_struct$_AdvancedOrder_$5460_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$5482_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$5491_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr_$value",
                          "typeString": "function (contract SeaportInterface,struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment memory[] memory) payable external returns (struct Execution memory[] memory)"
                        }
                      },
                      "id": 12060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8043:166:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Execution memory[] memory"
                      }
                    },
                    "src": "8030:179:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "id": 12062,
                  "nodeType": "ExpressionStatement",
                  "src": "8030:179:66"
                }
              ]
            },
            "baseFunctions": [
              12351
            ],
            "documentation": {
              "id": 12009,
              "nodeType": "StructuredDocumentation",
              "src": "6260:1031:66",
              "text": " @notice Execute an arbitrary number of matched advanced orders on a given zone.\n @param pausableZoneAddress The zone that manages the orders to be cancelled.\n @param seaportAddress      The Seaport address.\n @param orders              The orders to match.\n @param criteriaResolvers   An array where each element contains a reference\n                            to a specific order as well as that order's\n                            offer or consideration, a token identifier, and\n                            a proof that the supplied token identifier is\n                            contained in the order's merkle root.\n @param fulfillments        An array of elements allocating offer components\n                            to consideration components.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "b44f6608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeMatchAdvancedOrders",
            "nameLocation": "7305:26:66",
            "overrides": {
              "id": 12028,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7574:8:66"
            },
            "parameters": {
              "id": 12027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12011,
                  "mutability": "mutable",
                  "name": "pausableZoneAddress",
                  "nameLocation": "7349:19:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7341:27:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12014,
                  "mutability": "mutable",
                  "name": "seaportAddress",
                  "nameLocation": "7395:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7378:31:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                    "typeString": "contract SeaportInterface"
                  },
                  "typeName": {
                    "id": 12013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12012,
                      "name": "SeaportInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3032,
                      "src": "7378:16:66"
                    },
                    "referencedDeclaration": 3032,
                    "src": "7378:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SeaportInterface_$3032",
                      "typeString": "contract SeaportInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12018,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "7444:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7419:31:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5460_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12016,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12015,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5460,
                        "src": "7419:13:66"
                      },
                      "referencedDeclaration": 5460,
                      "src": "7419:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$5460_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 12017,
                    "nodeType": "ArrayTypeName",
                    "src": "7419:15:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$5460_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12022,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "7488:17:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7460:45:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5482_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12020,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12019,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5482,
                        "src": "7460:16:66"
                      },
                      "referencedDeclaration": 5482,
                      "src": "7460:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$5482_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 12021,
                    "nodeType": "ArrayTypeName",
                    "src": "7460:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$5482_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12026,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "7538:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7515:35:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12024,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12023,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5491,
                        "src": "7515:11:66"
                      },
                      "referencedDeclaration": 5491,
                      "src": "7515:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$5491_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 12025,
                    "nodeType": "ArrayTypeName",
                    "src": "7515:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$5491_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7331:225:66"
            },
            "returnParameters": {
              "id": 12033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12032,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "7611:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12064,
                  "src": "7592:29:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$5504_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12030,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12029,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5504,
                        "src": "7592:9:66"
                      },
                      "referencedDeclaration": 5504,
                      "src": "7592:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$5504_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 12031,
                    "nodeType": "ArrayTypeName",
                    "src": "7592:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$5504_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7591:31:66"
            },
            "scope": 12260,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12100,
            "nodeType": "FunctionDefinition",
            "src": "8641:622:66",
            "body": {
              "id": 12099,
              "nodeType": "Block",
              "src": "8713:550:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12071,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8770:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8770:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12073,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "8784:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8770:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12079,
                  "nodeType": "IfStatement",
                  "src": "8766:76:66",
                  "trueBody": {
                    "id": 12078,
                    "nodeType": "Block",
                    "src": "8792:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12075,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "8813:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8813:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12077,
                        "nodeType": "RevertStatement",
                        "src": "8806:25:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12080,
                      "name": "newPotentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12067,
                      "src": "8924:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 12083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8953:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 12082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8945:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 12081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8945:7:66",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 12084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8945:10:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8924:31:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12090,
                  "nodeType": "IfStatement",
                  "src": "8920:93:66",
                  "trueBody": {
                    "id": 12089,
                    "nodeType": "Block",
                    "src": "8957:56:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12086,
                            "name": "OwnerCanNotBeSetAsZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12459,
                            "src": "8978:22:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8978:24:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12088,
                        "nodeType": "RevertStatement",
                        "src": "8971:31:66"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12092,
                        "name": "newPotentialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12067,
                        "src": "9129:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12091,
                      "name": "PotentialOwnerUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12412,
                      "src": "9107:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12094,
                  "nodeType": "EmitStatement",
                  "src": "9102:45:66"
                },
                {
                  "expression": {
                    "id": 12097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12095,
                      "name": "_potentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "9221:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12096,
                      "name": "newPotentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12067,
                      "src": "9239:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9221:35:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12098,
                  "nodeType": "ExpressionStatement",
                  "src": "9221:35:66"
                }
              ]
            },
            "baseFunctions": [
              12357
            ],
            "documentation": {
              "id": 12065,
              "nodeType": "StructuredDocumentation",
              "src": "8222:414:66",
              "text": " @notice Initiate Zone ownership transfer by assigning a new potential\n         owner this contract. Once set, the new potential owner\n         may call `acceptOwnership` to claim ownership.\n         Only the owner in question may call this function.\n @param newPotentialOwner The address for which to initiate ownership\n                          transfer to."
            },
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "8650:17:66",
            "overrides": {
              "id": 12069,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8704:8:66"
            },
            "parameters": {
              "id": 12068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12067,
                  "mutability": "mutable",
                  "name": "newPotentialOwner",
                  "nameLocation": "8676:17:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12100,
                  "src": "8668:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8668:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8667:27:66"
            },
            "returnParameters": {
              "id": 12070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8713:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12125,
            "nodeType": "FunctionDefinition",
            "src": "9420:407:66",
            "body": {
              "id": 12124,
              "nodeType": "Block",
              "src": "9473:354:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9538:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9538:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12107,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "9552:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9538:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12113,
                  "nodeType": "IfStatement",
                  "src": "9534:76:66",
                  "trueBody": {
                    "id": 12112,
                    "nodeType": "Block",
                    "src": "9560:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12109,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "9581:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9581:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12111,
                        "nodeType": "RevertStatement",
                        "src": "9574:25:66"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9734:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9726:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9726:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9726:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12114,
                      "name": "PotentialOwnerUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12412,
                      "src": "9704:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9704:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12120,
                  "nodeType": "EmitStatement",
                  "src": "9699:38:66"
                },
                {
                  "expression": {
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9798:22:66",
                    "subExpression": {
                      "id": 12121,
                      "name": "_potentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "9805:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "9798:22:66"
                }
              ]
            },
            "baseFunctions": [
              12361
            ],
            "documentation": {
              "id": 12101,
              "nodeType": "StructuredDocumentation",
              "src": "9269:146:66",
              "text": " @notice Clear the currently set potential owner, if any.\n         Only the owner of this contract may call this function."
            },
            "functionSelector": "23452b9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOwnershipTransfer",
            "nameLocation": "9429:23:66",
            "overrides": {
              "id": 12103,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9464:8:66"
            },
            "parameters": {
              "id": 12102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9452:2:66"
            },
            "returnParameters": {
              "id": 12104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9473:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12161,
            "nodeType": "FunctionDefinition",
            "src": "10028:629:66",
            "body": {
              "id": 12160,
              "nodeType": "Block",
              "src": "10073:584:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12130,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10140:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10140:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12132,
                      "name": "_potentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "10154:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10140:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12138,
                  "nodeType": "IfStatement",
                  "src": "10136:94:66",
                  "trueBody": {
                    "id": 12137,
                    "nodeType": "Block",
                    "src": "10171:59:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12134,
                            "name": "CallerIsNotPotentialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12465,
                            "src": "10192:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10192:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12136,
                        "nodeType": "RevertStatement",
                        "src": "10185:34:66"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10354:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10346:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10346:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10346:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12139,
                      "name": "PotentialOwnerUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12412,
                      "src": "10324:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10324:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12145,
                  "nodeType": "EmitStatement",
                  "src": "10319:38:66"
                },
                {
                  "expression": {
                    "id": 12147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10417:22:66",
                    "subExpression": {
                      "id": 12146,
                      "name": "_potentialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "10424:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12148,
                  "nodeType": "ExpressionStatement",
                  "src": "10417:22:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12150,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11781,
                        "src": "10544:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10552:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10552:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12149,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12419,
                      "src": "10523:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 12153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10523:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12154,
                  "nodeType": "EmitStatement",
                  "src": "10518:45:66"
                },
                {
                  "expression": {
                    "id": 12158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12155,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "10631:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12156,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10640:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10640:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10631:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12159,
                  "nodeType": "ExpressionStatement",
                  "src": "10631:19:66"
                }
              ]
            },
            "baseFunctions": [
              12365
            ],
            "documentation": {
              "id": 12126,
              "nodeType": "StructuredDocumentation",
              "src": "9833:190:66",
              "text": " @notice Accept ownership of this contract. Only the account that the\n         current owner has set as the new potential owner may call this\n         function."
            },
            "functionSelector": "79ba5097",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOwnership",
            "nameLocation": "10037:15:66",
            "overrides": {
              "id": 12128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10064:8:66"
            },
            "parameters": {
              "id": 12127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10052:2:66"
            },
            "returnParameters": {
              "id": 12129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10073:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12197,
            "nodeType": "FunctionDefinition",
            "src": "10830:552:66",
            "body": {
              "id": 12196,
              "nodeType": "Block",
              "src": "10894:488:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12168,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10951:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10951:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12170,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "10965:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10951:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12176,
                  "nodeType": "IfStatement",
                  "src": "10947:76:66",
                  "trueBody": {
                    "id": 12175,
                    "nodeType": "Block",
                    "src": "10973:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12172,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "10994:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10994:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12174,
                        "nodeType": "RevertStatement",
                        "src": "10987:25:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12177,
                      "name": "pauserToAssign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12164,
                      "src": "11102:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 12180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11128:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 12179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11120:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 12178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11120:7:66",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 12181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11120:10:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11102:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12187,
                  "nodeType": "IfStatement",
                  "src": "11098:91:66",
                  "trueBody": {
                    "id": 12186,
                    "nodeType": "Block",
                    "src": "11132:57:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12183,
                            "name": "PauserCanNotBeSetAsZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12462,
                            "src": "11153:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11153:25:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12185,
                        "nodeType": "RevertStatement",
                        "src": "11146:32:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12188,
                      "name": "_pauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11785,
                      "src": "11247:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12189,
                      "name": "pauserToAssign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12164,
                      "src": "11257:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11247:24:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12191,
                  "nodeType": "ExpressionStatement",
                  "src": "11247:24:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12193,
                        "name": "_pauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11785,
                        "src": "11367:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12192,
                      "name": "PauserUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12431,
                      "src": "11353:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12195,
                  "nodeType": "EmitStatement",
                  "src": "11348:27:66"
                }
              ]
            },
            "baseFunctions": [
              12371
            ],
            "documentation": {
              "id": 12162,
              "nodeType": "StructuredDocumentation",
              "src": "10663:162:66",
              "text": " @notice Assign the given address with the ability to pause the zone.\n @param pauserToAssign The address to assign the pauser role."
            },
            "functionSelector": "dcd5b13e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignPauser",
            "nameLocation": "10839:12:66",
            "overrides": {
              "id": 12166,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10885:8:66"
            },
            "parameters": {
              "id": 12165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12164,
                  "mutability": "mutable",
                  "name": "pauserToAssign",
                  "nameLocation": "10860:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12197,
                  "src": "10852:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10851:24:66"
            },
            "returnParameters": {
              "id": 12167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10894:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12229,
            "nodeType": "FunctionDefinition",
            "src": "11655:505:66",
            "body": {
              "id": 12228,
              "nodeType": "Block",
              "src": "11774:386:66",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12206,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11831:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11831:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 12208,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11781,
                      "src": "11845:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11831:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12214,
                  "nodeType": "IfStatement",
                  "src": "11827:76:66",
                  "trueBody": {
                    "id": 12213,
                    "nodeType": "Block",
                    "src": "11853:50:66",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12210,
                            "name": "CallerIsNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "11874:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11874:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12212,
                        "nodeType": "RevertStatement",
                        "src": "11867:25:66"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12217,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "11980:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12228,
                      "src": "11967:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PausableZone_$11757",
                        "typeString": "contract PausableZone"
                      },
                      "typeName": {
                        "id": 12216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12215,
                          "name": "PausableZone",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11757,
                          "src": "11967:12:66"
                        },
                        "referencedDeclaration": 11757,
                        "src": "11967:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12219,
                        "name": "pausableZoneAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12200,
                        "src": "12000:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12218,
                      "name": "PausableZone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11757,
                      "src": "11987:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PausableZone_$11757_$",
                        "typeString": "type(contract PausableZone)"
                      }
                    },
                    "id": 12220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11987:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PausableZone_$11757",
                      "typeString": "contract PausableZone"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11967:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12225,
                        "name": "operatorToAssign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12202,
                        "src": "12136:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12222,
                        "name": "zone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12217,
                        "src": "12116:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PausableZone_$11757",
                          "typeString": "contract PausableZone"
                        }
                      },
                      "id": 12224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assignOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11615,
                      "src": "12116:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12116:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12227,
                  "nodeType": "ExpressionStatement",
                  "src": "12116:37:66"
                }
              ]
            },
            "baseFunctions": [
              12379
            ],
            "documentation": {
              "id": 12198,
              "nodeType": "StructuredDocumentation",
              "src": "11388:262:66",
              "text": " @notice Assign the given address with the ability to operate the\n         given zone.\n @param pausableZoneAddress The zone address to assign operator role.\n @param operatorToAssign    The address to assign as operator."
            },
            "functionSelector": "f7e4aac6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignOperator",
            "nameLocation": "11664:14:66",
            "overrides": {
              "id": 12204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11765:8:66"
            },
            "parameters": {
              "id": 12203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12200,
                  "mutability": "mutable",
                  "name": "pausableZoneAddress",
                  "nameLocation": "11696:19:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "11688:27:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11688:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12202,
                  "mutability": "mutable",
                  "name": "operatorToAssign",
                  "nameLocation": "11733:16:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "11725:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11725:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11678:77:66"
            },
            "returnParameters": {
              "id": 12205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11774:0:66"
            },
            "scope": 12260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12239,
            "nodeType": "FunctionDefinition",
            "src": "12295:88:66",
            "body": {
              "id": 12238,
              "nodeType": "Block",
              "src": "12353:30:66",
              "statements": [
                {
                  "expression": {
                    "id": 12236,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11781,
                    "src": "12370:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12235,
                  "id": 12237,
                  "nodeType": "Return",
                  "src": "12363:13:66"
                }
              ]
            },
            "baseFunctions": [
              12385
            ],
            "documentation": {
              "id": 12230,
              "nodeType": "StructuredDocumentation",
              "src": "12166:124:66",
              "text": " @notice An external view function that returns the owner.\n @return The address of the owner."
            },
            "functionSelector": "8da5cb5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "12304:5:66",
            "overrides": {
              "id": 12232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12326:8:66"
            },
            "parameters": {
              "id": 12231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12309:2:66"
            },
            "returnParameters": {
              "id": 12235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12239,
                  "src": "12344:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12344:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12343:9:66"
            },
            "scope": 12260,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12249,
            "nodeType": "FunctionDefinition",
            "src": "12537:106:66",
            "body": {
              "id": 12248,
              "nodeType": "Block",
              "src": "12604:39:66",
              "statements": [
                {
                  "expression": {
                    "id": 12246,
                    "name": "_potentialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11783,
                    "src": "12621:15:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12245,
                  "id": 12247,
                  "nodeType": "Return",
                  "src": "12614:22:66"
                }
              ]
            },
            "baseFunctions": [
              12391
            ],
            "documentation": {
              "id": 12240,
              "nodeType": "StructuredDocumentation",
              "src": "12389:143:66",
              "text": " @notice An external view function that return the potential owner.\n @return The address of the potential owner."
            },
            "functionSelector": "7762df25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "potentialOwner",
            "nameLocation": "12546:14:66",
            "overrides": {
              "id": 12242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12577:8:66"
            },
            "parameters": {
              "id": 12241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12560:2:66"
            },
            "returnParameters": {
              "id": 12245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12244,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12249,
                  "src": "12595:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12595:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12594:9:66"
            },
            "scope": 12260,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12259,
            "nodeType": "FunctionDefinition",
            "src": "12780:90:66",
            "body": {
              "id": 12258,
              "nodeType": "Block",
              "src": "12839:31:66",
              "statements": [
                {
                  "expression": {
                    "id": 12256,
                    "name": "_pauser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11785,
                    "src": "12856:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12255,
                  "id": 12257,
                  "nodeType": "Return",
                  "src": "12849:14:66"
                }
              ]
            },
            "baseFunctions": [
              12397
            ],
            "documentation": {
              "id": 12250,
              "nodeType": "StructuredDocumentation",
              "src": "12649:126:66",
              "text": " @notice An external view function that returns the pauser.\n @return The address of the pauser."
            },
            "functionSelector": "9fd0506d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pauser",
            "nameLocation": "12789:6:66",
            "overrides": {
              "id": 12252,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12812:8:66"
            },
            "parameters": {
              "id": 12251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12795:2:66"
            },
            "returnParameters": {
              "id": 12255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12259,
                  "src": "12830:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12830:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12829:9:66"
            },
            "scope": 12260,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11776,
              "name": "PausableZoneControllerInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12398,
              "src": "944:31:66"
            },
            "id": 11777,
            "nodeType": "InheritanceSpecifier",
            "src": "944:31:66"
          },
          {
            "baseName": {
              "id": 11778,
              "name": "PausableZoneEventsAndErrors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12466,
              "src": "981:27:66"
            },
            "id": 11779,
            "nodeType": "InheritanceSpecifier",
            "src": "981:27:66"
          }
        ],
        "canonicalName": "PausableZoneController",
        "contractDependencies": [
          11757
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11775,
          "nodeType": "StructuredDocumentation",
          "src": "602:302:66",
          "text": " @title  PausableZoneController\n @author cupOJoseph, BCLeFevre, stuckinaboot, stephankmin\n @notice PausableZoneController enables deploying, pausing and executing\n         orders on PausableZones. This deployer is designed to be owned\n         by a gnosis safe, DAO, or trusted party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12260,
          12466,
          12398
        ],
        "name": "PausableZoneController",
        "nameLocation": "914:22:66",
        "scope": 12261,
        "usedErrors": [
          12439,
          12442,
          12445,
          12450,
          12453,
          12456,
          12459,
          12462,
          12465
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 66
}