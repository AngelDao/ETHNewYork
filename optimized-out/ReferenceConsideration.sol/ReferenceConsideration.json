{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadFraction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BadReturnValueFromERC20OnTransfer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "BadSignatureV",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ConsiderationCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "considerationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shortfallAmount",
          "type": "uint256"
        }
      ],
      "name": "ConsiderationNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CriteriaNotEnabledForItem",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "identifiers",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "ERC1155BatchTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InexactFraction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEtherSupplied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Invalid1155BatchTransferEncoding",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBasicOrderParameterEncoding",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidCallToConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCanceller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidERC721TransferAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFulfillmentComponentData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNativeOfferItem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "InvalidRestrictedOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedFulfillmentOfferAndConsiderationComponents",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "MissingFulfillmentComponentOnAggregation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingItemAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingOriginalConsiderationItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NoContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoReentrantCalls",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSpecifiedOrdersAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferAndConsiderationRequiredOnFulfillment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderAlreadyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderIsCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderPartiallyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillsNotEnabledForOrder",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "identifier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedConsiderationCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedOfferCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnusedItemParameters",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "CounterIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct SpentItem[]",
          "name": "offer",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct ReceivedItem[]",
          "name": "consideration",
          "type": "tuple[]"
        }
      ],
      "name": "OrderFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderValidated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "advancedOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "fulfillAdvancedOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableAdvancedOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "considerationToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "considerationIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum BasicOrderType",
              "name": "basicOrderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offererConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalAdditionalRecipients",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct AdditionalRecipient[]",
              "name": "additionalRecipients",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct BasicOrderParameters",
          "name": "parameters",
          "type": "tuple"
        }
      ],
      "name": "fulfillBasicOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "getCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "counter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalFilled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "information",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101c06040523480156200001257600080fd5b506040516200990038038062009900833981016040819052620000359162000dc8565b80808080808080808062000048620000fc565b61016052610120526101005260e05260c05260a05260805246610140526001600160a01b03811661018081905260408051630a96ad3960e01b81528151849392630a96ad3992600480820193918290030181865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d5919062000dfa565b506101a0525050600160005550620000f2935050620005c0915050565b5050505062000e8a565b604080518082018252600d81526c21b7b739b4b232b930ba34b7b760991b60209182015281518083018352600681526572632e312e3160d01b9082015290517f64987f6373075400d7cbff689f2b7bc23753c7e6ce20688196489b8f5d9d7e6c917f07818ab36f449d2a17c3e3c5f9e05f1658eeb540ad3752e0c708d77cabd20dec91600091829182918291829182916200024791016909ecccccae492e8cada560b31b81526e1d5a5b9d0e081a5d195b551e5c194b608a1b600a8201526d1859191c995cdcc81d1bdad95b8b60921b60198201527f75696e74323536206964656e7469666965724f7243726974657269612c00000060278201527f75696e74323536207374617274416d6f756e742c0000000000000000000000006044820152701d5a5b9d0c8d4d88195b99105b5bdd5b9d607a1b6058820152602960f81b6069820152606a0190565b60408051601f1981840301815282825271086dedce6d2c8cae4c2e8d2dedc92e8cada560731b60208401526e1d5a5b9d0e081a5d195b551e5c194b608a1b60328401526d1859191c995cdcc81d1bdad95b8b60921b60418401527f75696e74323536206964656e7469666965724f7243726974657269612c000000604f8401527f75696e74323536207374617274416d6f756e742c000000000000000000000000606c840152711d5a5b9d0c8d4d88195b99105b5bdd5b9d0b60721b6080840152701859191c995cdcc81c9958da5c1a595b9d607a1b6092840152602960f81b60a384018190528251808503608401815260a485019093526f09ee4c8cae486dedae0dedccadce8e6560831b60c48501526f1859191c995cdcc81bd999995c995c8b60821b60d48501526c1859191c995cdcc81e9bdb994b609a1b60e48501527113d999995c925d195b56d7481bd999995c8b60721b60f18501527f436f6e73696465726174696f6e4974656d5b5d20636f6e73696465726174696f610103850152611b8b60f21b6101238501526f1d5a5b9d0e081bdc99195c951e5c194b60821b610125850152711d5a5b9d0c8d4d881cdd185c9d151a5b594b60721b6101358501526f1d5a5b9d0c8d4d88195b99151a5b594b60821b61014785015270189e5d195ccccc881e9bdb9952185cda0b607a1b6101578501526c1d5a5b9d0c8d4d881cd85b1d0b609a1b6101688501527f6279746573333220636f6e647569744b65792c000000000000000000000000006101758501526e3ab4b73a191a9b1031b7bab73a32b960891b6101888501526101978401529250906000906101980160408051601f19818403018152908290526c08a92a06e626488dedac2d2dc5609b1b60208301526b1cdd1c9a5b99c81b985b594b60a21b602d8301526e1cdd1c9a5b99c81d995c9cda5bdb8b608a1b60398301526f1d5a5b9d0c8d4d8818da185a5b92590b60821b60488301527f6164647265737320766572696679696e67436f6e7472616374000000000000006058830152602960f81b6071830152915060720160408051601f19818403018152908290528051602091820120855186830120855186840120919b509950975062000587918391859187910162000e5d565b604051602081830303815290604052805190602001209450620005b2888b8b62000d8360201b60201c565b935050505090919293949596565b7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff805460ff199081169091557fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c8054821690557fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d8054821690557fcbc4e5fb02c3d1de23a9f1e014b4d2ee5aeaea9505df5e855c9210bf472495af8054821690557f83ec6a1f0257b830b5e016457c9cf1435391bf56cc98f369a58a54fe937724658054821660019081179091557f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b46594225080548316821790557fc69056f16cbaa3c616b828e333ab7d3a32310765507f8f58359e99ebb7a885f380548316821790557ff2c49132ed1cee2a7e75bde50d332a2f81f1d01e5456d8a19d1df09bd561dbd280548316821790557f85aaa47b6dc46495bb8824fad4583769726fea36efd831a35556690b830a8fbe8054831660029081179091557f8a8dc4e5242ea8b1ab1d60606dae757e6c2cca9f92a2cced9f72c19960bcb45880548416821790557f9dcb9783ba5cd0b54745f65f4f918525e461e91888c334e5342cb380ac558d5380548416821790557f2d72af3c1b2b2956e6f694fb741556d5ca9524373974378cdbec16afa8b8416480548416821790557fd56a60595ebefebed7f22dcee6c2acc61b06cf8c68e84c88677840365d1ff92b8054841660039081179091557fa8f2d96126c6d0ad63adabaef7bf5cf47f163fb0c218a473d28f62312d197bcf80548516821790557fd6ebcc64c739277b117ce359e436534b234b76e914c80ad276abf5b56207893980548516821790557ff60b7f6a315ec68a6ac240e69dca53652b38627f709a2caa217d9e18af4d7a6080548516821790557f47d4745e02b343689a5e7ac121d2a352b7a15c10328a8759fd7d4cf0999002bb8054851660049081179091557ffc111d09a6e2f0958402cbe16a5aef32c9d8ddb9a4df7271140de57bfed6525a80548616821790557f6a2b6bffaca788160f671fa62d34758b717f75a90ad5a468757c50d61f33c44380548616821790557f8a8166be5f30abeb6c91ee2f07eeb0b2eb14b4d59534d10a1c143964bd61791980548616821790557f0ffe031ee7f67944a037276fd51f48fcc2fe05a729c43144606bc8777da8014f8054861660059081179091557f94f2575c7592b1dfd5a8846a17482da7b0e38fb10c93880d74916c5f1679246480548716821790557f370c8c7c6215b209793aa720f65163fbeecd5f5114008532ba0649ee2340540280548716821790557f0f0519a40093d7edad68f12e2ec868fdf92a03df1cbec3e035c987d6b218f2f48054871690911790556020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec8054851690557f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a050f8054851690557f2645749a946633740611cfc8178319f0958659d6922e4bf7e3a08b44789f53a48054851690557f140aabff1a85df08546c9a350c79ae18341bde4a2cef5d2fd460885c0128ce268054851690557f4a597304b2df0a7a7b428b3c24c35ba6373aabebf9972387f5610f74a01b21bd8054851690557ff7deed9399d719bf61dcb1322c056a03a885c275ab093673b0cc182b84bea0618054851690557fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0580548516841790557f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0580548516841790557f4ad5a04d53b5856f318545bb721f67d3f6d0a5a999f25eec7e20eaeb4c47b93380548516841790557fa5022b2bfd144bf9103d80168549b5df7c72ab60bd51bf71a02a08d844853b4a80548516841790557fac375bcb880242328180c23d4a918023a12a7caf7cf12b8c4074e4a3f39900a080548516841790557f1bb30a1647f6f6723cb3a88838ce0319afabe51263fc466f2f669a7a24ad88c6805485169093179092557f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a780548416821790557fc59312466997bb42aaaf719ece141047820e6b34531e1670dc1852a453648f0f80548416821790557f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f3109380548416821790557feb3e677499e881fe1bdbc344a49c412138038a9f40883b6dc68f713aab48352380548416821790557f7f6fa3f34639ea1891363ca773619dbd5f652d7ab50411111dde2f57e3ae13ad80548416821790557f87e655ef16e4075af30c6a90c2b439f7dcd2d83a606dafadaee10cffaf9181328054841690911790557f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa080548316821790557fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e55180548316821790557f0c1469ad586d86b6976c45826d7ae56d76ee516e37a2bccffbe904b74dbae7ea80548316821790557f66b61daf77b854ca6ba000a8d4b340eafcdb71b6583753b4af89fceb54988fff80548316821790557f9bbf2ad10217b6212df1939350a047a69b6887b770020d3fa8c328c0653ee987805483168217905560176000527fff624574ceefb6578b3887a7448cf2ca4d120002f646987b0a9b9ad3f6dc2c108054909216179055565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b60006020828403121562000ddb57600080fd5b81516001600160a01b038116811462000df357600080fd5b9392505050565b6000806040838503121562000e0e57600080fd5b505080516020909101519092909150565b6000815160005b8181101562000e42576020818501810151868301520162000e26565b8181111562000e52576000828601525b509290920192915050565b600062000e8162000e7a62000e73848862000e1f565b8662000e1f565b8462000e1f565b95945050505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516189de62000f226000396000616c7301526000818161129f0152616c420152600061386f015260006137a3015260008181610c7e015261413e0152600081816123970152613a0d0152600081816123290152613ff0015260006137cf0152600061381e015260006137f901526189de6000f3fe6080604052600436106100e85760003560e01c8063a81744041161008a578063f07ec37311610059578063f07ec373146102a6578063f47b7740146102c6578063fb0f3ee1146102ea578063fd9f1e10146102fd57600080fd5b8063a81744041461025a578063b3a34c4c1461026d578063e7acab2414610280578063ed98a5741461029357600080fd5b80635b34b966116100c65780635b34b966146101c657806379df72bd146101e957806387201b4114610209578063881477321461022a57600080fd5b806306fdde03146100ed57806346423aa71461011857806355944a42146101a6575b600080fd5b3480156100f957600080fd5b5061010261031d565b60405161010f9190616f90565b60405180910390f35b34801561012457600080fd5b50610184610133366004616fa3565b60009081526002602052604090205460ff808216926101008304909116916effffffffffffffffffffffffffffff620100008204811692710100000000000000000000000000000000009092041690565b604080519415158552921515602085015291830152606082015260800161010f565b6101b96101b43660046175d4565b61035e565b60405161010f9190617753565b3480156101d257600080fd5b506101db6103c5565b60405190815260200161010f565b3480156101f557600080fd5b506101db610204366004617766565b61040b565b61021c6102173660046177a2565b6105a2565b60405161010f929190617883565b34801561023657600080fd5b5061024a6102453660046178dc565b610640565b604051901515815260200161010f565b6101b961026836600461791e565b61068f565b61024a61027b36600461798a565b610751565b61024a61028e3660046179d4565b610810565b61021c6102a1366004617a64565b610885565b3480156102b257600080fd5b506101db6102c1366004617b0d565b610974565b3480156102d257600080fd5b506102db610992565b60405161010f93929190617b2a565b61024a6102f8366004617b5c565b6109aa565b34801561030957600080fd5b5061024a6103183660046178dc565b610a01565b606061035960408051808201909152600d81527f436f6e73696465726174696f6e00000000000000000000000000000000000000602082015290565b905090565b606060026000540361039c576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b6866103af8688617b98565b8585610a49565b60016000559695505050505050565b6000600260005403610403576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610359610a80565b60408051610160810190915260009061059c908061042c6020860186617b0d565b6001600160a01b0316815260200184602001602081019061044d9190617b0d565b6001600160a01b031681526020016104686040860186617ccd565b808060200260200160405190810160405280939291908181526020016000905b828210156104b4576104a560a08302860136819003810190617d34565b81526020019060010190610488565b50505091835250506020016104cc6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b828210156105185761050960c08302860136819003810190617db7565b815260200190600101906104ec565b505050918352505060200161053360a0860160808701617dd3565b600381111561054457610544617669565b81526020018460a0013581526020018460c0013581526020018460e0013581526020018461010001358152602001846101200135815260200184806060019061058d9190617d50565b90915250610140840135610b1b565b92915050565b6060806002600054036105e1576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556105f18d610d51565b90506106278d828e8e906106059190617b98565b8d8d8d8d8d6001600160a01b038e161561061f578d610621565b335b8d610e2d565b6001600055909e909d509b505050505050505050505050565b600060026000540361067e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383610e71565b9392505050565b60606002600054036106cd576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556107436106df8686611031565b604080516000808252602082019092529061073b565b6107286040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816106f55790505b508585610a49565b600160005595945050505050565b600060026000540361078f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556108046107a0846110f6565b60408051600080825260208201909252906107fc565b6107e96040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107b65790505b5084336111b1565b60016000559392505050565b600060026000540361084e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b661085f87617dee565b6108698688617b98565b856001600160a01b0386161561087f57856111b1565b336111b1565b6060806002600054036108c4576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556108d58b8b611031565b905060006108e282610d51565b905061095c8282600060405190808252806020026020018201604052801561094f57816020015b61093c6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816109095790505b508d8d8d8d8d338e610e2d565b6001600055909d909c509a5050505050505050505050565b6001600160a01b03811660009081526001602052604081205461059c565b606060008061099f61125c565b925092509250909192565b60006002600054036109e8576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556109f6826112c4565b600160005592915050565b6000600260005403610a3f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383611949565b60606000610a5686610d51565b9050610a6986828760018a516000611bc2565b610a748185856120c4565b9150505b949350505050565b6000600260005403610abe576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526001602052604081208054909190610adb90617e29565b918290555060405181815290915033907f721c20121297512b72821b97f5326877ea8ecf4bb9948fea5bfcb6453074d37f9060200160405180910390a290565b60008083604001515167ffffffffffffffff811115610b3c57610b3c616fbc565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b509050600084610140015167ffffffffffffffff811115610b8857610b88616fbc565b604051908082528060200260200182016040528015610bb1578160200160208202803683370190505b50905060005b856040015151811015610c1757610bea86604001518281518110610bdd57610bdd617e43565b6020026020010151612325565b838281518110610bfc57610bfc617e43565b6020908102919091010152610c1081617e29565b9050610bb7565b5060005b856101400151811015610c7b57610c4e86606001518281518110610c4157610c41617e43565b6020026020010151612393565b828281518110610c6057610c60617e43565b6020908102919091010152610c7481617e29565b9050610c1b565b507f00000000000000000000000000000000000000000000000000000000000000008560000151866020015184604051602001610cb89190617e72565b6040516020818303038152906040528051906020012084604051602001610cdf9190617e72565b6040516020818303038152906040528051906020012089608001518a60a001518b60c001518c60e001518d61010001518e61012001518e604051602001610d319c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209250505092915050565b80516060908067ffffffffffffffff811115610d6f57610d6f616fbc565b604051908082528060200260200182016040528015610dc857816020015b6040805160a081018252600080825260606020808401829052938301819052820181905260808201528252600019909201910181610d8d5790505b50915060005b81811015610e2657610df8848281518110610deb57610deb617e43565b60200260200101516123ea565b838281518110610e0a57610e0a617e43565b602002602001018190525080610e1f90617e29565b9050610dce565b5050919050565b606080610e3f8c8c8c60008789611bc2565b610e5e8b610e4d8a8c617f83565b610e57898b617f83565b88886126cc565b909d909c509a5050505050505050505050565b6000600260005403610eaf576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b818110156110235736888883818110610ed157610ed1617e43565b9050602002810190610ee39190618056565b905036610ef08280618094565b9050610eff6020820182617b0d565b9450610f12610f0d826180c8565b612a23565b60008181526002602052604081209850909650610f3490879089906001612a5e565b50865460ff1661101057610f8a8587610f5060208601866180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612b8c92505050565b86547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178755610fc36040820160208301617b0d565b6001600160a01b0316856001600160a01b03167ffde361574a066b44b3b5fe98a87108b7565e327327954c4faeea56a4e6491a0a8860405161100791815260200190565b60405180910390a35b50508061101c90617e29565b9050610eb6565b506001979650505050505050565b6060818067ffffffffffffffff81111561104d5761104d616fbc565b60405190808252806020026020018201604052801561108657816020015b611073616e69565b81526020019060019003908161106b5790505b50915060005b818110156110ee576110c08585838181106110a9576110a9617e43565b90506020028101906110bb9190618056565b6110f6565b8382815181106110d2576110d2617e43565b6020026020010181905250806110e790617e29565b905061108c565b505092915050565b6110fe616e69565b6040805160a08101909152806111148480618094565b61111d906180c8565b815260200160016effffffffffffffffffffffffffffff16815260200160016effffffffffffffffffffffffffffff16815260200183806020019061116291906180d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101909252928352909201525092915050565b6000606060008060006111c78989600187612c1d565b9250925092506111d78989612fe2565b885160006111e88285858c8c61332f565b905081602001516001600160a01b031682600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31878b856020015186604001516040516112439493929190618173565b60405180910390a35060019a9950505050505050505050565b60408051808201909152600681527f72632e312e310000000000000000000000000000000000000000000000000000602082015260008061129b61379f565b92937f000000000000000000000000000000000000000000000000000000000000000092509050565b600080806112da6101208501610100860161820e565b9050600360008260178111156112f2576112f2617669565b601781111561130357611303617669565b8152602081019190915260400160009081205460ff1692509050806113306101208601610100870161820e565b90506004600082601781111561134857611348617669565b601781111561135957611359617669565b8152602081019190915260400160009081205460ff16925090508083600581111561138657611386617669565b14806113a3575060018360058111156113a1576113a1617669565b145b156113b0575060006113b4565b5060015b341580156113d3575060008160058111156113d1576113d1617669565b145b15611411576040517fa61be9f00000000000000000000000000000000000000000000000000000000081523460048201526024015b60405180910390fd5b34158015906114315750600181600581111561142f5761142f617669565b145b1561146a576040517fa61be9f0000000000000000000000000000000000000000000000000000000008152346004820152602401611408565b6000600484600581111561148057611480617669565b148061149d5750600584600581111561149b5761149b617669565b145b156114b9576114b260c0870160a08801617b0d565b90506114c9565b6114c66020870187617b0d565b90505b6000808560058111156114de576114de617669565b14806114fb575060018560058111156114f9576114f9617669565b145b156115085750600061156b565b600285600581111561151c5761151c617669565b14806115395750600385600581111561153757611537617669565b145b156115465750600161156b565b600485600581111561155a5761155a617669565b036115675750600261156b565b5060035b6000600486600581111561158157611581617669565b148061159e5750600586600581111561159c5761159c617669565b145b156115ab575060016115ed565b60008660058111156115bf576115bf617669565b14806115dc575060028660058111156115da576115da617669565b145b156115e9575060026115ed565b5060035b6115fb888684878786613891565b600061160d60808a0160608b01617b0d565b90506000600488600581111561162557611625617669565b14806116425750600588600581111561164057611640617669565b145b1561165357506101c089013561165b565b506101a08901355b600088600581111561166f5761166f617669565b148061168c5750600188600581111561168a5761168a617669565b145b80156116b1575060208a018035906116a4908c617b0d565b6001600160a01b03161715155b806116f7575060028860058111156116cb576116cb617669565b14806116e8575060038860058111156116e6576116e6617669565b145b80156116f7575060208a013515155b8061173d5750600488600581111561171157611711617669565b148061172e5750600588600581111561172c5761172c617669565b145b801561173d575060c08a013515155b15611774576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091526000815260606020820152600089600581111561179d5761179d617669565b036117db576117c86117b560c08d0160a08e01617b0d565b84338e60c001358f60e001358787614289565b6117d68b604001358c6142fd565b61192f565b60018960058111156117ef576117ef617669565b0361181a576117c861180760c08d0160a08e01617b0d565b84338e60c001358f60e001358787614429565b600289600581111561182e5761182e617669565b03611866576118466117b560c08d0160a08e01617b0d565b6117d6338461185860208f018f617b0d565b8e604001358f60008761445f565b600389600581111561187a5761187a617669565b036118925761184661180760c08d0160a08e01617b0d565b60048960058111156118a6576118a6617669565b036118f4576118ce6118bb60208d018d617b0d565b33858e602001358f604001358787614289565b6117d683338d60a00160208101906118e69190617b0d565b8e60e001358f60018761445f565b61191761190460208d018d617b0d565b33858e602001358f604001358787614429565b61192f83338d60a00160208101906118e69190617b0d565b61193881614518565b5060019a9950505050505050505050565b6000600260005403611987576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b8181101561102357368888838181106119a9576119a9617e43565b90506020028101906119bb9190618094565b90506119ca6020820182617b0d565b94506119dc6040820160208301617b0d565b9350336001600160a01b03861614801590611a005750336001600160a01b03851614155b15611a37576040517f80ec737400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b26604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848060400190611a769190617ccd565b808060200260200160405190810160405280939291908181526020016000905b82821015611ac257611ab360a08302860136819003810190617d34565b81526020019060010190611a96565b5050509183525050602001611ada6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b8282101561051857611b1760c08302860136819003810190617db7565b81526020019060010190611afa565b6000818152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010017815590519098509091506001600160a01b0380871691908816907f6bacc01dbe442496068f7d234edd811f1a5f833243e0aec824f86ab861f3c90d90611ba79085815260200190565b60405180910390a3505080611bbb90617e29565b905061198e565b855160008167ffffffffffffffff811115611bdf57611bdf616fbc565b604051908082528060200260200182016040528015611c08578160200160208202803683370190505b509050600080357fffffffff00000000000000000000000000000000000000000000000000000000167f55944a420000000000000000000000000000000000000000000000000000000014801590611ca457506000357fffffffff00000000000000000000000000000000000000000000000000000000167fa81744040000000000000000000000000000000000000000000000000000000014155b90506000805b84811015611f505760008b8281518110611cc657611cc6617e43565b6020026020010151905060008b8381518110611ce457611ce4617e43565b6020026020010151905088600003611d09576000602090920182905260800152611f40565b6000806000611d1a858f8f8c612c1d565b92509250925081600003611d3e575050600060209093018390525060800152611f40565b82898781518110611d5157611d51617e43565b60209081029190910101528b611d668161822f565b865160a081015160c0820151604090920151929f5092509060005b8151811015611e66576000828281518110611d9e57611d9e617e43565b602002602001015190508b80611dc65750600081516005811115611dc457611dc4617669565b145b9b506000611dd988888460800151614534565b90508160800151826060015103611df65760608201819052611e0b565b611e0588888460600151614534565b60608301525b608082018190526060820151611e259082888860006145b9565b6060830181905260208b0151805185908110611e4357611e43617e43565b60200260200101516060018181525050505080611e5f90617e29565b9050611d81565b5087516060015160005b8151811015611f35576000828281518110611e8d57611e8d617e43565b602002602001015190506000611ea889898460800151614534565b90508160800151826060015103611ec55760608201819052611eda565b611ed489898460600151614534565b60608301525b608082018190526060820151611ef49082898960016145b9565b6060830181905260408c0151805185908110611f1257611f12617e43565b60200260200101516060018181525050505080611f2e90617e29565b9050611e70565b505050505050505050505b611f4981617e29565b9050611caa565b50808015611f5b5750815b15611f92576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f9c8989614652565b60005b848110156120b7576000801b848281518110611fbd57611fbd617e43565b602002602001015103156120a75760008b8281518110611fdf57611fdf617e43565b602002602001015160000151905060008b838151811061200157612001617e43565b602002602001015160200151905060008c848151811061202357612023617e43565b602002602001015160400151905082602001516001600160a01b031683600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3189878151811061208057612080617e43565b60200260200101518c868660405161209b9493929190618173565b60405180910390a35050505b6120b081617e29565b9050611f9f565b5050505050505050505050565b6060818067ffffffffffffffff8111156120e0576120e0616fbc565b60405190808252806020026020018201604052801561214e57816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816120fe5790505b5091506000805b82811015612218573686868381811061217057612170617e43565b90506020028101906121829190618056565b905060006121a6896121948480618246565b6121a16020870187618246565b614a5a565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036121dd576121d684617e29565b9350612205565b80866121e986866182ae565b815181106121f9576121f9617e43565b60200260200101819052505b50508061221190617e29565b9050612155565b50801561231157600061222b82846182ae565b905060008167ffffffffffffffff81111561224857612248616fbc565b6040519080825280602002602001820160405280156122b657816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816122665790505b50905060005b8281101561230c578581815181106122d6576122d6617e43565b60200260200101518282815181106122f0576122f0617e43565b60200260200101819052508061230590617e29565b90506122bc565b509350505b61231b8684614dac565b5050509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000082600001518360200151846040015185606001518660800151604051602001612376969594939291906182c5565b604051602081830303815290604052805190602001209050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000826000015183602001518460400151856060015186608001518760a001516040516020016123769796959493929190618305565b6040805160a08101825260008082526060602083018190529282018390529181018290526080810191909152815160400151805160009067ffffffffffffffff81111561243957612439616fbc565b60405190808252806020026020018201604052801561248b57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816124575790505b50905060005b82518110156125385760008382815181106124ae576124ae617e43565b6020026020010151905060006040518060800160405280836000015160058111156124db576124db617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181525090508084848151811061251a5761251a617e43565b602002602001018190525050508061253190617e29565b9050612491565b50835160600151805160009067ffffffffffffffff81111561255c5761255c616fbc565b6040519080825280602002602001820160405280156125b557816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161257a5790505b50905060005b82518110156126755760008382815181106125d8576125d8617e43565b6020026020010151905060006040518060a001604052808360000151600581111561260557612605617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181526020018360a001516001600160a01b031681525090508084848151811061265757612657617e43565b602002602001018190525050508061266e90617e29565b90506125bb565b506040805160a0810182528751516001600160a01b031681526020808201959095529081019190915285516101200151606082015291909401516effffffffffffffffffffffffffffff1660808201529392505050565b8351835160609182916126df8183618350565b67ffffffffffffffff8111156126f7576126f7616fbc565b60405190808252806020026020018201604052801561276557816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816127155790505b5092506000805b838110156128145760008a828151811061278857612788617e43565b6020026020010151905060006127a28d6000848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036127d9576127d284617e29565b9350612801565b80876127e586866182ae565b815181106127f5576127f5617e43565b60200260200101819052505b50508061280d90617e29565b905061276c565b5060005b828110156128cb57600089828151811061283457612834617e43565b60200260200101519050600061284e8d6001848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036128855761287e84617e29565b93506128b8565b8087856128928987618350565b61289c91906182ae565b815181106128ac576128ac617e43565b60200260200101819052505b5050806128c490617e29565b9050612818565b5080156129cf576000816128df8486618350565b6128e991906182ae565b905060008167ffffffffffffffff81111561290657612906616fbc565b60405190808252806020026020018201604052801561297457816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816129245790505b50905060005b828110156129ca5786818151811061299457612994617e43565b60200260200101518282815181106129ae576129ae617e43565b6020026020010181905250806129c390617e29565b905061297a565b509450505b8351600003612a0a576040517fd5da9a1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a148a85614dac565b94505050509550959350505050565b6000612a398260600151518361014001516151ea565b81516001600160a01b031660009081526001602052604090205461059c908390610b1b565b8254600090610100900460ff1615612ab3578115612aab576040517f1a51557400000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b506000610a78565b83546201000090046effffffffffffffffffffffffffffff168015612b80578315612b0d576040517fee9e0e6300000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b84547101000000000000000000000000000000000090046effffffffffffffffffffffffffffff168110612b80578215612b76576040517f10fda3e100000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b6000915050610a78565b50600195945050505050565b336001600160a01b03841603612ba157505050565b6000612c0a612bae61379f565b846040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050612c17848284615228565b50505050565b60008060008087600001519050612c3d8160a001518260c001518861544e565b612c51575060009250829150819050612fd8565b602088015160408901516effffffffffffffffffffffffffffff918216911680821180612c7c575081155b15612cb3576040517f5a052b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082108015612cca5750612cca83608001516154ad565b15612d01576040517fa11b63ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612d0a83612a23565b9550612d2c8a8a89898760e00151886080015189600001518a602001516154cb565b600086815260026020526040812090612d4990889083908c612a5e565b612d5e575060009450849350612fd892505050565b805460ff16612d7a57612d7a8460000151888d60600151612b8c565b80546effffffffffffffffffffffffffffff620100008204811691710100000000000000000000000000000000009004168015612f485783600103612dc457809450809350612df0565b838114612df057612dd58483618368565b9150612de18186618368565b9450612ded8185618368565b93505b83612dfb8684618350565b1115612e0e57612e0b82856182ae565b94505b612e188583618350565b91506effffffffffffffffffffffffffffff821180612e4557506effffffffffffffffffffffffffffff84115b15612ed1576000612e5f86612e5a858861572e565b61572e565b905060008115612e6f5781612e72565b60015b9050612e7e81886183b6565b9650612e8a81856183b6565b9350612e9681876183b6565b95506000612eb56effffffffffffffffffffffffffffff6000196182ae565b9050612ec18188618350565b612ecb8287618350565b50505050505b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91851662010000027fffffffffffffffffffffffffffffff00000000000000000000000000000000009093169290921760011716178355612fbb565b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91881662010000027fffffffffffffffffffffffffffffff000000000000000000000000000000000090931692909217600117161783555b50506effffffffffffffffffffffffffffff928316955050169150505b9450945094915050565b8051825160005b8281101561322757600084828151811061300557613005617e43565b60209081029190910101518051909150801561304d576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040820151600080808560200151600181111561306c5761306c617669565b036131175786604001515183106130af576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000876040015184815181106130c7576130c7617e43565b6020908102919091010151805160408201519094509250905060048360058111156130f4576130f4617669565b036131025760028152613107565b600381525b60608601516040909101526131b9565b8660600151518310613155576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008760600151848151811061316d5761316d617e43565b60209081029190910101518051604082015190945092509050600483600581111561319a5761319a617669565b036131a857600281526131ad565b600381525b60608601516040909101525b6131c282615753565b6131f8576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015613211576132118560600151828760800151615770565b50505050508061322090617e29565b9050612fe9565b508351606001515160005b818110156132af57613268866000015160600151828151811061325757613257617e43565b602002602001015160000151615753565b1561329f576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6132a881617e29565b9050613232565b50508351604001515160005b81811015613327576132e0866000015160400151828151811061325757613257617e43565b15613317576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61332081617e29565b90506132bb565b505050505050565b6040805160a081018252600080825260606020830181905292820183905291810182905260808101919091526040805160a0808201835287825260208083018890528284018790529089015160608084019190915260c08a015160808401528351808501909452600084529083015290875161012089015160408a01515167ffffffffffffffff8111156133c5576133c5616fbc565b60405190808252806020026020018201604052801561341757816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816133e35790505b50602086015260005b8a60400151518110156135a75760008b60400151828151811061344557613445617e43565b602002602001015190506000600581111561346257613462617669565b8151600581111561347557613475617669565b036134ac576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006134c382606001518360800151896000615877565b905060006040518060a00160405280846000015160058111156134e8576134e8617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018b6001600160a01b0316815250905060405180608001604052808260000151600581111561354057613540617669565b815260200182602001516001600160a01b0316815260200182604001518152602001838152508960200151858151811061357c5761357c617e43565b60200260200101819052506135938187878a6158d3565b505050806135a090617e29565b9050613420565b5089606001515167ffffffffffffffff8111156135c6576135c6616fbc565b60405190808252806020026020018201604052801561361f57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816135e45790505b5060408601523460005b8b60600151518110156137765760008c60600151828151811061364e5761364e617e43565b60200260200101519050600061366f826060015183608001518a6001615877565b905060006040518060a001604052808460000151600581111561369457613694617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018460a001516001600160a01b03168152509050808a6040015185815181106136e6576136e6617e43565b602090810291909101015260008151600581111561370657613706617669565b036137525784821115613745576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61374f82866182ae565b94505b61376281338b604001518b6158d3565b5050508061376f90617e29565b9050613629565b5061378084614518565b8015613790576137903382615a17565b50505050505b95945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461386c5750604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6138a7866101200135876101400135600161544e565b506138b0615abf565b6138ce6138c1610200880188618246565b9050876101e001356151ea565b6040805160e0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c081019190915260006040518060a0016040528088600381111561392557613925617669565b815260200187600581111561393c5761393c617669565b815260200186600581111561395357613953617669565b8152602001856001600160a01b0316815260200184600581111561397957613979617669565b90529050600061398d6102008a018a618246565b61399991506001618350565b67ffffffffffffffff8111156139b1576139b1616fbc565b604051908082528060200260200182016040528015613a0a57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816139cf5790505b507f000000000000000000000000000000000000000000000000000000000000000084526040805160c08101909152602084015191925060009181906005811115613a5757613a57617669565b8152602090810190613a6b908d018d617b0d565b6001600160a01b031681526020018b6020013581526020018b6040013581526020018b6040013581526020018b6060016020810190613aaa9190617b0d565b6001600160a01b031690529050613ac76101e08b01356001618350565b67ffffffffffffffff811115613adf57613adf616fbc565b604051908082528060200260200182016040528015613b08578160200160208202803683370190505b506060808601919091528451825160208085015160408087015195870151608088015160a08901519251613b429894959293919201618305565b604051602081830303815290604052805190602001208460600151600081518110613b6f57613b6f617e43565b602002602001018181525050613bae6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260006040518060a0016040528087602001516005811115613c0357613c03617669565b815260200185602001516001600160a01b0316815260200185604001518152602001856080015181526020018560a001516001600160a01b031681525090508085600081518110613c5657613c56617e43565b602002602001018190525060005b613c726102008f018f618246565b9050811015613e455760008e806102000190613c8e9190618246565b83818110613c9e57613c9e617e43565b905060400201803603810190613cb491906183ca565b90506040518060a0016040528089604001516005811115613cd757613cd7617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613d229190618350565b81518110613d3257613d32617e43565b60200260200101819052508e6101e001358210613d4f5750613e35565b6040518060c0016040528089604001516005811115613d7057613d70617669565b815260200189606001516001600160a01b0316815260200160008152602001826000015181526020018260000151815260200182602001516001600160a01b031681525093508860000151846000015185602001518660400151876060015188608001518960a00151604051602001613def9796959493929190618305565b604051602081830303815290604052805190602001208960600151836001613e179190618350565b81518110613e2757613e27617e43565b602002602001018181525050505b613e3e81617e29565b9050613c64565b508660600151604051602001613e5b9190617e72565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012060808801526101e08d01355b613eab6102008f018f618246565b9050811015613f885760008e806102000190613ec79190618246565b83818110613ed757613ed7617e43565b905060400201803603810190613eed91906183ca565b90506040518060a0016040528089604001516005811115613f1057613f10617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613f5b9190618350565b81518110613f6b57613f6b617e43565b60200260200101819052505080613f8190617e29565b9050613e9d565b506000935060019250613f99915050565b604051908082528060200260200182016040528015613feb57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181613fb75790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000018181525050600060405180608001604052808560800151600581111561403b5761403b617669565b815260200161405060c08e0160a08f01617b0d565b6001600160a01b031681526020018c60c0013581526020018c60e001358152509050808260008151811061408657614086617e43565b6020026020010181905250600060405180602001604052808760000151846000015185602001518660400151876060015188606001516040516020016140d1969594939291906182c5565b604051602081830303815290604052805190602001208152509050806040516020016140fd9190618420565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020909201919091209087015250507f0000000000000000000000000000000000000000000000000000000000000000845261416a848b85615bc7565b602085015261417f60a08b0160808c01617b0d565b6001600160a01b031661419860808c0160608d01617b0d565b6001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3186602001513385876040516141da9493929190618173565b60405180910390a361421c84602001518b61016001358b8d60600160208101906142049190617b0d565b8e60800160208101906142179190617b0d565b615c86565b602084015161427d9061423560808d0160608e01617b0d565b6142436102208e018e6180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250615dc892505050565b50505050505050505050565b6142938183615e12565b816142e357826001146142d2576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6142de87878787615e23565b6142f4565b6142f4828260028a8a8a8a8a615ef1565b50505050505050565b3460005b61430f610200840184618246565b90508110156143b55736614327610200850185618246565b8381811061433757614337617e43565b6040029190910191505080358381111561437d576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6143966143906040840160208501617b0d565b82615a17565b6143a081856182ae565b93505050806143ae90617e29565b9050614301565b50808311156143f0576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6144096144036080840160608501617b0d565b84615a17565b82811115614424576144243361441f85846182ae565b615a17565b505050565b614432836160d7565b61443c8183615e12565b8161444e576142de8787878787616111565b6142f4828260038a8a8a8a8a615ef1565b6000821561447357506101a083013561447b565b506101c08301355b60005b61448c610200860186618246565b90508110156144ff57366144a4610200870187618246565b838181106144b4576144b4617e43565b905060400201905084156144d0576144cd8135886182ae565b96505b6144ee888b6144e56040850160208601617b0d565b843587896161ff565b506144f881617e29565b905061447e565b5061450e8689898885876161ff565b5050505050505050565b8060200151516000036145285750565b6145318161623a565b50565b6000828403614544575080610688565b60006145508584618368565b905061455c84826183b6565b91506000838661456c8786618368565b61457691906183b6565b149050806145b0576040517fc63cf08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50509392505050565b6000848614614648576000806145cf86866182ae565b905060006145dd87426182ae565b905060006145eb82846182ae565b90508515614601576145fe6001846182ae565b93505b60008461460e848c618368565b614618848e618368565b6146229190618350565b61462c9190618350565b9050600061463a85836183b6565b965061379695505050505050565b5092949350505050565b805160005b8181101561490d57600083828151811061467357614673617e43565b60200260200101519050600081600001519050855181106146c0576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8581815181106146d2576146d2617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000036146fd5750506148fd565b6040820151600080808560200151600181111561471c5761471c617669565b036147e257600089858151811061473557614735617e43565b60200260200101516020015190508051841061477d576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061479157614791617e43565b6020908102919091010151805160408201519095509350905060048460058111156147be576147be617669565b036147cc57600281526147d1565b600381525b60608701516040909101525061489f565b60008985815181106147f6576147f6617e43565b60200260200101516040015190508051841061483e576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061485257614852617e43565b60209081029190910101518051604082015190955093509050600484600581111561487f5761487f617669565b0361488d5760028152614892565b600381525b6060870151604090910152505b6148a882615753565b6148de576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156148f7576148f78560600151828760800151615770565b50505050505b61490681617e29565b9050614657565b5050815160005b81811015612c1757600084828151811061493057614930617e43565b602002602001015190506000816020015151905081608001516effffffffffffffffffffffffffffff16600003614968575050614a4a565b60005b818110156149d35761498c8360200151828151811061325757613257617e43565b156149c3576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6149cc81617e29565b905061496b565b505060408101515160005b81811015614a46576149ff8360400151828151811061325757613257617e43565b15614a36576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614a3f81617e29565b90506149de565b5050505b614a5381617e29565b9050614914565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152831580614aa5575081155b15614adc576040517f98e9db6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000614b3c878585808060200260200160405190810160405280939291908181526020016000905b82821015614b3057614b2160408302860136819003810190618454565b81526020019060010190614b04565b505050505060006162c2565b9050614b9d878787808060200260200160405190810160405280939291908181526020016000905b82821015614b9057614b8160408302860136819003810190618454565b81526020019060010190614b64565b50505050506000806165b4565b81519092506005811115614bb357614bb3617669565b8251516005811115614bc757614bc7617669565b141580614bf2575080602001516001600160a01b03168260000151602001516001600160a01b031614155b80614c095750806040015182600001516040015114155b15614c40576040517f09cfb45500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516060015181606001511115614cf357600084846000818110614c6957614c69617e43565b905060400201803603810190614c7f9190618454565b90508260000151606001518260600151614c9991906182ae565b88826000015181518110614caf57614caf617e43565b602002602001015160400151826020015181518110614cd057614cd0617e43565b602090810291909101015160609081019190915283518101519083015250614d81565b600086866000818110614d0857614d08617e43565b905060400201803603810190614d1e9190618454565b90508160600151836000015160600151614d3891906182ae565b88826000015181518110614d4e57614d4e617e43565b602002602001015160200151826020015181518110614d6f57614d6f617e43565b60200260200101516060018181525050505b60608082015183519091015260809081015182516001600160a01b0390911691015295945050505050565b81516060908067ffffffffffffffff811115614dca57614dca616fbc565b604051908082528060200260200182016040528015614df3578160200160208202803683370190505b50915060005b81811015614f09576000858281518110614e1557614e15617e43565b6020026020010151905080608001516effffffffffffffffffffffffffffff16600003614e425750614ef9565b6001848381518110614e5657614e56617e43565b91151560209283029190910190910152604081015160005b8151811015614ef5576000828281518110614e8b57614e8b617e43565b602002602001015160600151905080600014614ee4576040517fa5f54208000000000000000000000000000000000000000000000000000000008152600481018690526024810183905260448101829052606401611408565b50614eee81617e29565b9050614e6e565b5050505b614f0281617e29565b9050614df9565b50604080518082019091526000815260606020820152349060005b8551811015614fe2576000868281518110614f4157614f41617e43565b60209081029190910101518051909150600081516005811115614f6657614f66617669565b03614fbb578481606001511115614fa9576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151614fb890866182ae565b94505b614fcf8183602001518460400151876158d3565b505080614fdb90617e29565b9050614f24565b50614fec81614518565b8115614ffc57614ffc3383615a17565b50505092915050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915285518451600081900361508657866040517f375c24c10000000000000000000000000000000000000000000000000000000081526004016114089190618480565b6000805b828110156151475760008882815181106150a6576150a6617e43565b60200260200101516000015190508481106150ed576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a81815181106150ff576150ff617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000146151365761512e826001618350565b925050615147565b5061514081617e29565b905061508a565b508060000361519b57505060408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915291506137969050565b60008860018111156151af576151af617669565b036151d4576151ca89886151c46001856182ae565b886165b4565b9350505050613796565b6151ca89886151e46001856182ae565b89616894565b80821015615224576040517f466aa61600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600080806001600160a01b0386163b1561524757613327868686616902565b83516040036152a757600084806020019051810190615266919061848e565b9094507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81169350905061529f60ff82901c601b6184b2565b915050615370565b835160410361533e57838060200190518101906152c4919061848e565b85519194509250849060409081106152de576152de617e43565b016020015160f81c9050601b81148015906152fd57508060ff16601c14155b15615339576040517f1f003d0a00000000000000000000000000000000000000000000000000000000815260ff82166004820152602401611408565b615370565b6040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160008082526020820180845288905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156153c4573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811615806154175750866001600160a01b0316816001600160a01b031614155b156142f4576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004284118061545e5750428311155b156154a357811561549b576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000610688565b5060019392505050565b60008160038111156154c1576154c1617669565b6001161592915050565b60018360038111156154df576154df617669565b1180156154f55750336001600160a01b03821614155b801561550a5750336001600160a01b03831614155b1561450e5760808801515115801561552157508651155b15615622576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa15801561559d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906155c191906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461561d576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b61450e565b6040517f331315700000000000000000000000000000000000000000000000000000000081527f0e1d31dc00000000000000000000000000000000000000000000000000000000906001600160a01b0383169063331315709061569190899033908e908d908f906004016186bb565b602060405180830381865afa1580156156ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906156d291906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461450e576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b60005b811561574c57816157428185618899565b9093509150615731565b5090919050565b6000600382600581111561576957615769617669565b1192915050565b60008360405160200161578591815260200190565b60405160208183030381529060405280519060200120905060005b825181101561583d5760008382815181106157bd576157bd617e43565b602002602001015190508083116157ff57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061582c565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5061583681617e29565b90506157a0565b50808314612c17576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083850361589a576158938360000151846020015186614534565b9050610a78565b6137966158b08460000151856020015188614534565b6158c38560000151866020015188614534565b85606001518660800151866145b9565b6000845160058111156158e8576158e8617669565b0361594f57604084015160208501516001600160a01b03161715615938576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a84608001518560600151615a17565b612c17565b60018451600581111561596457615964617669565b036159bf576040840151156159a5576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a8460200151848660800151876060015186866161ff565b6002845160058111156159d4576159d4617669565b036159f85761594a8460200151848660800151876040015188606001518787614289565b612c178460200151848660800151876040015188606001518787614429565b615a20816160d7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114615a6d576040519150601f19603f3d011682016040523d82523d6000602084013e615a72565b606091505b5050905080614424576040517f470c7c1d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101839052604401611408565b6000615acf6024600436846188ad565b810190615adc9190616fa3565b6020148015615b095750615af76102446102243660006188ad565b810190615b049190616fa3565b610240145b8015615b655750615b216102846102643660006188ad565b810190615b2e9190616fa3565b615b39906040618368565b615b4590610260618350565b615b566102646102443660006188ad565b810190615b639190616fa3565b145b8015615b8e57506018615b7f6101446101243660006188ad565b810190615b8c9190616fa3565b105b905080614531576040517f39f3e3fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080615bf8615bdd6080860160608701617b0d565b6001600160a01b031660009081526001602052604090205490565b8551909150615c0d6080860160608701617b0d565b615c1d60a0870160808801617b0d565b8760400151886080015187600001518961012001358a61014001358b61016001358c61018001358d6101a001358b604051602001615c669c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209150509392505050565b6001836003811115615c9a57615c9a617669565b118015615cb05750336001600160a01b03821614155b8015615cc55750336001600160a01b03831614155b15615dc1576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa158015615d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615d6591906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614615dc1576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b5050505050565b6000838152600260205260409020615de38482600180612a5e565b50805460ff16615df857615df8838584612b8c565b710100000000000000000000000000000100019055505050565b815181146152245761522482614518565b836001600160a01b03163b600003615e72576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b158015615edd57600080fd5b505af115801561450e573d6000803e3d6000fd5b6020870151516000615f04826001618350565b67ffffffffffffffff811115615f1c57615f1c616fbc565b604051908082528060200260200182016040528015615f7c57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181615f3a5790505b50905060005b8281101561604c5760008a602001518281518110615fa257615fa2617e43565b602002602001015190506040518060c0016040528082600001516003811115615fcd57615fcd617669565b815260200182602001516001600160a01b0316815260200182604001516001600160a01b0316815260200182606001516001600160a01b03168152602001826080015181526020018260a0015181525083838151811061602f5761602f617e43565b6020026020010181905250508061604590617e29565b9050615f82565b506040518060c0016040528089600381111561606a5761606a617669565b8152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152508183815181106160b8576160b8617e43565b6020908102919091018101919091528901525050509490935250505050565b80600003614531576040517f91b3e51400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846001600160a01b03163b600003616160576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602401611408565b6040517ff242432a0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b1580156161e057600080fd5b505af11580156161f4573d6000803e3d6000fd5b505050505050505050565b616208836160d7565b6162128183615e12565b8161622857616223868686866169e5565b613327565b6133278282600189898960008a615ef1565b805161624590616bf0565b6001600160a01b0316634ce34aa282602001516040518263ffffffff1660e01b815260040161627491906188d7565b6020604051808303816000875af1158015616293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906162b791906184d7565b506060602090910152565b6040805160a0810182526000808252602080830182905282840182905260608084018390526080840183905284519081018552828152908101829052928301529083838151811061631557616315617e43565b6020908102919091010151518152835184908490811061633757616337617e43565b60209081029190910181015181015190820152845181511015604082018190526165705760008582600001518151811061637357616373617e43565b602002602001015190508160400151806163965750806040015151826020015110155b15156040830181905261656e57600081604001518360200151815181106163bf576163bf617e43565b602002602001015190506040518060a00160405280826000015160058111156163ea576163ea617669565b815260200182602001516001600160a01b03168152602001826040015181526020018260600151815260200182608001516001600160a01b03168152509350600081606001818152505060008560016164439190618350565b90505b865181101561656b5786818151811061646157616461617e43565b6020908102919091010151518452865187908290811061648357616483617e43565b602090810291909101810151810151908501528751845110156040850181905261656b57878460000151815181106164bd576164bd617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461655b57604080840151516020860151101590850181905261656b57826040015184602001518151811061651657616516617e43565b60200260200101519150816060015185606001516165349190618350565b60608087019190915260009083015261654d8286616d36565b15156040850181905261656b575b61656481617e29565b9050616446565b50505b505b8060400151156165ac576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509392505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152600084848151811061660857616608617e43565b6020026020010151600001519050600085858151811061662a5761662a617e43565b60200260200101516020015190506000875183101590508061685157600088848151811061665a5761665a617e43565b60200260200101519050818061667557508060200151518310155b91508161684f5760008160200151848151811061669457616694617e43565b6020026020010151905060405180606001604052806040518060a00160405280846000015160058111156166ca576166ca617669565b815260200184602001516001600160a01b0316815260200184604001518152602001846060015181526020018a6001600160a01b0316815250815260200183600001516001600160a01b03168152602001836060015181525095506000816060018181525050600088600161673f9190618350565b90505b895181101561684c5789818151811061675d5761675d617e43565b602002602001015160000151955089818151811061677d5761677d617e43565b60200260200101516020015194508a5186101593508361684c578a86815181106167a9576167a9617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461683c5782602001515185101593508361684c57826020015185815181106167f6576167f6617e43565b6020026020010151915081606001518760000151606001516168189190618350565b8751606090810191909152600090830152616834838389616dbf565b93508361684c575b61684581617e29565b9050616742565b50505b505b8015616889576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050949350505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208201819052918101829052906168df8686866162c2565b604080516060810182529182523360208301528101939093525090949350505050565b6040517f1626ba7e00000000000000000000000000000000000000000000000000000000808252906001600160a01b03851690631626ba7e9061694b908690869060040161895b565b602060405180830381865afa158015616968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061698c91906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614614424576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836001600160a01b03163b600003616a34576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616ac69190618974565b6000604051808303816000865af19150503d8060008114616b03576040519150601f19603f3d011682016040523d82523d6000602084013e616b08565b606091505b509150915081616b6d576040517ff486bc870000000000000000000000000000000000000000000000000000000081526001600160a01b038088166004830152808716602483015285166044820152600060648201526084810184905260a401611408565b805115801590616b7f57506020815110155b156133275780806020019051810190616b989190618986565b613327576040517f988919230000000000000000000000000000000000000000000000000000000081526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401611408565b6000616cd9826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f00000000000000000000000000000000000000000000000000000000000000006055820152600090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b9050806001600160a01b03163b600003616d31576040517f1cf99b26000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382166024820152604401611408565b919050565b600082608001516001600160a01b031682608001516001600160a01b0316141580616d85575082516005811115616d6f57616d6f617669565b82516005811115616d8257616d82617669565b14155b80616daa575082602001516001600160a01b031682602001516001600160a01b031614155b80610688575050604091820151910151141590565b60008260400151826000015160400151141580616df6575083600001516001600160a01b031682602001516001600160a01b031614155b80616e0957508360600151826040015114155b80616e39575082516005811115616e2257616e22617669565b8251516005811115616e3657616e36617669565b14155b80610a78575082602001516001600160a01b03168260000151602001516001600160a01b03161415949350505050565b6040518060a00160405280616e7c616e9d565b81526000602082018190526040820152606080820181905260809091015290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115616eea57616eea617669565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b60005b83811015616f35578181015183820152602001616f1d565b83811115612c175750506000910152565b60008151808452616f5e816020860160208601616f1a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106886020830184616f46565b600060208284031215616fb557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561700e5761700e616fbc565b60405290565b604051610160810167ffffffffffffffff8111828210171561700e5761700e616fbc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561707f5761707f616fbc565b604052919050565b600067ffffffffffffffff8211156170a1576170a1616fbc565b5060051b60200190565b6001600160a01b038116811461453157600080fd5b8035616d31816170ab565b803560068110616d3157600080fd5b600060a082840312156170ec57600080fd5b6170f4616feb565b90506170ff826170cb565b8152602082013561710f816170ab565b8060208301525060408201356040820152606082013560608201526080820135608082015292915050565b600082601f83011261714b57600080fd5b8135602061716061715b83617087565b617038565b82815260a0928302850182019282820191908785111561717f57600080fd5b8387015b858110156171a25761719589826170da565b8452928401928101617183565b5090979650505050505050565b600060c082840312156171c157600080fd5b60405160c0810181811067ffffffffffffffff821117156171e4576171e4616fbc565b6040529050806171f3836170cb565b81526020830135617203816170ab565b8060208301525060408301356040820152606083013560608201526080830135608082015260a0830135617236816170ab565b60a0919091015292915050565b600082601f83011261725457600080fd5b8135602061726461715b83617087565b82815260c0928302850182019282820191908785111561728357600080fd5b8387015b858110156171a25761729989826171af565b8452928401928101617287565b803560048110616d3157600080fd5b600061016082840312156172c857600080fd5b6172d0617014565b90506172db826170c0565b81526172e9602083016170c0565b6020820152604082013567ffffffffffffffff8082111561730957600080fd5b6173158583860161713a565b6040840152606084013591508082111561732e57600080fd5b5061733b84828501617243565b60608301525061734d608083016172a6565b608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b80356effffffffffffffffffffffffffffff81168114616d3157600080fd5b600082601f8301126173ca57600080fd5b813567ffffffffffffffff8111156173e4576173e4616fbc565b61741560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601617038565b81815284602083860101111561742a57600080fd5b816020850160208301376000918101602001919091529392505050565b600060a0828403121561745957600080fd5b617461616feb565b9050813567ffffffffffffffff8082111561747b57600080fd5b617487858386016172b5565b83526174956020850161739a565b60208401526174a66040850161739a565b604084015260608401359150808211156174bf57600080fd5b6174cb858386016173b9565b606084015260808401359150808211156174e457600080fd5b506174f1848285016173b9565b60808301525092915050565b600082601f83011261750e57600080fd5b8135602061751e61715b83617087565b82815260059290921b8401810191818101908684111561753d57600080fd5b8286015b8481101561757d57803567ffffffffffffffff8111156175615760008081fd5b61756f8986838b0101617447565b845250918301918301617541565b509695505050505050565b60008083601f84011261759a57600080fd5b50813567ffffffffffffffff8111156175b257600080fd5b6020830191508360208260051b85010111156175cd57600080fd5b9250929050565b6000806000806000606086880312156175ec57600080fd5b853567ffffffffffffffff8082111561760457600080fd5b61761089838a016174fd565b9650602088013591508082111561762657600080fd5b61763289838a01617588565b9096509450604088013591508082111561764b57600080fd5b5061765888828901617588565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106176a8576176a8617669565b9052565b6176b7828251617698565b60208101516001600160a01b038082166020850152604083015160408501526060830151606085015280608084015116608085015250505050565b600081518084526020808501945080840160005b8381101561774857815161771b8882516176ac565b808401516001600160a01b031660a08901526040015160c088015260e09096019590820190600101617706565b509495945050505050565b60208152600061068860208301846176f2565b60006020828403121561777857600080fd5b813567ffffffffffffffff81111561778f57600080fd5b8201610160818503121561068857600080fd5b60008060008060008060008060008060e08b8d0312156177c157600080fd5b8a3567ffffffffffffffff808211156177d957600080fd5b6177e58e838f016174fd565b9b5060208d01359150808211156177fb57600080fd5b6178078e838f01617588565b909b50995060408d013591508082111561782057600080fd5b61782c8e838f01617588565b909950975060608d013591508082111561784557600080fd5b506178528d828e01617588565b90965094505060808b0135925061786b60a08c016170c0565b915060c08b013590509295989b9194979a5092959850565b604080825283519082018190526000906020906060840190828701845b828110156178be5781511515845292840192908401906001016178a0565b505050838103828501526178d281866176f2565b9695505050505050565b600080602083850312156178ef57600080fd5b823567ffffffffffffffff81111561790657600080fd5b61791285828601617588565b90969095509350505050565b6000806000806040858703121561793457600080fd5b843567ffffffffffffffff8082111561794c57600080fd5b61795888838901617588565b9096509450602087013591508082111561797157600080fd5b5061797e87828801617588565b95989497509550505050565b6000806040838503121561799d57600080fd5b823567ffffffffffffffff8111156179b457600080fd5b8301604081860312156179c657600080fd5b946020939093013593505050565b6000806000806000608086880312156179ec57600080fd5b853567ffffffffffffffff80821115617a0457600080fd5b9087019060a0828a031215617a1857600080fd5b90955060208701359080821115617a2e57600080fd5b50617a3b88828901617588565b909550935050604086013591506060860135617a56816170ab565b809150509295509295909350565b60008060008060008060008060a0898b031215617a8057600080fd5b883567ffffffffffffffff80821115617a9857600080fd5b617aa48c838d01617588565b909a50985060208b0135915080821115617abd57600080fd5b617ac98c838d01617588565b909850965060408b0135915080821115617ae257600080fd5b50617aef8b828c01617588565b999c989b509699959896976060870135966080013595509350505050565b600060208284031215617b1f57600080fd5b8135610688816170ab565b606081526000617b3d6060830186616f46565b90508360208301526001600160a01b0383166040830152949350505050565b600060208284031215617b6e57600080fd5b813567ffffffffffffffff811115617b8557600080fd5b8201610240818503121561068857600080fd5b6000617ba661715b84617087565b83815260208082019190600586811b860136811115617bc457600080fd5b865b81811015617cc057803567ffffffffffffffff80821115617be75760008081fd5b818a01915060a08236031215617bfd5760008081fd5b617c05616feb565b823581528683013560028110617c1b5760008081fd5b81880152604083810135908201526060808401359082015260808084013583811115617c475760008081fd5b939093019236601f850112617c5e57600092508283fd5b83359250617c6e61715b84617087565b83815292871b84018801928881019036851115617c8b5760008081fd5b948901945b84861015617ca957853582529489019490890190617c90565b918301919091525088525050948301948301617bc6565b5092979650505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d0257600080fd5b83018035915067ffffffffffffffff821115617d1d57600080fd5b602001915060a0810236038213156175cd57600080fd5b600060a08284031215617d4657600080fd5b61068883836170da565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d8557600080fd5b83018035915067ffffffffffffffff821115617da057600080fd5b602001915060c0810236038213156175cd57600080fd5b600060c08284031215617dc957600080fd5b61068883836171af565b600060208284031215617de557600080fd5b610688826172a6565b600061059c3683617447565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203617e3c57617e3c617dfa565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815160009082906020808601845b83811015617e9c57815185529382019390820190600101617e80565b50929695505050505050565b6004811061453157614531617669565b6176a881617ea8565b8c81526001600160a01b038c811660208301528b166040820152606081018a9052608081018990526101808101617ef789617ea8565b60a082019890985260c081019690965260e08601949094526101008501929092526101208401526101408301526101609091015295945050505050565b600060408284031215617f4657600080fd5b6040516040810181811067ffffffffffffffff82111715617f6957617f69616fbc565b604052823581526020928301359281019290925250919050565b6000617f9161715b84617087565b80848252602080830192508560051b850136811115617faf57600080fd5b855b8181101561804a57803567ffffffffffffffff811115617fd15760008081fd5b870136601f820112617fe35760008081fd5b8035617ff161715b82617087565b81815260069190911b820185019085810190368311156180115760008081fd5b928601925b8284101561803a576180283685617f34565b82528682019150604084019350618016565b8852505050938201938201617fb1565b50919695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261808a57600080fd5b9190910192915050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261808a57600080fd5b600061059c36836172b5565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261810957600080fd5b83018035915067ffffffffffffffff82111561812457600080fd5b6020019150368190038213156175cd57600080fd5b600081518084526020808501945080840160005b83811015617748576181608783516176ac565b60a096909601959082019060010161814d565b6000608080830187845260206001600160a01b03808916828701526040848188015283895180865260a089019150848b01955060005b818110156181ea5786516181be848251617698565b8087015186168488015284810151858501526060908101519084015295850195918701916001016181a9565b505087810360608901526181fe818a618139565b9c9b505050505050505050505050565b60006020828403121561822057600080fd5b81356018811061068857600080fd5b60008161823e5761823e617dfa565b506000190190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261827b57600080fd5b83018035915067ffffffffffffffff82111561829657600080fd5b6020019150600681901b36038213156175cd57600080fd5b6000828210156182c0576182c0617dfa565b500390565b86815260c081016182d96020830188617698565b6001600160a01b03861660408301528460608301528360808301528260a0830152979650505050505050565b87815260e081016183196020830189617698565b6001600160a01b0380881660408401528660608401528560808401528460a084015280841660c08401525098975050505050505050565b6000821982111561836357618363617dfa565b500190565b600081600019048311821515161561838257618382617dfa565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826183c5576183c5618387565b500490565b6000604082840312156183dc57600080fd5b6040516040810181811067ffffffffffffffff821117156183ff576183ff616fbc565b604052823581526020830135618414816170ab565b60208201529392505050565b60008183825b6001811015618445578151835260209283019290910190600101618426565b50505060208201905092915050565b60006040828403121561846657600080fd5b6106888383617f34565b600281106176a8576176a8617669565b6020810161059c8284618470565b600080604083850312156184a157600080fd5b505080516020909101519092909150565b600060ff821660ff84168060ff038211156184cf576184cf617dfa565b019392505050565b6000602082840312156184e957600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461068857600080fd5b600081518084526020808501945080840160005b83811015617748578151618542888251617698565b808401516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a0909601959082019060010161852d565b600081518084526020808501945080840160005b838110156177485781516185ac888251617698565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101618597565b600081518084526020808501945080840160005b838110156177485781518752958201959082019060010161860e565b600081518084526020808501808196508360051b8101915082860160005b858110156186ae578284038952815160a0815186528682015161866d88880182618470565b50604082810151908701526060808301519087015260809182015191860181905261869a818701836185fa565b9a87019a9550505090840190600101618648565b5091979650505050505050565b8581526001600160a01b038516602082015260a060408201526000610140855160a0808501526186f682850182516001600160a01b03169052565b6020810151610160618712818701836001600160a01b03169052565b60408301519150806101808701525061872f6102a0860182618519565b905060608201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0868303016101a087015261876b8282618583565b91505060808201516187816101c0870182617eb8565b5060a08201516101e086015260c082015161020086015260e082015161022086015261010080830151610240870152610120808401516102608801528484015161028088015260208a015194506187eb60c08801866effffffffffffffffffffffffffffff169052565b60408a01516effffffffffffffffffffffffffffff1660e088015260608a01518784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60908101848a015290955093506188458386616f46565b945060808a0151925083878603018188015250506188638382616f46565b92505050828103606084015261887981866185fa565b9050828103608084015261888d818561862a565b98975050505050505050565b6000826188a8576188a8618387565b500690565b600080858511156188bd57600080fd5b838611156188ca57600080fd5b5050820193919092039150565b602080825282518282018190526000919060409081850190868401855b828110156186ae578151805161890981617ea8565b8552808701516001600160a01b039081168887015286820151811687870152606080830151909116908601526080808201519086015260a0908101519085015260c090930192908501906001016188f4565b828152604060208201526000610a786040830184616f46565b6000825161808a818460208701616f1a565b60006020828403121561899857600080fd5b8151801515811461068857600080fdfea2646970667358221220cbc51d9cffe7cabe81a1394eca32dcc4180325bc051f164e795f8fa9f890481a64736f6c634300080e0033",
    "sourceMap": "1299:27859:68:-:0;;;1754:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1824:17;;;;;;;;;2517:19:74;:17;:19::i;:::-;2279:257;;;;;;;;;;-1:-1:-1;2279:257:74;-1:-1:-1;2279:257:74;2637:13;2625:25;;-1:-1:-1;;;;;2854:43:74;;;;;;-1:-1:-1;3037:44:74;;-1:-1:-1;;;3037:44:74;;;;2812:17;;2854:43;3037:42;;:44;;;;;;;;;;;2854:43;3037:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2989:102:74;;-1:-1:-1;;2345:1:30;685:16:84;:31;-1:-1:-1;1602:16:73::1;::::0;-1:-1:-1;;1602:14:73::1;:16:::0;-1:-1:-1;;1602:16:73:i:1;:::-;1498:127:::0;1391:101:82;1509:96:81;1754:95:68;1299:27859;;5383:3206:74;5825:5;;;;;;;;;;;-1:-1:-1;;;5825:5:74;;;;;5935:8;;;;;;;;;;-1:-1:-1;;;5935:8:74;;;;6066:264;;5809:23;;5919:26;;5472:16;;;;;;;;;;;;6066:264;;;-1:-1:-1;;;1486:25:106;;-1:-1:-1;;;1536:2:106;1527:12;;1520:39;-1:-1:-1;;;1584:2:106;1575:12;;1568:38;1636:31;1631:2;1622:12;;1615:53;1698:22;1693:2;1684:12;;1677:44;-1:-1:-1;;;1746:2:106;1737:12;;1730:41;-1:-1:-1;;;1796:3:106;1787:13;;1780:26;1831:3;1822:13;;678:1163;6066:264:74;;;;-1:-1:-1;;6066:264:74;;;;;;;;;-1:-1:-1;;;6066:264:74;6467:310;;2755:33:106;-1:-1:-1;;;2804:12:106;;;2797:39;-1:-1:-1;;;2852:12:106;;;2845:38;2913:31;2899:12;;;2892:53;2975:22;2961:12;;;2954:44;-1:-1:-1;;;3014:12:106;;;3007:42;-1:-1:-1;;;3065:13:106;;;3058:42;-1:-1:-1;;;3116:13:106;;;3109:26;;;6467:310:74;;;;;;;;;3151:13:106;;;6467:310:74;;;-1:-1:-1;;;6942:490:74;;;4861:31:106;-1:-1:-1;;;4908:12:106;;;4901:40;-1:-1:-1;;;4957:12:106;;;4950:37;-1:-1:-1;;;5003:12:106;;;4996:42;5068:34;5054:12;;;5047:56;-1:-1:-1;;;5119:12:106;;;5112:26;-1:-1:-1;;;5154:12:106;;;5147:40;-1:-1:-1;;;5203:13:106;;;5196:43;-1:-1:-1;;;5255:13:106;;;5248:41;-1:-1:-1;;;5305:13:106;;;5298:42;-1:-1:-1;;;5356:13:106;;;5349:38;3252:21;5493:13;;;3240:34;-1:-1:-1;;;3290:12:106;;;3378:30;3424:12;;;624:16;6066:264:74;-1:-1:-1;6467:310:74;-1:-1:-1;;656:11:106;;6942:490:74;;;-1:-1:-1;;6942:490:74;;;;;;;;;;-1:-1:-1;;;6942:490:74;7577:248;;6227:28:106;-1:-1:-1;;;6271:12:106;;;6264:36;-1:-1:-1;;;6316:12:106;;;6309:39;-1:-1:-1;;;6364:12:106;;;6357:40;6427:27;6413:12;;;6406:49;-1:-1:-1;;;6471:12:106;;;6464:25;6942:490:74;-1:-1:-1;6505:12:106;;7577:248:74;;;-1:-1:-1;;7577:248:74;;;;;;;;;;7554:281;;7577:248;7554:281;;;;7945:30;;;;;;8093:38;;;;;;7554:281;;-1:-1:-1;7945:30:74;-1:-1:-1;8093:38:74;-1:-1:-1;8261:162:74;;8295:32;;8103:27;;7955:19;;8261:162;;:::i;:::-;;;;;;;;;;;;;8238:195;;;;;;8222:211;;8462:120;8505:20;8539:8;8561:11;8462:29;;;:120;;:::i;:::-;8444:138;;5736:2853;;;5383:3206;;;;;;;:::o;1919:6655:73:-;2040:79;:115;;-1:-1:-1;;2040:115:73;;;;;;2165:82;:118;;;;;;2293:85;:121;;;;;;2424:88;:124;;;;;;2586:80;:117;;;;2040:115;2586:117;;;;;;2713:83;:120;;;;;;;;2843:86;:123;;;;;;;;2976:89;:126;;;;;;;;3142:81;:119;;;;2324:44;3142:119;;;;;;3271:84;:122;;;;;;;;3403:87;:125;;;;;;;;3538:90;:128;;;;;;;;3707:82;:121;;;;2040:17;3707:121;;;;;;3838:85;:124;;;;;;;;3972:88;:127;;;;;;;;4109:91;:130;;;;;;;;4279:81;:119;;;;2617:39;4279:119;;;;;;4408:84;:122;;;;;;;;4540:87;:125;;;;;;;;4675:90;:128;;;;;;;;4844:82;:121;;;;2744:42;4844:121;;;;;;4975:85;:124;;;;;;;;5109:88;:127;;;;;;;;5246:91;:130;;;;;;;;;2040:79;5449:84;;:106;;;;;;5565:85;:107;;;;;;5682:86;:108;;;;;;5800:87;:109;;;;;;5919:86;:108;;;;;;6037:87;:109;;;;;;6181:87;:112;;;;;;;;6303:88;:113;;;;;;;;6426:89;:114;;;;;;;;6550:90;:115;;;;;;;;6675:89;:114;;;;;;;;6799:90;:115;;;;;;;;;;6952:90;:118;;;;;;;;7080:91;:119;;;;;;;;7209:92;:120;;;;;;;;7339:93;:121;;;;;;;;7470:92;:120;;;;;;;;7600:93;:121;;;;;;;;;7762:93;:124;;;;;;;;7896:94;:125;;;;;;;;8031:95;:126;;;;;;;;8167:96;:127;;;;;;;;8304:95;:126;;;;;;;;5277:50;2122:33;8440:96;;:127;;;;;;;;1919:6655::o;3587:365:74:-;4342:182;;;;;;;7598:25:106;;;;7639:18;;;7632:34;;;;7682:18;;;7675:34;;;;4466:13:74;7725:18:106;;;7718:34;4505:4:74;7768:19:106;;;;7761:61;;;;4342:182:74;;;;;;;;;;7570:19:106;;;;4342:182:74;;4319:215;;;;;;3587:365::o;14:290:106:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:106;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:106:o;309:245::-;388:6;396;449:2;437:9;428:7;424:23;420:32;417:52;;;465:1;462;455:12;417:52;-1:-1:-1;;488:16:106;;544:2;529:18;;;523:25;488:16;;523:25;;-1:-1:-1;309:245:106:o;6528:336::-;6569:3;6607:5;6601:12;6631:1;6641:128;6655:6;6652:1;6649:13;6641:128;;;6752:4;6737:13;;;6733:24;;6727:31;6714:11;;;6707:52;6670:12;6641:128;;;6787:6;6784:1;6781:13;6778:48;;;6822:1;6813:6;6808:3;6804:16;6797:27;6778:48;-1:-1:-1;6842:16:106;;;;;6528:336;-1:-1:-1;;6528:336:106:o;6869:333::-;7090:3;7115:81;7140:55;7165:29;7190:3;7182:6;7165:29;:::i;:::-;7157:6;7140:55;:::i;:::-;7132:6;7115:81;:::i;:::-;7108:88;6869:333;-1:-1:-1;;;;;6869:333:106:o;7339:489::-;1299:27859:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c8063a81744041161008a578063f07ec37311610059578063f07ec373146102a6578063f47b7740146102c6578063fb0f3ee1146102ea578063fd9f1e10146102fd57600080fd5b8063a81744041461025a578063b3a34c4c1461026d578063e7acab2414610280578063ed98a5741461029357600080fd5b80635b34b966116100c65780635b34b966146101c657806379df72bd146101e957806387201b4114610209578063881477321461022a57600080fd5b806306fdde03146100ed57806346423aa71461011857806355944a42146101a6575b600080fd5b3480156100f957600080fd5b5061010261031d565b60405161010f9190616f90565b60405180910390f35b34801561012457600080fd5b50610184610133366004616fa3565b60009081526002602052604090205460ff808216926101008304909116916effffffffffffffffffffffffffffff620100008204811692710100000000000000000000000000000000009092041690565b604080519415158552921515602085015291830152606082015260800161010f565b6101b96101b43660046175d4565b61035e565b60405161010f9190617753565b3480156101d257600080fd5b506101db6103c5565b60405190815260200161010f565b3480156101f557600080fd5b506101db610204366004617766565b61040b565b61021c6102173660046177a2565b6105a2565b60405161010f929190617883565b34801561023657600080fd5b5061024a6102453660046178dc565b610640565b604051901515815260200161010f565b6101b961026836600461791e565b61068f565b61024a61027b36600461798a565b610751565b61024a61028e3660046179d4565b610810565b61021c6102a1366004617a64565b610885565b3480156102b257600080fd5b506101db6102c1366004617b0d565b610974565b3480156102d257600080fd5b506102db610992565b60405161010f93929190617b2a565b61024a6102f8366004617b5c565b6109aa565b34801561030957600080fd5b5061024a6103183660046178dc565b610a01565b606061035960408051808201909152600d81527f436f6e73696465726174696f6e00000000000000000000000000000000000000602082015290565b905090565b606060026000540361039c576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b6866103af8688617b98565b8585610a49565b60016000559695505050505050565b6000600260005403610403576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610359610a80565b60408051610160810190915260009061059c908061042c6020860186617b0d565b6001600160a01b0316815260200184602001602081019061044d9190617b0d565b6001600160a01b031681526020016104686040860186617ccd565b808060200260200160405190810160405280939291908181526020016000905b828210156104b4576104a560a08302860136819003810190617d34565b81526020019060010190610488565b50505091835250506020016104cc6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b828210156105185761050960c08302860136819003810190617db7565b815260200190600101906104ec565b505050918352505060200161053360a0860160808701617dd3565b600381111561054457610544617669565b81526020018460a0013581526020018460c0013581526020018460e0013581526020018461010001358152602001846101200135815260200184806060019061058d9190617d50565b90915250610140840135610b1b565b92915050565b6060806002600054036105e1576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556105f18d610d51565b90506106278d828e8e906106059190617b98565b8d8d8d8d8d6001600160a01b038e161561061f578d610621565b335b8d610e2d565b6001600055909e909d509b505050505050505050505050565b600060026000540361067e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383610e71565b9392505050565b60606002600054036106cd576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556107436106df8686611031565b604080516000808252602082019092529061073b565b6107286040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816106f55790505b508585610a49565b600160005595945050505050565b600060026000540361078f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556108046107a0846110f6565b60408051600080825260208201909252906107fc565b6107e96040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107b65790505b5084336111b1565b60016000559392505050565b600060026000540361084e576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556103b661085f87617dee565b6108698688617b98565b856001600160a01b0386161561087f57856111b1565b336111b1565b6060806002600054036108c4576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009081556108d58b8b611031565b905060006108e282610d51565b905061095c8282600060405190808252806020026020018201604052801561094f57816020015b61093c6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816109095790505b508d8d8d8d8d338e610e2d565b6001600055909d909c509a5050505050505050505050565b6001600160a01b03811660009081526001602052604081205461059c565b606060008061099f61125c565b925092509250909192565b60006002600054036109e8576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000556109f6826112c4565b600160005592915050565b6000600260005403610a3f576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888383611949565b60606000610a5686610d51565b9050610a6986828760018a516000611bc2565b610a748185856120c4565b9150505b949350505050565b6000600260005403610abe576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526001602052604081208054909190610adb90617e29565b918290555060405181815290915033907f721c20121297512b72821b97f5326877ea8ecf4bb9948fea5bfcb6453074d37f9060200160405180910390a290565b60008083604001515167ffffffffffffffff811115610b3c57610b3c616fbc565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b509050600084610140015167ffffffffffffffff811115610b8857610b88616fbc565b604051908082528060200260200182016040528015610bb1578160200160208202803683370190505b50905060005b856040015151811015610c1757610bea86604001518281518110610bdd57610bdd617e43565b6020026020010151612325565b838281518110610bfc57610bfc617e43565b6020908102919091010152610c1081617e29565b9050610bb7565b5060005b856101400151811015610c7b57610c4e86606001518281518110610c4157610c41617e43565b6020026020010151612393565b828281518110610c6057610c60617e43565b6020908102919091010152610c7481617e29565b9050610c1b565b507f00000000000000000000000000000000000000000000000000000000000000008560000151866020015184604051602001610cb89190617e72565b6040516020818303038152906040528051906020012084604051602001610cdf9190617e72565b6040516020818303038152906040528051906020012089608001518a60a001518b60c001518c60e001518d61010001518e61012001518e604051602001610d319c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209250505092915050565b80516060908067ffffffffffffffff811115610d6f57610d6f616fbc565b604051908082528060200260200182016040528015610dc857816020015b6040805160a081018252600080825260606020808401829052938301819052820181905260808201528252600019909201910181610d8d5790505b50915060005b81811015610e2657610df8848281518110610deb57610deb617e43565b60200260200101516123ea565b838281518110610e0a57610e0a617e43565b602002602001018190525080610e1f90617e29565b9050610dce565b5050919050565b606080610e3f8c8c8c60008789611bc2565b610e5e8b610e4d8a8c617f83565b610e57898b617f83565b88886126cc565b909d909c509a5050505050505050505050565b6000600260005403610eaf576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b818110156110235736888883818110610ed157610ed1617e43565b9050602002810190610ee39190618056565b905036610ef08280618094565b9050610eff6020820182617b0d565b9450610f12610f0d826180c8565b612a23565b60008181526002602052604081209850909650610f3490879089906001612a5e565b50865460ff1661101057610f8a8587610f5060208601866180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612b8c92505050565b86547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178755610fc36040820160208301617b0d565b6001600160a01b0316856001600160a01b03167ffde361574a066b44b3b5fe98a87108b7565e327327954c4faeea56a4e6491a0a8860405161100791815260200190565b60405180910390a35b50508061101c90617e29565b9050610eb6565b506001979650505050505050565b6060818067ffffffffffffffff81111561104d5761104d616fbc565b60405190808252806020026020018201604052801561108657816020015b611073616e69565b81526020019060019003908161106b5790505b50915060005b818110156110ee576110c08585838181106110a9576110a9617e43565b90506020028101906110bb9190618056565b6110f6565b8382815181106110d2576110d2617e43565b6020026020010181905250806110e790617e29565b905061108c565b505092915050565b6110fe616e69565b6040805160a08101909152806111148480618094565b61111d906180c8565b815260200160016effffffffffffffffffffffffffffff16815260200160016effffffffffffffffffffffffffffff16815260200183806020019061116291906180d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101909252928352909201525092915050565b6000606060008060006111c78989600187612c1d565b9250925092506111d78989612fe2565b885160006111e88285858c8c61332f565b905081602001516001600160a01b031682600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31878b856020015186604001516040516112439493929190618173565b60405180910390a35060019a9950505050505050505050565b60408051808201909152600681527f72632e312e310000000000000000000000000000000000000000000000000000602082015260008061129b61379f565b92937f000000000000000000000000000000000000000000000000000000000000000092509050565b600080806112da6101208501610100860161820e565b9050600360008260178111156112f2576112f2617669565b601781111561130357611303617669565b8152602081019190915260400160009081205460ff1692509050806113306101208601610100870161820e565b90506004600082601781111561134857611348617669565b601781111561135957611359617669565b8152602081019190915260400160009081205460ff16925090508083600581111561138657611386617669565b14806113a3575060018360058111156113a1576113a1617669565b145b156113b0575060006113b4565b5060015b341580156113d3575060008160058111156113d1576113d1617669565b145b15611411576040517fa61be9f00000000000000000000000000000000000000000000000000000000081523460048201526024015b60405180910390fd5b34158015906114315750600181600581111561142f5761142f617669565b145b1561146a576040517fa61be9f0000000000000000000000000000000000000000000000000000000008152346004820152602401611408565b6000600484600581111561148057611480617669565b148061149d5750600584600581111561149b5761149b617669565b145b156114b9576114b260c0870160a08801617b0d565b90506114c9565b6114c66020870187617b0d565b90505b6000808560058111156114de576114de617669565b14806114fb575060018560058111156114f9576114f9617669565b145b156115085750600061156b565b600285600581111561151c5761151c617669565b14806115395750600385600581111561153757611537617669565b145b156115465750600161156b565b600485600581111561155a5761155a617669565b036115675750600261156b565b5060035b6000600486600581111561158157611581617669565b148061159e5750600586600581111561159c5761159c617669565b145b156115ab575060016115ed565b60008660058111156115bf576115bf617669565b14806115dc575060028660058111156115da576115da617669565b145b156115e9575060026115ed565b5060035b6115fb888684878786613891565b600061160d60808a0160608b01617b0d565b90506000600488600581111561162557611625617669565b14806116425750600588600581111561164057611640617669565b145b1561165357506101c089013561165b565b506101a08901355b600088600581111561166f5761166f617669565b148061168c5750600188600581111561168a5761168a617669565b145b80156116b1575060208a018035906116a4908c617b0d565b6001600160a01b03161715155b806116f7575060028860058111156116cb576116cb617669565b14806116e8575060038860058111156116e6576116e6617669565b145b80156116f7575060208a013515155b8061173d5750600488600581111561171157611711617669565b148061172e5750600588600581111561172c5761172c617669565b145b801561173d575060c08a013515155b15611774576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091526000815260606020820152600089600581111561179d5761179d617669565b036117db576117c86117b560c08d0160a08e01617b0d565b84338e60c001358f60e001358787614289565b6117d68b604001358c6142fd565b61192f565b60018960058111156117ef576117ef617669565b0361181a576117c861180760c08d0160a08e01617b0d565b84338e60c001358f60e001358787614429565b600289600581111561182e5761182e617669565b03611866576118466117b560c08d0160a08e01617b0d565b6117d6338461185860208f018f617b0d565b8e604001358f60008761445f565b600389600581111561187a5761187a617669565b036118925761184661180760c08d0160a08e01617b0d565b60048960058111156118a6576118a6617669565b036118f4576118ce6118bb60208d018d617b0d565b33858e602001358f604001358787614289565b6117d683338d60a00160208101906118e69190617b0d565b8e60e001358f60018761445f565b61191761190460208d018d617b0d565b33858e602001358f604001358787614429565b61192f83338d60a00160208101906118e69190617b0d565b61193881614518565b5060019a9950505050505050505050565b6000600260005403611987576040517f7fa8a98700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808084815b8181101561102357368888838181106119a9576119a9617e43565b90506020028101906119bb9190618094565b90506119ca6020820182617b0d565b94506119dc6040820160208301617b0d565b9350336001600160a01b03861614801590611a005750336001600160a01b03851614155b15611a37576040517f80ec737400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b26604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848060400190611a769190617ccd565b808060200260200160405190810160405280939291908181526020016000905b82821015611ac257611ab360a08302860136819003810190617d34565b81526020019060010190611a96565b5050509183525050602001611ada6060860186617d50565b808060200260200160405190810160405280939291908181526020016000905b8282101561051857611b1760c08302860136819003810190617db7565b81526020019060010190611afa565b6000818152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010017815590519098509091506001600160a01b0380871691908816907f6bacc01dbe442496068f7d234edd811f1a5f833243e0aec824f86ab861f3c90d90611ba79085815260200190565b60405180910390a3505080611bbb90617e29565b905061198e565b855160008167ffffffffffffffff811115611bdf57611bdf616fbc565b604051908082528060200260200182016040528015611c08578160200160208202803683370190505b509050600080357fffffffff00000000000000000000000000000000000000000000000000000000167f55944a420000000000000000000000000000000000000000000000000000000014801590611ca457506000357fffffffff00000000000000000000000000000000000000000000000000000000167fa81744040000000000000000000000000000000000000000000000000000000014155b90506000805b84811015611f505760008b8281518110611cc657611cc6617e43565b6020026020010151905060008b8381518110611ce457611ce4617e43565b6020026020010151905088600003611d09576000602090920182905260800152611f40565b6000806000611d1a858f8f8c612c1d565b92509250925081600003611d3e575050600060209093018390525060800152611f40565b82898781518110611d5157611d51617e43565b60209081029190910101528b611d668161822f565b865160a081015160c0820151604090920151929f5092509060005b8151811015611e66576000828281518110611d9e57611d9e617e43565b602002602001015190508b80611dc65750600081516005811115611dc457611dc4617669565b145b9b506000611dd988888460800151614534565b90508160800151826060015103611df65760608201819052611e0b565b611e0588888460600151614534565b60608301525b608082018190526060820151611e259082888860006145b9565b6060830181905260208b0151805185908110611e4357611e43617e43565b60200260200101516060018181525050505080611e5f90617e29565b9050611d81565b5087516060015160005b8151811015611f35576000828281518110611e8d57611e8d617e43565b602002602001015190506000611ea889898460800151614534565b90508160800151826060015103611ec55760608201819052611eda565b611ed489898460600151614534565b60608301525b608082018190526060820151611ef49082898960016145b9565b6060830181905260408c0151805185908110611f1257611f12617e43565b60200260200101516060018181525050505080611f2e90617e29565b9050611e70565b505050505050505050505b611f4981617e29565b9050611caa565b50808015611f5b5750815b15611f92576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f9c8989614652565b60005b848110156120b7576000801b848281518110611fbd57611fbd617e43565b602002602001015103156120a75760008b8281518110611fdf57611fdf617e43565b602002602001015160000151905060008b838151811061200157612001617e43565b602002602001015160200151905060008c848151811061202357612023617e43565b602002602001015160400151905082602001516001600160a01b031683600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3189878151811061208057612080617e43565b60200260200101518c868660405161209b9493929190618173565b60405180910390a35050505b6120b081617e29565b9050611f9f565b5050505050505050505050565b6060818067ffffffffffffffff8111156120e0576120e0616fbc565b60405190808252806020026020018201604052801561214e57816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816120fe5790505b5091506000805b82811015612218573686868381811061217057612170617e43565b90506020028101906121829190618056565b905060006121a6896121948480618246565b6121a16020870187618246565b614a5a565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036121dd576121d684617e29565b9350612205565b80866121e986866182ae565b815181106121f9576121f9617e43565b60200260200101819052505b50508061221190617e29565b9050612155565b50801561231157600061222b82846182ae565b905060008167ffffffffffffffff81111561224857612248616fbc565b6040519080825280602002602001820160405280156122b657816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816122665790505b50905060005b8281101561230c578581815181106122d6576122d6617e43565b60200260200101518282815181106122f0576122f0617e43565b60200260200101819052508061230590617e29565b90506122bc565b509350505b61231b8684614dac565b5050509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000082600001518360200151846040015185606001518660800151604051602001612376969594939291906182c5565b604051602081830303815290604052805190602001209050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000826000015183602001518460400151856060015186608001518760a001516040516020016123769796959493929190618305565b6040805160a08101825260008082526060602083018190529282018390529181018290526080810191909152815160400151805160009067ffffffffffffffff81111561243957612439616fbc565b60405190808252806020026020018201604052801561248b57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816124575790505b50905060005b82518110156125385760008382815181106124ae576124ae617e43565b6020026020010151905060006040518060800160405280836000015160058111156124db576124db617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181525090508084848151811061251a5761251a617e43565b602002602001018190525050508061253190617e29565b9050612491565b50835160600151805160009067ffffffffffffffff81111561255c5761255c616fbc565b6040519080825280602002602001820160405280156125b557816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161257a5790505b50905060005b82518110156126755760008382815181106125d8576125d8617e43565b6020026020010151905060006040518060a001604052808360000151600581111561260557612605617669565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181526020018360a001516001600160a01b031681525090508084848151811061265757612657617e43565b602002602001018190525050508061266e90617e29565b90506125bb565b506040805160a0810182528751516001600160a01b031681526020808201959095529081019190915285516101200151606082015291909401516effffffffffffffffffffffffffffff1660808201529392505050565b8351835160609182916126df8183618350565b67ffffffffffffffff8111156126f7576126f7616fbc565b60405190808252806020026020018201604052801561276557816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816127155790505b5092506000805b838110156128145760008a828151811061278857612788617e43565b6020026020010151905060006127a28d6000848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036127d9576127d284617e29565b9350612801565b80876127e586866182ae565b815181106127f5576127f5617e43565b60200260200101819052505b50508061280d90617e29565b905061276c565b5060005b828110156128cb57600089828151811061283457612834617e43565b60200260200101519050600061284e8d6001848d8d615005565b905080602001516001600160a01b03168160000151608001516001600160a01b0316036128855761287e84617e29565b93506128b8565b8087856128928987618350565b61289c91906182ae565b815181106128ac576128ac617e43565b60200260200101819052505b5050806128c490617e29565b9050612818565b5080156129cf576000816128df8486618350565b6128e991906182ae565b905060008167ffffffffffffffff81111561290657612906616fbc565b60405190808252806020026020018201604052801561297457816020015b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208083018290529282015282526000199092019101816129245790505b50905060005b828110156129ca5786818151811061299457612994617e43565b60200260200101518282815181106129ae576129ae617e43565b6020026020010181905250806129c390617e29565b905061297a565b509450505b8351600003612a0a576040517fd5da9a1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a148a85614dac565b94505050509550959350505050565b6000612a398260600151518361014001516151ea565b81516001600160a01b031660009081526001602052604090205461059c908390610b1b565b8254600090610100900460ff1615612ab3578115612aab576040517f1a51557400000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b506000610a78565b83546201000090046effffffffffffffffffffffffffffff168015612b80578315612b0d576040517fee9e0e6300000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b84547101000000000000000000000000000000000090046effffffffffffffffffffffffffffff168110612b80578215612b76576040517f10fda3e100000000000000000000000000000000000000000000000000000000815260048101879052602401611408565b6000915050610a78565b50600195945050505050565b336001600160a01b03841603612ba157505050565b6000612c0a612bae61379f565b846040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050612c17848284615228565b50505050565b60008060008087600001519050612c3d8160a001518260c001518861544e565b612c51575060009250829150819050612fd8565b602088015160408901516effffffffffffffffffffffffffffff918216911680821180612c7c575081155b15612cb3576040517f5a052b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082108015612cca5750612cca83608001516154ad565b15612d01576040517fa11b63ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612d0a83612a23565b9550612d2c8a8a89898760e00151886080015189600001518a602001516154cb565b600086815260026020526040812090612d4990889083908c612a5e565b612d5e575060009450849350612fd892505050565b805460ff16612d7a57612d7a8460000151888d60600151612b8c565b80546effffffffffffffffffffffffffffff620100008204811691710100000000000000000000000000000000009004168015612f485783600103612dc457809450809350612df0565b838114612df057612dd58483618368565b9150612de18186618368565b9450612ded8185618368565b93505b83612dfb8684618350565b1115612e0e57612e0b82856182ae565b94505b612e188583618350565b91506effffffffffffffffffffffffffffff821180612e4557506effffffffffffffffffffffffffffff84115b15612ed1576000612e5f86612e5a858861572e565b61572e565b905060008115612e6f5781612e72565b60015b9050612e7e81886183b6565b9650612e8a81856183b6565b9350612e9681876183b6565b95506000612eb56effffffffffffffffffffffffffffff6000196182ae565b9050612ec18188618350565b612ecb8287618350565b50505050505b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91851662010000027fffffffffffffffffffffffffffffff00000000000000000000000000000000009093169290921760011716178355612fbb565b82546effffffffffffffffffffffffffffff858116710100000000000000000000000000000000000270ffffffffffffffffffffffffffffffffff91881662010000027fffffffffffffffffffffffffffffff000000000000000000000000000000000090931692909217600117161783555b50506effffffffffffffffffffffffffffff928316955050169150505b9450945094915050565b8051825160005b8281101561322757600084828151811061300557613005617e43565b60209081029190910101518051909150801561304d576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040820151600080808560200151600181111561306c5761306c617669565b036131175786604001515183106130af576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000876040015184815181106130c7576130c7617e43565b6020908102919091010151805160408201519094509250905060048360058111156130f4576130f4617669565b036131025760028152613107565b600381525b60608601516040909101526131b9565b8660600151518310613155576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008760600151848151811061316d5761316d617e43565b60209081029190910101518051604082015190945092509050600483600581111561319a5761319a617669565b036131a857600281526131ad565b600381525b60608601516040909101525b6131c282615753565b6131f8576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015613211576132118560600151828760800151615770565b50505050508061322090617e29565b9050612fe9565b508351606001515160005b818110156132af57613268866000015160600151828151811061325757613257617e43565b602002602001015160000151615753565b1561329f576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6132a881617e29565b9050613232565b50508351604001515160005b81811015613327576132e0866000015160400151828151811061325757613257617e43565b15613317576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61332081617e29565b90506132bb565b505050505050565b6040805160a081018252600080825260606020830181905292820183905291810182905260808101919091526040805160a0808201835287825260208083018890528284018790529089015160608084019190915260c08a015160808401528351808501909452600084529083015290875161012089015160408a01515167ffffffffffffffff8111156133c5576133c5616fbc565b60405190808252806020026020018201604052801561341757816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816133e35790505b50602086015260005b8a60400151518110156135a75760008b60400151828151811061344557613445617e43565b602002602001015190506000600581111561346257613462617669565b8151600581111561347557613475617669565b036134ac576040517f12d3f5a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006134c382606001518360800151896000615877565b905060006040518060a00160405280846000015160058111156134e8576134e8617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018b6001600160a01b0316815250905060405180608001604052808260000151600581111561354057613540617669565b815260200182602001516001600160a01b0316815260200182604001518152602001838152508960200151858151811061357c5761357c617e43565b60200260200101819052506135938187878a6158d3565b505050806135a090617e29565b9050613420565b5089606001515167ffffffffffffffff8111156135c6576135c6616fbc565b60405190808252806020026020018201604052801561361f57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816135e45790505b5060408601523460005b8b60600151518110156137765760008c60600151828151811061364e5761364e617e43565b60200260200101519050600061366f826060015183608001518a6001615877565b905060006040518060a001604052808460000151600581111561369457613694617669565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018460a001516001600160a01b03168152509050808a6040015185815181106136e6576136e6617e43565b602090810291909101015260008151600581111561370657613706617669565b036137525784821115613745576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61374f82866182ae565b94505b61376281338b604001518b6158d3565b5050508061376f90617e29565b9050613629565b5061378084614518565b8015613790576137903382615a17565b50505050505b95945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461386c5750604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6138a7866101200135876101400135600161544e565b506138b0615abf565b6138ce6138c1610200880188618246565b9050876101e001356151ea565b6040805160e0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c081019190915260006040518060a0016040528088600381111561392557613925617669565b815260200187600581111561393c5761393c617669565b815260200186600581111561395357613953617669565b8152602001856001600160a01b0316815260200184600581111561397957613979617669565b90529050600061398d6102008a018a618246565b61399991506001618350565b67ffffffffffffffff8111156139b1576139b1616fbc565b604051908082528060200260200182016040528015613a0a57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816139cf5790505b507f000000000000000000000000000000000000000000000000000000000000000084526040805160c08101909152602084015191925060009181906005811115613a5757613a57617669565b8152602090810190613a6b908d018d617b0d565b6001600160a01b031681526020018b6020013581526020018b6040013581526020018b6040013581526020018b6060016020810190613aaa9190617b0d565b6001600160a01b031690529050613ac76101e08b01356001618350565b67ffffffffffffffff811115613adf57613adf616fbc565b604051908082528060200260200182016040528015613b08578160200160208202803683370190505b506060808601919091528451825160208085015160408087015195870151608088015160a08901519251613b429894959293919201618305565b604051602081830303815290604052805190602001208460600151600081518110613b6f57613b6f617e43565b602002602001018181525050613bae6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260006040518060a0016040528087602001516005811115613c0357613c03617669565b815260200185602001516001600160a01b0316815260200185604001518152602001856080015181526020018560a001516001600160a01b031681525090508085600081518110613c5657613c56617e43565b602002602001018190525060005b613c726102008f018f618246565b9050811015613e455760008e806102000190613c8e9190618246565b83818110613c9e57613c9e617e43565b905060400201803603810190613cb491906183ca565b90506040518060a0016040528089604001516005811115613cd757613cd7617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613d229190618350565b81518110613d3257613d32617e43565b60200260200101819052508e6101e001358210613d4f5750613e35565b6040518060c0016040528089604001516005811115613d7057613d70617669565b815260200189606001516001600160a01b0316815260200160008152602001826000015181526020018260000151815260200182602001516001600160a01b031681525093508860000151846000015185602001518660400151876060015188608001518960a00151604051602001613def9796959493929190618305565b604051602081830303815290604052805190602001208960600151836001613e179190618350565b81518110613e2757613e27617e43565b602002602001018181525050505b613e3e81617e29565b9050613c64565b508660600151604051602001613e5b9190617e72565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012060808801526101e08d01355b613eab6102008f018f618246565b9050811015613f885760008e806102000190613ec79190618246565b83818110613ed757613ed7617e43565b905060400201803603810190613eed91906183ca565b90506040518060a0016040528089604001516005811115613f1057613f10617669565b815260200189606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508487836001613f5b9190618350565b81518110613f6b57613f6b617e43565b60200260200101819052505080613f8190617e29565b9050613e9d565b506000935060019250613f99915050565b604051908082528060200260200182016040528015613feb57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181613fb75790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000018181525050600060405180608001604052808560800151600581111561403b5761403b617669565b815260200161405060c08e0160a08f01617b0d565b6001600160a01b031681526020018c60c0013581526020018c60e001358152509050808260008151811061408657614086617e43565b6020026020010181905250600060405180602001604052808760000151846000015185602001518660400151876060015188606001516040516020016140d1969594939291906182c5565b604051602081830303815290604052805190602001208152509050806040516020016140fd9190618420565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020909201919091209087015250507f0000000000000000000000000000000000000000000000000000000000000000845261416a848b85615bc7565b602085015261417f60a08b0160808c01617b0d565b6001600160a01b031661419860808c0160608d01617b0d565b6001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3186602001513385876040516141da9493929190618173565b60405180910390a361421c84602001518b61016001358b8d60600160208101906142049190617b0d565b8e60800160208101906142179190617b0d565b615c86565b602084015161427d9061423560808d0160608e01617b0d565b6142436102208e018e6180d4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250615dc892505050565b50505050505050505050565b6142938183615e12565b816142e357826001146142d2576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6142de87878787615e23565b6142f4565b6142f4828260028a8a8a8a8a615ef1565b50505050505050565b3460005b61430f610200840184618246565b90508110156143b55736614327610200850185618246565b8381811061433757614337617e43565b6040029190910191505080358381111561437d576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6143966143906040840160208501617b0d565b82615a17565b6143a081856182ae565b93505050806143ae90617e29565b9050614301565b50808311156143f0576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6144096144036080840160608501617b0d565b84615a17565b82811115614424576144243361441f85846182ae565b615a17565b505050565b614432836160d7565b61443c8183615e12565b8161444e576142de8787878787616111565b6142f4828260038a8a8a8a8a615ef1565b6000821561447357506101a083013561447b565b506101c08301355b60005b61448c610200860186618246565b90508110156144ff57366144a4610200870187618246565b838181106144b4576144b4617e43565b905060400201905084156144d0576144cd8135886182ae565b96505b6144ee888b6144e56040850160208601617b0d565b843587896161ff565b506144f881617e29565b905061447e565b5061450e8689898885876161ff565b5050505050505050565b8060200151516000036145285750565b6145318161623a565b50565b6000828403614544575080610688565b60006145508584618368565b905061455c84826183b6565b91506000838661456c8786618368565b61457691906183b6565b149050806145b0576040517fc63cf08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50509392505050565b6000848614614648576000806145cf86866182ae565b905060006145dd87426182ae565b905060006145eb82846182ae565b90508515614601576145fe6001846182ae565b93505b60008461460e848c618368565b614618848e618368565b6146229190618350565b61462c9190618350565b9050600061463a85836183b6565b965061379695505050505050565b5092949350505050565b805160005b8181101561490d57600083828151811061467357614673617e43565b60200260200101519050600081600001519050855181106146c0576040517f869586c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8581815181106146d2576146d2617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000036146fd5750506148fd565b6040820151600080808560200151600181111561471c5761471c617669565b036147e257600089858151811061473557614735617e43565b60200260200101516020015190508051841061477d576040517fbfb3f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061479157614791617e43565b6020908102919091010151805160408201519095509350905060048460058111156147be576147be617669565b036147cc57600281526147d1565b600381525b60608701516040909101525061489f565b60008985815181106147f6576147f6617e43565b60200260200101516040015190508051841061483e576040517f6088d7de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081858151811061485257614852617e43565b60209081029190910101518051604082015190955093509050600484600581111561487f5761487f617669565b0361488d5760028152614892565b600381525b6060870151604090910152505b6148a882615753565b6148de576040517f94eb6af600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156148f7576148f78560600151828760800151615770565b50505050505b61490681617e29565b9050614657565b5050815160005b81811015612c1757600084828151811061493057614930617e43565b602002602001015190506000816020015151905081608001516effffffffffffffffffffffffffffff16600003614968575050614a4a565b60005b818110156149d35761498c8360200151828151811061325757613257617e43565b156149c3576040517fa6cfc67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6149cc81617e29565b905061496b565b505060408101515160005b81811015614a46576149ff8360400151828151811061325757613257617e43565b15614a36576040517fff75a34000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614a3f81617e29565b90506149de565b5050505b614a5381617e29565b9050614914565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152831580614aa5575081155b15614adc576040517f98e9db6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000614b3c878585808060200260200160405190810160405280939291908181526020016000905b82821015614b3057614b2160408302860136819003810190618454565b81526020019060010190614b04565b505050505060006162c2565b9050614b9d878787808060200260200160405190810160405280939291908181526020016000905b82821015614b9057614b8160408302860136819003810190618454565b81526020019060010190614b64565b50505050506000806165b4565b81519092506005811115614bb357614bb3617669565b8251516005811115614bc757614bc7617669565b141580614bf2575080602001516001600160a01b03168260000151602001516001600160a01b031614155b80614c095750806040015182600001516040015114155b15614c40576040517f09cfb45500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516060015181606001511115614cf357600084846000818110614c6957614c69617e43565b905060400201803603810190614c7f9190618454565b90508260000151606001518260600151614c9991906182ae565b88826000015181518110614caf57614caf617e43565b602002602001015160400151826020015181518110614cd057614cd0617e43565b602090810291909101015160609081019190915283518101519083015250614d81565b600086866000818110614d0857614d08617e43565b905060400201803603810190614d1e9190618454565b90508160600151836000015160600151614d3891906182ae565b88826000015181518110614d4e57614d4e617e43565b602002602001015160200151826020015181518110614d6f57614d6f617e43565b60200260200101516060018181525050505b60608082015183519091015260809081015182516001600160a01b0390911691015295945050505050565b81516060908067ffffffffffffffff811115614dca57614dca616fbc565b604051908082528060200260200182016040528015614df3578160200160208202803683370190505b50915060005b81811015614f09576000858281518110614e1557614e15617e43565b6020026020010151905080608001516effffffffffffffffffffffffffffff16600003614e425750614ef9565b6001848381518110614e5657614e56617e43565b91151560209283029190910190910152604081015160005b8151811015614ef5576000828281518110614e8b57614e8b617e43565b602002602001015160600151905080600014614ee4576040517fa5f54208000000000000000000000000000000000000000000000000000000008152600481018690526024810183905260448101829052606401611408565b50614eee81617e29565b9050614e6e565b5050505b614f0281617e29565b9050614df9565b50604080518082019091526000815260606020820152349060005b8551811015614fe2576000868281518110614f4157614f41617e43565b60209081029190910101518051909150600081516005811115614f6657614f66617669565b03614fbb578481606001511115614fa9576040517f1a783b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151614fb890866182ae565b94505b614fcf8183602001518460400151876158d3565b505080614fdb90617e29565b9050614f24565b50614fec81614518565b8115614ffc57614ffc3383615a17565b50505092915050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915285518451600081900361508657866040517f375c24c10000000000000000000000000000000000000000000000000000000081526004016114089190618480565b6000805b828110156151475760008882815181106150a6576150a6617e43565b60200260200101516000015190508481106150ed576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a81815181106150ff576150ff617e43565b6020026020010151608001516effffffffffffffffffffffffffffff166000146151365761512e826001618350565b925050615147565b5061514081617e29565b905061508a565b508060000361519b57505060408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e083018290528252602082018190529181019190915291506137969050565b60008860018111156151af576151af617669565b036151d4576151ca89886151c46001856182ae565b886165b4565b9350505050613796565b6151ca89886151e46001856182ae565b89616894565b80821015615224576040517f466aa61600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600080806001600160a01b0386163b1561524757613327868686616902565b83516040036152a757600084806020019051810190615266919061848e565b9094507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81169350905061529f60ff82901c601b6184b2565b915050615370565b835160410361533e57838060200190518101906152c4919061848e565b85519194509250849060409081106152de576152de617e43565b016020015160f81c9050601b81148015906152fd57508060ff16601c14155b15615339576040517f1f003d0a00000000000000000000000000000000000000000000000000000000815260ff82166004820152602401611408565b615370565b6040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160008082526020820180845288905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156153c4573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811615806154175750866001600160a01b0316816001600160a01b031614155b156142f4576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004284118061545e5750428311155b156154a357811561549b576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000610688565b5060019392505050565b60008160038111156154c1576154c1617669565b6001161592915050565b60018360038111156154df576154df617669565b1180156154f55750336001600160a01b03821614155b801561550a5750336001600160a01b03831614155b1561450e5760808801515115801561552157508651155b15615622576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa15801561559d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906155c191906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461561d576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b61450e565b6040517f331315700000000000000000000000000000000000000000000000000000000081527f0e1d31dc00000000000000000000000000000000000000000000000000000000906001600160a01b0383169063331315709061569190899033908e908d908f906004016186bb565b602060405180830381865afa1580156156ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906156d291906184d7565b7fffffffff00000000000000000000000000000000000000000000000000000000161461450e576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b60005b811561574c57816157428185618899565b9093509150615731565b5090919050565b6000600382600581111561576957615769617669565b1192915050565b60008360405160200161578591815260200190565b60405160208183030381529060405280519060200120905060005b825181101561583d5760008382815181106157bd576157bd617e43565b602002602001015190508083116157ff57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061582c565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5061583681617e29565b90506157a0565b50808314612c17576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083850361589a576158938360000151846020015186614534565b9050610a78565b6137966158b08460000151856020015188614534565b6158c38560000151866020015188614534565b85606001518660800151866145b9565b6000845160058111156158e8576158e8617669565b0361594f57604084015160208501516001600160a01b03161715615938576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a84608001518560600151615a17565b612c17565b60018451600581111561596457615964617669565b036159bf576040840151156159a5576040517f6ab37ce700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61594a8460200151848660800151876060015186866161ff565b6002845160058111156159d4576159d4617669565b036159f85761594a8460200151848660800151876040015188606001518787614289565b612c178460200151848660800151876040015188606001518787614429565b615a20816160d7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114615a6d576040519150601f19603f3d011682016040523d82523d6000602084013e615a72565b606091505b5050905080614424576040517f470c7c1d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101839052604401611408565b6000615acf6024600436846188ad565b810190615adc9190616fa3565b6020148015615b095750615af76102446102243660006188ad565b810190615b049190616fa3565b610240145b8015615b655750615b216102846102643660006188ad565b810190615b2e9190616fa3565b615b39906040618368565b615b4590610260618350565b615b566102646102443660006188ad565b810190615b639190616fa3565b145b8015615b8e57506018615b7f6101446101243660006188ad565b810190615b8c9190616fa3565b105b905080614531576040517f39f3e3fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080615bf8615bdd6080860160608701617b0d565b6001600160a01b031660009081526001602052604090205490565b8551909150615c0d6080860160608701617b0d565b615c1d60a0870160808801617b0d565b8760400151886080015187600001518961012001358a61014001358b61016001358c61018001358d6101a001358b604051602001615c669c9b9a99989796959493929190617ec1565b604051602081830303815290604052805190602001209150509392505050565b6001836003811115615c9a57615c9a617669565b118015615cb05750336001600160a01b03821614155b8015615cc55750336001600160a01b03831614155b15615dc1576040517f0e1d31dc00000000000000000000000000000000000000000000000000000000808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc90608401602060405180830381865afa158015615d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615d6591906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614615dc1576040517ffb5014fc00000000000000000000000000000000000000000000000000000000815260048101869052602401611408565b5050505050565b6000838152600260205260409020615de38482600180612a5e565b50805460ff16615df857615df8838584612b8c565b710100000000000000000000000000000100019055505050565b815181146152245761522482614518565b836001600160a01b03163b600003615e72576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b158015615edd57600080fd5b505af115801561450e573d6000803e3d6000fd5b6020870151516000615f04826001618350565b67ffffffffffffffff811115615f1c57615f1c616fbc565b604051908082528060200260200182016040528015615f7c57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181615f3a5790505b50905060005b8281101561604c5760008a602001518281518110615fa257615fa2617e43565b602002602001015190506040518060c0016040528082600001516003811115615fcd57615fcd617669565b815260200182602001516001600160a01b0316815260200182604001516001600160a01b0316815260200182606001516001600160a01b03168152602001826080015181526020018260a0015181525083838151811061602f5761602f617e43565b6020026020010181905250508061604590617e29565b9050615f82565b506040518060c0016040528089600381111561606a5761606a617669565b8152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152508183815181106160b8576160b8617e43565b6020908102919091018101919091528901525050509490935250505050565b80600003614531576040517f91b3e51400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846001600160a01b03163b600003616160576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602401611408565b6040517ff242432a0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b1580156161e057600080fd5b505af11580156161f4573d6000803e3d6000fd5b505050505050505050565b616208836160d7565b6162128183615e12565b8161622857616223868686866169e5565b613327565b6133278282600189898960008a615ef1565b805161624590616bf0565b6001600160a01b0316634ce34aa282602001516040518263ffffffff1660e01b815260040161627491906188d7565b6020604051808303816000875af1158015616293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906162b791906184d7565b506060602090910152565b6040805160a0810182526000808252602080830182905282840182905260608084018390526080840183905284519081018552828152908101829052928301529083838151811061631557616315617e43565b6020908102919091010151518152835184908490811061633757616337617e43565b60209081029190910181015181015190820152845181511015604082018190526165705760008582600001518151811061637357616373617e43565b602002602001015190508160400151806163965750806040015151826020015110155b15156040830181905261656e57600081604001518360200151815181106163bf576163bf617e43565b602002602001015190506040518060a00160405280826000015160058111156163ea576163ea617669565b815260200182602001516001600160a01b03168152602001826040015181526020018260600151815260200182608001516001600160a01b03168152509350600081606001818152505060008560016164439190618350565b90505b865181101561656b5786818151811061646157616461617e43565b6020908102919091010151518452865187908290811061648357616483617e43565b602090810291909101810151810151908501528751845110156040850181905261656b57878460000151815181106164bd576164bd617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461655b57604080840151516020860151101590850181905261656b57826040015184602001518151811061651657616516617e43565b60200260200101519150816060015185606001516165349190618350565b60608087019190915260009083015261654d8286616d36565b15156040850181905261656b575b61656481617e29565b9050616446565b50505b505b8060400151156165ac576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509392505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e0830182905282526020820181905291810191909152600084848151811061660857616608617e43565b6020026020010151600001519050600085858151811061662a5761662a617e43565b60200260200101516020015190506000875183101590508061685157600088848151811061665a5761665a617e43565b60200260200101519050818061667557508060200151518310155b91508161684f5760008160200151848151811061669457616694617e43565b6020026020010151905060405180606001604052806040518060a00160405280846000015160058111156166ca576166ca617669565b815260200184602001516001600160a01b0316815260200184604001518152602001846060015181526020018a6001600160a01b0316815250815260200183600001516001600160a01b03168152602001836060015181525095506000816060018181525050600088600161673f9190618350565b90505b895181101561684c5789818151811061675d5761675d617e43565b602002602001015160000151955089818151811061677d5761677d617e43565b60200260200101516020015194508a5186101593508361684c578a86815181106167a9576167a9617e43565b6020026020010151925082608001516effffffffffffffffffffffffffffff1660001461683c5782602001515185101593508361684c57826020015185815181106167f6576167f6617e43565b6020026020010151915081606001518760000151606001516168189190618350565b8751606090810191909152600090830152616834838389616dbf565b93508361684c575b61684581617e29565b9050616742565b50505b505b8015616889576040517f7fda727900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050949350505050565b60408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208201819052918101829052906168df8686866162c2565b604080516060810182529182523360208301528101939093525090949350505050565b6040517f1626ba7e00000000000000000000000000000000000000000000000000000000808252906001600160a01b03851690631626ba7e9061694b908690869060040161895b565b602060405180830381865afa158015616968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061698c91906184d7565b7fffffffff000000000000000000000000000000000000000000000000000000001614614424576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836001600160a01b03163b600003616a34576040517f5f15d6720000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611408565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691616ac69190618974565b6000604051808303816000865af19150503d8060008114616b03576040519150601f19603f3d011682016040523d82523d6000602084013e616b08565b606091505b509150915081616b6d576040517ff486bc870000000000000000000000000000000000000000000000000000000081526001600160a01b038088166004830152808716602483015285166044820152600060648201526084810184905260a401611408565b805115801590616b7f57506020815110155b156133275780806020019051810190616b989190618986565b613327576040517f988919230000000000000000000000000000000000000000000000000000000081526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401611408565b6000616cd9826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f00000000000000000000000000000000000000000000000000000000000000006055820152600090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b9050806001600160a01b03163b600003616d31576040517f1cf99b26000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382166024820152604401611408565b919050565b600082608001516001600160a01b031682608001516001600160a01b0316141580616d85575082516005811115616d6f57616d6f617669565b82516005811115616d8257616d82617669565b14155b80616daa575082602001516001600160a01b031682602001516001600160a01b031614155b80610688575050604091820151910151141590565b60008260400151826000015160400151141580616df6575083600001516001600160a01b031682602001516001600160a01b031614155b80616e0957508360600151826040015114155b80616e39575082516005811115616e2257616e22617669565b8251516005811115616e3657616e36617669565b14155b80610a78575082602001516001600160a01b03168260000151602001516001600160a01b03161415949350505050565b6040518060a00160405280616e7c616e9d565b81526000602082018190526040820152606080820181905260809091015290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115616eea57616eea617669565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b60005b83811015616f35578181015183820152602001616f1d565b83811115612c175750506000910152565b60008151808452616f5e816020860160208601616f1a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106886020830184616f46565b600060208284031215616fb557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561700e5761700e616fbc565b60405290565b604051610160810167ffffffffffffffff8111828210171561700e5761700e616fbc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561707f5761707f616fbc565b604052919050565b600067ffffffffffffffff8211156170a1576170a1616fbc565b5060051b60200190565b6001600160a01b038116811461453157600080fd5b8035616d31816170ab565b803560068110616d3157600080fd5b600060a082840312156170ec57600080fd5b6170f4616feb565b90506170ff826170cb565b8152602082013561710f816170ab565b8060208301525060408201356040820152606082013560608201526080820135608082015292915050565b600082601f83011261714b57600080fd5b8135602061716061715b83617087565b617038565b82815260a0928302850182019282820191908785111561717f57600080fd5b8387015b858110156171a25761719589826170da565b8452928401928101617183565b5090979650505050505050565b600060c082840312156171c157600080fd5b60405160c0810181811067ffffffffffffffff821117156171e4576171e4616fbc565b6040529050806171f3836170cb565b81526020830135617203816170ab565b8060208301525060408301356040820152606083013560608201526080830135608082015260a0830135617236816170ab565b60a0919091015292915050565b600082601f83011261725457600080fd5b8135602061726461715b83617087565b82815260c0928302850182019282820191908785111561728357600080fd5b8387015b858110156171a25761729989826171af565b8452928401928101617287565b803560048110616d3157600080fd5b600061016082840312156172c857600080fd5b6172d0617014565b90506172db826170c0565b81526172e9602083016170c0565b6020820152604082013567ffffffffffffffff8082111561730957600080fd5b6173158583860161713a565b6040840152606084013591508082111561732e57600080fd5b5061733b84828501617243565b60608301525061734d608083016172a6565b608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b80356effffffffffffffffffffffffffffff81168114616d3157600080fd5b600082601f8301126173ca57600080fd5b813567ffffffffffffffff8111156173e4576173e4616fbc565b61741560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601617038565b81815284602083860101111561742a57600080fd5b816020850160208301376000918101602001919091529392505050565b600060a0828403121561745957600080fd5b617461616feb565b9050813567ffffffffffffffff8082111561747b57600080fd5b617487858386016172b5565b83526174956020850161739a565b60208401526174a66040850161739a565b604084015260608401359150808211156174bf57600080fd5b6174cb858386016173b9565b606084015260808401359150808211156174e457600080fd5b506174f1848285016173b9565b60808301525092915050565b600082601f83011261750e57600080fd5b8135602061751e61715b83617087565b82815260059290921b8401810191818101908684111561753d57600080fd5b8286015b8481101561757d57803567ffffffffffffffff8111156175615760008081fd5b61756f8986838b0101617447565b845250918301918301617541565b509695505050505050565b60008083601f84011261759a57600080fd5b50813567ffffffffffffffff8111156175b257600080fd5b6020830191508360208260051b85010111156175cd57600080fd5b9250929050565b6000806000806000606086880312156175ec57600080fd5b853567ffffffffffffffff8082111561760457600080fd5b61761089838a016174fd565b9650602088013591508082111561762657600080fd5b61763289838a01617588565b9096509450604088013591508082111561764b57600080fd5b5061765888828901617588565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106176a8576176a8617669565b9052565b6176b7828251617698565b60208101516001600160a01b038082166020850152604083015160408501526060830151606085015280608084015116608085015250505050565b600081518084526020808501945080840160005b8381101561774857815161771b8882516176ac565b808401516001600160a01b031660a08901526040015160c088015260e09096019590820190600101617706565b509495945050505050565b60208152600061068860208301846176f2565b60006020828403121561777857600080fd5b813567ffffffffffffffff81111561778f57600080fd5b8201610160818503121561068857600080fd5b60008060008060008060008060008060e08b8d0312156177c157600080fd5b8a3567ffffffffffffffff808211156177d957600080fd5b6177e58e838f016174fd565b9b5060208d01359150808211156177fb57600080fd5b6178078e838f01617588565b909b50995060408d013591508082111561782057600080fd5b61782c8e838f01617588565b909950975060608d013591508082111561784557600080fd5b506178528d828e01617588565b90965094505060808b0135925061786b60a08c016170c0565b915060c08b013590509295989b9194979a5092959850565b604080825283519082018190526000906020906060840190828701845b828110156178be5781511515845292840192908401906001016178a0565b505050838103828501526178d281866176f2565b9695505050505050565b600080602083850312156178ef57600080fd5b823567ffffffffffffffff81111561790657600080fd5b61791285828601617588565b90969095509350505050565b6000806000806040858703121561793457600080fd5b843567ffffffffffffffff8082111561794c57600080fd5b61795888838901617588565b9096509450602087013591508082111561797157600080fd5b5061797e87828801617588565b95989497509550505050565b6000806040838503121561799d57600080fd5b823567ffffffffffffffff8111156179b457600080fd5b8301604081860312156179c657600080fd5b946020939093013593505050565b6000806000806000608086880312156179ec57600080fd5b853567ffffffffffffffff80821115617a0457600080fd5b9087019060a0828a031215617a1857600080fd5b90955060208701359080821115617a2e57600080fd5b50617a3b88828901617588565b909550935050604086013591506060860135617a56816170ab565b809150509295509295909350565b60008060008060008060008060a0898b031215617a8057600080fd5b883567ffffffffffffffff80821115617a9857600080fd5b617aa48c838d01617588565b909a50985060208b0135915080821115617abd57600080fd5b617ac98c838d01617588565b909850965060408b0135915080821115617ae257600080fd5b50617aef8b828c01617588565b999c989b509699959896976060870135966080013595509350505050565b600060208284031215617b1f57600080fd5b8135610688816170ab565b606081526000617b3d6060830186616f46565b90508360208301526001600160a01b0383166040830152949350505050565b600060208284031215617b6e57600080fd5b813567ffffffffffffffff811115617b8557600080fd5b8201610240818503121561068857600080fd5b6000617ba661715b84617087565b83815260208082019190600586811b860136811115617bc457600080fd5b865b81811015617cc057803567ffffffffffffffff80821115617be75760008081fd5b818a01915060a08236031215617bfd5760008081fd5b617c05616feb565b823581528683013560028110617c1b5760008081fd5b81880152604083810135908201526060808401359082015260808084013583811115617c475760008081fd5b939093019236601f850112617c5e57600092508283fd5b83359250617c6e61715b84617087565b83815292871b84018801928881019036851115617c8b5760008081fd5b948901945b84861015617ca957853582529489019490890190617c90565b918301919091525088525050948301948301617bc6565b5092979650505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d0257600080fd5b83018035915067ffffffffffffffff821115617d1d57600080fd5b602001915060a0810236038213156175cd57600080fd5b600060a08284031215617d4657600080fd5b61068883836170da565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112617d8557600080fd5b83018035915067ffffffffffffffff821115617da057600080fd5b602001915060c0810236038213156175cd57600080fd5b600060c08284031215617dc957600080fd5b61068883836171af565b600060208284031215617de557600080fd5b610688826172a6565b600061059c3683617447565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203617e3c57617e3c617dfa565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815160009082906020808601845b83811015617e9c57815185529382019390820190600101617e80565b50929695505050505050565b6004811061453157614531617669565b6176a881617ea8565b8c81526001600160a01b038c811660208301528b166040820152606081018a9052608081018990526101808101617ef789617ea8565b60a082019890985260c081019690965260e08601949094526101008501929092526101208401526101408301526101609091015295945050505050565b600060408284031215617f4657600080fd5b6040516040810181811067ffffffffffffffff82111715617f6957617f69616fbc565b604052823581526020928301359281019290925250919050565b6000617f9161715b84617087565b80848252602080830192508560051b850136811115617faf57600080fd5b855b8181101561804a57803567ffffffffffffffff811115617fd15760008081fd5b870136601f820112617fe35760008081fd5b8035617ff161715b82617087565b81815260069190911b820185019085810190368311156180115760008081fd5b928601925b8284101561803a576180283685617f34565b82528682019150604084019350618016565b8852505050938201938201617fb1565b50919695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261808a57600080fd5b9190910192915050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261808a57600080fd5b600061059c36836172b5565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261810957600080fd5b83018035915067ffffffffffffffff82111561812457600080fd5b6020019150368190038213156175cd57600080fd5b600081518084526020808501945080840160005b83811015617748576181608783516176ac565b60a096909601959082019060010161814d565b6000608080830187845260206001600160a01b03808916828701526040848188015283895180865260a089019150848b01955060005b818110156181ea5786516181be848251617698565b8087015186168488015284810151858501526060908101519084015295850195918701916001016181a9565b505087810360608901526181fe818a618139565b9c9b505050505050505050505050565b60006020828403121561822057600080fd5b81356018811061068857600080fd5b60008161823e5761823e617dfa565b506000190190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261827b57600080fd5b83018035915067ffffffffffffffff82111561829657600080fd5b6020019150600681901b36038213156175cd57600080fd5b6000828210156182c0576182c0617dfa565b500390565b86815260c081016182d96020830188617698565b6001600160a01b03861660408301528460608301528360808301528260a0830152979650505050505050565b87815260e081016183196020830189617698565b6001600160a01b0380881660408401528660608401528560808401528460a084015280841660c08401525098975050505050505050565b6000821982111561836357618363617dfa565b500190565b600081600019048311821515161561838257618382617dfa565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826183c5576183c5618387565b500490565b6000604082840312156183dc57600080fd5b6040516040810181811067ffffffffffffffff821117156183ff576183ff616fbc565b604052823581526020830135618414816170ab565b60208201529392505050565b60008183825b6001811015618445578151835260209283019290910190600101618426565b50505060208201905092915050565b60006040828403121561846657600080fd5b6106888383617f34565b600281106176a8576176a8617669565b6020810161059c8284618470565b600080604083850312156184a157600080fd5b505080516020909101519092909150565b600060ff821660ff84168060ff038211156184cf576184cf617dfa565b019392505050565b6000602082840312156184e957600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461068857600080fd5b600081518084526020808501945080840160005b83811015617748578151618542888251617698565b808401516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a0909601959082019060010161852d565b600081518084526020808501945080840160005b838110156177485781516185ac888251617698565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101618597565b600081518084526020808501945080840160005b838110156177485781518752958201959082019060010161860e565b600081518084526020808501808196508360051b8101915082860160005b858110156186ae578284038952815160a0815186528682015161866d88880182618470565b50604082810151908701526060808301519087015260809182015191860181905261869a818701836185fa565b9a87019a9550505090840190600101618648565b5091979650505050505050565b8581526001600160a01b038516602082015260a060408201526000610140855160a0808501526186f682850182516001600160a01b03169052565b6020810151610160618712818701836001600160a01b03169052565b60408301519150806101808701525061872f6102a0860182618519565b905060608201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0868303016101a087015261876b8282618583565b91505060808201516187816101c0870182617eb8565b5060a08201516101e086015260c082015161020086015260e082015161022086015261010080830151610240870152610120808401516102608801528484015161028088015260208a015194506187eb60c08801866effffffffffffffffffffffffffffff169052565b60408a01516effffffffffffffffffffffffffffff1660e088015260608a01518784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60908101848a015290955093506188458386616f46565b945060808a0151925083878603018188015250506188638382616f46565b92505050828103606084015261887981866185fa565b9050828103608084015261888d818561862a565b98975050505050505050565b6000826188a8576188a8618387565b500690565b600080858511156188bd57600080fd5b838611156188ca57600080fd5b5050820193919092039150565b602080825282518282018190526000919060409081850190868401855b828110156186ae578151805161890981617ea8565b8552808701516001600160a01b039081168887015286820151811687870152606080830151909116908601526080808201519086015260a0908101519085015260c090930192908501906001016188f4565b828152604060208201526000610a786040830184616f46565b6000825161808a818460208701616f1a565b60006020828403121561899857600080fd5b8151801515811461068857600080fdfea2646970667358221220cbc51d9cffe7cabe81a1394eca32dcc4180325bc051f164e795f8fa9f890481a64736f6c634300080e0033",
    "sourceMap": "1299:27859:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28961:195;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27447:354;;;;;;;;;;-1:-1:-1;27447:354:68;;;;;:::i;:::-;27567:16;17198:23:83;;;:12;:23;;;;;17303;;;;;;;17340;;;;;;17377:21;;;;;;;17412:23;;;;;;27447:354:68;;;;;1253:14:106;;1246:22;1228:41;;1312:14;;1305:22;1300:2;1285:18;;1278:50;1344:18;;;1337:34;1402:2;1387:18;;1380:34;1215:3;1200:19;27447:354:68;1009:411:106;23289:570:68;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25395:234::-;;;;;;;;;;;;;:::i;:::-;;;13795:25:106;;;13783:2;13768:18;25395:234:68;13649:177:106;25813:747:68;;;;;;;;;;-1:-1:-1;25813:747:68;;;;;:::i;:::-;;:::i;17619:1186::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;24921:211::-;;;;;;;;;;-1:-1:-1;24921:211:68;;;;;:::i;:::-;;:::i;:::-;;;17776:14:106;;17769:22;17751:41;;17739:2;17724:18;24921:211:68;17611:187:106;20304:554:68;;;;;;:::i;:::-;;:::i;5190:549::-;;;;;;:::i;:::-;;:::i;8424:595::-;;;;;;:::i;:::-;;:::i;12014:1239::-;;;;;;:::i;:::-;;:::i;27993:225::-;;;;;;;;;;-1:-1:-1;27993:225:68;;;;;:::i;:::-;;:::i;28523:303::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3530:315::-;;;;;;:::i;:::-;;:::i;24200:215::-;;;;;;;;;;-1:-1:-1;24200:215:68;;;;;:::i;:::-;;:::i;28961:195::-;29041:26;29142:7;7996:5:80;;;;;;;;;;;;;;;;;;7880:128;29142:7:68;29127:22;;28961:195;:::o;23289:570::-;23578:29;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;23721:131:68::2;23759:14:::0;23721:131:::2;23791:17:::0;;23721:131:::2;:::i;:::-;23826:12;;23721:20;:131::i;:::-;2345:1:30::1;933:16:84;:31:::0;23702:150:68;23289:570;-1:-1:-1;;;;;;23289:570:68:o;25395:234::-;25493:18;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;25603:19:68::1;:17;:19::i;25813:747::-:0;26127:389;;;;;;;;;25931:17;;26097:456;;26127:389;26160:13;;;;:5;:13;:::i;:::-;-1:-1:-1;;;;;26127:389:68;;;;;26191:5;:10;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26127:389:68;;;;;26219:11;;;;:5;:11;:::i;:::-;26127:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26127:389:68;;;-1:-1:-1;;26127:389:68;;26248:19;;;;:5;:19;:::i;:::-;26127:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;26127:389:68;;;-1:-1:-1;;26127:389:68;;26285:15;;;;;;;;:::i;:::-;26127:389;;;;;;;;:::i;:::-;;;;;26318:5;:15;;;26127:389;;;;26351:5;:13;;;26127:389;;;;26382:5;:14;;;26127:389;;;;26414:5;:10;;;26127:389;;;;26442:5;:16;;;26127:389;;;;26476:5;:19;;;;;;;;:::i;:::-;26127:389;;;-1:-1:-1;26530:13:68;;;;26097:16;:456::i;:::-;26085:468;25813:747;-1:-1:-1;;25813:747:68:o;17619:1186::-;18102:29;18133;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;;;18288:79:68::2;18339:14:::0;18288:33:::2;:79::i;:::-;18234:133;;18438:360;18487:14;18519:15;18552:17;;18438:360;;;;;:::i;:::-;18587:17:::0;;18622:25;;18665:19;-1:-1:-1;;;;;18702:23:68;::::2;::::0;:48:::2;;18741:9;18702:48;;;18728:10;18702:48;18768:16;18438:31;:360::i;:::-;2345:1:30::1;933:16:84;:31:::0;18419:379:68;;;;-1:-1:-1;17619:1186:68;-1:-1:-1;;;;;;;;;;;;17619:1186:68:o;24921:211::-;25034:14;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;25108:17:68::1;25118:6;;25108:9;:17::i;:::-;25096:29:::0;24921:211;-1:-1:-1;;;24921:211:68:o;20304:554::-;20516:29;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;20659:192:68::2;20697:32;20722:6:::0;;20697:24:::2;:32::i;:::-;20747:25;::::0;;20770:1:::2;20747:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20747:25:68::2;;;;;;;;;;;;;;;;;20825:12;;20659:20;:192::i;:::-;2345:1:30::1;933:16:84;:31:::0;20640:211:68;20304:554;-1:-1:-1;;;;;20304:554:68:o;5190:549::-;5370:14;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;5515:217:68::2;5561:30;5585:5:::0;5561:23:::2;:30::i;:::-;5605:25;::::0;;5628:1:::2;5605:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5605:25:68::2;;;;;;;;;;;;;;;;;5679:19;5712:10;5515:32;:217::i;:::-;2345:1:30::1;933:16:84;:31:::0;5503:229:68;5190:549;-1:-1:-1;;;5190:549:68:o;8424:595::-;8732:14;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;8817:195:68::2;;8863:13:::0;8817:195:::2;:::i;:::-;;8890:17:::0;;8817:195:::2;:::i;:::-;8921:19:::0;-1:-1:-1;;;;;8954:23:68;::::2;::::0;:48:::2;;8993:9;8817:32;:195::i;8954:48::-;8980:10;8817:32;:195::i;12014:1239::-:0;12393:29;12424;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;;;12557:54:68::2;12595:6:::0;;12557:24:::2;:54::i;:::-;12517:94;;12677:51;12731:79;12782:14;12731:33;:79::i;:::-;12677:133:::0;-1:-1:-1;12881:365:68::2;12930:14:::0;12677:133;13018:1:::2;12995:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12995:25:68::2;;;;;;;;;;;;;;;;;13073:17;;13108:25;;13151:19;13188:10;13216:16;12881:31;:365::i;:::-;2345:1:30::1;933:16:84;:31:::0;12862:384:68;;;;-1:-1:-1;12014:1239:68;-1:-1:-1;;;;;;;;;;;12014:1239:68:o;27993:225::-;-1:-1:-1;;;;;1720:18:76;;28094:15:68;1720:18:76;;;:9;:18;;;;;;28191:20:68;1524:221:76;28523:303:68;28623:21;28658:23;28695:25;28805:14;:12;:14::i;:::-;28798:21;;;;;;28523:303;;;:::o;3530:315::-;3706:14;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;2376:1:30::1;885:16:84;:27:::0;3797:41:68::2;3827:10:::0;3797:29:::2;:41::i;:::-;2345:1:30::1;933:16:84;:31:::0;3785:53:68;3530:315;-1:-1:-1;;3530:315:68:o;24200:215::-;24321:14;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;24393:15:68::1;24401:6;;24393:7;:15::i;33077:919:81:-:0;33276:29;33373:51;33427:79;33478:14;33427:33;:79::i;:::-;33373:133;;33598:257;33646:14;33674:15;33703:17;33734:4;33800:14;:21;33843:1;33598:34;:257::i;:::-;33936:53;33959:15;33976:12;;33936:22;:53::i;:::-;33929:60;;;33077:919;;;;;;;:::o;957:333:76:-;1039:18;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;1161:10:76::1;1151:21;::::0;;;:9:::1;:21;::::0;;;;1149:23;;1151:21;;;1149:23:::1;::::0;::::1;:::i;:::-;::::0;;;;-1:-1:-1;1241:42:76::1;::::0;13795:25:106;;;1149:23:76;;-1:-1:-1;1272:10:76::1;::::0;1241:42:::1;::::0;13783:2:106;13768:18;1241:42:76::1;;;;;;;957:333:::0;:::o;2957:1866:80:-;3085:17;3195:28;3253:15;:21;;;:28;3226:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3226:65:80;;3195:96;;3301:36;3367:15;:47;;;3340:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3340:84:80;;3301:123;;3489:9;3484:205;3508:15;:21;;;:28;3504:1;:32;3484:205;;;3638:40;3653:15;:21;;;3675:1;3653:24;;;;;;;;:::i;:::-;;;;;;;3638:14;:40::i;:::-;3621:11;3633:1;3621:14;;;;;;;;:::i;:::-;;;;;;;;;;:57;3538:3;;;:::i;:::-;;;3484:205;;;;3774:9;3756:332;3805:15;:47;;;3801:1;:51;3756:332;;;3991:86;4031:15;:29;;;4061:1;4031:32;;;;;;;;:::i;:::-;;;;;;;3991:22;:86::i;:::-;3966:19;3986:1;3966:22;;;;;;;;:::i;:::-;;;;;;;;;;:111;3866:3;;;:::i;:::-;;;3756:332;;;;4246:15;4283;:23;;;4328:15;:20;;;4397:11;4380:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;4370:40;;;;;;4459:19;4442:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;4432:48;;;;;;4502:15;:25;;;4549:15;:25;;;4596:15;:23;;;4641:15;:24;;;4687:15;:20;;;4729:15;:26;;;4777:7;4214:588;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4187:629;;;;;;4168:648;;;;2957:1866;;;;:::o;16150:731:82:-;16415:21;;16269:39;;16415:21;16536:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16536:33:82;;-1:-1:-1;;16536:33:82;;;;;;;;;;;;16518:51;;16627:9;16622:171;16646:11;16642:1;:15;16622:171;;;16740:42;16764:14;16779:1;16764:17;;;;;;;;:::i;:::-;;;;;;;16740:23;:42::i;:::-;16719:15;16735:1;16719:18;;;;;;;;:::i;:::-;;;;;;:63;;;;16659:3;;;;:::i;:::-;;;16622:171;;;;16852:22;16150:731;;;:::o;6655:1251:81:-;7113:29;7144;7269:256;7317:14;7345:15;7374:17;7405:5;7476:16;7506:9;7269:34;:256::i;:::-;7598:194;7641:15;7598:194;7670:17;;7598:194;:::i;:::-;;7701:25;;7598:194;:::i;:::-;7740:19;7773:9;7598:29;:194::i;:::-;7566:226;;;;-1:-1:-1;6655:1251:81;-1:-1:-1;;;;;;;;;;;6655:1251:81:o;14011:1951:83:-;14108:4;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;14178:31:83::1;::::0;;14369:6;14178:31;14429:1505:::1;14453:11;14449:1;:15;14429:1505;;;14520:20;14543:6;;14550:1;14543:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;14520:32:::0;-1:-1:-1;14613:40:83::1;14656:16;14520:32:::0;;14656:16:::1;:::i;:::-;14613:59:::0;-1:-1:-1;14751:23:83::1;;::::0;::::1;14613:59:::0;14751:23:::1;:::i;:::-;14741:33:::0;-1:-1:-1;14879:88:83::1;;14938:15:::0;14879:88:::1;:::i;:::-;:41;:88::i;:::-;15067:23;::::0;;;:12:::1;:23;::::0;;;;;-1:-1:-1;14867:100:83;;-1:-1:-1;15177:234:83::1;::::0;14867:100;;15067:23;;15345:4:::1;15177:18;:234::i;:::-;-1:-1:-1::0;15493:23:83;;::::1;;15488:436;;15586:53;15603:7:::0;15612:9;15623:15:::1;;::::0;::::1;:5:::0;:15:::1;:::i;:::-;15586:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15586:16:83::1;::::0;-1:-1:-1;;;15586:53:83:i:1;:::-;15725:30:::0;;;::::1;15751:4;15725:30;::::0;;15888:20:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;15853:56:83::1;15879:7;-1:-1:-1::0;;;;;15853:56:83::1;;15868:9;15853:56;;;;13795:25:106::0;;13783:2;13768:18;;13649:177;15853:56:83::1;;;;;;;;15488:436;14471:1463;;14466:3;;;;:::i;:::-;;;14429:1505;;;-1:-1:-1::0;15951:4:83::1;::::0;14011:1951;-1:-1:-1;;;;;;;14011:1951:83:o;12398:736:82:-;12504:37;12654:6;;12765:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12748:49;;12855:9;12850:198;12874:11;12870:1;:15;12850:198;;;13003:34;13027:6;;13034:1;13027:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;13003:23;:34::i;:::-;12983:14;12998:1;12983:17;;;;;;;;:::i;:::-;;;;;;:54;;;;12887:3;;;;:::i;:::-;;;12850:198;;;;13106:21;12398:736;;;;:::o;11730:380::-;11832:34;;:::i;:::-;11975:128;;;;;;;;;;12002:16;:5;;:16;:::i;:::-;11975:128;;;:::i;:::-;;;;;12032:1;11975:128;;;;;;12047:1;11975:128;;;;;;12062:5;:15;;;;;;;;:::i;:::-;11975:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11975:128:82;;;-1:-1:-1;;11975:128:82;;;;;;;;;;;;;;;;;-1:-1:-1;11959:144:82;11730:380;-1:-1:-1;;11730:380:82:o;3172:1664::-;3399:4;3483:33;3615:17;3646:21;3681:23;3717:165;3764:13;3795:17;3830:4;3852:16;3717:29;:165::i;:::-;3601:281;;;;;;3972:65;4004:13;4019:17;3972:31;:65::i;:::-;4165:24;;4124:38;4317:181;4165:24;4390:13;4417:15;4446:19;4479:9;4317:30;:181::i;:::-;4278:220;;4673:15;:20;;;-1:-1:-1;;;;;4585:222:82;4636:15;:23;;;-1:-1:-1;;;;;4585:222:82;;4613:9;4707;4730:14;:25;;;4769:14;:28;;;4585:222;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;4825:4:82;;3172:1664;-1:-1:-1;;;;;;;;;;3172:1664:82:o;7423:335:80:-;7639:8;;;;;;;;;;;;;;;;;7542:23;;7675:18;:16;:18::i;:::-;7423:335;;7731:19;;-1:-1:-1;7423:335:80;-1:-1:-1;7423:335:80:o;10202:9637:73:-;10315:4;;;10482:25;;;;;;;;:::i;:::-;10455:52;;10529:17;:28;10547:9;10529:28;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10529:28:73;;;;;;;-1:-1:-1;;;;10711:25:73;;;;10529:28;10711:25;;;:::i;:::-;10684:52;;10762:22;:33;10785:9;10762:33;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;10762:33:73;;;;;;;-1:-1:-1;;;;10961:5:73;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;11028:34:73;11019:5;:43;;;;;;;;:::i;:::-;;10961:101;10944:276;;;-1:-1:-1;11118:15:73;10944:276;;;-1:-1:-1;11195:14:73;10944:276;11310:9;:14;:65;;;;-1:-1:-1;11360:15:73;11328:28;:47;;;;;;;;:::i;:::-;;11310:65;11306:129;;;11398:26;;;;;11414:9;11398:26;;;13795:25:106;13768:18;;11398:26:73;;;;;;;;11306:129;11525:9;:14;;;;:64;;-1:-1:-1;11575:14:73;11543:28;:46;;;;;;;;:::i;:::-;;11525:64;11521:128;;;11612:26;;;;;11628:9;11612:26;;;13795:25:106;13768:18;;11612:26:73;13649:177:106;11521:128:73;11734:33;11803:35;11794:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;11863:36:73;11854:5;:45;;;;;;;;:::i;:::-;;11794:105;11777:295;;;11952:21;;;;;;;;:::i;:::-;11924:49;;11777:295;;;12032:29;;;;:10;:29;:::i;:::-;12004:57;;11777:295;12137:25;;12189:5;:42;;;;;;;;:::i;:::-;;:101;;;-1:-1:-1;12256:34:73;12247:5;:43;;;;;;;;:::i;:::-;;12189:101;12172:566;;;-1:-1:-1;12334:15:73;12172:566;;;12392:35;12383:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12452:36:73;12443:5;:45;;;;;;;;:::i;:::-;;12383:105;12366:372;;;-1:-1:-1;12532:14:73;12366:372;;;12576:35;12567:5;:44;;;;;;;;:::i;:::-;;12563:175;;-1:-1:-1;12646:15:73;12563:175;;;-1:-1:-1;12711:16:73;12563:175;12805:24;12865:35;12856:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;12925:36:73;12916:5;:45;;;;;;;;:::i;:::-;;12856:105;12839:449;;;-1:-1:-1;13004:14:73;12839:449;;;13061:33;13052:5;:42;;;;;;;;:::i;:::-;;:102;;;-1:-1:-1;13119:35:73;13110:5;:44;;;;;;;;:::i;:::-;;13052:102;13035:253;;;-1:-1:-1;13197:15:73;13035:253;;;-1:-1:-1;13261:16:73;13035:253;13375:221;13413:10;13437:9;13460:16;13490:28;13532:25;13571:15;13375:24;:221::i;:::-;13669:23;13695:18;;;;;;;;:::i;:::-;13669:44;-1:-1:-1;13793:18:73;13847:35;13838:5;:44;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;13907:36:73;13898:5;:45;;;;;;;;:::i;:::-;;13838:105;13821:273;;;-1:-1:-1;13981:30:73;;;;13821:273;;;-1:-1:-1;14055:28:73;;;;13821:273;14180:33;14171:5;:42;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;14242:34:73;14233:5;:43;;;;;;;;:::i;:::-;;14171:105;14170:245;;;;-1:-1:-1;14359:34:73;;;;;;14306:29;;14359:10;14306:29;:::i;:::-;-1:-1:-1;;;;;14298:95:73;;14297:118;;14170:245;14169:435;;;-1:-1:-1;14443:35:73;14434:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14507:36:73;14498:5;:45;;;;;;;;:::i;:::-;;14434:109;14433:170;;;;-1:-1:-1;14564:34:73;;;;:39;;14433:170;14169:615;;;-1:-1:-1;14631:35:73;14622:5;:44;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;14695:36:73;14686:5;:45;;;;;;;;:::i;:::-;;14622:109;14621:162;;;;-1:-1:-1;14752:26:73;;;;:31;;14621:162;14152:697;;;14816:22;;;;;;;;;;;;;;14152:697;-1:-1:-1;;;;;;;;;;;;;;;;;15119:33:73;15110:5;:42;;;;;;;;:::i;:::-;;15106:4580;;15248:268;15281:21;;;;;;;;:::i;:::-;15320:7;15345:10;15373;:26;;;15417:10;:22;;;15457:10;15485:17;15248:15;:268::i;:::-;15612:67;15636:10;:30;;;15668:10;15612:23;:67::i;:::-;15106:4580;;;15709:34;15700:5;:43;;;;;;;;:::i;:::-;;15696:3990;;15840:269;15874:21;;;;;;;;:::i;:::-;15913:7;15938:10;15966;:26;;;16010:10;:22;;;16050:10;16078:17;15840:16;:269::i;15696:3990::-;16302:35;16293:5;:44;;;;;;;;:::i;:::-;;16289:3397;;16433:268;16466:21;;;;;;;;:::i;16433:268::-;16784:331;16827:10;16855:7;16880:29;;;;:10;:29;:::i;:::-;16927:10;:30;;;16975:10;17003:5;17084:17;16784:25;:331::i;16289:3397::-;17145:36;17136:5;:45;;;;;;;;:::i;:::-;;17132:2554;;17278:269;17312:21;;;;;;;;:::i;17132:2554::-;17991:35;17982:5;:44;;;;;;;;:::i;:::-;;17978:1708;;18122:292;18155:29;;;;:10;:29;:::i;:::-;18202:10;18230:7;18255:10;:34;;;18307:10;:30;;;18355:10;18383:17;18122:15;:292::i;:::-;18497:314;18540:7;18565:10;18593;:21;;;;;;;;;;:::i;:::-;18632:10;:22;;;18672:10;18700:4;18780:17;18497:25;:314::i;17978:1708::-;18985:293;19019:29;;;;:10;:29;:::i;:::-;19066:10;19094:7;19119:10;:34;;;19171:10;:30;;;19219:10;19247:17;18985:16;:293::i;:::-;19361:314;19404:7;19429:10;19457;:21;;;;;;;;;;:::i;19361:314::-;19776:34;19792:17;19776:15;:34::i;:::-;-1:-1:-1;19828:4:73;;10202:9637;-1:-1:-1;;;;;;;;;;10202:9637:73:o;11629:1882:83:-;11734:4;2376:1:30;1161:16:84;;:28;1157:84;;1212:18;;;;;;;;;;;;;;1157:84;11804:31:83::1;::::0;;11990:6;11804:31;12050:1434:::1;12074:11;12070:1;:15;12050:1434;;;12141:30;12174:6;;12181:1;12174:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12141:42:::0;-1:-1:-1;12208:13:83::1;;::::0;::::1;12141:42:::0;12208:13:::1;:::i;:::-;12198:23:::0;-1:-1:-1;12242:10:83::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;12235:17:::0;-1:-1:-1;12340:10:83::1;-1:-1:-1::0;;;;;12340:21:83;::::1;;::::0;::::1;::::0;:43:::1;;-1:-1:-1::0;12365:10:83::1;-1:-1:-1::0;;;;;12365:18:83;::::1;;;12340:43;12336:107;;;12410:18;;;;;;;;;;;;;;12336:107;12534:17;12554:504;12588:425;;;;;;;;12625:7;-1:-1:-1::0;;;;;12588:425:83::1;;;;;12654:4;-1:-1:-1::0;;;;;12588:425:83::1;;;;;12680:5;:11;;;;;;;;:::i;:::-;12588:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;12588:425:83;;;-1:-1:-1;;12588:425:83::1;;12713:19;;::::0;::::1;:5:::0;:19:::1;:::i;:::-;12588:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;12554:504;13158:23;::::0;;;:12:::1;:23;::::0;;;;;;13263:31;;13308:30;;13263:31:::1;13308:30;::::0;;13433:40;;13158:23;;-1:-1:-1;12534:524:83;;-1:-1:-1;;;;;;13433:40:83;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;12534:524;13795:25:106;;13783:2;13768:18;;13649:177;13433:40:83::1;;;;;;;;12092:1392;;12087:3;;;;:::i;:::-;;;12050:1434;;9358:8431:81::0;9752:21;;9730:19;9752:21;9879:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9879:26:81;-1:-1:-1;9848:57:81;-1:-1:-1;9963:15:81;9981:7;;:68;:7;10004:45;9981:68;;;;:132;;-1:-1:-1;10065:7:81;;:48;:7;10076:37;10065:48;;9981:132;9963:150;-1:-1:-1;10123:24:81;;10194:6168;10218:11;10214:1;:15;10194:6168;;;10293:34;10330:14;10345:1;10330:17;;;;;;;;:::i;:::-;;;;;;;10293:54;;10407:36;10446:15;10462:1;10446:18;;;;;;;;:::i;:::-;;;;;;;10407:57;;10558:16;10578:1;10558:21;10554:383;;10702:1;10676:23;;;;:27;;;10799:24;;:28;10914:8;;10554:383;11044:17;11079;11114:19;11150:191;11201:13;11236:17;11275:15;11312:11;11150:29;:191::i;:::-;11026:315;;;;;;11437:9;11450:1;11437:14;11433:376;;-1:-1:-1;;11574:1:81;11548:23;;;;:27;;;-1:-1:-1;11671:24:81;;:28;11786:8;;11433:376;11900:9;11883:11;11895:1;11883:14;;;;;;;;:::i;:::-;;;;;;;;;;:26;11981:18;;;;:::i;:::-;12098:24;;:34;;;;12222:32;;;;12368:30;;;;;11981:18;;-1:-1:-1;12098:34:81;-1:-1:-1;12222:32:81;12078:17;12471:1741;12495:5;:12;12491:1;:16;12471:1741;;;12576:26;12605:5;12611:1;12605:8;;;;;;;;:::i;:::-;;;;;;;12576:37;;12674:19;:80;;;-1:-1:-1;12739:15:81;12717:18;;:37;;;;;;;;:::i;:::-;;12674:80;12632:122;;12844:17;12864:135;12898:9;12929:11;12962:9;:19;;;12864:12;:135::i;:::-;12844:155;;13122:9;:19;;;13097:9;:21;;;:44;13093:499;;13239:21;;;:33;;;13093:499;;;13420:153;13458:9;13493:11;13530:9;:21;;;13420:12;:153::i;:::-;13396:21;;;:177;13093:499;13686:19;;;:31;;;13873:21;;;;13831:224;;13708:9;13957;13988:7;14017:5;13831:20;:224::i;:::-;13807:21;;;:248;;;14138:25;;;;:28;;14164:1;;14138:28;;;;;;:::i;:::-;;;;;;;:35;;:59;;;;;12514:1698;;12509:3;;;;:::i;:::-;;;12471:1741;;;-1:-1:-1;14363:24:81;;:38;;;14302:40;14496:1856;14520:13;:20;14516:1;:24;14496:1856;;;14617:42;14663:13;14677:1;14663:16;;;;;;;;:::i;:::-;;;;;;;14617:63;;14767:17;14787:143;14821:9;14852:11;14885:17;:27;;;14787:12;:143::i;:::-;14767:163;;15082:17;:27;;;15049:17;:29;;;:60;15024:574;;15224:29;;;:41;;;15024:574;;;15418:161;15456:9;15491:11;15528:17;:29;;;15418:12;:161::i;:::-;15386:29;;;:193;15024:574;15692:27;;;:39;;;15927:29;;;;15881:261;;15722:9;16035;16070:7;16103:4;15881:20;:261::i;:::-;15827:29;;;:333;;;16246:28;;;;:31;;16275:1;;16246:31;;;;;;:::i;:::-;;;;;;;:38;;:91;;;;;14547:1805;;14542:3;;;;:::i;:::-;;;14496:1856;;;;10236:6126;;;;;;;;;10194:6168;10231:3;;;:::i;:::-;;;10194:6168;;;;16376:19;:33;;;;;16399:10;16376:33;16372:95;;;16432:24;;;;;;;;;;;;;;16372:95;16542:59;16566:15;16583:17;16542:23;:59::i;:::-;16732:9;16727:1056;16751:11;16747:1;:15;16727:1056;;;16878:1;16870:10;;16852:11;16864:1;16852:14;;;;;;;;:::i;:::-;;;;;;;:28;16848:75;16900:8;16848:75;16999:38;17058:14;17073:1;17058:17;;;;;;;;:::i;:::-;;;;;;;:28;;;16999:101;;17190:29;17222:15;17238:1;17222:18;;;;;;;;:::i;:::-;;;;;;;:29;;;17190:61;;17365:35;17403:15;17419:1;17403:18;;;;;;;;:::i;:::-;;;;;;;:49;;;17365:87;;17652:15;:20;;;-1:-1:-1;;;;;17547:225:81;17611:15;:23;;;-1:-1:-1;;;;;17547:225:81;;17579:11;17591:1;17579:14;;;;;;;;:::i;:::-;;;;;;;17690:9;17717:10;17745:13;17547:225;;;;;;;;;:::i;:::-;;;;;;;;16769:1014;;;16727:1056;16764:3;;;:::i;:::-;;;16727:1056;;;;9657:8132;;;;9358:8431;;;;;;:::o;34935:2213::-;35085:29;35224:12;;35347:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35347:34:81;;-1:-1:-1;;35347:34:81;;;;;;;;;;;;35334:47;;35440:31;35533:9;35528:873;35552:17;35548:1;:21;35528:873;;;35644:32;35679:12;;35692:1;35679:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;35644:50;-1:-1:-1;35781:26:81;35810:162;35845:15;35878:27;35644:50;;35878:27;:::i;:::-;35923:35;;;;:11;:35;:::i;:::-;35810:17;:162::i;:::-;35781:191;;36092:9;:17;;;-1:-1:-1;;;;;36064:45:81;:9;:14;;;:24;;;-1:-1:-1;;;;;36064:45:81;;36060:331;;36185:25;;;:::i;:::-;;;36060:331;;;36367:9;36325:10;36336:27;36340:23;36336:1;:27;:::i;:::-;36325:39;;;;;;;;:::i;:::-;;;;;;:51;;;;36060:331;35576:825;;35571:3;;;;:::i;:::-;;;35528:873;;;-1:-1:-1;36477:28:81;;36473:484;;36521:23;36547:59;36583:23;36547:17;:59;:::i;:::-;36521:85;;36620:37;36693:15;36660:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36660:62:81;;-1:-1:-1;;36660:62:81;;;;;;;;;;;;36620:102;;36790:9;36785:116;36809:15;36805:1;:19;36785:116;;;36873:10;36884:1;36873:13;;;;;;;;:::i;:::-;;;;;;;36849:18;36868:1;36849:21;;;;;;;;:::i;:::-;;;;;;:37;;;;36826:3;;;;:::i;:::-;;;36785:116;;;-1:-1:-1;36928:18:81;-1:-1:-1;;36473:484:81;37019:64;37055:15;37072:10;37019:35;:64::i;:::-;;37124:17;;34935:2213;;;;;:::o;1203:472:80:-;1302:7;1403:20;1445:9;:18;;;1485:9;:15;;;1522:9;:30;;;1574:9;:21;;;1617:9;:19;;;1371:283;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1344:324;;;;;;1325:343;;1203:472;;;:::o;1900:593::-;2023:7;2124:28;2174:17;:26;;;2222:17;:23;;;2267:17;:38;;;2327:17;:29;;;2378:17;:27;;;2427:17;:27;;;2092:380;;;;;;;;;;;;;;:::i;13405:2472:82:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13648:24:82;;:30;;;13806:12;;13621:24;;13790:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13790:29:82;;-1:-1:-1;;13790:29:82;;;;;;;;;;;;13758:61;;13889:9;13884:519;13908:5;:12;13904:1;:16;13884:519;;;13981:26;14010:5;14016:1;14010:8;;;;;;;;:::i;:::-;;;;;;;13981:37;;14101:26;14130:179;;;;;;;;14157:9;:18;;;14130:179;;;;;;;;:::i;:::-;;;;;14193:9;:15;;;-1:-1:-1;;;;;14130:179:82;;;;;14226:9;:30;;;14130:179;;;;14274:9;:21;;;14130:179;;;14101:208;;14383:9;14367:10;14378:1;14367:13;;;;;;;;:::i;:::-;;;;;;:25;;;;13927:476;;13922:3;;;;:::i;:::-;;;13884:519;;;-1:-1:-1;14512:37:82;;:64;;;14737:20;;14469:40;;14705:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14705:62:82;;-1:-1:-1;;14705:62:82;;;;;;;;;;;;14667:100;;14845:9;14840:667;14864:13;:20;14860:1;:24;14840:667;;;14953:42;14999:13;15013:1;14999:16;;;;;;;;:::i;:::-;;;;;;;14953:63;;15110:32;15145:259;;;;;;;;15175:17;:26;;;15145:259;;;;;;;;:::i;:::-;;;;;15219:17;:23;;;-1:-1:-1;;;;;15145:259:82;;;;;15260:17;:38;;;15145:259;;;;15316:17;:29;;;15145:259;;;;15363:17;:27;;;-1:-1:-1;;;;;15145:259:82;;;;15110:294;;15484:12;15465:13;15479:1;15465:16;;;;;;;;:::i;:::-;;;;;;:31;;;;14891:616;;14886:3;;;;:::i;:::-;;;14840:667;;;-1:-1:-1;15603:207:82;;;;;;;;15631:24;;:32;-1:-1:-1;;;;;15603:207:82;;;;;;;;;;;;;;;;;;15728:24;;:35;;;15603:207;;;;15777:23;;;;;15603:207;;;;;;;13405:2472;-1:-1:-1;;;13405:2472:82:o;21636:4575:81:-;22142:24;;22313:32;;21954:29;;;;22487:55;22313:32;22142:24;22487:55;:::i;:::-;22458:94;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22458:94:81;;-1:-1:-1;;22458:94:81;;;;;;;;;;;;22445:107;;22611:31;22710:9;22705:937;22729:22;22725:1;:26;22705:937;;;22843:40;22887:17;22905:1;22887:20;;;;;;;;:::i;:::-;;;;;;;22843:65;;22998:26;23027:186;23064:15;23097:10;23125;23153:19;23190:9;23027:19;:186::i;:::-;22998:215;;23333:9;:17;;;-1:-1:-1;;;;;23305:45:81;:9;:14;;;:24;;;-1:-1:-1;;;;;23305:45:81;;23301:331;;23426:25;;;:::i;:::-;;;23301:331;;;23608:9;23566:10;23577:27;23581:23;23577:1;:27;:::i;:::-;23566:39;;;;;;;;:::i;:::-;;;;;;:51;;;;23301:331;22758:884;;22753:3;;;;:::i;:::-;;;22705:937;;;;23713:9;23708:1068;23732:30;23728:1;:34;23708:1068;;;23858:40;23919:25;23945:1;23919:28;;;;;;;;:::i;:::-;;;;;;;23858:103;;24051:26;24080:204;24117:15;24150:18;24186:10;24214:19;24251:9;24080:19;:204::i;:::-;24051:233;;24404:9;:17;;;-1:-1:-1;;;;;24376:45:81;:9;:14;;;:24;;;-1:-1:-1;;;;;24376:45:81;;24372:394;;24497:25;;;:::i;:::-;;;24372:394;;;24742:9;24637:10;24698:23;24669:26;24673:22;24669:1;:26;:::i;:::-;:52;;;;:::i;:::-;24637:102;;;;;;;;:::i;:::-;;;;;;:114;;;;24372:394;23769:1007;;23764:3;;;;:::i;:::-;;;23708:1068;;;-1:-1:-1;24852:28:81;;24848:960;;25182:23;25284;25209:71;25250:30;25209:22;:71;:::i;:::-;25208:99;;;;:::i;:::-;25182:125;;25390:37;25463:15;25430:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25430:62:81;;-1:-1:-1;;25430:62:81;;;;;;;;;;;;25390:102;;25573:9;25568:116;25592:15;25588:1;:19;25568:116;;;25656:10;25667:1;25656:13;;;;;;;;:::i;:::-;;;;;;;25632:18;25651:1;25632:21;;;;;;;;:::i;:::-;;;;;;:37;;;;25609:3;;;;:::i;:::-;;;25568:116;;;-1:-1:-1;25779:18:81;-1:-1:-1;;24848:960:81;25867:10;:17;25888:1;25867:22;25863:88;;25912:28;;;;;;;;;;;;;;25863:88;26059:98;26108:15;26137:10;26059:35;:98::i;:::-;26041:116;;26168:36;;;21636:4575;;;;;;;;:::o;1695:639:72:-;1823:17;1933:187;2013:15;:29;;;:36;2063:15;:47;;;1933:66;:187::i;:::-;2293:23;;-1:-1:-1;;;;;1720:18:76;2293:23:72;1720:18:76;;;:9;:18;;;;;;2222:105:72;;2252:15;;2222:16;:105::i;4096:1588:87:-;4364:23;;4281:10;;4364:23;;;;;4360:301;;;4480:15;4476:88;;;4522:27;;;;;;;;13795:25:106;;;13768:18;;4522:27:87;13649:177:106;4476:88:87;-1:-1:-1;4645:5:87;4638:12;;4360:301;4774:21;;;;;;;4860:25;;4856:746;;4985:15;4981:611;;;5107:31;;;;;;;;13795:25:106;;;13768:18;;5107:31:87;13649:177:106;4981:611:87;5265:23;;;;;;;5241:47;;5237:355;;5389:15;5385:98;;;5435:29;;;;;;;;13795:25:106;;;13768:18;;5435:29:87;13649:177:106;5385:98:87;5572:5;5565:12;;;;;5237:355;-1:-1:-1;5673:4:87;;4096:1588;-1:-1:-1;;;;;4096:1588:87:o;2743:569::-;2967:10;-1:-1:-1;;;;;2956:21:87;;;2952:58;;2743:569;;;:::o;2952:58::-;3100:14;3117:50;3137:18;:16;:18::i;:::-;3157:9;5296:60:80;;43655:16:106;5296:60:80;;;43639:102:106;43757:11;;;43750:27;;;43793:12;;;43786:28;;;5236:13:80;;43830:12:106;;5296:60:80;;;;;;;;;;;;5273:93;;;;;;5265:101;;5116:257;;;;;3117:50:87;3100:67;;3256:49;3278:7;3287:6;3295:9;3256:21;:49::i;:::-;2873:439;2743:569;;;:::o;4414:6288:83:-;4676:17;4707:20;4741:22;4838:38;4879:13;:24;;;4838:65;;5013:142;5042:15;:25;;;5085:15;:23;;;5126:15;5013:11;:142::i;:::-;4995:302;;-1:-1:-1;5277:1:83;;-1:-1:-1;5277:1:83;;-1:-1:-1;5277:1:83;;-1:-1:-1;5261:25:83;;4995:302;5413:23;;;;5477:25;;;;5405:32;;;;;5469:34;5591:23;;;;:41;;-1:-1:-1;5618:14:83;;5591:41;5587:92;;;5655:13;;;;;;;;;;;;;;5587:92;5799:11;5787:9;:23;:93;;;;;5826:54;5854:15;:25;;;5826:27;:54::i;:::-;5770:262;;;5989:32;;;;;;;;;;;;;;5770:262;6134:58;6176:15;6134:41;:58::i;:::-;6122:70;;6240:307;6292:13;6319:17;6350:16;6380:9;6403:15;:24;;;6441:15;:25;;;6480:15;:23;;;6517:15;:20;;;6240:38;:307::i;:::-;6625:31;6659:23;;;:12;:23;;;;;;6769:189;;6672:9;;6659:23;;6929:15;6769:18;:189::i;:::-;6751:348;;-1:-1:-1;7083:1:83;;-1:-1:-1;7083:1:83;;-1:-1:-1;7064:24:83;;-1:-1:-1;;;7064:24:83;6751:348;7195:23;;;;7190:194;;7234:139;7268:15;:23;;;7309:9;7336:13;:23;;;7234:16;:139::i;:::-;7509:21;;;;;;;;;7577:23;;;;7697:22;;7693:2871;;7820:11;7835:1;7820:16;7816:668;;7947:17;7935:29;;7996:17;7982:31;;7816:668;;;8149:11;8128:17;:32;8124:360;;8260:30;8279:11;8260:30;;:::i;:::-;;-1:-1:-1;8389:30:83;8402:17;8389:30;;:::i;:::-;;-1:-1:-1;8437:32:83;8452:17;8437:32;;:::i;:::-;;;8124:360;8613:11;8583:27;8601:9;8583:15;:27;:::i;:::-;:41;8579:197;;;8732:29;8746:15;8732:11;:29;:::i;:::-;8720:41;;8579:197;8858:28;8877:9;8858:28;;:::i;:::-;;-1:-1:-1;9004:17:83;8986:35;;;:86;;-1:-1:-1;9055:17:83;9041:31;;8986:86;8965:1005;;;9182:17;9202:145;9246:9;9277:52;9300:15;9317:11;9277:22;:52::i;:::-;9202:22;:145::i;:::-;9182:165;-1:-1:-1;9439:21:83;9463:14;;:30;;9484:9;9463:30;;;9480:1;9463:30;9439:54;-1:-1:-1;9584:25:83;9439:54;9584:9;:25;:::i;:::-;9572:37;-1:-1:-1;9645:31:83;9663:13;9645:15;:31;:::i;:::-;9627:49;-1:-1:-1;9708:27:83;9722:13;9708:11;:27;:::i;:::-;9694:41;-1:-1:-1;9815:19:83;9837:37;9857:17;-1:-1:-1;;9837:37:83;:::i;:::-;9815:59;-1:-1:-1;9928:25:83;9815:59;9928:11;:25;:::i;:::-;9894:29;9912:11;9894:15;:29;:::i;:::-;9893:61;;9087:883;;;8965:1005;10059:30;;10148:48;10210:46;;;;;;10148:48;;;;;;;;;;;;;10085:4;10148:48;10210:46;;;;7693:2871;;;10362:30;;10451:42;10507:46;;;;;;10451:42;;;;;;;;;;;;;10388:4;10451:42;10507:46;;;;7693:2871;-1:-1:-1;;10635:60:83;;;;;-1:-1:-1;;10635:60:83;;-1:-1:-1;;4414:6288:83;;;;;;;;;:::o;8608:5322:77:-;8871:24;;8998;;8851:17;9082:3731;9106:9;9102:1;:13;9082:3731;;;9183:40;9227:17;9245:1;9227:20;;;;;;;;:::i;:::-;;;;;;;;;;;9359:27;;9227:20;;-1:-1:-1;9405:15:77;;9401:94;;9447:33;;;;;;;;;;;;;;9401:94;9609:22;;;;9584;;;9851:16;:21;;;:35;;;;;;;;:::i;:::-;;9847:2360;;9992:15;:21;;;:28;9974:14;:46;9970:133;;10051:33;;;;;;;;;;;;;;9970:133;10196:22;10243:15;:21;;;10265:14;10243:37;;;;;;;;:::i;:::-;;;;;;;;;;;10405:14;;10460:26;;;;10405:14;;-1:-1:-1;10460:26:77;-1:-1:-1;10243:37:77;-1:-1:-1;10598:29:77;10586:8;:41;;;;;;;;:::i;:::-;;10582:200;;10668:15;10651:32;;10582:200;;;10747:16;10730:33;;10582:200;10905:27;;;;10876:26;;;;:56;9847:2360;;;11132:15;:29;;;:36;11114:14;:54;11110:149;;11199:41;;;;;;;;;;;;;;11110:149;11352:38;11415:15;:29;;;11445:14;11415:45;;;;;;;;:::i;:::-;;;;;;;;;;;11585:22;;11648:34;;;;11585:22;;-1:-1:-1;11648:34:77;-1:-1:-1;11415:45:77;-1:-1:-1;11794:29:77;11782:8;:41;;;;;;;;:::i;:::-;;11778:216;;11872:15;11847:40;;11778:216;;;11959:16;11934:41;;11778:216;12147:27;;;;12088:34;;;;:104;9847:2360;12298:29;12318:8;12298:19;:29::i;:::-;12293:103;;12354:27;;;;;;;;;;;;;;12293:103;12484:34;;12480:323;;12615:173;12649:16;:27;;;12698:20;12740:16;:30;;;12615:12;:173::i;:::-;9122:3691;;;;;9117:3;;;;:::i;:::-;;;9082:3731;;;-1:-1:-1;12971:24:77;;:38;;;:45;12949:18;13090:351;13114:10;13110:1;:14;13090:351;;;13234:109;13275:13;:24;;;:38;;;13314:1;13275:41;;;;;;;;:::i;:::-;;;;;;;:50;;;13234:19;:109::i;:::-;13213:218;;;13383:33;;;;;;;;;;;;;;13213:218;13126:3;;;:::i;:::-;;;13090:351;;;-1:-1:-1;;13525:24:77;;:30;;;:37;:24;13627:297;13651:10;13647:1;:14;13627:297;;;13771:63;13791:13;:24;;;:30;;;13822:1;13791:33;;;;;;;;:::i;13771:63::-;13750:164;;;13874:25;;;;;;;;;;;;;;13750:164;13663:3;;;:::i;:::-;;;13627:297;;;;8766:5164;;;8608:5322;;:::o;5994:5460:82:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6436:179:82;;;;;;;;;;;;;;;;;;;;;;;;;6543:25;;;;6436:179;;;;;;;;6582:23;;;;6436:179;;;;-1:-1:-1;;;;;;;;6401:32:82;-1:-1:-1;;;;;;6436:179:82;6780:23;;6878:26;;;;7036:21;;;;:28;7007:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7007:67:82;;-1:-1:-1;;7007:67:82;;;;;;;;;;;-1:-1:-1;6979:25:82;;;:95;7216:9;7211:1545;7235:15;:21;;;:28;7231:1;:32;7211:1545;;;7332:26;7361:15;:21;;;7383:1;7361:24;;;;;;;;:::i;:::-;;;;;;;7332:53;;7555:15;7533:37;;;;;;;;:::i;:::-;:18;;:37;;;;;;;;:::i;:::-;;7529:115;;7601:24;;;;;;;;;;;;;;7529:115;7742:14;7759:177;7795:9;:21;;;7838:9;:19;;;7879:12;7913:5;7759:14;:177::i;:::-;7742:194;;8025:32;8060:227;;;;;;;;8094:9;:18;;;8060:227;;;;;;;;:::i;:::-;;;;;8134:9;:15;;;-1:-1:-1;;;;;8060:227:82;;;;;8171:9;:30;;;8060:227;;;;8223:6;8060:227;;;;8259:9;-1:-1:-1;;;;;8060:227:82;;;;8025:262;;8404:183;;;;;;;;8435:12;:21;;;8404:183;;;;;;;;:::i;:::-;;;;;8478:12;:18;;;-1:-1:-1;;;;;8404:183:82;;;;;8518:12;:23;;;8404:183;;;;8563:6;8404:183;;;8373:14;:25;;;8399:1;8373:28;;;;;;;;:::i;:::-;;;;;;:214;;;;8678:63;8688:12;8702:7;8711:10;8723:17;8678:9;:63::i;:::-;7270:1486;;;7265:3;;;;:::i;:::-;;;7211:1545;;;;8906:15;:29;;;:36;8874:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8874:78:82;;-1:-1:-1;;8874:78:82;;;;;;;;;;;-1:-1:-1;8843:28:82;;;:109;9052:9;9027:22;9206:1833;9230:15;:29;;;:36;9226:1;:40;9206:1833;;;9343:42;9410:15;:29;;;9440:1;9410:32;;;;;;;;:::i;:::-;;;;;;;9343:117;;9560:14;9577:192;9613:17;:29;;;9664:17;:27;;;9713:12;9747:4;9577:14;:192::i;:::-;9560:209;;9845:32;9880:260;;;;;;;;9914:17;:26;;;9880:260;;;;;;;;:::i;:::-;;;;;9962:17;:23;;;-1:-1:-1;;;;;9880:260:82;;;;;10007:17;:38;;;9880:260;;;;10067:6;9880:260;;;;10095:17;:27;;;-1:-1:-1;;;;;9880:260:82;;;;9845:295;;10246:12;10212:14;:28;;;10241:1;10212:31;;;;;;;;:::i;:::-;;;;;;;;;;:46;10386:15;10361:21;;:40;;;;;;;;:::i;:::-;;10357:382;;10519:14;10510:6;:23;10506:112;;;10568:27;;;;;;;;;;;;;;10506:112;10696:24;10714:6;10696:24;;:::i;:::-;;;10357:382;10838:186;10869:12;10903:10;10935:12;:32;;;10989:17;10838:9;:186::i;:::-;9273:1766;;;9268:3;;;;:::i;:::-;;;9206:1833;;;;11139:34;11155:17;11139:15;:34::i;:::-;11242:19;;11238:139;;11317:49;11338:10;11351:14;11317:12;:49::i;:::-;11426:21;;;;;5994:5460;;;;;;;;:::o;6835:283:80:-;6886:7;6956:9;6939:13;:26;:172;;-1:-1:-1;4342:182:74;;;7035:24:80;4342:182:74;;;;53579:25:106;;;;7073:10:80;53620:18:106;;;53613:34;7097:13:80;53663:18:106;;;53656:34;4466:13:74;53706:18:106;;;53699:34;4505:4:74;53749:19:106;;;;53742:84;;;;4342:182:74;;;;;;;;;;53551:19:106;;;;4342:182:74;;;4319:215;;;;;;28961:195:68:o;6939:172:80:-;-1:-1:-1;6980:17:80;;6835:283::o;22203:10528:73:-;22581:59;22593:10;:20;;;22615:10;:18;;;22635:4;22581:11;:59::i;:::-;;22860:34;:32;:34::i;:::-;22986:186;23066:31;;;;:10;:31;:::i;:::-;:38;;23118:10;:44;;;22986:66;:186::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23364:48:73;23415:193;;;;;;;;23449:9;23415:193;;;;;;;;:::i;:::-;;;;;23472:16;23415:193;;;;;;;;:::i;:::-;;;;;23502:28;23415:193;;;;;;;;:::i;:::-;;;;;23544:25;-1:-1:-1;;;;;23415:193:73;;;;;23583:15;23415:193;;;;;;;;:::i;:::-;;;23364:244;-1:-1:-1;23689:35:73;23759:31;;;;:10;:31;:::i;:::-;:42;;-1:-1:-1;23800:1:73;23759:42;:::i;:::-;23727:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23727:84:73;;-1:-1:-1;;23727:84:73;;;;;;;;;;;-1:-1:-1;23935:28:73;23917:46;;24090:345;;;;;;;;;24129:37;;;;23689:122;;-1:-1:-1;23917:15:73;;24090:345;;;;;;;;;;:::i;:::-;;;;;;;;24188:29;;;;:10;:29;:::i;:::-;-1:-1:-1;;;;;24090:345:73;;;;;24239:10;:34;;;24090:345;;;;24295:10;:30;;;24090:345;;;;24347:10;:30;;;24090:345;;;;24399:10;:18;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24090:345:73;;;24020:429;-1:-1:-1;24579:48:73;:44;;;;24626:1;24579:48;:::i;:::-;24548:93;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24548:93:73;-1:-1:-1;24519:26:73;;;;:122;;;;24777:15;;24814:33;;24869:30;;;;;24921:45;;;;;24988:36;;;;25046:34;;;;25102;;;;24745:409;;;;24869:30;;24988:36;;25046:34;;24745:409;;:::i;:::-;;;;;;;;;;;;;24718:450;;;;;;24686:6;:26;;;24713:1;24686:29;;;;;;;;:::i;:::-;;;;;;:482;;;;;25284:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25284:42:73;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25440:39:73;25482:296;;;;;;;;25512:20;:37;;;25482:296;;;;;;;;:::i;:::-;;;;;25567:24;:30;;;-1:-1:-1;;;;;25482:296:73;;;;;25615:24;:45;;;25482:296;;;;25678:24;:34;;;25482:296;;;;25730:24;:34;;;-1:-1:-1;;;;;25482:296:73;;;;25440:338;;25901:19;25882:13;25896:1;25882:16;;;;;;;;:::i;:::-;;;;;;:38;;;;26152:22;26130:2431;26213:31;;;;:10;:31;:::i;:::-;:38;;26196:14;:55;26130:2431;;;26371:46;26442:10;:31;;;;;;;;:::i;:::-;26474:14;26442:47;;;;;;;:::i;:::-;;;;;;26371:136;;;;;;;;;;:::i;:::-;;;26625:291;;;;;;;;26659:20;:49;;;26625:291;;;;;;;;:::i;:::-;;;;;26730:20;:46;;;-1:-1:-1;;;;;26625:291:73;;;;;26798:1;26625:291;;;;26821:19;:26;;;26625:291;;;;26869:19;:29;;;-1:-1:-1;;;;;26625:291:73;;;;26600:316;;27076:22;27040:13;27054:14;27071:1;27054:18;;;;:::i;:::-;27040:33;;;;;;;;:::i;:::-;;;;;;:58;;;;27279:10;:44;;;27241:14;:82;27216:175;;27364:8;;;27216:175;27536:344;;;;;;;;27575:20;:49;;;27536:344;;;;;;;;:::i;:::-;;;;;27646:20;:46;;;-1:-1:-1;;;;;27536:344:73;;;;;27714:1;27536:344;;;;27737:19;:26;;;27536:344;;;;27785:19;:26;;;27536:344;;;;27833:19;:29;;;-1:-1:-1;;;;;27536:344:73;;;;27510:370;;28129:6;:15;;;28170:23;:32;;;28228:23;:29;;;28283:23;:44;;;28353:23;:35;;;28414:23;:33;;;28473:23;:33;;;28093:435;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;28062:484;;;;;;28013:6;:26;;;28040:14;28057:1;28040:18;;;;:::i;:::-;28013:46;;;;;;;;:::i;:::-;;;;;;:533;;;;;26300:2261;26130:2431;26269:16;;;:::i;:::-;;;26130:2431;;;;28981:6;:26;;;28964:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;28937:85;;28964:44;28937:85;;;;28910:24;;;:112;29147:65;;;;29100:1017;29247:31;;;;:10;:31;:::i;:::-;:38;;29230:14;:55;29100:1017;;;29405:46;29476:10;:31;;;;;;;;:::i;:::-;29508:14;29476:47;;;;;;;:::i;:::-;;;;;;29405:136;;;;;;;;;;:::i;:::-;;;29629:291;;;;;;;;29663:20;:49;;;29629:291;;;;;;;;:::i;:::-;;;;;29734:20;:46;;;-1:-1:-1;;;;;29629:291:73;;;;;29802:1;29629:291;;;;29825:19;:26;;;29629:291;;;;29873:19;:29;;;-1:-1:-1;;;;;29629:291:73;;;;29604:316;;30080:22;30044:13;30058:14;30075:1;30058:18;;;;:::i;:::-;30044:33;;;;;;;;:::i;:::-;;;;;;:58;;;;29334:783;29303:16;;;;:::i;:::-;;;29100:1017;;;-1:-1:-1;30238:24:73;;-1:-1:-1;30281:1:73;;-1:-1:-1;30265:18:73;;-1:-1:-1;;30265:18:73;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30265:18:73;;-1:-1:-1;;30265:18:73;;;;;;;;;;;;30238:45;;30381:20;30363:6;:15;;:38;;;;;30450:26;30479:200;;;;;;;;30506:20;:36;;;30479:200;;;;;;;;:::i;:::-;;;;;30560:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30479:200:73;;;;;30599:10;:26;;;30479:200;;;;30643:10;:22;;;30479:200;;;30450:229;;30762:9;30751:5;30757:1;30751:8;;;;;;;;:::i;:::-;;;;;;:20;;;;30859:33;:478;;;;;;;;30980:6;:15;;;31021:9;:18;;;31065:9;:15;;;31106:9;:20;;;31152:9;:16;;;31267:9;:16;;;30944:361;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30913:410;;;;;;30859:478;;;;;31464:15;31447:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;31420:74;;31447:33;31420:74;;;;;;;31396:21;;;:98;-1:-1:-1;;31711:15:73;31693:33;;31798:114;31396:6;31850:10;31878:20;31798:10;:114::i;:::-;31779:16;;;:133;32109:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32007:213:73;32073:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32007:213:73;;32039:6;:16;;;32142:10;32170:5;32193:13;32007:213;;;;;;;;;:::i;:::-;;;;;;;;32319:192;32368:6;:16;;;32398:10;:19;;;32431:9;32454:10;:18;;;;;;;;;;:::i;:::-;32486:10;:15;;;;;;;;;;:::i;:::-;32319:35;:192::i;:::-;32632:16;;;;32584:140;;32662:18;;;;;;;;:::i;:::-;32694:20;;;;:10;:20;:::i;:::-;32584:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32584:34:73;;-1:-1:-1;;;32584:140:73:i;:::-;22490:10241;;;;22203:10528;;;;;;:::o;8205:1122:78:-;8517:65;8552:17;8571:10;8517:34;:65::i;:::-;8644:10;8640:681;;8758:6;8768:1;8758:11;8754:86;;8796:29;;;;;;;;;;;;;;8754:86;8919:51;8942:5;8949:4;8955:2;8959:10;8919:22;:51::i;:::-;8640:681;;;9069:241;9094:10;9122:17;9157:22;9197:5;9220:4;9242:2;9262:10;9290:6;9069:7;:241::i;:::-;8205:1122;;;;;;;:::o;33159:1696:73:-;33380:9;33355:22;33451:896;33475:31;;;;:10;:31;:::i;:::-;:38;;33471:1;:42;33451:896;;;33584:48;33653:31;;;;:10;:31;:::i;:::-;33685:1;33653:34;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;33830:26:73;;33933:42;;;33929:115;;;34002:27;;;;;;;;;;;;;;33929:115;34117:116;34147:29;;;;;;;;:::i;:::-;34194:25;34117:12;:116::i;:::-;34293:43;34311:25;34293:43;;:::i;:::-;;;33520:827;;33515:3;;;;:::i;:::-;;;33451:896;;;;34430:14;34421:6;:23;34417:88;;;34467:27;;;;;;;;;;;;;;34417:88;34557:40;34570:18;;;;;;;;:::i;:::-;34590:6;34557:12;:40::i;:::-;34703:6;34686:14;:23;34682:167;;;34780:58;34801:10;34814:23;34831:6;34814:14;:23;:::i;:::-;34780:12;:58::i;:::-;33281:1574;33159:1696;;:::o;10423:1058:78:-;10727:28;10748:6;10727:20;:28::i;:::-;10831:65;10866:17;10885:10;10831:34;:65::i;:::-;10958:10;10954:521;;11063:60;11087:5;11094:4;11100:2;11104:10;11116:6;11063:23;:60::i;10954:521::-;11222:242;11247:10;11275:17;11310:23;11351:5;11374:4;11396:2;11416:10;11444:6;11222:7;:242::i;35711:1600:73:-;36050:18;36082:11;36078:157;;;-1:-1:-1;36122:28:73;;;;36078:157;;;-1:-1:-1;36194:30:73;;;;36078:157;36301:9;36296:760;36320:31;;;;:10;:31;:::i;:::-;:38;;36316:1;:42;36296:760;;;36429:48;36498:31;;;;:10;:31;:::i;:::-;36530:1;36498:34;;;;;;;:::i;:::-;;;;;;36429:117;;36640:11;36636:86;;;36671:36;36681:26;;36671:36;;:::i;:::-;;;36636:86;36813:232;36845:10;36873:4;36895:29;;;;;;;;:::i;:::-;36942:26;;36986:10;37014:17;36813:14;:232::i;:::-;-1:-1:-1;36360:3:73;;;:::i;:::-;;;36296:760;;;;37147:157;37175:10;37199:4;37217:2;37233:6;37253:10;37277:17;37147:14;:157::i;:::-;35983:1328;35711:1600;;;;;;;:::o;12975:304:78:-;13130:17;:27;;;:34;13168:1;13130:39;13126:76;;12975:304;:::o;13126:76::-;13245:27;13254:17;13245:8;:27::i;:::-;12975:304;:::o;3360:777:71:-;3490:16;3608:11;3595:9;:24;3591:67;;-1:-1:-1;3642:5:71;3635:12;;3591:67;3746:27;3776:17;3784:9;3776:5;:17;:::i;:::-;3746:47;-1:-1:-1;3885:33:71;3907:11;3746:47;3885:33;:::i;:::-;3874:44;-1:-1:-1;4000:10:71;4055:5;4041:9;4015:22;4026:11;3874:44;4015:22;:::i;:::-;4014:36;;;;:::i;:::-;4013:47;4000:60;;4075:5;4070:61;;4103:17;;;;;;;;;;;;;;4070:61;3508:629;;3360:777;;;;;:::o;1324:1514::-;1513:7;1627:9;1612:11;:24;1608:1158;;1733:20;;1867:19;1877:9;1867:7;:19;:::i;:::-;1848:38;-1:-1:-1;1978:15:71;1996:27;2014:9;1996:15;:27;:::i;:::-;1978:45;-1:-1:-1;2115:17:71;2135:18;1978:45;2135:8;:18;:::i;:::-;2115:38;;2253:7;2249:73;;;2295:12;2306:1;2295:8;:12;:::i;:::-;2280:27;;2249:73;2412:27;2527:12;2488:19;2500:7;2488:9;:19;:::i;:::-;2444:23;2458:9;2444:11;:23;:::i;:::-;2443:65;;;;:::i;:::-;:96;;;;:::i;:::-;2412:128;-1:-1:-1;2632:17:71;2652:30;2674:8;2412:128;2652:30;:::i;:::-;2632:50;-1:-1:-1;2739:16:71;;-1:-1:-1;;;;;;2739:16:71;1608:1158;-1:-1:-1;2822:9:71;;1324:1514;-1:-1:-1;;;;1324:1514:71:o;1690:6051:77:-;1950:24;;1930:17;2033:4091;2057:9;2053:1;:13;2033:4091;;;2134:40;2178:17;2196:1;2178:20;;;;;;;;:::i;:::-;;;;;;;2134:65;;2289:18;2310:16;:27;;;2289:48;;2426:15;:22;2412:10;:36;2408:115;;2475:33;;;;;;;;;;;;;;2408:115;2609:15;2625:10;2609:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;2650:1;2609:42;2605:89;;2671:8;;;;2605:89;2808:22;;;;2783;;;3050:16;:21;;;:35;;;;;;;;:::i;:::-;;3046:2472;;3105:29;3137:15;3153:10;3137:27;;;;;;;;:::i;:::-;;;;;;;:59;;;3105:91;;3300:10;:17;3282:14;:35;3278:122;;3348:33;;;;;;;;;;;;;;3278:122;3483:22;3509:10;3520:14;3509:26;;;;;;;;:::i;:::-;;;;;;;;;;;3643:14;;3698:16;;;;3643:14;;-1:-1:-1;3698:16:77;-1:-1:-1;3509:26:77;-1:-1:-1;3826:29:77;3814:8;:41;;;;;;;;:::i;:::-;;3810:200;;3896:15;3879:32;;3810:200;;;3975:16;3958:33;;3810:200;4123:27;;;;4104:16;;;;:46;-1:-1:-1;3046:2472:77;;;4326:35;4364:15;4401:10;4364:65;;;;;;;;:::i;:::-;;;;;;;:79;;;4326:117;;4548:13;:20;4530:14;:38;4526:133;;4599:41;;;;;;;;;;;;;;4526:133;4742:33;4800:13;4814:14;4800:29;;;;;;;;:::i;:::-;;;;;;;;;;;4954:22;;5017:24;;;;4954:22;;-1:-1:-1;5017:24:77;-1:-1:-1;4800:29:77;-1:-1:-1;5153:29:77;5141:8;:41;;;;;;;;:::i;:::-;;5137:216;;5231:15;5206:40;;5137:216;;;5318:16;5293:41;;5137:216;5475:27;;;;5447:24;;;;:56;-1:-1:-1;3046:2472:77;5609:29;5629:8;5609:19;:29::i;:::-;5604:103;;5665:27;;;;;;;;;;;;;;5604:103;5795:34;;5791:323;;5926:173;5960:16;:27;;;6009:20;6051:16;:30;;;5926:12;:173::i;:::-;2073:4051;;;;;2033:4091;2068:3;;;:::i;:::-;;;2033:4091;;;-1:-1:-1;;6209:22:77;;6294:9;6289:1446;6313:9;6309:1;:13;6289:1446;;;6389:36;6428:15;6444:1;6428:18;;;;;;;;:::i;:::-;;;;;;;6389:57;;6526:18;6547:14;:25;;;:32;6526:53;;6666:14;:24;;;:29;;6694:1;6666:29;6662:76;;6715:8;;;;6662:76;6815:9;6810:320;6834:10;6830:1;:14;6810:320;;;6966:58;6986:14;:25;;;7012:1;6986:28;;;;;;;;:::i;6966:58::-;6941:175;;;7072:25;;;;;;;;;;;;;;6941:175;6846:3;;;:::i;:::-;;;6810:320;;;-1:-1:-1;;7231:28:77;;;;:35;7353:9;7348:377;7372:10;7368:1;:14;7348:377;;;7504:107;7549:14;:28;;;7578:1;7549:31;;;;;;;;:::i;7504:107::-;7479:232;;;7659:33;;;;;;;;;;;;;;7479:232;7384:3;;;:::i;:::-;;;7348:377;;;;6329:1406;;6289:1446;6324:3;;;:::i;:::-;;;6289:1446;;1905:3422:79;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2265:27:79;;;:66;;-1:-1:-1;2296:35:79;;2265:66;2248:170;;;2363:44;;;;;;;;;;;;;;2248:170;2655:37;2709:151;2771:15;2804:23;;2709:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2845:1;2709:44;:151::i;:::-;2655:215;;3228:153;3278:15;3307;;3228:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3336:1;3359;3228:36;:153::i;:::-;3515:26;;2959:422;;-1:-1:-1;3488:53:79;;;;;;;;:::i;:::-;:14;;:23;:53;;;;;;;;:::i;:::-;;;:116;;;;3581:17;:23;;;-1:-1:-1;;;;;3557:47:79;:9;:14;;;:20;;;-1:-1:-1;;;;;3557:47:79;;;3488:116;:189;;;;3649:17;:28;;;3620:9;:14;;;:25;;;:57;;3488:189;3471:303;;;3709:54;;;;;;;;;;;;;;3471:303;3884:9;:14;;;:21;;;3857:17;:24;;;:48;3853:1108;;;4001:43;4065:23;;4089:1;4065:26;;;;;;;:::i;:::-;;;;;;4001:104;;;;;;;;;;:::i;:::-;;;4356:9;:14;;;:21;;;4329:17;:24;;;:48;;;;:::i;:::-;4201:15;4217;:26;;;4201:43;;;;;;;;:::i;:::-;;;;;;;:74;;;4276:15;:25;;;4201:101;;;;;;;;:::i;:::-;;;;;;;;;;;:125;;;;:176;;;;4495:14;;:21;;;4468:24;;;:48;-1:-1:-1;3853:1108:79;;;4619:43;4666:15;;4682:1;4666:18;;;;;;;:::i;:::-;;;;;;4619:66;;;;;;;;;;:::i;:::-;;;4926:17;:24;;;4902:9;:14;;;:21;;;:48;;;;:::i;:::-;4777:15;4793;:26;;;4777:43;;;;;;;;:::i;:::-;;;;;;;:71;;;4849:15;:25;;;4777:98;;;;;;;;:::i;:::-;;;;;;;:122;;:173;;;;;4533:428;3853:1108;5070:24;;;;;5046:14;;:21;;;:48;5131:27;;;;;5104:14;;-1:-1:-1;;;;;5104:54:79;;;:24;;:54;1905:3422;;;;;;;:::o;27217:3403:81:-;27517:22;;27374:29;;27517:22;27627:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27627:23:81;;27609:41;;27734:9;27729:1311;27753:11;27749:1;:15;27729:1311;;;27832:36;27871:15;27887:1;27871:18;;;;;;;;:::i;:::-;;;;;;;27832:57;;27982:14;:24;;;:29;;28010:1;27982:29;27978:304;;28259:8;;;27978:304;28361:4;28340:15;28356:1;28340:18;;;;;;;;:::i;:::-;:25;;;:18;;;;;;;;;;;:25;28510:28;;;;28454:35;28640:390;28664:13;:20;28660:1;:24;28640:390;;;28781:19;28803:13;28817:1;28803:16;;;;;;;;:::i;:::-;;;;;;;:23;;;28781:45;;28912:11;28927:1;28912:16;28908:108;;28959:38;;;;;;;;42991:25:106;;;43032:18;;;43025:34;;;43075:18;;;43068:34;;;42964:18;;28959:38:81;42789:319:106;28908:108:81;-1:-1:-1;28686:3:81;;;:::i;:::-;;;28640:390;;;;27771:1269;;27729:1311;27766:3;;;:::i;:::-;;;27729:1311;;;-1:-1:-1;;;;;;;;;;29114:22:81;-1:-1:-1;;;;;;;29139:9:81;;29299;29294:919;29318:10;:17;29314:1;:21;29294:919;;;29428:26;29457:10;29468:1;29457:13;;;;;;;;:::i;:::-;;;;;;;;;;;29511:14;;29457:13;;-1:-1:-1;29484:24:81;29621:13;;:32;;;;;;;;:::i;:::-;;29617:357;;29768:14;29754:4;:11;;;:28;29750:109;;;29813:27;;;;;;;;;;;;;;29750:109;29948:11;;;;29930:29;;;;:::i;:::-;;;29617:357;30049:153;30076:4;30098:9;:17;;;30133:9;:20;;;30171:17;30049:9;:153::i;:::-;29342:871;;29337:3;;;;:::i;:::-;;;29294:919;;;;30303:34;30319:17;30303:15;:34::i;:::-;30429:19;;30425:99;;30464:49;30485:10;30498:14;30464:12;:49::i;:::-;30591:22;;;27217:3403;;;;:::o;6528:3012:79:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6903:22:79;;7049:28;;6881:19;7164:31;;;7160:115;;7259:4;7218:46;;;;;;;;;;;:::i;7160:115::-;7362:26;7485:9;7480:685;7504:26;7500:1;:30;7480:685;;;7608:18;7629:21;7651:1;7629:24;;;;;;;;:::i;:::-;;;;;;;:35;;;7608:56;;7753:11;7739:10;:25;7735:104;;7791:33;;;;;;;;;;;;;;7735:104;7932:15;7948:10;7932:27;;;;;;;;:::i;:::-;;;;;;;:37;;;:42;;7973:1;7932:42;7928:227;;8077:5;:1;8081;8077:5;:::i;:::-;8056:26;;8135:5;;;7928:227;-1:-1:-1;7532:3:79;;;:::i;:::-;;;7480:685;;;;8227:18;8249:1;8227:23;8223:452;;-1:-1:-1;;8381:283:79;;;8408:186;;;;;-1:-1:-1;8381:283:79;;;8408:186;;;;;;;;;;;;;;;;;;;;;;;;;;;8381:283;;8408:186;8381:283;;;;;;;;;;;;;-1:-1:-1;8374:290:79;;-1:-1:-1;8374:290:79;8223:452;8762:10;8754:4;:18;;;;;;;;:::i;:::-;;8750:784;;8900:189;8954:15;8987:21;9026:22;9047:1;9026:18;:22;:::i;:::-;9066:9;8900:36;:189::i;:::-;8893:196;;;;;;;8750:784;9332:191;9378:15;9411:21;9450:22;9471:1;9450:18;:22;:::i;:::-;9490:19;9332:28;:191::i;2899:425:72:-;3219:30;3186;:63;3182:136;;;3272:35;;;;;;;;;;;;;;3182:136;2899:425;;:::o;1213:1652:85:-;1407:9;;;-1:-1:-1;;;;;1467:18:85;;;:22;1463:1015;;1576:55;1605:6;1613;1621:9;1576:28;:55::i;1463:1015::-;1744:9;:16;1764:2;1744:22;1740:738;;1940:10;1986:9;1975:41;;;;;;;;;;;;:::i;:::-;1965:51;;-1:-1:-1;11492:66:30;2035:33:85;;;-1:-1:-1;1965:51:85;-1:-1:-1;2087:30:85;2107:3;2101:9;;;2115:2;2087:30;:::i;:::-;2083:34;;1768:360;1740:738;;;2138:9;:16;2158:2;2138:22;2134:344;;2196:9;2185:41;;;;;;;;;;;;:::i;:::-;2250:13;;2176:50;;-1:-1:-1;2176:50:85;-1:-1:-1;2250:9:85;;2260:2;;2250:13;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2341:2:85;2336:7;;;;;:18;;;2347:1;:7;;2352:2;2347:7;;2336:18;2332:80;;;2381:16;;;;;44484:4:106;44472:17;;2381:16:85;;;44454:36:106;44427:18;;2381:16:85;44312:184:106;2332:80:85;2134:344;;;2449:18;;;;;;;;;;;;;;2134:344;2594:26;;;2568:23;2594:26;;;;;;;;;44728:25:106;;;44801:4;44789:17;;44769:18;;;44762:45;;;;44823:18;;;44816:34;;;44866:18;;;44859:34;;;2594:26:85;;44700:19:106;;2594:26:85;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2594:26:85;;;;;;-1:-1:-1;;;;;;;2672:29:85;;;;:58;;;2724:6;-1:-1:-1;;;;;2705:25:85;:15;-1:-1:-1;;;;;2705:25:85;;;2672:58;2668:191;;;2753:15;;;;;;;;;;;;;;1441:627:87;1573:10;1690:15;1678:9;:27;:57;;;;1720:15;1709:7;:26;;1678:57;1674:314;;;1828:15;1824:74;;;1870:13;;;;;;;;;;;;;;1824:74;-1:-1:-1;1972:5:87;1965:12;;1674:314;-1:-1:-1;2057:4:87;1441:627;;;;;:::o;17870:266:83:-;17975:16;18110:9;18102:18;;;;;;;;:::i;:::-;18123:1;18102:22;:27;;17870:266;-1:-1:-1;;17870:266:83:o;3440:1624:88:-;3905:1;3892:9;3884:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;3922:10:88;-1:-1:-1;;;;;3922:18:88;;;;3884:56;:93;;;;-1:-1:-1;3956:10:88;-1:-1:-1;;;;;3956:21:88;;;;3884:93;3867:1191;;;4092:23;;;;:30;:35;:84;;;;-1:-1:-1;4147:24:88;;:29;4092:84;4071:977;;;4234:192;;4430:35;4234:192;;;;;;45135:25:106;;;4327:10:88;45237:18:106;;;45230:43;-1:-1:-1;;;;;45309:15:106;;;45289:18;;;45282:43;45341:18;;;45334:34;;;4430:35:88;;4234:32;;;;4430:35;;45107:19:106;;4234:192:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:231;;;4209:356;;4513:33;;;;;;;;13795:25:106;;;13768:18;;4513:33:88;13649:177:106;4209:356:88;4071:977;;;4628:267;;;;;4899:35;;-1:-1:-1;;;;;4628:50:88;;;;;:267;;4704:9;;4739:10;;4775:13;;4814:16;;4856:17;;4628:267;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:306;;;4603:431;;4982:33;;;;;;;;13795:25:106;;;13768:18;;4982:33:88;13649:177:106;11006:282:83;11107:29;11152:94;11159:5;;11152:94;;11192:1;11211:5;11192:1;11211;:5;:::i;:::-;11234:1;;-1:-1:-1;11207:9:83;-1:-1:-1;11152:94:83;;;-1:-1:-1;11280:1:83;;11006:282;-1:-1:-1;11006:282:83:o;14429:264:77:-;14524:17;14685:1;14673:8;14665:17;;;;;;;;:::i;:::-;:21;;14429:264;-1:-1:-1;;14429:264:77:o;15027:1180::-;15226:20;15276:4;15259:22;;;;;;52490:19:106;;52534:2;52525:12;;52361:182;15259:22:77;;;;;;;;;;;;;15249:33;;;;;;15226:56;;15342:9;15337:700;15361:5;:12;15357:1;:16;15337:700;;;15437:20;15460:5;15466:1;15460:8;;;;;;;;:::i;:::-;;;;;;;15437:31;;15577:12;15561;:28;15557:470;;15729:44;;;;;;52705:19:106;;;52740:12;;;52733:28;;;52777:12;;15729:44:77;;;;;;;;;;;;15698:93;;;;;;15683:108;;15557:470;;;15950:44;;;;;;52705:19:106;;;52740:12;;;52733:28;;;52777:12;;15950:44:77;;;;;;;;;;;;15919:93;;;;;;15904:108;;15557:470;-1:-1:-1;15375:3:77;;;:::i;:::-;;;15337:700;;;-1:-1:-1;16124:29:77;;;16120:81;;16176:14;;;;;;;;;;;;;;4735:1076:71;4908:14;5029:9;5014:11;:24;5010:795;;5063:135;5093:12;:22;;;5133:12;:24;;;5175:9;5063:12;:135::i;:::-;5054:144;;5010:795;;;5317:477;5355:153;5389:12;:22;;;5433:12;:24;;;5479:11;5355:12;:153::i;:::-;5526:151;5560:12;:22;;;5604:12;:24;;;5650:9;5526:12;:151::i;:::-;5695:12;:22;;;5735:12;:20;;;5773:7;5317:20;:477::i;2443:1848:78:-;2712:15;2695:13;;:32;;;;;;;;:::i;:::-;;2691:1594;;2849:15;;;;2835:10;;;;-1:-1:-1;;;;;2827:37:78;;2826:44;2822:112;;2897:22;;;;;;;;;;;;;;2822:112;3008:41;3021:4;:14;;;3037:4;:11;;;3008:12;:41::i;:::-;2691:1594;;;3087:14;3070:13;;:31;;;;;;;;:::i;:::-;;3066:1219;;3175:15;;;;:20;3171:88;;3222:22;;;;;;;;;;;;;;3171:88;3345:205;3377:4;:10;;;3405:7;3430:4;:14;;;3462:4;:11;;;3491:10;3519:17;3345:14;:205::i;3066:1219::-;3588:15;3571:13;;:32;;;;;;;;:::i;:::-;;3567:718;;3691:239;3724:4;:10;;;3752:7;3777:4;:14;;;3809:4;:15;;;3842:4;:11;;;3871:10;3899:17;3691:15;:239::i;3567:718::-;4034:240;4068:4;:10;;;4096:7;4121:4;:14;;;4153:4;:15;;;4186:4;:11;;;4215:10;4243:17;4034:16;:240::i;4522:486::-;4655:28;4676:6;4655:20;:28::i;:::-;4776:12;4794:2;-1:-1:-1;;;;;4794:7:78;4810:6;4794:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:47;;;4870:7;4865:137;;4952:39;;;;;-1:-1:-1;;;;;53210:55:106;;4952:39:78;;;53192:74:106;53282:18;;;53275:34;;;53165:18;;4952:39:78;53010:305:106;4142:920:72;4568:17;4600:14;4611:2;4609:1;4600:8;4568:17;4600:14;:::i;:::-;4589:37;;;;;;;:::i;:::-;4630:2;4589:43;:106;;;;-1:-1:-1;4659:17:72;4672:3;4668;4659:8;;:17;:::i;:::-;4648:40;;;;;;;:::i;:::-;4692:3;4648:47;4589:106;:229;;;;-1:-1:-1;4789:17:72;4802:3;4798;4789:8;;:17;:::i;:::-;4778:40;;;;;;;:::i;:::-;4773:45;;:2;:45;:::i;:::-;4767:51;;:3;:51;:::i;:::-;4722:17;4735:3;4731;4722:8;;:17;:::i;:::-;4711:40;;;;;;;:::i;:::-;:107;4589:229;4588:292;;;;-1:-1:-1;4878:2:72;4846:17;4859:3;4855;4846:8;;:17;:::i;:::-;4835:40;;;;;;;:::i;:::-;:45;4588:292;4568:312;;4974:12;4969:87;;5009:36;;;;;;;;;;;;;;20239:943:73;20442:17;;20568:31;20580:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1720:18:76;1609:22;1720:18;;;:9;:18;;;;;;;1524:221;20568:31:73;20723:15;;20550:49;;-1:-1:-1;20756:18:73;;;;;;;;:::i;:::-;20792:15;;;;;;;;:::i;:::-;20825:6;:21;;;20864:6;:24;;;20906:20;:30;;;20954:10;:20;;;20992:10;:18;;;21028:10;:19;;;21065:10;:15;;;21098:10;:28;;;21144:7;20695:470;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20672:503;;;;;;20660:515;;20461:721;20239:943;;;;;:::o;1261:755:88:-;1583:1;1570:9;1562:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;1600:10:88;-1:-1:-1;;;;;1600:18:88;;;;1562:56;:93;;;;-1:-1:-1;1634:10:88;-1:-1:-1;;;;;1634:21:88;;;;1562:93;1545:465;;;1701:172;;1877:35;1701:172;;;;;;45135:25:106;;;1786:10:88;45237:18:106;;;45230:43;-1:-1:-1;;;;;45309:15:106;;;45289:18;;;45282:43;45341:18;;;45334:34;;;1877:35:88;;1701:32;;;;1877:35;;45107:19:106;;1701:172:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:211;;;1680:320;;1952:33;;;;;;;;13795:25:106;;;13768:18;;1952:33:88;13649:177:106;1680:320:88;1261:755;;;;;:::o;1618:985:83:-;1834:31;1868:23;;;:12;:23;;;;;1960:218;1881:9;1868:23;2040:4;;1960:18;:218::i;:::-;-1:-1:-1;2275:23:83;;;;2270:102;;2314:47;2331:7;2340:9;2351;2314:16;:47::i;:::-;2569:27;;;-1:-1:-1;;;1618:985:83:o;12278:342:78:-;12511:28;;:42;;12507:107;;12569:34;12585:17;12569:15;:34::i;2241:301:86:-;2395:5;-1:-1:-1;;;;;2395:17:86;;2416:1;2395:22;2391:77;;2440:17;;;;;-1:-1:-1;;;;;55653:55:106;;2440:17:86;;;55635:74:106;55608:18;;2440:17:86;55489:226:106;2391:77:86;2478:57;;;;;-1:-1:-1;;;;;56001:15:106;;;2478:57:86;;;55983:34:106;56053:15;;;56033:18;;;56026:43;56085:18;;;56078:34;;;2478:35:86;;;;;55895:18:106;;2478:57:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15142:1805:78;15694:27;;;;:34;15662:29;15875:25;15694:34;15899:1;15875:25;:::i;:::-;15853:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15853:48:78;;-1:-1:-1;;15853:48:78;;;;;;;;;;;;15799:112;;15973:9;15968:514;15992:21;15988:1;:25;15968:514;;;16071:34;16108:17;:27;;;16136:1;16108:30;;;;;;;;:::i;:::-;;;;;;;16071:67;;16227:244;;;;;;;;16260:11;:20;;;16227:244;;;;;;;;:::i;:::-;;;;;16298:11;:17;;;-1:-1:-1;;;;;16227:244:78;;;;;16333:11;:16;;;-1:-1:-1;;;;;16227:244:78;;;;;16367:11;:14;;;-1:-1:-1;;;;;16227:244:78;;;;;16399:11;:22;;;16227:244;;;;16439:11;:18;;;16227:244;;;16209:12;16222:1;16209:15;;;;;;;;:::i;:::-;;;;;;:262;;;;16020:462;16015:3;;;;:::i;:::-;;;15968:514;;;;16573:144;;;;;;;;16602:8;16573:144;;;;;;;;:::i;:::-;;;;;16624:5;-1:-1:-1;;;;;16573:144:78;;;;;16643:4;-1:-1:-1;;;;;16573:144:78;;;;;16661:2;-1:-1:-1;;;;;16573:144:78;;;;;16677:10;16573:144;;;;16701:6;16573:144;;;16535:12;16548:21;16535:35;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;;;16790:27;;:42;-1:-1:-1;;;16899:41:78;;;;-1:-1:-1;;;;15142:1805:78:o;3490:144:72:-;3564:6;3574:1;3564:11;3560:68;;3598:19;;;;;;;;;;;;;;3166:413:86;3345:5;-1:-1:-1;;;;;3345:17:86;;3366:1;3345:22;3341:77;;3390:17;;;;;-1:-1:-1;;;;;55653:55:106;;3390:17:86;;;55635:74:106;55608:18;;3390:17:86;55489:226:106;3341:77:86;3428:144;;;;;-1:-1:-1;;;;;56497:15:106;;;3428:144:86;;;56479:34:106;56549:15;;;56529:18;;;56522:43;56581:18;;;56574:34;;;56624:18;;;56617:34;;;56688:3;56667:19;;;56660:32;-1:-1:-1;56708:19:106;;;56701:30;3428:40:86;;;;;56748:19:106;;3428:144:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:413;;;;;:::o;6044:999:78:-;6318:28;6339:6;6318:20;:28::i;:::-;6422:65;6457:17;6476:10;6422:34;:65::i;:::-;6549:10;6545:492;;6641:46;6663:5;6670:4;6676:2;6680:6;6641:21;:46::i;:::-;6545:492;;;6786:240;6811:10;6839:17;6874:21;6913:5;6936:4;6958:2;6986:1;7006:6;6786:7;:240::i;13676:388::-;13850:28;;13838:41;;:11;:41::i;:::-;-1:-1:-1;;;;;13821:67:78;;13902:17;:27;;;13821:118;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14023:34:78;14030:27;;;;14023:34;13676:388::o;19481:5182:79:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19931:23:79;19955:10;19931:35;;;;;;;;:::i;:::-;;;;;;;;;;;:59;19899:91;;20031:35;;:23;;20055:10;;20031:35;;;;;;:::i;:::-;;;;;;;;;;;;:58;;;20000:28;;;:89;20234:22;;20188:42;;:68;;20147:37;;;:110;;;20268:4194;;20383:36;20422:15;20455:18;:29;;;20422:76;;;;;;;;:::i;:::-;;;;;;;20383:115;;20631:18;:37;;;:146;;;;20741:14;:28;;;:35;20689:18;:28;;;:87;;20631:146;20575:202;;:37;;;:202;;;20791:3661;;20913:33;20949:14;:49;;;20999:18;:28;;;20949:79;;;;;;;;:::i;:::-;;;;;;;20913:115;;21107:248;;;;;;;;21141:13;:22;;;21107:248;;;;;;;;:::i;:::-;;;;;21185:13;:19;;;-1:-1:-1;;;;;21107:248:79;;;;;21226:13;:24;;;21107:248;;;;21272:13;:20;;;21107:248;;;;21314:13;:23;;;-1:-1:-1;;;;;21107:248:79;;;;21092:263;;21478:1;21455:13;:20;;:24;;;;;21636:9;21648:10;21661:1;21648:14;;;;:::i;:::-;21636:26;;21610:2828;21688:23;:30;21684:1;:34;21610:2828;;;21929:23;21953:1;21929:26;;;;;;;;:::i;:::-;;;;;;;;;;;:62;21897:94;;22044:26;;:23;;22068:1;;22044:26;;;;;;:::i;:::-;;;;;;;;;;;;:61;;;22013:28;;;:92;22298:22;;22265:29;;:55;;22201:37;;;:119;;;22451:5;22382:97;22624:15;22665:18;:29;;;22624:92;;;;;;;;:::i;:::-;;;;;;;22607:109;;22800:14;:24;;;:29;;22828:1;22800:29;22796:1624;;23063:28;;;;;:35;23002:57;;;;:96;;22932:66;;;:167;;;23242:5;23169:105;23383:14;:28;;;23441:18;:28;;;23383:112;;;;;;;;:::i;:::-;;;;;;;23367:128;;23678:13;:20;;;23628:12;:19;;;:70;;;;:::i;:::-;23578:19;;;;:120;;;;23872:1;23849:20;;;:24;24085:138;23849:13;23578:12;24085:27;:138::i;:::-;24016:207;;:66;;;:207;;;24366:5;24293:105;;21740:3;;;:::i;:::-;;;21610:2828;;;;20835:3617;20791:3661;20312:4150;20268:4194;24553:18;:37;;;24549:108;;;24613:33;;;;;;;;;;;;;;24549:108;19738:4925;19481:5182;;;;;:::o;11217:4403::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11559:18:79;11580:15;11596:10;11580:27;;;;;;;;:::i;:::-;;;;;;;:38;;;11559:59;;11628:17;11648:15;11664:10;11648:27;;;;;;;;:::i;:::-;;;;;;;:37;;;11628:57;;11833:23;11874:15;:22;11860:10;:36;;11833:64;;11912:18;11907:3532;;12014:36;12053:15;12069:10;12053:27;;;;;;;;:::i;:::-;;;;;;;12014:66;;12194:18;:85;;;;12246:14;:25;;;:32;12233:9;:45;;12194:85;12157:122;;12299:18;12294:3135;;12417:22;12442:14;:25;;;12468:9;12442:36;;;;;;;;:::i;:::-;;;;;;;12417:61;;12550:375;;;;;;;;12581:235;;;;;;;;12619:5;:14;;;12581:235;;;;;;;;:::i;:::-;;;;;12659:5;:11;;;-1:-1:-1;;;;;12581:235:79;;;;;12696:5;:16;;;12581:235;;;;12738:5;:12;;;12581:235;;;;12784:9;-1:-1:-1;;;;;12581:235:79;;;;12550:375;;;;12838:14;:22;;;-1:-1:-1;;;;;12550:375:79;;;;;12882:14;:25;;;12550:375;;;12538:387;;13040:1;13025:5;:12;;:16;;;;;13163:9;13175:10;13188:1;13175:14;;;;:::i;:::-;13163:26;;13137:2278;13215:15;:22;13211:1;:26;13137:2278;;;13421:15;13437:1;13421:18;;;;;;;;:::i;:::-;;;;;;;:29;;;13408:42;;13484:15;13500:1;13484:18;;;;;;;;:::i;:::-;;;;;;;:28;;;13472:40;;13642:15;:22;13628:10;:36;;13607:57;;13730:18;13776:5;13726:78;13918:15;13934:10;13918:27;;;;;;;;:::i;:::-;;;;;;;13901:44;;13971:14;:24;;;:29;;13999:1;13971:29;13967:1430;;14166:14;:25;;;:32;14125:9;:73;;14103:96;;14273:18;14323:5;14269:86;14503:14;:25;;;14529:9;14503:36;;;;;;;;:::i;:::-;;;;;;;14495:44;;14729:5;:12;;;14677:9;:14;;;:21;;;:64;;;;:::i;:::-;14625:14;;:21;;;;:116;;;;:14;14884:12;;;:16;15056:163;15105:14;14884:5;14625:9;15056:19;:163::i;:::-;15035:184;;15293:18;15343:5;15289:86;;13259:3;;;:::i;:::-;;;13137:2278;;;;12319:3110;12294:3135;11932:3507;11907:3532;15529:18;15525:89;;;15570:33;;;;;;;;;;;;;;15525:89;11479:4141;;;11217:4403;;;;;;:::o;16812:870::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17284:168:79;17346:15;17379:23;17420:18;17284:44;:168::i;:::-;17561:114;;;;;;;;;;;17622:10;17561:114;;;;;;;;;;-1:-1:-1;17561:114:79;;16812:870;-1:-1:-1;;;;16812:870:79:o;3298:347:85:-;3463:60;;3539:42;3463:60;;;3539:42;-1:-1:-1;;;;;3463:41:85;;;3539:42;;3463:60;;3505:6;;3513:9;;3463:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:118;;;3446:193;;3613:15;;;;;;;;;;;;;;855:937:86;1004:5;-1:-1:-1;;;;;1004:17:86;;1025:1;1004:22;1000:77;;1049:17;;;;;-1:-1:-1;;;;;55653:55:106;;1049:17:86;;;55635:74:106;55608:18;;1049:17:86;55489:226:106;1000:77:86;1142:156;;;-1:-1:-1;;;;;56001:15:106;;;1142:156:86;;;55983:34:106;56053:15;;;56033:18;;;56026:43;56085:18;;;;56078:34;;;1142:156:86;;;;;;;;;;55895:18:106;;;;1142:156:86;;;;;;;;;1182:36;1142:156;;;1118:190;;-1:-1:-1;;;;1118:10:86;;;;:190;;1142:156;1118:190;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:221;;;;1391:2;1386:96;;1416:55;;;;;-1:-1:-1;;;;;59011:15:106;;;1416:55:86;;;58993:34:106;59063:15;;;59043:18;;;59036:43;59115:15;;59095:18;;;59088:43;1461:1:86;59147:18:106;;;59140:34;59190:19;;;59183:35;;;58904:19;;1416:55:86;58665:559:106;1386:96:86;1496:11;;:16;;;;:37;;;1531:2;1516:4;:11;:17;;1496:37;1492:294;;;1565:4;1554:24;;;;;;;;;;;;:::i;:::-;1549:227;;1605:156;;;;;-1:-1:-1;;;;;59821:15:106;;;1605:156:86;;;59803:34:106;59873:15;;;59853:18;;;59846:43;59925:15;;59905:18;;;59898:43;59957:18;;;59950:34;;;59714:19;;1605:156:86;59511:479:106;17513:483:78;17601:15;17710:26;17725:10;6251:239:80;;6297:12;6251:239;;;60508:92:106;60650:66;6347:19:80;60637:2:106;60633:15;60629:88;60616:11;;;60609:109;60734:12;;;60727:28;;;6437:27:80;60771:12:106;;;60764:28;6054:15:80;;60808:12:106;;6251:239:80;;;;;;;;;;;;;6216:296;;6251:239;6216:296;;;;;5963:598;-1:-1:-1;;5963:598:80;17710:26:78;17700:36;;17830:7;-1:-1:-1;;;;;17830:19:78;;17853:1;17830:24;17826:164;;17944:35;;;;;;;;60169:25:106;;;-1:-1:-1;;;;;60230:55:106;;60210:18;;;60203:83;60142:18;;17944:35:78;59995:297:106;17826:164:78;17513:483;;;:::o;18070:448:79:-;18221:23;18301:13;:23;;;-1:-1:-1;;;;;18275:49:79;:12;:22;;;-1:-1:-1;;;;;18275:49:79;;;:112;;;-1:-1:-1;18365:22:79;;18340:47;;;;;;;;:::i;:::-;:21;;:47;;;;;;;;:::i;:::-;;;18275:112;:169;;;;18425:13;:19;;;-1:-1:-1;;;;;18403:41:79;:12;:18;;;-1:-1:-1;;;;;18403:41:79;;;18275:169;:236;;;-1:-1:-1;;18487:24:79;;;;;18460:23;;;:51;;;18070:448::o;9949:510::-;10121:23;10204:5;:16;;;10175:9;:14;;;:25;;;:45;;:104;;;;10257:14;:22;;;-1:-1:-1;;;;;10236:43:79;:9;:17;;;-1:-1:-1;;;;;10236:43:79;;;10175:104;:169;;;;10319:14;:25;;;10295:9;:20;;;:49;;10175:169;:226;;;-1:-1:-1;10387:14:79;;10360:41;;;;;;;;:::i;:::-;:14;;:23;:41;;;;;;;;:::i;:::-;;;10175:226;:277;;;;10441:5;:11;;;-1:-1:-1;;;;;10417:35:79;:9;:14;;;:20;;;-1:-1:-1;;;;;10417:35:79;;;10156:296;9949:510;-1:-1:-1;;;;9949:510:79:o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:258:106:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:106;244:16;;237:27;14:258::o;277:317::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;508:2;496:15;513:66;492:88;483:98;;;;583:4;479:109;;277:317;-1:-1:-1;;277:317:106:o;599:220::-;748:2;737:9;730:21;711:4;768:45;809:2;798:9;794:18;786:6;768:45;:::i;824:180::-;883:6;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;-1:-1:-1;975:23:106;;824:180;-1:-1:-1;824:180:106:o;1425:184::-;1477:77;1474:1;1467:88;1574:4;1571:1;1564:15;1598:4;1595:1;1588:15;1614:253;1686:2;1680:9;1728:4;1716:17;;1763:18;1748:34;;1784:22;;;1745:62;1742:88;;;1810:18;;:::i;:::-;1846:2;1839:22;1614:253;:::o;1872:255::-;1944:2;1938:9;1986:6;1974:19;;2023:18;2008:34;;2044:22;;;2005:62;2002:88;;;2070:18;;:::i;2132:334::-;2203:2;2197:9;2259:2;2249:13;;2264:66;2245:86;2233:99;;2362:18;2347:34;;2383:22;;;2344:62;2341:88;;;2409:18;;:::i;:::-;2445:2;2438:22;2132:334;;-1:-1:-1;2132:334:106:o;2471:196::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:106;2640:14;2656:4;2636:25;;2471:196::o;2672:154::-;-1:-1:-1;;;;;2751:5:106;2747:54;2740:5;2737:65;2727:93;;2816:1;2813;2806:12;2831:134;2899:20;;2928:31;2899:20;2928:31;:::i;2970:149::-;3044:20;;3093:1;3083:12;;3073:40;;3109:1;3106;3099:12;3124:566;3180:5;3228:4;3216:9;3211:3;3207:19;3203:30;3200:50;;;3246:1;3243;3236:12;3200:50;3268:22;;:::i;:::-;3259:31;;3313:35;3338:9;3313:35;:::i;:::-;3306:5;3299:50;3401:2;3390:9;3386:18;3373:32;3414:33;3439:7;3414:33;:::i;:::-;3479:7;3474:2;3467:5;3463:14;3456:31;;3547:2;3536:9;3532:18;3519:32;3514:2;3507:5;3503:14;3496:56;3612:2;3601:9;3597:18;3584:32;3579:2;3572:5;3568:14;3561:56;3678:3;3667:9;3663:19;3650:33;3644:3;3637:5;3633:15;3626:58;3124:566;;;;:::o;3695:728::-;3758:5;3811:3;3804:4;3796:6;3792:17;3788:27;3778:55;;3829:1;3826;3819:12;3778:55;3865:6;3852:20;3891:4;3915:73;3931:56;3984:2;3931:56;:::i;:::-;3915:73;:::i;:::-;4022:15;;;4084:4;4127:11;;;4115:24;;4111:33;;;4053:12;;;;4010:3;4156:15;;;4153:35;;;4184:1;4181;4174:12;4153:35;4220:2;4212:6;4208:15;4232:162;4248:6;4243:3;4240:15;4232:162;;;4314:37;4347:3;4342;4314:37;:::i;:::-;4302:50;;4372:12;;;;4265;;4232:162;;;-1:-1:-1;4412:5:106;;3695:728;-1:-1:-1;;;;;;;3695:728:106:o;4428:908::-;4492:5;4540:4;4528:9;4523:3;4519:19;4515:30;4512:50;;;4558:1;4555;4548:12;4512:50;4591:2;4585:9;4633:4;4625:6;4621:17;4704:6;4692:10;4689:22;4668:18;4656:10;4653:34;4650:62;4647:88;;;4715:18;;:::i;:::-;4751:2;4744:22;4784:6;-1:-1:-1;4784:6:106;4814:35;4839:9;4814:35;:::i;:::-;4806:6;4799:51;4902:2;4891:9;4887:18;4874:32;4915:33;4940:7;4915:33;:::i;:::-;4981:7;4976:2;4968:6;4964:15;4957:32;;5050:2;5039:9;5035:18;5022:32;5017:2;5009:6;5005:15;4998:57;5116:2;5105:9;5101:18;5088:32;5083:2;5075:6;5071:15;5064:57;5183:3;5172:9;5168:19;5155:33;5149:3;5141:6;5137:16;5130:59;5241:3;5230:9;5226:19;5213:33;5255;5280:7;5255:33;:::i;:::-;5316:3;5304:16;;;;5297:33;4428:908;;-1:-1:-1;;4428:908:106:o;5341:744::-;5412:5;5465:3;5458:4;5450:6;5446:17;5442:27;5432:55;;5483:1;5480;5473:12;5432:55;5519:6;5506:20;5545:4;5569:73;5585:56;5638:2;5585:56;:::i;5569:73::-;5676:15;;;5738:4;5781:11;;;5769:24;;5765:33;;;5707:12;;;;5664:3;5810:15;;;5807:35;;;5838:1;5835;5828:12;5807:35;5874:2;5866:6;5862:15;5886:170;5902:6;5897:3;5894:15;5886:170;;;5968:45;6009:3;6004;5968:45;:::i;:::-;5956:58;;6034:12;;;;5919;;5886:170;;6090:150;6165:20;;6214:1;6204:12;;6194:40;;6230:1;6227;6220:12;6245:1291;6307:5;6355:6;6343:9;6338:3;6334:19;6330:32;6327:52;;;6375:1;6372;6365:12;6327:52;6397:22;;:::i;:::-;6388:31;;6442:29;6461:9;6442:29;:::i;:::-;6435:5;6428:44;6504:38;6538:2;6527:9;6523:18;6504:38;:::i;:::-;6499:2;6492:5;6488:14;6481:62;6594:2;6583:9;6579:18;6566:32;6617:18;6658:2;6650:6;6647:14;6644:34;;;6674:1;6671;6664:12;6644:34;6710:66;6772:3;6763:6;6752:9;6748:22;6710:66;:::i;:::-;6705:2;6698:5;6694:14;6687:90;6830:2;6819:9;6815:18;6802:32;6786:48;;6859:2;6849:8;6846:16;6843:36;;;6875:1;6872;6865:12;6843:36;;6911:76;6983:3;6972:8;6961:9;6957:24;6911:76;:::i;:::-;6906:2;6899:5;6895:14;6888:100;;7021:46;7062:3;7051:9;7047:19;7021:46;:::i;:::-;7015:3;7008:5;7004:15;6997:71;7129:3;7118:9;7114:19;7101:33;7095:3;7088:5;7084:15;7077:58;7196:3;7185:9;7181:19;7168:33;7162:3;7155:5;7151:15;7144:58;7263:3;7252:9;7248:19;7235:33;7229:3;7222:5;7218:15;7211:58;7288:3;7351:2;7340:9;7336:18;7323:32;7318:2;7311:5;7307:14;7300:56;;7375:3;7438:2;7427:9;7423:18;7410:32;7405:2;7398:5;7394:14;7387:56;;7462:3;7525:2;7514:9;7510:18;7497:32;7492:2;7485:5;7481:14;7474:56;;6245:1291;;;;:::o;7541:186::-;7609:20;;7669:32;7658:44;;7648:55;;7638:83;;7717:1;7714;7707:12;7732:589;7774:5;7827:3;7820:4;7812:6;7808:17;7804:27;7794:55;;7845:1;7842;7835:12;7794:55;7881:6;7868:20;7907:18;7903:2;7900:26;7897:52;;;7929:18;;:::i;:::-;7973:114;8081:4;8012:66;8005:4;8001:2;7997:13;7993:86;7989:97;7973:114;:::i;:::-;8112:2;8103:7;8096:19;8158:3;8151:4;8146:2;8138:6;8134:15;8130:26;8127:35;8124:55;;;8175:1;8172;8165:12;8124:55;8240:2;8233:4;8225:6;8221:17;8214:4;8205:7;8201:18;8188:55;8288:1;8263:16;;;8281:4;8259:27;8252:38;;;;8267:7;7732:589;-1:-1:-1;;;7732:589:106:o;8326:896::-;8386:5;8434:4;8422:9;8417:3;8413:19;8409:30;8406:50;;;8452:1;8449;8442:12;8406:50;8474:22;;:::i;:::-;8465:31;;8532:9;8519:23;8561:18;8602:2;8594:6;8591:14;8588:34;;;8618:1;8615;8608:12;8588:34;8645:62;8703:3;8694:6;8683:9;8679:22;8645:62;:::i;:::-;8638:5;8631:77;8740:38;8774:2;8763:9;8759:18;8740:38;:::i;:::-;8735:2;8728:5;8724:14;8717:62;8811:38;8845:2;8834:9;8830:18;8811:38;:::i;:::-;8806:2;8799:5;8795:14;8788:62;8903:2;8892:9;8888:18;8875:32;8859:48;;8932:2;8922:8;8919:16;8916:36;;;8948:1;8945;8938:12;8916:36;8984:47;9027:3;9016:8;9005:9;9001:24;8984:47;:::i;:::-;8979:2;8972:5;8968:14;8961:71;9085:3;9074:9;9070:19;9057:33;9041:49;;9115:2;9105:8;9102:16;9099:36;;;9131:1;9128;9121:12;9099:36;;9168:47;9211:3;9200:8;9189:9;9185:24;9168:47;:::i;:::-;9162:3;9155:5;9151:15;9144:72;;8326:896;;;;:::o;9227:929::-;9294:5;9347:3;9340:4;9332:6;9328:17;9324:27;9314:55;;9365:1;9362;9355:12;9314:55;9401:6;9388:20;9427:4;9451:73;9467:56;9520:2;9467:56;:::i;9451:73::-;9558:15;;;9644:1;9640:10;;;;9628:23;;9624:32;;;9589:12;;;;9668:15;;;9665:35;;;9696:1;9693;9686:12;9665:35;9732:2;9724:6;9720:15;9744:383;9760:6;9755:3;9752:15;9744:383;;;9846:3;9833:17;9882:18;9869:11;9866:35;9863:125;;;9942:1;9971:2;9967;9960:14;9863:125;10013:71;10080:3;10075:2;10061:11;10053:6;10049:24;10045:33;10013:71;:::i;:::-;10001:84;;-1:-1:-1;10105:12:106;;;;9777;;9744:383;;;-1:-1:-1;10145:5:106;9227:929;-1:-1:-1;;;;;;9227:929:106:o;10161:392::-;10249:8;10259:6;10313:3;10306:4;10298:6;10294:17;10290:27;10280:55;;10331:1;10328;10321:12;10280:55;-1:-1:-1;10354:20:106;;10397:18;10386:30;;10383:50;;;10429:1;10426;10419:12;10383:50;10466:4;10458:6;10454:17;10442:29;;10526:3;10519:4;10509:6;10506:1;10502:14;10494:6;10490:27;10486:38;10483:47;10480:67;;;10543:1;10540;10533:12;10480:67;10161:392;;;;;:::o;10558:1160::-;10812:6;10820;10828;10836;10844;10897:2;10885:9;10876:7;10872:23;10868:32;10865:52;;;10913:1;10910;10903:12;10865:52;10953:9;10940:23;10982:18;11023:2;11015:6;11012:14;11009:34;;;11039:1;11036;11029:12;11009:34;11062:74;11128:7;11119:6;11108:9;11104:22;11062:74;:::i;:::-;11052:84;;11189:2;11178:9;11174:18;11161:32;11145:48;;11218:2;11208:8;11205:16;11202:36;;;11234:1;11231;11224:12;11202:36;11273:97;11362:7;11351:8;11340:9;11336:24;11273:97;:::i;:::-;11389:8;;-1:-1:-1;11247:123:106;-1:-1:-1;11477:2:106;11462:18;;11449:32;;-1:-1:-1;11493:16:106;;;11490:36;;;11522:1;11519;11512:12;11490:36;;11561:97;11650:7;11639:8;11628:9;11624:24;11561:97;:::i;:::-;10558:1160;;;;-1:-1:-1;10558:1160:106;;-1:-1:-1;11677:8:106;;11535:123;10558:1160;-1:-1:-1;;;10558:1160:106:o;11723:184::-;11775:77;11772:1;11765:88;11872:4;11869:1;11862:15;11896:4;11893:1;11886:15;11912:139;11992:1;11985:5;11982:12;11972:46;;11998:18;;:::i;:::-;12027;;11912:139::o;12188:459::-;12254:43;12293:3;12285:5;12279:12;12254:43;:::i;:::-;12343:4;12336:5;12332:16;12326:23;-1:-1:-1;;;;;12460:2:106;12446:12;12442:21;12435:4;12430:3;12426:14;12419:45;12513:4;12506:5;12502:16;12496:23;12489:4;12484:3;12480:14;12473:47;12569:4;12562:5;12558:16;12552:23;12545:4;12540:3;12536:14;12529:47;12637:2;12629:4;12622:5;12618:16;12612:23;12608:32;12601:4;12596:3;12592:14;12585:56;;;12188:459;;:::o;12652:663::-;12714:3;12752:5;12746:12;12779:6;12774:3;12767:19;12805:4;12834:2;12829:3;12825:12;12818:19;;12871:2;12864:5;12860:14;12892:1;12902:388;12916:6;12913:1;12910:13;12902:388;;;12981:6;12975:13;13001:46;13043:3;13038:2;13032:9;13001:46;:::i;:::-;13093:11;;;13087:18;-1:-1:-1;;;;;13083:67:106;13076:4;13067:14;;13060:91;13201:4;13193:13;13187:20;13180:4;13171:14;;13164:44;13237:4;13228:14;;;;13265:15;;;;12938:1;12931:9;12902:388;;;-1:-1:-1;13306:3:106;;12652:663;-1:-1:-1;;;;;12652:663:106:o;13320:324::-;13553:2;13542:9;13535:21;13516:4;13573:65;13634:2;13623:9;13619:18;13611:6;13573:65;:::i;13831:395::-;13925:6;13978:2;13966:9;13957:7;13953:23;13949:32;13946:52;;;13994:1;13991;13984:12;13946:52;14034:9;14021:23;14067:18;14059:6;14056:30;14053:50;;;14099:1;14096;14089:12;14053:50;14122:22;;14178:3;14160:16;;;14156:26;14153:46;;;14195:1;14192;14185:12;14413:1817;14833:6;14841;14849;14857;14865;14873;14881;14889;14897;14905;14958:3;14946:9;14937:7;14933:23;14929:33;14926:53;;;14975:1;14972;14965:12;14926:53;15015:9;15002:23;15044:18;15085:2;15077:6;15074:14;15071:34;;;15101:1;15098;15091:12;15071:34;15124:74;15190:7;15181:6;15170:9;15166:22;15124:74;:::i;:::-;15114:84;;15251:2;15240:9;15236:18;15223:32;15207:48;;15280:2;15270:8;15267:16;15264:36;;;15296:1;15293;15286:12;15264:36;15335:97;15424:7;15413:8;15402:9;15398:24;15335:97;:::i;:::-;15451:8;;-1:-1:-1;15309:123:106;-1:-1:-1;15539:2:106;15524:18;;15511:32;;-1:-1:-1;15555:16:106;;;15552:36;;;15584:1;15581;15574:12;15552:36;15623:97;15712:7;15701:8;15690:9;15686:24;15623:97;:::i;:::-;15739:8;;-1:-1:-1;15597:123:106;-1:-1:-1;15827:2:106;15812:18;;15799:32;;-1:-1:-1;15843:16:106;;;15840:36;;;15872:1;15869;15862:12;15840:36;;15911:97;16000:7;15989:8;15978:9;15974:24;15911:97;:::i;:::-;16027:8;;-1:-1:-1;15885:123:106;-1:-1:-1;;16109:3:106;16094:19;;16081:33;;-1:-1:-1;16133:39:106;16167:3;16152:19;;16133:39;:::i;:::-;16123:49;;16219:3;16208:9;16204:19;16191:33;16181:43;;14413:1817;;;;;;;;;;;;;:::o;16235:879::-;16551:2;16563:21;;;16633:13;;16536:18;;;16655:22;;;16503:4;;16730;;16708:2;16693:18;;;16757:15;;;16503:4;16800:185;16814:6;16811:1;16808:13;16800:185;;;16889:13;;16882:21;16875:29;16863:42;;16925:12;;;;16960:15;;;;16836:1;16829:9;16800:185;;;16804:3;;;17030:9;17025:3;17021:19;17016:2;17005:9;17001:18;16994:47;17058:50;17104:3;17096:6;17058:50;:::i;:::-;17050:58;16235:879;-1:-1:-1;;;;;;16235:879:106:o;17119:487::-;17230:6;17238;17291:2;17279:9;17270:7;17266:23;17262:32;17259:52;;;17307:1;17304;17297:12;17259:52;17347:9;17334:23;17380:18;17372:6;17369:30;17366:50;;;17412:1;17409;17402:12;17366:50;17451:95;17538:7;17529:6;17518:9;17514:22;17451:95;:::i;:::-;17565:8;;17425:121;;-1:-1:-1;17119:487:106;-1:-1:-1;;;;17119:487:106:o;17803:879::-;17981:6;17989;17997;18005;18058:2;18046:9;18037:7;18033:23;18029:32;18026:52;;;18074:1;18071;18064:12;18026:52;18114:9;18101:23;18143:18;18184:2;18176:6;18173:14;18170:34;;;18200:1;18197;18190:12;18170:34;18239:95;18326:7;18317:6;18306:9;18302:22;18239:95;:::i;:::-;18353:8;;-1:-1:-1;18213:121:106;-1:-1:-1;18441:2:106;18426:18;;18413:32;;-1:-1:-1;18457:16:106;;;18454:36;;;18486:1;18483;18476:12;18454:36;;18525:97;18614:7;18603:8;18592:9;18588:24;18525:97;:::i;:::-;17803:879;;;;-1:-1:-1;18641:8:106;-1:-1:-1;;;;17803:879:106:o;18687:452::-;18780:6;18788;18841:2;18829:9;18820:7;18816:23;18812:32;18809:52;;;18857:1;18854;18847:12;18809:52;18897:9;18884:23;18930:18;18922:6;18919:30;18916:50;;;18962:1;18959;18952:12;18916:50;18985:22;;19041:2;19023:16;;;19019:25;19016:45;;;19057:1;19054;19047:12;19016:45;19080:2;19129;19114:18;;;;19101:32;;-1:-1:-1;;;18687:452:106:o;19144:994::-;19326:6;19334;19342;19350;19358;19411:3;19399:9;19390:7;19386:23;19382:33;19379:53;;;19428:1;19425;19418:12;19379:53;19468:9;19455:23;19497:18;19538:2;19530:6;19527:14;19524:34;;;19554:1;19551;19544:12;19524:34;19577:22;;;;19633:3;19615:16;;;19611:26;19608:46;;;19650:1;19647;19640:12;19608:46;19673:2;;-1:-1:-1;19728:2:106;19713:18;;19700:32;;19744:16;;;19741:36;;;19773:1;19770;19763:12;19741:36;;19812:97;19901:7;19890:8;19879:9;19875:24;19812:97;:::i;:::-;19928:8;;-1:-1:-1;19786:123:106;-1:-1:-1;;20010:2:106;19995:18;;19982:32;;-1:-1:-1;20064:2:106;20049:18;;20036:32;20077:31;20036:32;20077:31;:::i;:::-;20127:5;20117:15;;;19144:994;;;;;;;;:::o;20143:1460::-;20478:6;20486;20494;20502;20510;20518;20526;20534;20587:3;20575:9;20566:7;20562:23;20558:33;20555:53;;;20604:1;20601;20594:12;20555:53;20644:9;20631:23;20673:18;20714:2;20706:6;20703:14;20700:34;;;20730:1;20727;20720:12;20700:34;20769:95;20856:7;20847:6;20836:9;20832:22;20769:95;:::i;:::-;20883:8;;-1:-1:-1;20743:121:106;-1:-1:-1;20971:2:106;20956:18;;20943:32;;-1:-1:-1;20987:16:106;;;20984:36;;;21016:1;21013;21006:12;20984:36;21055:97;21144:7;21133:8;21122:9;21118:24;21055:97;:::i;:::-;21171:8;;-1:-1:-1;21029:123:106;-1:-1:-1;21259:2:106;21244:18;;21231:32;;-1:-1:-1;21275:16:106;;;21272:36;;;21304:1;21301;21294:12;21272:36;;21343:97;21432:7;21421:8;21410:9;21406:24;21343:97;:::i;:::-;20143:1460;;;;-1:-1:-1;20143:1460:106;;;;21459:8;;21541:2;21526:18;;21513:32;;21592:3;21577:19;21564:33;;-1:-1:-1;20143:1460:106;-1:-1:-1;;;;20143:1460:106:o;21608:247::-;21667:6;21720:2;21708:9;21699:7;21695:23;21691:32;21688:52;;;21736:1;21733;21726:12;21688:52;21775:9;21762:23;21794:31;21819:5;21794:31;:::i;21860:411::-;22065:2;22054:9;22047:21;22028:4;22085:45;22126:2;22115:9;22111:18;22103:6;22085:45;:::i;:::-;22077:53;;22166:6;22161:2;22150:9;22146:18;22139:34;-1:-1:-1;;;;;22213:6:106;22209:55;22204:2;22193:9;22189:18;22182:83;21860:411;;;;;;:::o;22276:400::-;22375:6;22428:2;22416:9;22407:7;22403:23;22399:32;22396:52;;;22444:1;22441;22434:12;22396:52;22484:9;22471:23;22517:18;22509:6;22506:30;22503:50;;;22549:1;22546;22539:12;22503:50;22572:22;;22628:3;22610:16;;;22606:26;22603:46;;;22645:1;22642;22635:12;23183:2710;23369:9;23404:77;23420:60;23473:6;23420:60;:::i;23404:77::-;23515:19;;;23553:4;23573:12;;;;23503:3;23604:1;23639:15;;;23628:27;;23678:14;23667:26;;23664:46;;;23706:1;23703;23696:12;23664:46;23730:5;23744:2116;23760:6;23755:3;23752:15;23744:2116;;;23846:3;23833:17;23873:18;23923:2;23910:11;23907:19;23904:109;;;23967:1;23996:2;23992;23985:14;23904:109;24047:11;24040:5;24036:23;24026:33;;24104:4;24099:2;24083:14;24079:23;24075:34;24072:124;;;24150:1;24179:2;24175;24168:14;24072:124;24224:22;;:::i;:::-;24288:2;24275:16;24266:7;24259:33;24341:2;24337;24333:11;24320:25;24380:1;24371:7;24368:14;24358:112;;24424:1;24453:2;24449;24442:14;24358:112;24490:16;;;24483:33;24539:2;24592:11;;;24579:25;24561:16;;;24554:51;24628:2;24681:11;;;24668:25;24650:16;;;24643:51;24718:3;24761:12;;;24748:26;24790:14;;;24787:107;;;24846:1;24876:3;24871;24864:16;24787:107;24918:15;;;;;24976:14;24969:4;24960:14;;24956:35;24946:136;;25034:1;25023:12;;25064:3;25059;25052:16;24946:136;25119:3;25106:17;25095:28;;25149:74;25165:57;25218:3;25165:57;:::i;25149:74::-;25267:18;;;25363:12;;;25354:22;;25350:31;;;25307:14;;;;25410;25397:28;;25394:121;;;25467:1;25497:3;25492;25485:16;25394:121;25541:12;;;;25566:174;25584:8;25577:5;25574:19;25566:174;;;25666:19;;25652:34;;25605:14;;;;25712;;;;25566:174;;;25760:17;;;25753:32;;;;-1:-1:-1;25798:20:106;;-1:-1:-1;;25838:12:106;;;;23777;;23744:2116;;;-1:-1:-1;25882:5:106;;23183:2710;-1:-1:-1;;;;;;;23183:2710:106:o;25898:636::-;26020:4;26026:6;26086:11;26073:25;26176:66;26165:8;26149:14;26145:29;26141:102;26121:18;26117:127;26107:155;;26258:1;26255;26248:12;26107:155;26285:33;;26337:20;;;-1:-1:-1;26380:18:106;26369:30;;26366:50;;;26412:1;26409;26402:12;26366:50;26445:4;26433:17;;-1:-1:-1;26504:4:106;26492:17;;26476:14;26472:38;26462:49;;26459:69;;;26524:1;26521;26514:12;26539:232;26625:6;26678:3;26666:9;26657:7;26653:23;26649:33;26646:53;;;26695:1;26692;26685:12;26646:53;26718:47;26757:7;26746:9;26718:47;:::i;26776:644::-;26906:4;26912:6;26972:11;26959:25;27062:66;27051:8;27035:14;27031:29;27027:102;27007:18;27003:127;26993:155;;27144:1;27141;27134:12;26993:155;27171:33;;27223:20;;;-1:-1:-1;27266:18:106;27255:30;;27252:50;;;27298:1;27295;27288:12;27252:50;27331:4;27319:17;;-1:-1:-1;27390:4:106;27378:17;;27362:14;27358:38;27348:49;;27345:69;;;27410:1;27407;27400:12;27425:248;27519:6;27572:3;27560:9;27551:7;27547:23;27543:33;27540:53;;;27589:1;27586;27579:12;27540:53;27612:55;27659:7;27648:9;27612:55;:::i;27678:207::-;27751:6;27804:2;27792:9;27783:7;27779:23;27775:32;27772:52;;;27820:1;27817;27810:12;27772:52;27843:36;27869:9;27843:36;:::i;27890:211::-;28004:9;28041:54;28080:14;28073:5;28041:54;:::i;28106:184::-;28158:77;28155:1;28148:88;28255:4;28252:1;28245:15;28279:4;28276:1;28269:15;28295:195;28334:3;-1:-1:-1;;28358:5:106;28355:77;28352:103;;28435:18;;:::i;:::-;-1:-1:-1;28482:1:106;28471:13;;28295:195::o;28495:184::-;28547:77;28544:1;28537:88;28644:4;28641:1;28634:15;28668:4;28665:1;28658:15;28684:543;28902:13;;28845:3;;28876;;28955:4;28982:15;;;28845:3;29025:175;29039:6;29036:1;29033:13;29025:175;;;29102:13;;29088:28;;29138:14;;;;29175:15;;;;29061:1;29054:9;29025:175;;;-1:-1:-1;29216:5:106;;28684:543;-1:-1:-1;;;;;;28684:543:106:o;29232:114::-;29314:1;29307:5;29304:12;29294:46;;29320:18;;:::i;29351:132::-;29412:38;29444:5;29412:38;:::i;29488:1110::-;29957:25;;;-1:-1:-1;;;;;30079:15:106;;;30074:2;30059:18;;30052:43;30131:15;;30126:2;30111:18;;30104:43;30178:2;30163:18;;30156:34;;;30221:3;30206:19;;30199:35;;;29944:3;29929:19;;30243:39;30275:6;30243:39;:::i;:::-;30313:3;30298:19;;30291:35;;;;30357:3;30342:19;;30335:35;;;;30401:3;30386:19;;30379:35;;;;30445:3;30430:19;;30423:35;;;;30489:3;30474:19;;30467:35;30533:3;30518:19;;30511:36;30578:3;30563:19;;;30556:36;29488:1110;;-1:-1:-1;;;;;29488:1110:106:o;30603:489::-;30670:5;30718:4;30706:9;30701:3;30697:19;30693:30;30690:50;;;30736:1;30733;30726:12;30690:50;30769:4;30763:11;30813:4;30805:6;30801:17;30884:6;30872:10;30869:22;30848:18;30836:10;30833:34;30830:62;30827:88;;;30895:18;;:::i;:::-;30931:4;30924:24;30996:23;;30981:39;;31081:2;31066:18;;;31053:32;31036:15;;;31029:57;;;;-1:-1:-1;30966:6:106;30603:489;-1:-1:-1;30603:489:106:o;31097:1832::-;31343:9;31378:77;31394:60;31447:6;31394:60;:::i;31378:77::-;31477:3;31501:6;31496:3;31489:19;31527:4;31556:2;31551:3;31547:12;31540:19;;31600:6;31597:1;31593:14;31586:5;31582:26;31631:14;31623:6;31620:26;31617:46;;;31659:1;31656;31649:12;31617:46;31683:5;31697:1199;31713:6;31708:3;31705:15;31697:1199;;;31799:3;31786:17;31835:18;31822:11;31819:35;31816:125;;;31895:1;31924:2;31920;31913:14;31816:125;31964:23;;32029:14;32022:4;32014:13;;32010:34;32000:132;;32086:1;32115:2;32111;32104:14;32000:132;32168:2;32155:16;32197:73;32213:56;32266:2;32213:56;:::i;32197:73::-;32314:17;;;32412:1;32408:10;;;;32400:19;;32396:28;;;32353:14;;;;32453;32440:28;;32437:118;;;32509:1;32538:2;32534;32527:14;32437:118;32581:11;;;;32605:218;32623:8;32616:5;32613:19;32605:218;;;32707:61;32753:14;32746:5;32707:61;:::i;:::-;32700:5;32693:76;32806:2;32799:5;32795:14;32786:23;;32655:4;32648:5;32644:16;32635:25;;32605:218;;;32836:18;;-1:-1:-1;;;32874:12:106;;;;31730;;31697:1199;;;-1:-1:-1;32918:5:106;;31097:1832;-1:-1:-1;;;;;;31097:1832:106:o;32934:381::-;33025:4;33083:11;33070:25;33173:66;33162:8;33146:14;33142:29;33138:102;33118:18;33114:127;33104:155;;33255:1;33252;33245:12;33104:155;33276:33;;;;;32934:381;-1:-1:-1;;32934:381:106:o;33320:391::-;33421:4;33479:11;33466:25;33569:66;33558:8;33542:14;33538:29;33534:102;33514:18;33510:127;33500:155;;33651:1;33648;33641:12;33716:217;33834:9;33871:56;33912:14;33905:5;33871:56;:::i;33938:580::-;34015:4;34021:6;34081:11;34068:25;34171:66;34160:8;34144:14;34140:29;34136:102;34116:18;34112:127;34102:155;;34253:1;34250;34243:12;34102:155;34280:33;;34332:20;;;-1:-1:-1;34375:18:106;34364:30;;34361:50;;;34407:1;34404;34397:12;34361:50;34440:4;34428:17;;-1:-1:-1;34471:14:106;34467:27;;;34457:38;;34454:58;;;34508:1;34505;34498:12;34523:473;34588:3;34626:5;34620:12;34653:6;34648:3;34641:19;34679:4;34708:2;34703:3;34699:12;34692:19;;34745:2;34738:5;34734:14;34766:1;34776:195;34790:6;34787:1;34784:13;34776:195;;;34839:50;34885:3;34876:6;34870:13;34839:50;:::i;:::-;34918:4;34909:14;;;;;34946:15;;;;34812:1;34805:9;34776:195;;35001:1433;35391:4;35420:3;35461:2;35450:9;35446:18;35491:6;35480:9;35473:25;35517:2;-1:-1:-1;;;;;35628:2:106;35620:6;35616:15;35611:2;35600:9;35596:18;35589:43;35651:2;35689;35684;35673:9;35669:18;35662:30;35712:6;35747;35741:13;35778:6;35770;35763:22;35816:3;35805:9;35801:19;35794:26;;35855:2;35847:6;35843:15;35829:29;;35876:1;35886:414;35900:6;35897:1;35894:13;35886:414;;;35965:6;35959:13;35985:40;36021:3;36016:2;36010:9;35985:40;:::i;:::-;36069:11;;;36063:18;36059:27;;36045:12;;;36038:49;36127:11;;;36121:18;36107:12;;;36100:40;36163:4;36207:11;;;36201:18;36187:12;;;36180:40;36275:15;;;;36240:12;;;;35922:1;35915:9;35886:414;;;35890:3;;36347:9;36342:3;36338:19;36331:4;36320:9;36316:20;36309:49;36375:53;36424:3;36416:6;36375:53;:::i;:::-;36367:61;35001:1433;-1:-1:-1;;;;;;;;;;;;35001:1433:106:o;36439:276::-;36517:6;36570:2;36558:9;36549:7;36545:23;36541:32;36538:52;;;36586:1;36583;36576:12;36538:52;36625:9;36612:23;36664:2;36657:5;36654:13;36644:41;;36681:1;36678;36671:12;37376:196;37415:3;37443:5;37433:39;;37452:18;;:::i;:::-;-1:-1:-1;;;37488:78:106;;37376:196::o;37969:644::-;38102:4;38108:6;38168:11;38155:25;38258:66;38247:8;38231:14;38227:29;38223:102;38203:18;38199:127;38189:155;;38340:1;38337;38330:12;38189:155;38367:33;;38419:20;;;-1:-1:-1;38462:18:106;38451:30;;38448:50;;;38494:1;38491;38484:12;38448:50;38527:4;38515:17;;-1:-1:-1;38578:1:106;38574:14;;;38558;38554:35;38544:46;;38541:66;;;38603:1;38600;38593:12;38618:125;38658:4;38686:1;38683;38680:8;38677:34;;;38691:18;;:::i;:::-;-1:-1:-1;38728:9:106;;38618:125::o;38748:613::-;39046:25;;;39033:3;39018:19;;39080:52;39128:2;39113:18;;39105:6;39080:52;:::i;:::-;-1:-1:-1;;;;;39172:6:106;39168:55;39163:2;39152:9;39148:18;39141:83;39260:6;39255:2;39244:9;39240:18;39233:34;39304:6;39298:3;39287:9;39283:19;39276:35;39348:6;39342:3;39331:9;39327:19;39320:35;38748:613;;;;;;;;;:::o;39366:731::-;39708:25;;;39695:3;39680:19;;39742:52;39790:2;39775:18;;39767:6;39742:52;:::i;:::-;-1:-1:-1;;;;;39903:2:106;39895:6;39891:15;39886:2;39875:9;39871:18;39864:43;39943:6;39938:2;39927:9;39923:18;39916:34;39987:6;39981:3;39970:9;39966:19;39959:35;40031:6;40025:3;40014:9;40010:19;40003:35;40087:2;40079:6;40075:15;40069:3;40058:9;40054:19;40047:44;;39366:731;;;;;;;;;;:::o;40102:128::-;40142:3;40173:1;40169:6;40166:1;40163:13;40160:39;;;40179:18;;:::i;:::-;-1:-1:-1;40215:9:106;;40102:128::o;40235:228::-;40275:7;40401:1;-1:-1:-1;;40329:74:106;40326:1;40323:81;40318:1;40311:9;40304:17;40300:105;40297:131;;;40408:18;;:::i;:::-;-1:-1:-1;40448:9:106;;40235:228::o;40468:184::-;40520:77;40517:1;40510:88;40617:4;40614:1;40607:15;40641:4;40638:1;40631:15;40657:120;40697:1;40723;40713:35;;40728:18;;:::i;:::-;-1:-1:-1;40762:9:106;;40657:120::o;41430:583::-;41526:6;41579:2;41567:9;41558:7;41554:23;41550:32;41547:52;;;41595:1;41592;41585:12;41547:52;41628:2;41622:9;41670:2;41662:6;41658:15;41739:6;41727:10;41724:22;41703:18;41691:10;41688:34;41685:62;41682:88;;;41750:18;;:::i;:::-;41786:2;41779:22;41825:23;;41810:39;;41899:2;41884:18;;41871:32;41912:31;41871:32;41912:31;:::i;:::-;41971:2;41959:15;;41952:30;41963:6;41430:583;-1:-1:-1;;;41430:583:106:o;42018:508::-;42175:3;42206;42253:6;42175:3;42287:203;42301:4;42298:1;42295:11;42287:203;;;42365:13;;42351:28;;42402:4;42428:14;;;;42465:15;;;;42321:4;42314:12;42287:203;;;42291:3;;;42515:4;42510:3;42506:14;42499:21;;42018:508;;;;:::o;42531:253::-;42628:6;42681:2;42669:9;42660:7;42656:23;42652:32;42649:52;;;42697:1;42694;42687:12;42649:52;42720:58;42770:7;42759:9;42720:58;:::i;43113:135::-;43189:1;43182:5;43179:12;43169:46;;43195:18;;:::i;43253:198::-;43394:2;43379:18;;43406:39;43383:9;43427:6;43406:39;:::i;43853:245::-;43932:6;43940;43993:2;43981:9;43972:7;43968:23;43964:32;43961:52;;;44009:1;44006;43999:12;43961:52;-1:-1:-1;;44032:16:106;;44088:2;44073:18;;;44067:25;44032:16;;44067:25;;-1:-1:-1;43853:245:106:o;44103:204::-;44141:3;44177:4;44174:1;44170:12;44209:4;44206:1;44202:12;44244:3;44238:4;44234:14;44229:3;44226:23;44223:49;;;44252:18;;:::i;:::-;44288:13;;44103:204;-1:-1:-1;;;44103:204:106:o;45379:336::-;45448:6;45501:2;45489:9;45480:7;45476:23;45472:32;45469:52;;;45517:1;45514;45507:12;45469:52;45549:9;45543:16;45599:66;45592:5;45588:78;45581:5;45578:89;45568:117;;45681:1;45678;45671:12;45720:838;45782:3;45820:5;45814:12;45847:6;45842:3;45835:19;45873:4;45902:2;45897:3;45893:12;45886:19;;45939:2;45932:5;45928:14;45960:1;45970:563;45984:6;45981:1;45978:13;45970:563;;;46049:6;46043:13;46069:40;46105:3;46100:2;46094:9;46069:40;:::i;:::-;46153:11;;;46147:18;-1:-1:-1;;;;;46143:67:106;46129:12;;;46122:89;46234:4;46278:11;;;46272:18;46258:12;;;46251:40;46314:4;46358:11;;;46352:18;46338:12;;;46331:40;46394:4;46438:11;;;46432:18;46418:12;;;46411:40;46480:4;46471:14;;;;46508:15;;;;46006:1;45999:9;45970:563;;46563:1005;46633:3;46671:5;46665:12;46698:6;46693:3;46686:19;46724:4;46753:2;46748:3;46744:12;46737:19;;46790:2;46783:5;46779:14;46811:1;46821:722;46835:6;46832:1;46829:13;46821:722;;;46900:6;46894:13;46920:40;46956:3;46951:2;46945:9;46920:40;:::i;:::-;46999:11;;;46993:18;-1:-1:-1;;;;;47110:21:106;;;47096:12;;;47089:43;47155:4;47199:11;;;47193:18;47179:12;;;47172:40;47235:4;47279:11;;;47273:18;47259:12;;;47252:40;47315:4;47359:11;;;47353:18;47339:12;;;47332:40;47395:4;47443:11;;;47437:18;47433:27;47419:12;;;47412:49;47490:4;47481:14;;;;47518:15;;;;46857:1;46850:9;46821:722;;47695:435;47748:3;47786:5;47780:12;47813:6;47808:3;47801:19;47839:4;47868:2;47863:3;47859:12;47852:19;;47905:2;47898:5;47894:14;47926:1;47936:169;47950:6;47947:1;47944:13;47936:169;;;48011:13;;47999:26;;48045:12;;;;48080:15;;;;47972:1;47965:9;47936:169;;48135:1146;48204:3;48242:5;48236:12;48269:6;48264:3;48257:19;48295:4;48336:2;48331:3;48327:12;48361:11;48388;48381:18;;48438:6;48435:1;48431:14;48424:5;48420:26;48408:38;;48480:2;48473:5;48469:14;48501:1;48511:744;48525:6;48522:1;48519:13;48511:744;;;48596:5;48590:4;48586:16;48581:3;48574:29;48632:6;48626:13;48662:4;48698:2;48692:9;48686:4;48679:23;48749:2;48745;48741:11;48735:18;48766:49;48811:2;48805:4;48801:13;48787:12;48766:49;:::i;:::-;-1:-1:-1;48838:4:106;48883:11;;;48877:18;48862:13;;;48855:41;48919:4;48964:11;;;48958:18;48943:13;;;48936:41;49000:4;49045:11;;;49039:18;49077:13;;;49070:25;;;49116:59;49161:13;;;49039:18;49116:59;:::i;:::-;49233:12;;;;49108:67;-1:-1:-1;;;49198:15:106;;;;48547:1;48540:9;48511:744;;;-1:-1:-1;49271:4:106;;48135:1146;-1:-1:-1;;;;;;;48135:1146:106:o;49286:2953::-;49757:6;49746:9;49739:25;-1:-1:-1;;;;;49804:6:106;49800:55;49795:2;49784:9;49780:18;49773:83;49892:3;49887:2;49876:9;49872:18;49865:31;49720:4;49915:3;49953:6;49947:13;49997:3;49991;49980:9;49976:19;49969:32;50010:59;50065:2;50054:9;50050:18;50035:12;50029:19;-1:-1:-1;;;;;12122:54:106;12110:67;;12056:127;50010:59;50124:2;50110:12;50106:21;50100:28;50147:6;50162:54;50212:2;50201:9;50197:18;50181:14;-1:-1:-1;;;;;12122:54:106;12110:67;;12056:127;50162:54;50271:2;50257:12;50253:21;50247:28;50225:50;;50312:2;50306:3;50295:9;50291:19;50284:31;;50338:74;50407:3;50396:9;50392:19;50376:14;50338:74;:::i;:::-;50324:88;;50467:4;50453:12;50449:23;50443:30;50538:66;50526:9;50518:6;50514:22;50510:95;50504:3;50493:9;50489:19;50482:124;50629:69;50691:6;50675:14;50629:69;:::i;:::-;50615:83;;;50753:4;50739:12;50735:23;50729:30;50768:62;50825:3;50814:9;50810:19;50794:14;50768:62;:::i;:::-;;50891:3;50877:12;50873:22;50867:29;50861:3;50850:9;50846:19;50839:58;50958:4;50944:12;50940:23;50934:30;50928:3;50917:9;50913:19;50906:59;51026:4;51012:12;51008:23;51002:30;50996:3;50985:9;50981:19;50974:59;51052:6;51119:2;51105:12;51101:21;51095:28;51089:3;51078:9;51074:19;51067:57;51143:6;51210:2;51196:12;51192:21;51186:28;51180:3;51169:9;51165:19;51158:57;51276:2;51262:12;51258:21;51252:28;51246:3;51235:9;51231:19;51224:57;51330:2;51322:6;51318:15;51312:22;51290:44;;51343:56;51393:4;51382:9;51378:20;51362:14;47650:32;47639:44;47627:57;;47573:117;51343:56;51448:2;51436:15;;51430:22;47650:32;47639:44;51511:4;51496:20;;47627:57;51566:4;51554:17;;51548:24;51697:22;;;-1:-1:-1;51693:31:106;;;51673:18;;;51666:59;51548:24;;-1:-1:-1;;;51748:41:106;51701:6;51548:24;51748:41;:::i;:::-;51734:55;;51838:4;51830:6;51826:17;51820:24;51798:46;;51908:2;51896:9;51888:6;51884:22;51880:31;51875:2;51864:9;51860:18;51853:59;;;51932:41;51966:6;51950:14;51932:41;:::i;:::-;51921:52;;;;52020:9;52015:3;52011:19;52004:4;51993:9;51989:20;51982:49;52054:41;52091:3;52083:6;52054:41;:::i;:::-;52040:55;;52145:9;52137:6;52133:22;52126:4;52115:9;52111:20;52104:52;52173:60;52226:6;52218;52173:60;:::i;:::-;52165:68;49286:2953;-1:-1:-1;;;;;;;;49286:2953:106:o;52244:112::-;52276:1;52302;52292:35;;52307:18;;:::i;:::-;-1:-1:-1;52341:9:106;;52244:112::o;53837:331::-;53942:9;53953;53995:8;53983:10;53980:24;53977:44;;;54017:1;54014;54007:12;53977:44;54046:6;54036:8;54033:20;54030:40;;;54066:1;54063;54056:12;54030:40;-1:-1:-1;;54092:23:106;;;54137:25;;;;;-1:-1:-1;53837:331:106:o;56778:1309::-;57015:2;57067:21;;;57137:13;;57040:18;;;57159:22;;;56986:4;;57015:2;57200;;57218:18;;;;57259:15;;;56986:4;57302:759;57316:6;57313:1;57310:13;57302:759;;;57381:6;57375:13;57417:2;57411:9;57433:35;57465:2;57433:35;:::i;:::-;57481:15;;57535:11;;;57529:18;-1:-1:-1;;;;;57646:21:106;;;57632:12;;;57625:43;57712:11;;;57706:18;57702:27;;57688:12;;;57681:49;57753:4;57801:11;;;57795:18;57791:27;;;57777:12;;;57770:49;57842:4;57886:11;;;57880:18;57866:12;;;57859:40;57922:4;57966:11;;;57960:18;57946:12;;;57939:40;58008:4;57999:14;;;;58036:15;;;;57338:1;57331:9;57302:759;;58092:289;58267:6;58256:9;58249:25;58310:2;58305;58294:9;58290:18;58283:30;58230:4;58330:45;58371:2;58360:9;58356:18;58348:6;58330:45;:::i;58386:274::-;58515:3;58553:6;58547:13;58569:53;58615:6;58610:3;58603:4;58595:6;58591:17;58569:53;:::i;59229:277::-;59296:6;59349:2;59337:9;59328:7;59324:23;59320:32;59317:52;;;59365:1;59362;59355:12;59317:52;59397:9;59391:16;59450:5;59443:13;59436:21;59429:5;59426:32;59416:60;;59472:1;59469;59462:12",
    "linkReferences": {},
    "immutableReferences": {
      "36358": [
        {
          "start": 14329,
          "length": 32
        }
      ],
      "36360": [
        {
          "start": 14366,
          "length": 32
        }
      ],
      "36362": [
        {
          "start": 14287,
          "length": 32
        }
      ],
      "36364": [
        {
          "start": 9001,
          "length": 32
        },
        {
          "start": 16368,
          "length": 32
        }
      ],
      "36366": [
        {
          "start": 9111,
          "length": 32
        },
        {
          "start": 14861,
          "length": 32
        }
      ],
      "36368": [
        {
          "start": 3198,
          "length": 32
        },
        {
          "start": 16702,
          "length": 32
        }
      ],
      "36370": [
        {
          "start": 14243,
          "length": 32
        }
      ],
      "36372": [
        {
          "start": 14447,
          "length": 32
        }
      ],
      "36375": [
        {
          "start": 4767,
          "length": 32
        },
        {
          "start": 27714,
          "length": 32
        }
      ],
      "36377": [
        {
          "start": 27763,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "fd9f1e10",
    "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": "e7acab24",
    "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": "87201b41",
    "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": "ed98a574",
    "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": "fb0f3ee1",
    "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": "b3a34c4c",
    "getCounter(address)": "f07ec373",
    "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": "79df72bd",
    "getOrderStatus(bytes32)": "46423aa7",
    "incrementCounter()": "5b34b966",
    "information()": "f47b7740",
    "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "55944a42",
    "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "a8174404",
    "name()": "06fdde03",
    "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": "88147732"
  },
  "ast": {
    "absolutePath": "reference/ReferenceConsideration.sol",
    "id": 33195,
    "exportedSymbols": {
      "AccumulatorStruct": [
        36677
      ],
      "AdvancedOrder": [
        4844
      ],
      "BasicOrderParameters": [
        4793
      ],
      "ConsiderationInterface": [
        2085
      ],
      "CriteriaResolver": [
        4866
      ],
      "Execution": [
        4888
      ],
      "Fulfillment": [
        4875
      ],
      "FulfillmentComponent": [
        4880
      ],
      "Order": [
        4832
      ],
      "OrderComponents": [
        4705
      ],
      "OrderParameters": [
        4826
      ],
      "OrderStatus": [
        4853
      ],
      "OrderToExecute": [
        36659
      ],
      "ReferenceConsideration": [
        33194
      ],
      "ReferenceOrderCombiner": [
        40399
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:29127:68",
    "nodes": [
      {
        "id": 32695,
        "nodeType": "PragmaDirective",
        "src": "32:23:68",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 32697,
        "nodeType": "ImportDirective",
        "src": "76:93:68",
        "absolutePath": "contracts/interfaces/ConsiderationInterface.sol",
        "file": "contracts/interfaces/ConsiderationInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33195,
        "sourceUnit": 2086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32696,
              "name": "ConsiderationInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2085,
              "src": "89:22:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32708,
        "nodeType": "ImportDirective",
        "src": "190:251:68",
        "absolutePath": "contracts/lib/ConsiderationStructs.sol",
        "file": "contracts/lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33195,
        "sourceUnit": 4889,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32698,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4705,
              "src": "203:15:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32699,
              "name": "BasicOrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4793,
              "src": "224:20:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32700,
              "name": "OrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4826,
              "src": "250:15:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32701,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4832,
              "src": "271:5:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32702,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4844,
              "src": "282:13:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32703,
              "name": "OrderStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4853,
              "src": "301:11:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32704,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4866,
              "src": "318:16:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32705,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4875,
              "src": "340:11:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32706,
              "name": "FulfillmentComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4880,
              "src": "357:20:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32707,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4888,
              "src": "383:9:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32710,
        "nodeType": "ImportDirective",
        "src": "443:74:68",
        "absolutePath": "reference/lib/ReferenceOrderCombiner.sol",
        "file": "./lib/ReferenceOrderCombiner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33195,
        "sourceUnit": 40400,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32709,
              "name": "ReferenceOrderCombiner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40399,
              "src": "452:22:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32713,
        "nodeType": "ImportDirective",
        "src": "519:92:68",
        "absolutePath": "reference/lib/ReferenceConsiderationStructs.sol",
        "file": "./lib/ReferenceConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33195,
        "sourceUnit": 36678,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32711,
              "name": "OrderToExecute",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36659,
              "src": "528:14:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32712,
              "name": "AccumulatorStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36677,
              "src": "544:17:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33194,
        "nodeType": "ContractDefinition",
        "src": "1299:27859:68",
        "nodes": [
          {
            "id": 32728,
            "nodeType": "FunctionDefinition",
            "src": "1754:95:68",
            "body": {
              "id": 32727,
              "nodeType": "Block",
              "src": "1847:2:68",
              "statements": []
            },
            "documentation": {
              "id": 32719,
              "nodeType": "StructuredDocumentation",
              "src": "1395:354:68",
              "text": " @notice Derive and set hashes, reference chainId, and associated domain\n         separator during deployment.\n @param conduitController A contract that deploys conduits, or proxies\n                          that may optionally be used to transfer approved\n                          ERC20/721/1155 tokens."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32724,
                    "name": "conduitController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32721,
                    "src": "1824:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 32725,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32723,
                  "name": "ReferenceOrderCombiner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40399,
                  "src": "1801:22:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1801:41:68"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32721,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "1774:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32728,
                  "src": "1766:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:27:68"
            },
            "returnParameters": {
              "id": 32726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1847:0:68"
            },
            "scope": 33194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32749,
            "nodeType": "FunctionDefinition",
            "src": "3530:315:68",
            "body": {
              "id": 32748,
              "nodeType": "Block",
              "src": "3726:119:68",
              "statements": [
                {
                  "expression": {
                    "id": 32746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32742,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32740,
                      "src": "3785:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32744,
                          "name": "parameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32732,
                          "src": "3827:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$4793_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$4793_calldata_ptr",
                            "typeString": "struct BasicOrderParameters calldata"
                          }
                        ],
                        "id": 32743,
                        "name": "_validateAndFulfillBasicOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35647,
                        "src": "3797:29:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BasicOrderParameters_$4793_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct BasicOrderParameters calldata) returns (bool)"
                        }
                      },
                      "id": 32745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3797:41:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3785:53:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32747,
                  "nodeType": "ExpressionStatement",
                  "src": "3785:53:68"
                }
              ]
            },
            "baseFunctions": [
              1883
            ],
            "documentation": {
              "id": 32729,
              "nodeType": "StructuredDocumentation",
              "src": "1855:1670:68",
              "text": " @notice Fulfill an order offering an ERC20, ERC721, or ERC1155 item by\n         supplying Ether (or other native tokens), ERC20 tokens, an ERC721\n         item, or an ERC1155 item as consideration. Six permutations are\n         supported: Native token to ERC721, Native token to ERC1155, ERC20\n         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to\n         ERC20 (with native tokens supplied as msg.value). For an order to\n         be eligible for fulfillment via this method, it must contain a\n         single offer item (though that item may have a greater amount if\n         the item is not an ERC721). An arbitrary number of \"additional\n         recipients\" may also be supplied which will each receive native\n         tokens or ERC20 items from the fulfiller as consideration. Refer\n         to the documentation for a more comprehensive summary of how to\n         utilize with this method and what orders are compatible with it.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer and the fulfiller must first approve\n                   this contract (or their chosen conduit if indicated)\n                   before any tokens can be transferred. Also note that\n                   contract recipients of ERC1155 consideration items must\n                   implement `onERC1155Received` in order to receive those\n                   items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "fb0f3ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32735,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "3657:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "3657:10:68"
              },
              {
                "id": 32738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32737,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "3676:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "3676:12:68"
              }
            ],
            "name": "fulfillBasicOrder",
            "nameLocation": "3539:17:68",
            "overrides": {
              "id": 32734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3640:8:68"
            },
            "parameters": {
              "id": 32733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32732,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "3587:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32749,
                  "src": "3557:40:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BasicOrderParameters_$4793_calldata_ptr",
                    "typeString": "struct BasicOrderParameters"
                  },
                  "typeName": {
                    "id": 32731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32730,
                      "name": "BasicOrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4793,
                      "src": "3557:20:68"
                    },
                    "referencedDeclaration": 4793,
                    "src": "3557:20:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BasicOrderParameters_$4793_storage_ptr",
                      "typeString": "struct BasicOrderParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3556:42:68"
            },
            "returnParameters": {
              "id": 32741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32740,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "3711:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32749,
                  "src": "3706:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3705:16:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32783,
            "nodeType": "FunctionDefinition",
            "src": "5190:549:68",
            "body": {
              "id": 32782,
              "nodeType": "Block",
              "src": "5390:349:68",
              "statements": [
                {
                  "expression": {
                    "id": 32780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32765,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32763,
                      "src": "5503:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32768,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32753,
                              "src": "5585:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$4832_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$4832_calldata_ptr",
                                "typeString": "struct Order calldata"
                              }
                            ],
                            "id": 32767,
                            "name": "_convertOrderToAdvanced",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40805,
                            "src": "5561:23:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$4832_calldata_ptr_$returns$_t_struct$_AdvancedOrder_$4844_memory_ptr_$",
                              "typeString": "function (struct Order calldata) pure returns (struct AdvancedOrder memory)"
                            }
                          },
                          "id": 32769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5561:30:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$4844_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 32774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5628:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5605:22:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 32771,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 32770,
                                  "name": "CriteriaResolver",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4866,
                                  "src": "5609:16:68"
                                },
                                "referencedDeclaration": 4866,
                                "src": "5609:16:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                                  "typeString": "struct CriteriaResolver"
                                }
                              },
                              "id": 32772,
                              "nodeType": "ArrayTypeName",
                              "src": "5609:18:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                                "typeString": "struct CriteriaResolver[]"
                              }
                            }
                          },
                          "id": 32775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5605:25:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          }
                        },
                        {
                          "id": 32776,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32755,
                          "src": "5679:19:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 32777,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5712:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5712:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$4844_memory_ptr",
                            "typeString": "struct AdvancedOrder memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct CriteriaResolver memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32766,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40515,
                        "src": "5515:32:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$4844_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 32779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5515:217:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5503:229:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32781,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:229:68"
                }
              ]
            },
            "baseFunctions": [
              1894
            ],
            "documentation": {
              "id": 32750,
              "nodeType": "StructuredDocumentation",
              "src": "3851:1334:68",
              "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "b3a34c4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32759,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32758,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "5321:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "5321:10:68"
              },
              {
                "id": 32761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32760,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "5340:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "5340:12:68"
              }
            ],
            "name": "fulfillOrder",
            "nameLocation": "5199:12:68",
            "overrides": {
              "id": 32757,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5304:8:68"
            },
            "parameters": {
              "id": 32756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32753,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5227:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32783,
                  "src": "5212:20:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4832_calldata_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 32752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32751,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4832,
                      "src": "5212:5:68"
                    },
                    "referencedDeclaration": 4832,
                    "src": "5212:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4832_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32755,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "5242:19:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32783,
                  "src": "5234:27:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5211:51:68"
            },
            "returnParameters": {
              "id": 32764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32763,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "5375:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32783,
                  "src": "5370:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32762,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5369:16:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32824,
            "nodeType": "FunctionDefinition",
            "src": "8424:595:68",
            "body": {
              "id": 32823,
              "nodeType": "Block",
              "src": "8752:267:68",
              "statements": [
                {
                  "expression": {
                    "id": 32821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32805,
                      "name": "fulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32803,
                      "src": "8805:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32807,
                          "name": "advancedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32787,
                          "src": "8863:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$4844_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          }
                        },
                        {
                          "id": 32808,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32791,
                          "src": "8890:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        {
                          "id": 32809,
                          "name": "fulfillerConduitKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32793,
                          "src": "8921:19:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 32815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 32810,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32795,
                              "src": "8954:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 32813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8975:1:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 32812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8967:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 32811,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8967:7:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8967:10:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8954:23:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 32818,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32795,
                            "src": "8993:9:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8954:48:68",
                          "trueExpression": {
                            "expression": {
                              "id": 32816,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8980:3:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8980:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$4844_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32806,
                        "name": "_validateAndFulfillAdvancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40515,
                        "src": "8817:32:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$4844_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32,address) returns (bool)"
                        }
                      },
                      "id": 32820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8817:195:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8805:207:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32822,
                  "nodeType": "ExpressionStatement",
                  "src": "8805:207:68"
                }
              ]
            },
            "baseFunctions": [
              1911
            ],
            "documentation": {
              "id": 32784,
              "nodeType": "StructuredDocumentation",
              "src": "5745:2674:68",
              "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their proxy if\n                            indicated by the order) to transfer any\n                            relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @param recipient           The intended recipient for all received items,\n                            with `address(0)` indicating that the caller\n                            should receive the items.\n @return fulfilled A boolean indicating whether the order has been\n                   fulfilled."
            },
            "functionSelector": "e7acab24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32798,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "8683:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "8683:10:68"
              },
              {
                "id": 32801,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32800,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "8702:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "8702:12:68"
              }
            ],
            "name": "fulfillAdvancedOrder",
            "nameLocation": "8433:20:68",
            "overrides": {
              "id": 32797,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8666:8:68"
            },
            "parameters": {
              "id": 32796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32787,
                  "mutability": "mutable",
                  "name": "advancedOrder",
                  "nameLocation": "8486:13:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32824,
                  "src": "8463:36:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$4844_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 32786,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32785,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4844,
                      "src": "8463:13:68"
                    },
                    "referencedDeclaration": 4844,
                    "src": "8463:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$4844_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32791,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "8537:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32824,
                  "src": "8509:45:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32789,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32788,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4866,
                        "src": "8509:16:68"
                      },
                      "referencedDeclaration": 4866,
                      "src": "8509:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 32790,
                    "nodeType": "ArrayTypeName",
                    "src": "8509:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32793,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "8572:19:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32824,
                  "src": "8564:27:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8564:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32795,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8609:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32824,
                  "src": "8601:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8453:171:68"
            },
            "returnParameters": {
              "id": 32804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32803,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "8737:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32824,
                  "src": "8732:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32802,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8732:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8731:16:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32894,
            "nodeType": "FunctionDefinition",
            "src": "12014:1239:68",
            "body": {
              "id": 32893,
              "nodeType": "Block",
              "src": "12459:794:68",
              "statements": [
                {
                  "assignments": [
                    32862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32862,
                      "mutability": "mutable",
                      "name": "advancedOrders",
                      "nameLocation": "12540:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 32893,
                      "src": "12517:37:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AdvancedOrder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32860,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32859,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4844,
                            "src": "12517:13:68"
                          },
                          "referencedDeclaration": 4844,
                          "src": "12517:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$4844_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "id": 32861,
                        "nodeType": "ArrayTypeName",
                        "src": "12517:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_storage_$dyn_storage_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32866,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32864,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32829,
                        "src": "12595:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      ],
                      "id": 32863,
                      "name": "_convertOrdersToAdvanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40856,
                      "src": "12557:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                      }
                    },
                    "id": 32865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12557:54:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AdvancedOrder memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12517:94:68"
                },
                {
                  "assignments": [
                    32871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32871,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "12713:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 32893,
                      "src": "12677:51:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32869,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32868,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36659,
                            "src": "12677:14:68"
                          },
                          "referencedDeclaration": 36659,
                          "src": "12677:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$36659_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 32870,
                        "nodeType": "ArrayTypeName",
                        "src": "12677:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32875,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32873,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32862,
                        "src": "12782:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 32872,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41062,
                      "src": "12731:33:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 32874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:79:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12677:133:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32877,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32862,
                        "src": "12930:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 32878,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32871,
                        "src": "12962:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 32883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13018:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 32882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "12995:22:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 32880,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 32879,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4866,
                                "src": "12999:16:68"
                              },
                              "referencedDeclaration": 4866,
                              "src": "12999:16:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 32881,
                            "nodeType": "ArrayTypeName",
                            "src": "12999:18:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 32884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12995:25:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 32885,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32834,
                        "src": "13073:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 32886,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32839,
                        "src": "13108:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 32887,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32841,
                        "src": "13151:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 32888,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13188:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13188:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32890,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32843,
                        "src": "13216:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32876,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39356,
                      "src": "12881:31:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 32891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12881:365:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 32857,
                  "id": 32892,
                  "nodeType": "Return",
                  "src": "12862:384:68"
                }
              ]
            },
            "baseFunctions": [
              1940
            ],
            "documentation": {
              "id": 32825,
              "nodeType": "StructuredDocumentation",
              "src": "9025:2984:68",
              "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "ed98a574",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32846,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "12344:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "12344:10:68"
              },
              {
                "id": 32849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32848,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "12363:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "12363:12:68"
              }
            ],
            "name": "fulfillAvailableOrders",
            "nameLocation": "12023:22:68",
            "overrides": {
              "id": 32845,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12327:8:68"
            },
            "parameters": {
              "id": 32844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32829,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "12072:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12055:23:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32827,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32826,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4832,
                        "src": "12055:5:68"
                      },
                      "referencedDeclaration": 4832,
                      "src": "12055:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4832_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 32828,
                    "nodeType": "ArrayTypeName",
                    "src": "12055:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4832_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32834,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "12122:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12088:51:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 32831,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32830,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4880,
                          "src": "12088:20:68"
                        },
                        "referencedDeclaration": 4880,
                        "src": "12088:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$4880_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 32832,
                      "nodeType": "ArrayTypeName",
                      "src": "12088:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 32833,
                    "nodeType": "ArrayTypeName",
                    "src": "12088:24:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32839,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "12183:25:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12149:59:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 32836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32835,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4880,
                          "src": "12149:20:68"
                        },
                        "referencedDeclaration": 4880,
                        "src": "12149:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$4880_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 32837,
                      "nodeType": "ArrayTypeName",
                      "src": "12149:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 32838,
                    "nodeType": "ArrayTypeName",
                    "src": "12149:24:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32841,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "12226:19:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12218:27:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12218:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32843,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "12263:16:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12255:24:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12255:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12045:240:68"
            },
            "returnParameters": {
              "id": 32857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32852,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "12407:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12393:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32850,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "12393:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 32851,
                    "nodeType": "ArrayTypeName",
                    "src": "12393:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32856,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "12443:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32894,
                  "src": "12424:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32854,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32853,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4888,
                        "src": "12424:9:68"
                      },
                      "referencedDeclaration": 4888,
                      "src": "12424:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4888_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 32855,
                    "nodeType": "ArrayTypeName",
                    "src": "12424:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12392:62:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32964,
            "nodeType": "FunctionDefinition",
            "src": "17619:1186:68",
            "body": {
              "id": 32963,
              "nodeType": "Block",
              "src": "18168:637:68",
              "statements": [
                {
                  "assignments": [
                    32938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32938,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "18270:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 32963,
                      "src": "18234:51:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32936,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32935,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36659,
                            "src": "18234:14:68"
                          },
                          "referencedDeclaration": 36659,
                          "src": "18234:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$36659_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 32937,
                        "nodeType": "ArrayTypeName",
                        "src": "18234:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32942,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32940,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32899,
                        "src": "18339:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 32939,
                      "name": "_convertAdvancedToOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41062,
                      "src": "18288:33:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 32941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18288:79:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18234:133:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32944,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32899,
                        "src": "18487:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 32945,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32938,
                        "src": "18519:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 32946,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32903,
                        "src": "18552:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 32947,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32908,
                        "src": "18587:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 32948,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32913,
                        "src": "18622:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 32949,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32915,
                        "src": "18665:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 32955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32950,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32917,
                            "src": "18702:9:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 32953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18723:1:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18715:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32951,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18715:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18715:10:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18702:23:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 32958,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32917,
                          "src": "18741:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "18702:48:68",
                        "trueExpression": {
                          "expression": {
                            "id": 32956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18728:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18728:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32960,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32919,
                        "src": "18768:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32943,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39356,
                      "src": "18438:31:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$36659_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,address,uint256) returns (bool[] memory,struct Execution memory[] memory)"
                      }
                    },
                    "id": 32961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18438:360:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 32933,
                  "id": 32962,
                  "nodeType": "Return",
                  "src": "18419:379:68"
                }
              ]
            },
            "baseFunctions": [
              1975
            ],
            "documentation": {
              "id": 32895,
              "nodeType": "StructuredDocumentation",
              "src": "13259:4355:68",
              "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their proxy if indicated by\n                                  the order) to transfer any relevant\n                                  tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` in order to receive\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n * @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "87201b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32922,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "18053:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "18053:10:68"
              },
              {
                "id": 32925,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32924,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "18072:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "18072:12:68"
              }
            ],
            "name": "fulfillAvailableAdvancedOrders",
            "nameLocation": "17628:30:68",
            "overrides": {
              "id": 32921,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18036:8:68"
            },
            "parameters": {
              "id": 32920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32899,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "17691:14:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17668:37:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32897,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32896,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4844,
                        "src": "17668:13:68"
                      },
                      "referencedDeclaration": 4844,
                      "src": "17668:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$4844_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 32898,
                    "nodeType": "ArrayTypeName",
                    "src": "17668:15:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32903,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "17743:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17715:45:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32901,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32900,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4866,
                        "src": "17715:16:68"
                      },
                      "referencedDeclaration": 4866,
                      "src": "17715:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 32902,
                    "nodeType": "ArrayTypeName",
                    "src": "17715:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32908,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "17804:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17770:51:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 32905,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32904,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4880,
                          "src": "17770:20:68"
                        },
                        "referencedDeclaration": 4880,
                        "src": "17770:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$4880_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 32906,
                      "nodeType": "ArrayTypeName",
                      "src": "17770:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 32907,
                    "nodeType": "ArrayTypeName",
                    "src": "17770:24:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32913,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "17865:25:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17831:59:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 32910,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32909,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4880,
                          "src": "17831:20:68"
                        },
                        "referencedDeclaration": 4880,
                        "src": "17831:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$4880_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 32911,
                      "nodeType": "ArrayTypeName",
                      "src": "17831:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 32912,
                    "nodeType": "ArrayTypeName",
                    "src": "17831:24:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$4880_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32915,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "17908:19:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17900:27:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32914,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17900:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32917,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17945:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17937:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17937:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32919,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "17972:16:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "17964:24:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17964:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17658:336:68"
            },
            "returnParameters": {
              "id": 32933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32928,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "18116:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "18102:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32926,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "18102:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 32927,
                    "nodeType": "ArrayTypeName",
                    "src": "18102:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32932,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "18152:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32964,
                  "src": "18133:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32930,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32929,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4888,
                        "src": "18133:9:68"
                      },
                      "referencedDeclaration": 4888,
                      "src": "18133:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4888_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 32931,
                    "nodeType": "ArrayTypeName",
                    "src": "18133:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18101:62:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32999,
            "nodeType": "FunctionDefinition",
            "src": "20304:554:68",
            "body": {
              "id": 32998,
              "nodeType": "Block",
              "src": "20551:307:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32987,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32969,
                            "src": "20722:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          ],
                          "id": 32986,
                          "name": "_convertOrdersToAdvanced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40856,
                          "src": "20697:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                          }
                        },
                        "id": 32988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20697:32:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 32993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20770:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 32992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "20747:22:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 32990,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 32989,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4866,
                                "src": "20751:16:68"
                              },
                              "referencedDeclaration": 4866,
                              "src": "20751:16:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 32991,
                            "nodeType": "ArrayTypeName",
                            "src": "20751:18:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 32994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20747:25:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 32995,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32973,
                        "src": "20825:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 32985,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40258,
                      "src": "20659:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 32996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20659:192:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 32984,
                  "id": 32997,
                  "nodeType": "Return",
                  "src": "20640:211:68"
                }
              ]
            },
            "baseFunctions": [
              1991
            ],
            "documentation": {
              "id": 32965,
              "nodeType": "StructuredDocumentation",
              "src": "18811:1488:68",
              "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with a set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders            The orders to match. Note that both the offerer\n                          and fulfiller on each order must first approve\n                          this contract (or their proxy if indicated by\n                          the order) to transfer any relevant tokens on\n                          their behalf and each consideration recipient\n                          must implement `onERC1155Received` in order to\n                          receive ERC1155 tokens.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "a8174404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32976,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "20467:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "20467:10:68"
              },
              {
                "id": 32979,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32978,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "20486:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "20486:12:68"
              }
            ],
            "name": "matchOrders",
            "nameLocation": "20313:11:68",
            "overrides": {
              "id": 32975,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20450:8:68"
            },
            "parameters": {
              "id": 32974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32969,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "20351:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32999,
                  "src": "20334:23:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32967,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32966,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4832,
                        "src": "20334:5:68"
                      },
                      "referencedDeclaration": 4832,
                      "src": "20334:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4832_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 32968,
                    "nodeType": "ArrayTypeName",
                    "src": "20334:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4832_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32973,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "20390:12:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32999,
                  "src": "20367:35:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32971,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32970,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4875,
                        "src": "20367:11:68"
                      },
                      "referencedDeclaration": 4875,
                      "src": "20367:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$4875_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 32972,
                    "nodeType": "ArrayTypeName",
                    "src": "20367:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20324:84:68"
            },
            "returnParameters": {
              "id": 32984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32983,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "20535:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 32999,
                  "src": "20516:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32981,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32980,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4888,
                        "src": "20516:9:68"
                      },
                      "referencedDeclaration": 4888,
                      "src": "20516:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4888_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 32982,
                    "nodeType": "ArrayTypeName",
                    "src": "20516:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20515:31:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33031,
            "nodeType": "FunctionDefinition",
            "src": "23289:570:68",
            "body": {
              "id": 33030,
              "nodeType": "Block",
              "src": "23613:246:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33025,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33004,
                        "src": "23759:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 33026,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33008,
                        "src": "23791:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 33027,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33012,
                        "src": "23826:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 33024,
                      "name": "_matchAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40258,
                      "src": "23721:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$4866_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct CriteriaResolver memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory)"
                      }
                    },
                    "id": 33028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23721:131:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Execution memory[] memory"
                    }
                  },
                  "functionReturnParameters": 33023,
                  "id": 33029,
                  "nodeType": "Return",
                  "src": "23702:150:68"
                }
              ]
            },
            "baseFunctions": [
              2011
            ],
            "documentation": {
              "id": 33000,
              "nodeType": "StructuredDocumentation",
              "src": "20864:2420:68",
              "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param advancedOrders    The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or their proxy if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order to receive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "55944a42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33016,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33015,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "23529:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "23529:10:68"
              },
              {
                "id": 33018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33017,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41871,
                  "src": "23548:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "23548:12:68"
              }
            ],
            "name": "matchAdvancedOrders",
            "nameLocation": "23298:19:68",
            "overrides": {
              "id": 33014,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23512:8:68"
            },
            "parameters": {
              "id": 33013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33004,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "23350:14:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "23327:37:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33002,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33001,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4844,
                        "src": "23327:13:68"
                      },
                      "referencedDeclaration": 4844,
                      "src": "23327:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$4844_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 33003,
                    "nodeType": "ArrayTypeName",
                    "src": "23327:15:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$4844_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33008,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "23402:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "23374:45:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33006,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33005,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4866,
                        "src": "23374:16:68"
                      },
                      "referencedDeclaration": 4866,
                      "src": "23374:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$4866_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 33007,
                    "nodeType": "ArrayTypeName",
                    "src": "23374:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$4866_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33012,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "23452:12:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "23429:35:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33010,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33009,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4875,
                        "src": "23429:11:68"
                      },
                      "referencedDeclaration": 4875,
                      "src": "23429:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$4875_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 33011,
                    "nodeType": "ArrayTypeName",
                    "src": "23429:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$4875_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23317:153:68"
            },
            "returnParameters": {
              "id": 33023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33022,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "23597:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "23578:29:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$4888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33020,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33019,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4888,
                        "src": "23578:9:68"
                      },
                      "referencedDeclaration": 4888,
                      "src": "23578:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$4888_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 33021,
                    "nodeType": "ArrayTypeName",
                    "src": "23578:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$4888_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23577:31:68"
            },
            "scope": 33194,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33051,
            "nodeType": "FunctionDefinition",
            "src": "24200:215:68",
            "body": {
              "id": 33050,
              "nodeType": "Block",
              "src": "24341:74:68",
              "statements": [
                {
                  "expression": {
                    "id": 33048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33044,
                      "name": "cancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33042,
                      "src": "24381:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33046,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33036,
                          "src": "24401:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4705_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4705_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct OrderComponents calldata[] calldata"
                          }
                        ],
                        "id": 33045,
                        "name": "_cancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41681,
                        "src": "24393:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OrderComponents_$4705_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct OrderComponents calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 33047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24393:15:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24381:27:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33049,
                  "nodeType": "ExpressionStatement",
                  "src": "24381:27:68"
                }
              ]
            },
            "baseFunctions": [
              2021
            ],
            "documentation": {
              "id": 33032,
              "nodeType": "StructuredDocumentation",
              "src": "23865:330:68",
              "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n         or the zone of a given order may cancel it.\n @param orders The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n         been successfully cancelled."
            },
            "functionSelector": "fd9f1e10",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33039,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "24293:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "24293:10:68"
              }
            ],
            "name": "cancel",
            "nameLocation": "24209:6:68",
            "overrides": {
              "id": 33038,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24276:8:68"
            },
            "parameters": {
              "id": 33037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33036,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24243:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33051,
                  "src": "24216:33:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4705_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33034,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33033,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4705,
                        "src": "24216:15:68"
                      },
                      "referencedDeclaration": 4705,
                      "src": "24216:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$4705_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 33035,
                    "nodeType": "ArrayTypeName",
                    "src": "24216:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$4705_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24215:35:68"
            },
            "returnParameters": {
              "id": 33043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33042,
                  "mutability": "mutable",
                  "name": "cancelled",
                  "nameLocation": "24326:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33051,
                  "src": "24321:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33041,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24321:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24320:16:68"
            },
            "scope": 33194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33071,
            "nodeType": "FunctionDefinition",
            "src": "24921:211:68",
            "body": {
              "id": 33070,
              "nodeType": "Block",
              "src": "25054:78:68",
              "statements": [
                {
                  "expression": {
                    "id": 33068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33064,
                      "name": "validated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33062,
                      "src": "25096:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33066,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33056,
                          "src": "25118:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct Order calldata[] calldata"
                          }
                        ],
                        "id": 33065,
                        "name": "_validate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41785,
                        "src": "25108:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct Order calldata[] calldata) returns (bool)"
                        }
                      },
                      "id": 33067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25108:17:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25096:29:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33069,
                  "nodeType": "ExpressionStatement",
                  "src": "25096:29:68"
                }
              ]
            },
            "baseFunctions": [
              2031
            ],
            "documentation": {
              "id": 33052,
              "nodeType": "StructuredDocumentation",
              "src": "24421:495:68",
              "text": " @notice Validate an arbitrary number of orders, thereby registering them\n         as valid and allowing the fulfiller to skip verification. Note\n         that anyone can validate a signed order but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return validated A boolean indicating whether the supplied orders have\n         been successfully validated."
            },
            "functionSelector": "88147732",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33059,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "25006:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "25006:10:68"
              }
            ],
            "name": "validate",
            "nameLocation": "24930:8:68",
            "overrides": {
              "id": 33058,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24989:8:68"
            },
            "parameters": {
              "id": 33057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33056,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "24956:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33071,
                  "src": "24939:23:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4832_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33054,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 33053,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4832,
                        "src": "24939:5:68"
                      },
                      "referencedDeclaration": 4832,
                      "src": "24939:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4832_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 33055,
                    "nodeType": "ArrayTypeName",
                    "src": "24939:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4832_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24938:25:68"
            },
            "returnParameters": {
              "id": 33063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33062,
                  "mutability": "mutable",
                  "name": "validated",
                  "nameLocation": "25039:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33071,
                  "src": "25034:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25034:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25033:16:68"
            },
            "scope": 33194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33086,
            "nodeType": "FunctionDefinition",
            "src": "25395:234:68",
            "body": {
              "id": 33085,
              "nodeType": "Block",
              "src": "25517:112:68",
              "statements": [
                {
                  "expression": {
                    "id": 33083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33080,
                      "name": "newCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33078,
                      "src": "25590:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33081,
                        "name": "_incrementCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36715,
                        "src": "25603:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () returns (uint256)"
                        }
                      },
                      "id": 33082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25603:19:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25590:32:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33084,
                  "nodeType": "ExpressionStatement",
                  "src": "25590:32:68"
                }
              ]
            },
            "baseFunctions": [
              2037
            ],
            "documentation": {
              "id": 33072,
              "nodeType": "StructuredDocumentation",
              "src": "25138:252:68",
              "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a counter. Note that only the offerer may\n         increment the counter.\n @return newCounter The new counter."
            },
            "functionSelector": "5b34b966",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33076,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33075,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41884,
                  "src": "25465:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "25465:10:68"
              }
            ],
            "name": "incrementCounter",
            "nameLocation": "25404:16:68",
            "overrides": {
              "id": 33074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25448:8:68"
            },
            "parameters": {
              "id": 33073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25420:2:68"
            },
            "returnParameters": {
              "id": 33079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33078,
                  "mutability": "mutable",
                  "name": "newCounter",
                  "nameLocation": "25501:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33086,
                  "src": "25493:18:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25493:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25492:20:68"
            },
            "scope": 33194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33129,
            "nodeType": "FunctionDefinition",
            "src": "25813:747:68",
            "body": {
              "id": 33128,
              "nodeType": "Block",
              "src": "25954:606:68",
              "statements": [
                {
                  "expression": {
                    "id": 33126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33096,
                      "name": "orderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33094,
                      "src": "26085:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 33099,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26160:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4679,
                              "src": "26160:13:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 33101,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26191:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4681,
                              "src": "26191:10:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 33103,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26219:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4685,
                              "src": "26219:11:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$4717_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 33105,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26248:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consideration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4689,
                              "src": "26248:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$4731_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 33107,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26285:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "orderType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4692,
                              "src": "26285:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OrderType_$4628",
                                "typeString": "enum OrderType"
                              }
                            },
                            {
                              "expression": {
                                "id": 33109,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26318:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4694,
                              "src": "26318:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 33111,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26351:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4696,
                              "src": "26351:13:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 33113,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26382:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "zoneHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4698,
                              "src": "26382:14:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 33115,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26414:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "salt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4700,
                              "src": "26414:10:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 33117,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33090,
                                "src": "26442:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 33118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "conduitKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4702,
                              "src": "26442:16:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 33119,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33090,
                                  "src": "26476:5:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                                    "typeString": "struct OrderComponents calldata"
                                  }
                                },
                                "id": 33120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "consideration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4689,
                                "src": "26476:19:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$4731_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct ConsiderationItem calldata[] calldata"
                                }
                              },
                              "id": 33121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "26476:26:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_OfferItem_$4717_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$4731_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConsiderationItem calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_enum$_OrderType_$4628",
                                "typeString": "enum OrderType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33098,
                            "name": "OrderParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4826,
                            "src": "26127:15:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OrderParameters_$4826_storage_ptr_$",
                              "typeString": "type(struct OrderParameters storage pointer)"
                            }
                          },
                          "id": 33122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26127:389:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderParameters_$4826_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 33123,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33090,
                            "src": "26530:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                              "typeString": "struct OrderComponents calldata"
                            }
                          },
                          "id": 33124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "counter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4704,
                          "src": "26530:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderParameters_$4826_memory_ptr",
                            "typeString": "struct OrderParameters memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 33097,
                        "name": "_deriveOrderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39131,
                        "src": "26097:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$4826_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (struct OrderParameters memory,uint256) view returns (bytes32)"
                        }
                      },
                      "id": 33125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26097:456:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "26085:468:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33127,
                  "nodeType": "ExpressionStatement",
                  "src": "26085:468:68"
                }
              ]
            },
            "baseFunctions": [
              2046
            ],
            "documentation": {
              "id": 33087,
              "nodeType": "StructuredDocumentation",
              "src": "25635:173:68",
              "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return orderHash the order hash."
            },
            "functionSelector": "79df72bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderHash",
            "nameLocation": "25822:12:68",
            "overrides": {
              "id": 33092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25905:8:68"
            },
            "parameters": {
              "id": 33091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33090,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "25860:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33129,
                  "src": "25835:30:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderComponents_$4705_calldata_ptr",
                    "typeString": "struct OrderComponents"
                  },
                  "typeName": {
                    "id": 33089,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33088,
                      "name": "OrderComponents",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4705,
                      "src": "25835:15:68"
                    },
                    "referencedDeclaration": 4705,
                    "src": "25835:15:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderComponents_$4705_storage_ptr",
                      "typeString": "struct OrderComponents"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25834:32:68"
            },
            "returnParameters": {
              "id": 33095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33094,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "25939:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33129,
                  "src": "25931:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33093,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25931:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25930:19:68"
            },
            "scope": 33194,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33149,
            "nodeType": "FunctionDefinition",
            "src": "27447:354:68",
            "body": {
              "id": 33148,
              "nodeType": "Block",
              "src": "27692:109:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33145,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33132,
                        "src": "27784:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 33144,
                      "name": "_getOrderStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41817,
                      "src": "27768:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes32) view returns (bool,bool,uint256,uint256)"
                      }
                    },
                    "id": 33146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27768:26:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 33143,
                  "id": 33147,
                  "nodeType": "Return",
                  "src": "27761:33:68"
                }
              ]
            },
            "baseFunctions": [
              2060
            ],
            "documentation": {
              "id": 33130,
              "nodeType": "StructuredDocumentation",
              "src": "26566:876:68",
              "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
            },
            "functionSelector": "46423aa7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderStatus",
            "nameLocation": "27456:14:68",
            "overrides": {
              "id": 33134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27528:8:68"
            },
            "parameters": {
              "id": 33133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33132,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "27479:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33149,
                  "src": "27471:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27471:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27470:19:68"
            },
            "returnParameters": {
              "id": 33143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33136,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "27572:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33149,
                  "src": "27567:16:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27567:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33138,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "27602:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33149,
                  "src": "27597:16:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27597:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33140,
                  "mutability": "mutable",
                  "name": "totalFilled",
                  "nameLocation": "27635:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33149,
                  "src": "27627:19:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27627:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33142,
                  "mutability": "mutable",
                  "name": "totalSize",
                  "nameLocation": "27668:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33149,
                  "src": "27660:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27660:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27553:134:68"
            },
            "scope": 33194,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33165,
            "nodeType": "FunctionDefinition",
            "src": "27993:225:68",
            "body": {
              "id": 33164,
              "nodeType": "Block",
              "src": "28115:103:68",
              "statements": [
                {
                  "expression": {
                    "id": 33162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33158,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33156,
                      "src": "28181:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33160,
                          "name": "offerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33152,
                          "src": "28203:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33159,
                        "name": "_getCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36730,
                        "src": "28191:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 33161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28191:20:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28181:30:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33163,
                  "nodeType": "ExpressionStatement",
                  "src": "28181:30:68"
                }
              ]
            },
            "baseFunctions": [
              2068
            ],
            "documentation": {
              "id": 33150,
              "nodeType": "StructuredDocumentation",
              "src": "27807:181:68",
              "text": " @notice Retrieve the current counter for a given offerer.\n @param offerer The offerer in question.\n @return counter The current counter."
            },
            "functionSelector": "f07ec373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounter",
            "nameLocation": "28002:10:68",
            "overrides": {
              "id": 33154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28068:8:68"
            },
            "parameters": {
              "id": 33153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33152,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "28021:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33165,
                  "src": "28013:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28013:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28012:17:68"
            },
            "returnParameters": {
              "id": 33157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33156,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "28102:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33165,
                  "src": "28094:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28094:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28093:17:68"
            },
            "scope": 33194,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33180,
            "nodeType": "FunctionDefinition",
            "src": "28523:303:68",
            "body": {
              "id": 33179,
              "nodeType": "Block",
              "src": "28735:91:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33176,
                      "name": "_information",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39238,
                      "src": "28805:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                        "typeString": "function () view returns (string memory,bytes32,address)"
                      }
                    },
                    "id": 33177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28805:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(string memory,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 33175,
                  "id": 33178,
                  "nodeType": "Return",
                  "src": "28798:21:68"
                }
              ]
            },
            "baseFunctions": [
              2078
            ],
            "documentation": {
              "id": 33166,
              "nodeType": "StructuredDocumentation",
              "src": "28224:294:68",
              "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
            },
            "functionSelector": "f47b7740",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "information",
            "nameLocation": "28532:11:68",
            "overrides": {
              "id": 33168,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28584:8:68"
            },
            "parameters": {
              "id": 33167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28543:2:68"
            },
            "returnParameters": {
              "id": 33175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33170,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "28637:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33180,
                  "src": "28623:21:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33169,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28623:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33172,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "28666:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33180,
                  "src": "28658:23:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33171,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28658:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33174,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "28703:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33180,
                  "src": "28695:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28695:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28609:121:68"
            },
            "scope": 33194,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33193,
            "nodeType": "FunctionDefinition",
            "src": "28961:195:68",
            "body": {
              "id": 33192,
              "nodeType": "Block",
              "src": "29073:83:68",
              "statements": [
                {
                  "expression": {
                    "id": 33190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33187,
                      "name": "contractName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33185,
                      "src": "29127:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33188,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39247,
                        "src": "29142:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                          "typeString": "function () pure returns (string memory)"
                        }
                      },
                      "id": 33189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29142:7:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "29127:22:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 33191,
                  "nodeType": "ExpressionStatement",
                  "src": "29127:22:68"
                }
              ]
            },
            "baseFunctions": [
              2084
            ],
            "documentation": {
              "id": 33181,
              "nodeType": "StructuredDocumentation",
              "src": "28832:124:68",
              "text": " @notice Retrieve the name of this contract.\n @return contractName The name of this contract."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "28970:4:68",
            "overrides": {
              "id": 33183,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29015:8:68"
            },
            "parameters": {
              "id": 33182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28974:2:68"
            },
            "returnParameters": {
              "id": 33186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33185,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "29055:12:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 33193,
                  "src": "29041:26:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "29041:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29040:28:68"
            },
            "scope": 33194,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32715,
              "name": "ConsiderationInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2085,
              "src": "1338:22:68"
            },
            "id": 32716,
            "nodeType": "InheritanceSpecifier",
            "src": "1338:22:68"
          },
          {
            "baseName": {
              "id": 32717,
              "name": "ReferenceOrderCombiner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40399,
              "src": "1366:22:68"
            },
            "id": 32718,
            "nodeType": "InheritanceSpecifier",
            "src": "1366:22:68"
          }
        ],
        "canonicalName": "ReferenceConsideration",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32714,
          "nodeType": "StructuredDocumentation",
          "src": "613:685:68",
          "text": " @title ReferenceConsideration\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @custom:version rc-1.1\n @notice Consideration is a generalized ETH/ERC20/ERC721/ERC1155 marketplace.\n         It minimizes external calls to the greatest extent possible and\n         provides lightweight methods for common routes as well as more\n         flexible methods for composing advanced orders or groups of orders.\n         Each order contains an arbitrary number of items that may be spent\n         (the \"offer\") along with an arbitrary number of items that must be\n         received back by the indicated recipients (the \"consideration\")."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33194,
          40399,
          38931,
          2143,
          41063,
          34523,
          1457,
          37460,
          2110,
          36329,
          41839,
          42597,
          2525,
          38016,
          42272,
          42429,
          42070,
          2434,
          34697,
          2494,
          36731,
          41885,
          39248,
          36596,
          2192,
          1861,
          2085
        ],
        "name": "ReferenceConsideration",
        "nameLocation": "1308:22:68",
        "scope": 33195,
        "usedErrors": [
          1456,
          1790,
          1793,
          1800,
          1803,
          1808,
          1817,
          1820,
          1827,
          1830,
          1835,
          1840,
          1843,
          1846,
          1851,
          1854,
          1857,
          1860,
          2091,
          2094,
          2097,
          2100,
          2103,
          2106,
          2109,
          2133,
          2136,
          2139,
          2142,
          2191,
          2424,
          2427,
          2430,
          2433,
          2440,
          2443,
          2446,
          2459,
          2474,
          2485,
          2490,
          2493,
          2524
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 68
}