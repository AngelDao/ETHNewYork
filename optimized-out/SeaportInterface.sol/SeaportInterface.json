{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "advancedOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "fulfillAdvancedOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableAdvancedOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "considerationToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "considerationIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum BasicOrderType",
              "name": "basicOrderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offererConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalAdditionalRecipients",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct AdditionalRecipient[]",
              "name": "additionalRecipients",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct BasicOrderParameters",
          "name": "parameters",
          "type": "tuple"
        }
      ],
      "name": "fulfillBasicOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "getCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "counter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "counter",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalFilled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "information",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "executions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "fd9f1e10",
    "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": "e7acab24",
    "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": "87201b41",
    "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": "ed98a574",
    "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": "fb0f3ee1",
    "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": "b3a34c4c",
    "getCounter(address)": "f07ec373",
    "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": "79df72bd",
    "getOrderStatus(bytes32)": "46423aa7",
    "incrementCounter()": "5b34b966",
    "information()": "f47b7740",
    "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "55944a42",
    "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "a8174404",
    "name()": "06fdde03",
    "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": "88147732"
  },
  "ast": {
    "absolutePath": "contracts/zones/order-check/interfaces/SeaportInterface.sol",
    "id": 10663,
    "exportedSymbols": {
      "AdvancedOrder": [
        10938
      ],
      "BasicOrderParameters": [
        10887
      ],
      "CriteriaResolver": [
        10960
      ],
      "Execution": [
        10982
      ],
      "Fulfillment": [
        10969
      ],
      "FulfillmentComponent": [
        10974
      ],
      "Order": [
        10926
      ],
      "OrderComponents": [
        10799
      ],
      "OrderStatus": [
        10947
      ],
      "SeaportInterface": [
        10662
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:23143:58",
    "nodes": [
      {
        "id": 10440,
        "nodeType": "PragmaDirective",
        "src": "32:24:58",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 10450,
        "nodeType": "ImportDirective",
        "src": "77:223:58",
        "absolutePath": "contracts/zones/order-check/lib/ConsiderationStructs.sol",
        "file": "../lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10663,
        "sourceUnit": 10983,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10441,
              "name": "BasicOrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10887,
              "src": "90:20:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10442,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10799,
              "src": "116:15:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10443,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10969,
              "src": "137:11:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10444,
              "name": "FulfillmentComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10974,
              "src": "154:20:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10445,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10982,
              "src": "180:9:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10446,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10926,
              "src": "195:5:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10447,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10938,
              "src": "206:13:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10448,
              "name": "OrderStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10947,
              "src": "225:11:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 10449,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10960,
              "src": "242:16:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10662,
        "nodeType": "ContractDefinition",
        "src": "741:22434:58",
        "nodes": [
          {
            "id": 10460,
            "nodeType": "FunctionDefinition",
            "src": "1586:135:58",
            "documentation": {
              "id": 10452,
              "nodeType": "StructuredDocumentation",
              "src": "774:807:58",
              "text": " @notice Fulfill an order offering an ERC721 token by supplying Ether (or\n         the native token for the given chain) as consideration for the\n         order. An arbitrary number of \"additional recipients\" may also be\n         supplied which will each receive native tokens from the fulfiller\n         as consideration.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer must first approve this contract (or\n                   their preferred conduit if indicated by the order) for\n                   their offered ERC721 token to be transferred.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
            },
            "functionSelector": "fb0f3ee1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillBasicOrder",
            "nameLocation": "1595:17:58",
            "parameters": {
              "id": 10456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10455,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "1643:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10460,
                  "src": "1613:40:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BasicOrderParameters_$10887_calldata_ptr",
                    "typeString": "struct BasicOrderParameters"
                  },
                  "typeName": {
                    "id": 10454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10453,
                      "name": "BasicOrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10887,
                      "src": "1613:20:58"
                    },
                    "referencedDeclaration": 10887,
                    "src": "1613:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BasicOrderParameters_$10887_storage_ptr",
                      "typeString": "struct BasicOrderParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1612:42:58"
            },
            "returnParameters": {
              "id": 10459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10458,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "1710:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10460,
                  "src": "1705:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10457,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:16:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10471,
            "nodeType": "FunctionDefinition",
            "src": "3073:139:58",
            "documentation": {
              "id": 10461,
              "nodeType": "StructuredDocumentation",
              "src": "1727:1341:58",
              "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used, with direct approvals set on\n                            Seaport.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
            },
            "functionSelector": "b3a34c4c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillOrder",
            "nameLocation": "3082:12:58",
            "parameters": {
              "id": 10467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10464,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3110:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10471,
                  "src": "3095:20:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$10926_calldata_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 10463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10462,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10926,
                      "src": "3095:5:58"
                    },
                    "referencedDeclaration": 10926,
                    "src": "3095:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$10926_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10466,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "3125:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10471,
                  "src": "3117:27:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10465,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3094:51:58"
            },
            "returnParameters": {
              "id": 10470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10469,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "3201:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10471,
                  "src": "3196:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3195:16:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10488,
            "nodeType": "FunctionDefinition",
            "src": "5916:243:58",
            "documentation": {
              "id": 10472,
              "nodeType": "StructuredDocumentation",
              "src": "3218:2693:58",
              "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their preferred\n                            conduit if indicated by the order) to transfer\n                            any relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used, with direct approvals set on\n                            Seaport.\n @param recipient           The intended recipient for all received items,\n                            with `address(0)` indicating that the caller\n                            should receive the items.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
            },
            "functionSelector": "e7acab24",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillAdvancedOrder",
            "nameLocation": "5925:20:58",
            "parameters": {
              "id": 10484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10475,
                  "mutability": "mutable",
                  "name": "advancedOrder",
                  "nameLocation": "5978:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10488,
                  "src": "5955:36:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$10938_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 10474,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10473,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10938,
                      "src": "5955:13:58"
                    },
                    "referencedDeclaration": 10938,
                    "src": "5955:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$10938_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10479,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "6029:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10488,
                  "src": "6001:45:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10477,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10476,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10960,
                        "src": "6001:16:58"
                      },
                      "referencedDeclaration": 10960,
                      "src": "6001:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$10960_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 10478,
                    "nodeType": "ArrayTypeName",
                    "src": "6001:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10481,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "6064:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10488,
                  "src": "6056:27:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10480,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10483,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6101:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10488,
                  "src": "6093:17:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6093:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5945:171:58"
            },
            "returnParameters": {
              "id": 10487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10486,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "6148:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10488,
                  "src": "6143:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10485,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6143:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6142:16:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10517,
            "nodeType": "FunctionDefinition",
            "src": "9154:384:58",
            "documentation": {
              "id": 10489,
              "nodeType": "StructuredDocumentation",
              "src": "6165:2984:58",
              "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used, with\n                                  direct approvals set on this contract.\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "ed98a574",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillAvailableOrders",
            "nameLocation": "9163:22:58",
            "parameters": {
              "id": 10508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10493,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "9212:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9195:23:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$10926_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10491,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10490,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10926,
                        "src": "9195:5:58"
                      },
                      "referencedDeclaration": 10926,
                      "src": "9195:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$10926_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 10492,
                    "nodeType": "ArrayTypeName",
                    "src": "9195:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$10926_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10498,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "9262:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9228:51:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 10495,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10494,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10974,
                          "src": "9228:20:58"
                        },
                        "referencedDeclaration": 10974,
                        "src": "9228:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$10974_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 10496,
                      "nodeType": "ArrayTypeName",
                      "src": "9228:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 10497,
                    "nodeType": "ArrayTypeName",
                    "src": "9228:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10503,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "9323:25:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9289:59:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 10500,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10499,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10974,
                          "src": "9289:20:58"
                        },
                        "referencedDeclaration": 10974,
                        "src": "9289:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$10974_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 10501,
                      "nodeType": "ArrayTypeName",
                      "src": "9289:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 10502,
                    "nodeType": "ArrayTypeName",
                    "src": "9289:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10505,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "9366:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9358:27:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9358:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10507,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "9403:16:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9395:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9395:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9185:240:58"
            },
            "returnParameters": {
              "id": 10516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10511,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "9490:15:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9476:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10509,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9476:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10510,
                    "nodeType": "ArrayTypeName",
                    "src": "9476:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10515,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "9526:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "9507:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$10982_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10513,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10512,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10982,
                        "src": "9507:9:58"
                      },
                      "referencedDeclaration": 10982,
                      "src": "9507:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$10982_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 10514,
                    "nodeType": "ArrayTypeName",
                    "src": "9507:11:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$10982_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9475:62:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10552,
            "nodeType": "FunctionDefinition",
            "src": "14153:490:58",
            "documentation": {
              "id": 10518,
              "nodeType": "StructuredDocumentation",
              "src": "9544:4604:58",
              "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their preferred conduit if\n                                  indicated by the order) to transfer any\n                                  relevant tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` to enable receipt of\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used, with\n                                  direct approvals set on this contract.\n @param recipient                 The intended recipient for all received\n                                  items, with `address(0)` indicating that\n                                  the caller should receive the items.\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
            },
            "functionSelector": "87201b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillAvailableAdvancedOrders",
            "nameLocation": "14162:30:58",
            "parameters": {
              "id": 10543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10522,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "14227:14:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14202:39:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$10938_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10520,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10519,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10938,
                        "src": "14202:13:58"
                      },
                      "referencedDeclaration": 10938,
                      "src": "14202:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$10938_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 10521,
                    "nodeType": "ArrayTypeName",
                    "src": "14202:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$10938_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10526,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "14279:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14251:45:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10524,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10523,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10960,
                        "src": "14251:16:58"
                      },
                      "referencedDeclaration": 10960,
                      "src": "14251:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$10960_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 10525,
                    "nodeType": "ArrayTypeName",
                    "src": "14251:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10531,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "14340:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14306:51:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 10528,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10527,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10974,
                          "src": "14306:20:58"
                        },
                        "referencedDeclaration": 10974,
                        "src": "14306:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$10974_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 10529,
                      "nodeType": "ArrayTypeName",
                      "src": "14306:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 10530,
                    "nodeType": "ArrayTypeName",
                    "src": "14306:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10536,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "14401:25:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14367:59:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 10533,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10532,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10974,
                          "src": "14367:20:58"
                        },
                        "referencedDeclaration": 10974,
                        "src": "14367:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$10974_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 10534,
                      "nodeType": "ArrayTypeName",
                      "src": "14367:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 10535,
                    "nodeType": "ArrayTypeName",
                    "src": "14367:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$10974_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10538,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "14444:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14436:27:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10537,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14436:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10540,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "14481:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14473:17:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14473:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10542,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "14508:16:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14500:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14500:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14192:338:58"
            },
            "returnParameters": {
              "id": 10551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10546,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "14595:15:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14581:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10544,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "14581:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10545,
                    "nodeType": "ArrayTypeName",
                    "src": "14581:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10550,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "14631:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10552,
                  "src": "14612:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$10982_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10548,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10547,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10982,
                        "src": "14612:9:58"
                      },
                      "referencedDeclaration": 10982,
                      "src": "14612:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$10982_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 10549,
                    "nodeType": "ArrayTypeName",
                    "src": "14612:11:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$10982_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14580:62:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10568,
            "nodeType": "FunctionDefinition",
            "src": "16051:162:58",
            "documentation": {
              "id": 10553,
              "nodeType": "StructuredDocumentation",
              "src": "14649:1397:58",
              "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with as set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders       The orders to match. Note that both the offerer and\n                     fulfiller on each order must first approve this\n                     contract (or their conduit if indicated by the order)\n                     to transfer any relevant tokens on their behalf and\n                     each consideration recipient must implement\n                     `onERC1155Received` to enable ERC1155 token receipt.\n @param fulfillments An array of elements allocating offer components to\n                     consideration components. Note that each\n                     consideration component must be fully met for the\n                     match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "a8174404",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrders",
            "nameLocation": "16060:11:58",
            "parameters": {
              "id": 10562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10557,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "16098:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10568,
                  "src": "16081:23:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$10926_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10555,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10554,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10926,
                        "src": "16081:5:58"
                      },
                      "referencedDeclaration": 10926,
                      "src": "16081:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$10926_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 10556,
                    "nodeType": "ArrayTypeName",
                    "src": "16081:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$10926_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10561,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "16137:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10568,
                  "src": "16114:35:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$10969_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10559,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10558,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10969,
                        "src": "16114:11:58"
                      },
                      "referencedDeclaration": 10969,
                      "src": "16114:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$10969_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 10560,
                    "nodeType": "ArrayTypeName",
                    "src": "16114:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$10969_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16071:84:58"
            },
            "returnParameters": {
              "id": 10567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10566,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "16201:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10568,
                  "src": "16182:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$10982_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10564,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10563,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10982,
                        "src": "16182:9:58"
                      },
                      "referencedDeclaration": 10982,
                      "src": "16182:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$10982_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 10565,
                    "nodeType": "ArrayTypeName",
                    "src": "16182:11:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$10982_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16181:31:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10588,
            "nodeType": "FunctionDefinition",
            "src": "18652:233:58",
            "documentation": {
              "id": 10569,
              "nodeType": "StructuredDocumentation",
              "src": "16219:2428:58",
              "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param orders            The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or a preferred conduit if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order to receive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
            },
            "functionSelector": "55944a42",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchAdvancedOrders",
            "nameLocation": "18661:19:58",
            "parameters": {
              "id": 10582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10573,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "18715:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10588,
                  "src": "18690:31:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$10938_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10571,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10570,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10938,
                        "src": "18690:13:58"
                      },
                      "referencedDeclaration": 10938,
                      "src": "18690:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$10938_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 10572,
                    "nodeType": "ArrayTypeName",
                    "src": "18690:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$10938_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10577,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "18759:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10588,
                  "src": "18731:45:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10575,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10574,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10960,
                        "src": "18731:16:58"
                      },
                      "referencedDeclaration": 10960,
                      "src": "18731:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$10960_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 10576,
                    "nodeType": "ArrayTypeName",
                    "src": "18731:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$10960_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10581,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "18809:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10588,
                  "src": "18786:35:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$10969_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10579,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10578,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10969,
                        "src": "18786:11:58"
                      },
                      "referencedDeclaration": 10969,
                      "src": "18786:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$10969_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 10580,
                    "nodeType": "ArrayTypeName",
                    "src": "18786:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$10969_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18680:147:58"
            },
            "returnParameters": {
              "id": 10587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10586,
                  "mutability": "mutable",
                  "name": "executions",
                  "nameLocation": "18873:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10588,
                  "src": "18854:29:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$10982_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10584,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10583,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10982,
                        "src": "18854:9:58"
                      },
                      "referencedDeclaration": 10982,
                      "src": "18854:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$10982_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 10585,
                    "nodeType": "ArrayTypeName",
                    "src": "18854:11:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$10982_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18853:31:58"
            },
            "scope": 10662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10598,
            "nodeType": "FunctionDefinition",
            "src": "19404:101:58",
            "documentation": {
              "id": 10589,
              "nodeType": "StructuredDocumentation",
              "src": "18891:508:58",
              "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n         or the zone of a given order may cancel it. Callers should ensure\n         that the intended order was cancelled by calling `getOrderStatus`\n         and confirming that `isCancelled` returns `true`.\n @param orders The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n                   been successfully cancelled."
            },
            "functionSelector": "fd9f1e10",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "19413:6:58",
            "parameters": {
              "id": 10594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10593,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "19447:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10598,
                  "src": "19420:33:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$10799_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10591,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10590,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10799,
                        "src": "19420:15:58"
                      },
                      "referencedDeclaration": 10799,
                      "src": "19420:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$10799_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 10592,
                    "nodeType": "ArrayTypeName",
                    "src": "19420:17:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$10799_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19419:35:58"
            },
            "returnParameters": {
              "id": 10597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10596,
                  "mutability": "mutable",
                  "name": "cancelled",
                  "nameLocation": "19494:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10598,
                  "src": "19489:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19489:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19488:16:58"
            },
            "scope": 10662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10608,
            "nodeType": "FunctionDefinition",
            "src": "20345:93:58",
            "documentation": {
              "id": 10599,
              "nodeType": "StructuredDocumentation",
              "src": "19511:829:58",
              "text": " @notice Validate an arbitrary number of orders, thereby registering their\n         signatures as valid and allowing the fulfiller to skip signature\n         verification on fulfillment. Note that validated orders may still\n         be unfulfillable due to invalid item amounts or other factors;\n         callers should determine whether validated orders are fulfillable\n         by simulating the fulfillment call prior to execution. Also note\n         that anyone can validate a signed order, but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return validated A boolean indicating whether the supplied orders have\n                   been successfully validated."
            },
            "functionSelector": "88147732",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "20354:8:58",
            "parameters": {
              "id": 10604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10603,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "20380:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10608,
                  "src": "20363:23:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$10926_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10601,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10600,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10926,
                        "src": "20363:5:58"
                      },
                      "referencedDeclaration": 10926,
                      "src": "20363:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$10926_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 10602,
                    "nodeType": "ArrayTypeName",
                    "src": "20363:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$10926_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20362:25:58"
            },
            "returnParameters": {
              "id": 10607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10606,
                  "mutability": "mutable",
                  "name": "validated",
                  "nameLocation": "20427:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10608,
                  "src": "20422:14:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20422:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20421:16:58"
            },
            "scope": 10662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10614,
            "nodeType": "FunctionDefinition",
            "src": "20701:66:58",
            "documentation": {
              "id": 10609,
              "nodeType": "StructuredDocumentation",
              "src": "20444:252:58",
              "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a counter. Note that only the offerer may\n         increment the counter.\n @return newCounter The new counter."
            },
            "functionSelector": "5b34b966",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCounter",
            "nameLocation": "20710:16:58",
            "parameters": {
              "id": 10610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20726:2:58"
            },
            "returnParameters": {
              "id": 10613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10612,
                  "mutability": "mutable",
                  "name": "newCounter",
                  "nameLocation": "20755:10:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10614,
                  "src": "20747:18:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20747:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20746:20:58"
            },
            "scope": 10662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10623,
            "nodeType": "FunctionDefinition",
            "src": "20951:120:58",
            "documentation": {
              "id": 10615,
              "nodeType": "StructuredDocumentation",
              "src": "20773:173:58",
              "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return orderHash The order hash."
            },
            "functionSelector": "79df72bd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderHash",
            "nameLocation": "20960:12:58",
            "parameters": {
              "id": 10619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10618,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "20998:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10623,
                  "src": "20973:30:58",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderComponents_$10799_calldata_ptr",
                    "typeString": "struct OrderComponents"
                  },
                  "typeName": {
                    "id": 10617,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10616,
                      "name": "OrderComponents",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10799,
                      "src": "20973:15:58"
                    },
                    "referencedDeclaration": 10799,
                    "src": "20973:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderComponents_$10799_storage_ptr",
                      "typeString": "struct OrderComponents"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20972:32:58"
            },
            "returnParameters": {
              "id": 10622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10621,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "21060:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10623,
                  "src": "21052:17:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10620,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21052:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21051:19:58"
            },
            "scope": 10662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10637,
            "nodeType": "FunctionDefinition",
            "src": "21958:224:58",
            "documentation": {
              "id": 10624,
              "nodeType": "StructuredDocumentation",
              "src": "21077:876:58",
              "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
            },
            "functionSelector": "46423aa7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderStatus",
            "nameLocation": "21967:14:58",
            "parameters": {
              "id": 10627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10626,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "21990:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10637,
                  "src": "21982:17:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10625,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21982:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21981:19:58"
            },
            "returnParameters": {
              "id": 10636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10629,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "22066:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10637,
                  "src": "22061:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22061:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10631,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "22096:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10637,
                  "src": "22091:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22091:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10633,
                  "mutability": "mutable",
                  "name": "totalFilled",
                  "nameLocation": "22129:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10637,
                  "src": "22121:19:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22121:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10635,
                  "mutability": "mutable",
                  "name": "totalSize",
                  "nameLocation": "22162:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10637,
                  "src": "22154:17:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22154:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22047:134:58"
            },
            "scope": 10662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10645,
            "nodeType": "FunctionDefinition",
            "src": "22374:101:58",
            "documentation": {
              "id": 10638,
              "nodeType": "StructuredDocumentation",
              "src": "22188:181:58",
              "text": " @notice Retrieve the current counter for a given offerer.\n @param offerer The offerer in question.\n @return counter The current counter."
            },
            "functionSelector": "f07ec373",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCounter",
            "nameLocation": "22383:10:58",
            "parameters": {
              "id": 10641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10640,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "22402:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "22394:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22394:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22393:17:58"
            },
            "returnParameters": {
              "id": 10644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10643,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "22466:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "22458:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22458:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22457:17:58"
            },
            "scope": 10662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10655,
            "nodeType": "FunctionDefinition",
            "src": "22780:191:58",
            "documentation": {
              "id": 10646,
              "nodeType": "StructuredDocumentation",
              "src": "22481:294:58",
              "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
            },
            "functionSelector": "f47b7740",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "information",
            "nameLocation": "22789:11:58",
            "parameters": {
              "id": 10647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22800:2:58"
            },
            "returnParameters": {
              "id": 10654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10649,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "22877:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "22863:21:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22863:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10651,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "22906:15:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "22898:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10650,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22898:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10653,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "22943:17:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "22935:25:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22935:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22849:121:58"
            },
            "scope": 10662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10661,
            "nodeType": "FunctionDefinition",
            "src": "23106:67:58",
            "documentation": {
              "id": 10656,
              "nodeType": "StructuredDocumentation",
              "src": "22977:124:58",
              "text": " @notice Retrieve the name of this contract.\n @return contractName The name of this contract."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "23115:4:58",
            "parameters": {
              "id": 10657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23119:2:58"
            },
            "returnParameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10659,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "23159:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 10661,
                  "src": "23145:26:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23145:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23144:28:58"
            },
            "scope": 10662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SeaportInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 10451,
          "nodeType": "StructuredDocumentation",
          "src": "302:438:58",
          "text": " @title SeaportInterface\n @author 0age\n @custom:version 1.1\n @notice Seaport is a generalized ETH/ERC20/ERC721/ERC1155 marketplace. It\n         minimizes external calls to the greatest extent possible and provides\n         lightweight methods for common routes as well as more flexible\n         methods for composing advanced orders.\n @dev SeaportInterface contains all external function interfaces for Seaport."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          10662
        ],
        "name": "SeaportInterface",
        "nameLocation": "751:16:58",
        "scope": 10663,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 58
}