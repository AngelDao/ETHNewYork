{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "RevertWithFailureStatus",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_deployAndConfigurePrecompiledOptimizedConsideration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_deployAndConfigurePrecompiledReferenceConsideration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalConsiderationItems",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderParameters",
          "name": "orderParameters",
          "type": "tuple"
        },
        {
          "internalType": "address payable",
          "name": "offerer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        }
      ],
      "name": "createMirrorOrderParameters",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalConsiderationItems",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderParameters",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract Conduit",
              "name": "conduit",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ConduitBatch1155Transfer[]",
              "name": "batchTransfers",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ConduitExecuteBatch1155Test.Context",
          "name": "context",
          "type": "tuple"
        }
      ],
      "name": "executeBatch1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct BaseConduitTest.IdAmount[10]",
                  "name": "idAmounts",
                  "type": "tuple[10]"
                }
              ],
              "internalType": "struct BaseConduitTest.BatchIntermediate[10]",
              "name": "batchIntermediates",
              "type": "tuple[10]"
            }
          ],
          "internalType": "struct ConduitExecuteBatch1155Test.FuzzInputs",
          "name": "inputs",
          "type": "tuple"
        }
      ],
      "name": "testExecuteBatch1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff191660011790556519985a5b195960d21b6008557ff951c460268b64a0aabc103be9b020b90c4d14012c2d21f9c441a69438400a5760095534801561004e57600080fd5b50617f8c806200005f6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636f59707511610104578063ba414fa6116100a2578063d82555f111610071578063d82555f114610453578063e9a79a7b14610466578063f23a6e6114610479578063fa7626d4146104b257600080fd5b8063ba414fa6146103da578063bc197c81146103f2578063c88a5e6d1461042d578063d06d82291461044057600080fd5b80639a8325a0116100de5780639a8325a01461038e578063af9bbe5f146103a1578063b3391824146103b4578063b9c071b4146103c757600080fd5b80636f5970751461036057806379a59ce21461037357806397754ae91461037b57600080fd5b80633a768463116101715780634f3f86511161014b5780634f3f8651146103115780635a6c1eed1461031957806369d820d51461033a5780636bce989b1461034d57600080fd5b80633a768463146102c35780633bf82db1146102de5780634a6b6d1d146102f157600080fd5b8063233240ee116101ad578063233240ee1461025f57806329a9e3001461027257806329ce9dde146102855780632d6c17a3146102b057600080fd5b80630a9254e4146101d4578063108554f2146101de578063150b7a02146101f1575b600080fd5b6101dc6104bf565b005b6101dc6101ec36600461525a565b6105d8565b6102296101ff3660046152cf565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6101dc61026d366004615342565b6106f0565b6101dc610280366004615366565b610817565b610298610293366004615582565b610915565b6040516001600160a01b039091168152602001610256565b6101dc6102be3660046155fa565b610a81565b610298737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6101dc6102ec366004615613565b610ac3565b6103046102ff36600461580c565b610be4565b6040516102569190615a7a565b6101dc610ca6565b61032c610327366004615b54565b610e7e565b604051908152602001610256565b6101dc610348366004615b80565b610ff2565b6101dc61035b366004615613565b611133565b6101dc61036e366004615342565b611145565b6101dc61123b565b6101dc610389366004615cc1565b611403565b61029861039c366004615d14565b611726565b6101dc6103af366004615613565b61186b565b6101dc6103c2366004615daf565b611959565b6101dc6103d53660046155fa565b611c2f565b6103e2611c53565b6040519015158152602001610256565b610229610400366004615f78565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6101dc61043b36600461525a565b611d95565b6101dc61044e366004615366565b611df5565b6101dc610461366004615613565b611ef3565b6101dc61047436600461525a565b611fe6565b610229610487366004616037565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6000546103e29060ff1681565b6104c76120cc565b602854602b546040517f13ad9cab0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152306024820152600160448201529116906313ad9cab90606401600060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b5050602954602a546040517f13ad9cab0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015230602482015260016044820152911692506313ad9cab91506064015b600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b50505050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561064d57600080fd5b505af1158015610661573d6000803e3d6000fd5b50506040517f06447d560000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d5691506024015b600060405180830381600087803b1580156106d457600080fd5b505af11580156106e8573d6000803e3d6000fd5b505050505050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527001000000000000000000000000000000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b50506040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa791506024015b600060405180830381600087803b1580156107fc57600080fd5b505af1158015610810573d6000803e3d6000fd5b5050505050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201527001000000000000000000000000000000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561089c57600080fd5b505af11580156108b0573d6000803e3d6000fd5b50506040517f47e50cce0000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506347e50cce91506044016106ba565b6040517f8d1cc9250000000000000000000000000000000000000000000000000000000081526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d90638d1cc9259061096a9087906004016160df565b6000604051808303816000875af1158015610989573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b19190810190616112565b836040516020016109c3929190616189565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527f65706c6f796d656e74206661696c65642e00000000000000000000000000000060648201526084015b60405180910390fd5b5092915050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02610aa583426161e7565b6040518263ffffffff1660e01b81526004016107e291815260200190565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b50506040517f45b560780000000000000000000000000000000000000000000000000000000081526001600160a01b03808716600483015285166024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506345b5607891506044015b600060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b50505050505050565b610bec61517e565b6000610bfb8660600151612664565b90506000610c0d876040015187612800565b90506000604051806101600160405280886001600160a01b03168152602001876001600160a01b0316815260200184815260200183815260200189608001516003811115610c5d57610c5d61593b565b81526020018960a0015181526020018960c0015181526020018960e001518152602001896101000151815260200186815260200183518152509050809350505050949350505050565b610cc76040518060600160405280603a8152602001617e5b603a9139611726565b602860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610d36604051806060016040528060328152602001617f2560329139602854604080516001600160a01b039092166020830152015b604051602081830303815290604052610915565b602580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556028546027546040517f794593bc000000000000000000000000000000000000000000000000000000008152600481019190915230602482015291169063794593bc906044016020604051808303816000875af1158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df391906161fe565b602b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556028546025546040517f13ad9cab00000000000000000000000000000000000000000000000000000000815260048101939093528316602483015260016044830152909116906313ad9cab906064016105a4565b600081831115610f10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e0000000000006064820152608401610a71565b6000610f1c84846161e7565b905080600003610f2e57839150610f84565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610f5d57849150610f84565b610f668161621b565b90506000610f748287616253565b9050610f80818661628e565b9250505b60408051818152600c818301527f426f756e6420526573756c74000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b6040805160008082526020820190925281611060565b6040805160a08101825260008082526020808301829052928201526060808201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816110085790505b50905060005b600a60ff821610156110b3576110a18261109c85600001518460ff16600a8110611092576110926162a6565b60200201516129c4565b612bd7565b91506110ac816162d5565b9050611066565b506110bd81612d2f565b6110c681612dd6565b6110cf81613123565b60408051808201909152602a546001600160a01b03168152602081018290526110ff90309063b339182490613161565b60408051808201909152602b546001600160a01b031681526020810182905261112f90309063b339182490613161565b5050565b6111408383836000611403565b505050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527001000000000000000000000000000000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156111ca57600080fd5b505af11580156111de573d6000803e3d6000fd5b50506040517f06447d560000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d5691506024016107e2565b61125c6040518060800160405280604c8152602001617e95604c9139611726565b602960006101000a8154816001600160a01b0302191690836001600160a01b031602179055506112bb604051806080016040528060448152602001617ee160449139602954604080516001600160a01b03909216602083015201610d22565b602680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556029546027546040517f794593bc000000000000000000000000000000000000000000000000000000008152600481019190915230602482015291169063794593bc906044016020604051808303816000875af1158015611354573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137891906161fe565b602a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283169081179091556029546026546040517f13ad9cab00000000000000000000000000000000000000000000000000000000815260048101939093528316602483015260016044830152909116906313ad9cab906064016105a4565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f70a08231000000000000000000000000000000000000000000000000000000001790529151600092871691611485916162f4565b6000604051808303816000865af19150503d80600081146114c2576040519150601f19603f3d011682016040523d82523d6000602084013e6114c7565b606091505b509150506000818060200190518101906114e19190616310565b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03891617905590506115ac846115a68761157d7f70a082310000000000000000000000000000000000000000000000000000000060015b906003820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b906131e8565b82156106e85760408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f18160ddd0000000000000000000000000000000000000000000000000000000017905290516000916001600160a01b0389169161162291906162f4565b6000604051808303816000865af19150503d806000811461165f576040519150601f19603f3d011682016040523d82523d6000602084013e611664565b606091505b5091505060008180602001905181019061167e9190616310565b9050828610156116a35761169286846161e7565b61169c90826161e7565b90506116ba565b6116ad83876161e7565b6116b7908261628e565b90505b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a1617905561171c816115a67f18160ddd000000000000000000000000000000000000000000000000000000006001611545565b5050505050505050565b6040517f8d1cc9250000000000000000000000000000000000000000000000000000000081526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d90638d1cc9259061177b9086906004016160df565b6000604051808303816000875af115801561179a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117c29190810190616112565b90508051602082016000f091506001600160a01b038216611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201527f656e74206661696c65642e0000000000000000000000000000000000000000006064820152608401610a71565b50919050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156118e057600080fd5b505af11580156118f4573d6000803e3d6000fd5b50506040517f47e50cce0000000000000000000000000000000000000000000000000000000081526001600160a01b03808716600483015285166024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506347e50cce9150604401610bad565b805160208201516040517f8df25d920000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691638df25d92916119a69190600401616404565b6020604051808303816000875af11580156119c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e99190616417565b9050611a377fffffffff0000000000000000000000000000000000000000000000000000000082167f8df25d92000000000000000000000000000000000000000000000000000000006131f2565b60005b826020015151811015611c2257600083602001518281518110611a5f57611a5f6162a6565b60200260200101519050600081606001515167ffffffffffffffff811115611a8957611a8961539f565b604051908082528060200260200182016040528015611ab2578160200160208202803683370190505b50905060005b826060015151811015611b04578260400151828281518110611adc57611adc6162a6565b6001600160a01b0390921660209283029190910190910152611afd8161621b565b9050611ab8565b50815160608301516040517f4e1273f40000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691634e1273f491611b53918691600401616459565b600060405180830381865afa158015611b70573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b9891908101906164b9565b90506000611ba5846132fc565b9050611bb481518351146133e6565b60005b8251811015611c0c57611bfc838281518110611bd557611bd56162a6565b6020026020010151838381518110611bef57611bef6162a6565b602002602001015161345a565b611c058161621b565b9050611bb7565b505050505080611c1b9061621b565b9050611a3a565b5050611c2c613554565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02610aa5834261628e565b60008054610100900460ff1615611c735750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611d905760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611d18917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161654a565b60408051601f1981840301815290829052611d32916162f4565b6000604051808303816000865af19150503d8060008114611d6f576040519150601f19603f3d011682016040523d82523d6000602084013e611d74565b606091505b5091505080806020019051810190611d8c9190616592565b9150505b919050565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d906044016106ba565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201527001000000000000000000000000000000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015611e7a57600080fd5b505af1158015611e8e573d6000803e3d6000fd5b50506040517f45b560780000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506345b5607891506044016106ba565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051611f78906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a1600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038516179055611140816115a68461157d7f70a08231000000000000000000000000000000000000000000000000000000006001611545565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561205b57600080fd5b505af115801561206f573d6000803e3d6000fd5b50506040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa791506024016106ba565b3060601b6027556120db610ca6565b7f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051612160906020808252602b908201527f4465706c6f79696e67207265666572656e63652066726f6d20707265636f6d7060408201527f696c656420736f75726365000000000000000000000000000000000000000000606082015260800190565b60405180910390a161217061123b565b602854604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152601160448201527f636f6e64756974436f6e74726f6c6c65720000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561221557600080fd5b505af1158015612229573d6000803e3d6000fd5b5050602554604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152600d60448201527f636f6e73696465726174696f6e000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156122d257600080fd5b505af11580156122e6573d6000803e3d6000fd5b5050602b54604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152600760448201527f636f6e64756974000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561238f57600080fd5b505af11580156123a3573d6000803e3d6000fd5b5050602954604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152601a60448201527f7265666572656e6365436f6e64756974436f6e74726f6c6c65720000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561244c57600080fd5b505af1158015612460573d6000803e3d6000fd5b5050602654604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152601660448201527f7265666572656e6365436f6e73696465726174696f6e000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561250957600080fd5b505af115801561251d573d6000803e3d6000fd5b5050602a54604080517fc657c7180000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301526024820152601060448201527f7265666572656e6365436f6e64756974000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156125c657600080fd5b505af11580156125da573d6000803e3d6000fd5b5050604080517fc657c7180000000000000000000000000000000000000000000000000000000081523060048201526024810191909152600c60448201527f74657374436f6e747261637400000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c71891506084016105a4565b60606000825167ffffffffffffffff8111156126825761268261539f565b6040519080825280602002602001820160405280156126ef57816020015b6126dc6040805160a08101909152806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816126a05790505b50905060005b8151811015610a7a576040518060a0016040528085838151811061271b5761271b6162a6565b60200260200101516000015160058111156127385761273861593b565b815260200185838151811061274f5761274f6162a6565b6020026020010151602001516001600160a01b0316815260200185838151811061277b5761277b6162a6565b602002602001015160400151815260200185838151811061279e5761279e6162a6565b60200260200101516060015181526020018583815181106127c1576127c16162a6565b6020026020010151608001518152508282815181106127e2576127e26162a6565b602002602001018190525080806127f89061621b565b9150506126f5565b60606000835167ffffffffffffffff81111561281e5761281e61539f565b60405190808252806020026020018201604052801561289c57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161283c5790505b50905060005b84518110156129ba576040518060c001604052808683815181106128c8576128c86162a6565b60200260200101516000015160058111156128e5576128e561593b565b81526020018683815181106128fc576128fc6162a6565b6020026020010151602001516001600160a01b03168152602001868381518110612928576129286162a6565b602002602001015160400151815260200186838151811061294b5761294b6162a6565b602002602001015160600151815260200186838151811061296e5761296e6162a6565b6020026020010151608001518152602001856001600160a01b031681525082828151811061299e5761299e6162a6565b6020026020010181905250806129b39061621b565b90506128a2565b5090505b92915050565b60608060006040516129d5906151fb565b604051809103906000f0801580156129f1573d6000803e3d6000fd5b5060408051600a8082526101608201909252919250600091906020820161014080368337505060408051600a80825261016082019092529293506000929150602082016101408036833701905050905060005b600a811015612af457866040015181600a8110612a6357612a636162a6565b602002015160000151838281518110612a7e57612a7e6162a6565b602002602001018181525050866040015181600a8110612aa057612aa06162a6565b6020020151602001516fffffffffffffffffffffffffffffffff166001612ac7919061628e565b828281518110612ad957612ad96162a6565b6020908102919091010152612aed8161621b565b9050612a44565b508551602087015160408051600180825281830190925290816020015b6040805160a08101825260008082526020808301829052928201526060808201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181612b115790505095506040518060a00160405280866001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b031681526020018581526020018481525086600081518110612bc057612bc06162a6565b602090810291909101015250939695505050505050565b6060600082518451612be9919061628e565b67ffffffffffffffff811115612c0157612c0161539f565b604051908082528060200260200182016040528015612c7757816020015b6040805160a08101825260008082526020808301829052928201526060808201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181612c1f5790505b50905060005b8451811015612cce57848181518110612c9857612c986162a6565b6020026020010151828281518110612cb257612cb26162a6565b602002602001018190525080612cc79061621b565b9050612c7d565b5060005b83518110156129ba57838181518110612ced57612ced6162a6565b602002602001015182865183612d03919061628e565b81518110612d1357612d136162a6565b602002602001018190525080612d289061621b565b9050612cd2565b60005b815181101561112f576000828281518110612d4f57612d4f6162a6565b602002602001015190506000612d6a82602001516003613592565b90506000612d7d83604001516003613592565b6001600160a01b038084166020860152811660408501528551909150612dc2908390879087908110612db157612db16162a6565b6020026020010151602001516135f0565b50505080612dcf9061621b565b9050612d32565b60005b815181101561112f576000828281518110612df657612df66162a6565b602090810291909101810151908101518151919250908060005b846060015151811015612f0c57816001600160a01b031663156e29f68587606001518481518110612e4357612e436162a6565b602002602001015188608001518581518110612e6157612e616162a6565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039093166004840152602483019190915260448201526064016020604051808303816000875af1158015612ed7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612efb9190616592565b50612f058161621b565b9050612e10565b506040517f06447d560000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015612f7b57600080fd5b505af1158015612f8f573d6000803e3d6000fd5b5050602b546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260016024820152908416925063a22cb4659150604401600060405180830381600087803b158015612ffa57600080fd5b505af115801561300e573d6000803e3d6000fd5b5050602a546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260016024820152908416925063a22cb4659150604401600060405180830381600087803b15801561307957600080fd5b505af115801561308d573d6000803e3d6000fd5b5050604080517f90c5013b0000000000000000000000000000000000000000000000000000000081529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506390c5013b9250600480830192600092919082900301818387803b1580156130f657600080fd5b505af115801561310a573d6000803e3d6000fd5b50505050505050508061311c9061621b565b9050612dd9565b60005b815181101561112f57613151828281518110613144576131446162a6565b60200260200101516136fc565b61315a8161621b565b9050613126565b8282826040518263ffffffff1660e01b815260040161318091906165af565b600060405180830381600087803b15801561319a57600080fd5b505af19250505080156131ab575060015b611140573d8080156131d9576040519150601f19603f3d011682016040523d82523d6000602084013e6131de565b606091505b506105d2816137ac565b61112f82826137c0565b80821461112f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161327e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516132b591906165dd565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99826040516132ec9190616628565b60405180910390a161112f613c78565b6060600082606001515167ffffffffffffffff81111561331e5761331e61539f565b604051908082528060200260200182016040528015613347578160200160208202803683370190505b50905060005b836060015151811015610a7a576040808501516001600160a01b039081166000908152602c6020908152838220885190931682529190915290812060608601518051919291849081106133a2576133a26162a6565b60200260200101518152602001908152602001600020548282815181106133cb576133cb6162a6565b60209081029190910101526133df8161621b565b905061334d565b80611c2c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161344a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1611c2c613c78565b80821461112f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516134e69060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161351d91906165dd565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516132ec9190616628565b61355c613db8565b6040517f44e464d00000000000000000000000000000000000000000000000000000000081529015156004820152602401610a71565b60006001600160a01b0383166135aa575060016129be565b60038260038111156135be576135be61593b565b146135ca5750816129be565b6135d383613e5d565b6135e9576135e2836001616665565b90506129be565b5090919050565b806001600160a01b0316826001600160a01b03161461112f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161368e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516136c59190616687565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516132ec91906166db565b60005b81606001515181101561112f5781608001518181518110613722576137226162a6565b6020908102919091018101516040808501516001600160a01b039081166000908152602c85528281208751909216815293528220606085015180519293919285908110613771576137716162a6565b602002602001015181526020019081526020016000206000828254613796919061628e565b909155506137a590508161621b565b90506136ff565b6009548151602083012014611c2c57600080fd5b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561383157602002820191906000526020600020905b81548152602001906001019080831161381d575b5050505050905060008361384483613fc1565b60405160200161385592919061654a565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382207fffffffff000000000000000000000000000000000000000000000000000000008a1683528152928120919450909290916138bf918691889101616718565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166138f7576138f587614061565b505b6001600160a01b0385166000908152602088815260408083207fffffffff0000000000000000000000000000000000000000000000000000000088168452825280832090519091839161394e918791899101616718565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405161399391906162f4565b600060405180830381855afa9150503d80600081146139ce576040519150601f19603f3d011682016040523d82523d6000602084013e6139d3565b606091505b5091506139ec9050816139e7886020616752565b6150e9565b6040517f667f9d700000000000000000000000000000000000000000000000000000000081526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d70906044016020604051808303816000875af1158015613a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a919190616310565b9050808214613b6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606e60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e7420737570706f727465642e00000000000000000000000000000000000060a482015260c401610a71565b6040517f70ca10bb0000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015613bea57600080fd5b505af1158015613bfe573d6000803e3d6000fd5b50505060058b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555060038a0180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169055613c6460028b016000615208565b896004016000905550505050505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15613d8a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052613d29929160200161654a565b60408051601f1981840301815290829052613d43916162f4565b6000604051808303816000865af19150503d8060008114613d80576040519150601f19603f3d011682016040523d82523d6000602084013e613d85565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6008546040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d60048201819052602482019290925260009160019163667f9d70906044016020604051808303816000875af1158015613e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e579190616310565b14905090565b60006001600160a01b038216613e7557506000919050565b6001600160a01b0382163b15613fb9576000806001600160a01b0384167ff23a6e6100000000000000000000000000000000000000000000000000000000828080604051908082528060200260200182016040528015613edf578160200160208202803683370190505b506040805160008152602081018252613efd959493929181016167b4565b60408051601f1981840301815290829052613f17916162f4565b6000604051808303816000865af19150503d8060008114613f54576040519150601f19603f3d011682016040523d82523d6000602084013e613f59565b606091505b5091509150818015613fb15750604080517ff23a6e6100000000000000000000000000000000000000000000000000000000602082015201604051602081830303815290604052805190602001208180519060200120145b949350505050565b506001919050565b6060600082516020613fd39190616752565b67ffffffffffffffff811115613feb57613feb61539f565b6040519080825280601f01601f191660200182016040528015614015576020820181803683370190505b50905060005b8351811015610a7a576000848281518110614038576140386162a6565b6020026020010151905080826020026020018401525080806140599061621b565b91505061401b565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156140d157602002820191906000526020600020905b8154815260200190600101908083116140bd575b5050506001600160a01b038716600090815260018a01602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a168452825280832090519596509491935061413392508591879101616718565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156141e7576001600160a01b0384166000908152602087815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832090519092916141b7918591879101616718565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836141f383613fc1565b60405160200161420492919061654a565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561427357600080fd5b505af1158015614287573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516142a691906162f4565b600060405180830381855afa9150503d80600081146142e1576040519150601f19603f3d011682016040523d82523d6000602084013e6142e6565b606091505b5091506142fa9050816139e7876020616752565b6040517f65bc94810000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015614374573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261439c9190810190616884565b50905080516001036147b55760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d7089846000815181106143f0576143f06162a6565b60200260200101516040518363ffffffff1660e01b81526004016144299291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015614448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061446c9190616310565b9050806144d3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106144a8576144a86162a6565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b8083146145ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606d60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e7420737570706f727465640000000000000000000000000000000000000060a482015260c401610a71565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016145e4929190616718565b604051602081830303815290604052805190602001208560008151811061460d5761460d6162a6565b602090810291909101810151604080516001600160a01b0390961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a18160008151811061467c5761467c6162a6565b6020908102919091018101516001600160a01b038a1660009081528c835260408082207fffffffff000000000000000000000000000000000000000000000000000000008c16835284528082209051929390926146dd918a918c9101616718565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284207fffffffff000000000000000000000000000000000000000000000000000000008c1685528252828420925190939161475d918a918c9101616718565b60408051808303601f1901815291815281516020928301208352908201929092520160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550614ee9565b600181511115614e5f5760005b8151811015614e595760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a858581518110614812576148126162a6565b60200260200101516040518363ffffffff1660e01b815260040161484b9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561486a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061488e9190616310565b9050806148f4577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106148c9576148c96162a6565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8a858581518110614939576149396162a6565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201527f13370000000000000000000000000000000000000000000000000000000000006044820152606401600060405180830381600087803b1580156149c857600080fd5b505af11580156149dc573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516149fc91906162f4565b600060405180830381855afa9150503d8060008114614a37576040519150601f19603f3d011682016040523d82523d6000602084013e614a3c565b606091505b509092509050614a51816139e78b6020616752565b9550818015614a7f57507f133700000000000000000000000000000000000000000000000000000000000086145b15614d76577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001614aba929190616718565b60405160208183030381529060405280519060200120888881518110614ae257614ae26162a6565b602090810291909101810151604080516001600160a01b0390961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a1848481518110614b5057614b506162a6565b6020908102919091018101516001600160a01b038d1660009081528f835260408082207fffffffff000000000000000000000000000000000000000000000000000000008f1683528452808220905192939092614bb1918d918f9101616718565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c604051602001614c66929190616718565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110614ce657614ce66162a6565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015614d5657600080fd5b505af1158015614d6a573d6000803e3d6000fd5b50505050505050614e59565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110614dbb57614dbb6162a6565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015614e2b57600080fd5b505af1158015614e3f573d6000803e3d6000fd5b505050505050508080614e519061621b565b9150506147c2565b50614ee9565b604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610a71565b6001600160a01b038716600090815260018a01602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a16845282528083209051909291614f439188918a9101616718565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16614ff8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e00000000000000000000000000000000006064820152608401610a71565b6005890180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556003890180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000016905561505a60028a016000615208565b600060048a018190556001600160a01b038816815260208a815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a168452825280832090519092916150b69188918a9101616718565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116150fe578451615101565b60205b905060005b8181101561517457615119816008616752565b86615124838861628e565b81518110615134576151346162a6565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c92909217918061516c8161621b565b915050615106565b5090949350505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600060038111156151cb576151cb61593b565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b61157c806168df83390190565b5080546000825590600052602060002090810190611c2c91905b808211156152365760008155600101615222565b5090565b6001600160a01b0381168114611c2c57600080fd5b8035611d908161523a565b6000806040838503121561526d57600080fd5b82356152788161523a565b946020939093013593505050565b60008083601f84011261529857600080fd5b50813567ffffffffffffffff8111156152b057600080fd5b6020830191508360208285010111156152c857600080fd5b9250929050565b6000806000806000608086880312156152e757600080fd5b85356152f28161523a565b945060208601356153028161523a565b935060408601359250606086013567ffffffffffffffff81111561532557600080fd5b61533188828901615286565b969995985093965092949392505050565b60006020828403121561535457600080fd5b813561535f8161523a565b9392505050565b6000806040838503121561537957600080fd5b82356153848161523a565b915060208301356153948161523a565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156153f1576153f161539f565b60405290565b60405160c0810167ffffffffffffffff811182821017156153f1576153f161539f565b604051610160810167ffffffffffffffff811182821017156153f1576153f161539f565b6040516020810167ffffffffffffffff811182821017156153f1576153f161539f565b6040516060810167ffffffffffffffff811182821017156153f1576153f161539f565b6040805190810167ffffffffffffffff811182821017156153f1576153f161539f565b604051610140810167ffffffffffffffff811182821017156153f1576153f161539f565b604051601f8201601f1916810167ffffffffffffffff811182821017156154f4576154f461539f565b604052919050565b600067ffffffffffffffff8211156155165761551661539f565b50601f01601f191660200190565b6000615537615532846154fc565b6154cb565b905082815283838301111561554b57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261557357600080fd5b61535f83833560208501615524565b6000806040838503121561559557600080fd5b823567ffffffffffffffff808211156155ad57600080fd5b6155b986838701615562565b935060208501359150808211156155cf57600080fd5b508301601f810185136155e157600080fd5b6155f085823560208401615524565b9150509250929050565b60006020828403121561560c57600080fd5b5035919050565b60008060006060848603121561562857600080fd5b83356156338161523a565b925060208401356156438161523a565b929592945050506040919091013590565b600067ffffffffffffffff82111561566e5761566e61539f565b5060051b60200190565b803560068110611d9057600080fd5b600082601f83011261569857600080fd5b813560206156a861553283615654565b82815260a092830285018201928282019190878511156156c757600080fd5b8387015b858110156157325781818a0312156156e35760008081fd5b6156eb6153ce565b6156f482615678565b8152858201356157038161523a565b8187015260408281013590820152606080830135908201526080808301359082015284529284019281016156cb565b5090979650505050505050565b600082601f83011261575057600080fd5b8135602061576061553283615654565b82815260c0928302850182019282820191908785111561577f57600080fd5b8387015b858110156157325781818a03121561579b5760008081fd5b6157a36153f7565b6157ac82615678565b8152858201356157bb8161523a565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301356157ec8161523a565b908201528452928401928101615783565b803560048110611d9057600080fd5b6000806000806080858703121561582257600080fd5b843567ffffffffffffffff8082111561583a57600080fd5b90860190610160828903121561584f57600080fd5b61585761541a565b6158608361524f565b815261586e6020840161524f565b602082015260408301358281111561588557600080fd5b6158918a828601615687565b6040830152506060830135828111156158a957600080fd5b6158b58a82860161573f565b6060830152506158c7608084016157fd565b608082015260a0838101359082015260c0808401359082015260e0808401359082015261010080840135908201526101208084013590820152610140928301359281019290925250935061591d6020860161524f565b925061592b6040860161524f565b9396929550929360600135925050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061597a5761597a61593b565b9052565b600081518084526020808501945080840160005b838110156159e85781516159a788825161596a565b808401516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a09096019590820190600101615992565b509495945050505050565b600081518084526020808501945080840160005b838110156159e8578151615a1c88825161596a565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101615a07565b6004811061597a5761597a61593b565b60208152615a946020820183516001600160a01b03169052565b60006020830151615ab060408401826001600160a01b03169052565b506040830151610160806060850152615acd61018085018361597e565b91506060850151601f19858403016080860152615aea83826159f3565b9250506080850151615aff60a0860182615a6a565b5060a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b600080600060608486031215615b6957600080fd5b505081359360208301359350604090920135919050565b6000611b808284031215615b9357600080fd5b615b9b61543e565b83601f840112615baa57600080fd5b615bb26154a7565b80611b80850186811115615bc557600080fd5b855b81811015615ca7576102c08189031215615be057600080fd5b615be8615461565b8135615bf38161523a565b8152602082810135615c048161523a565b82820152605f83018a13615c1757600080fd5b615c1f6154a7565b806102c085018c811115615c3257600080fd5b604086015b81811015615c8f576040818f031215615c4f57600080fd5b615c57615484565b81358152858201356fffffffffffffffffffffffffffffffff81168114615c7d57600080fd5b81870152845292840192604001615c37565b5050604084015250908552909301926102c001615bc7565b50508252509392505050565b8015158114611c2c57600080fd5b60008060008060808587031215615cd757600080fd5b8435615ce28161523a565b93506020850135615cf28161523a565b9250604085013591506060850135615d0981615cb3565b939692955090935050565b600060208284031215615d2657600080fd5b813567ffffffffffffffff811115615d3d57600080fd5b613fb184828501615562565b600082601f830112615d5a57600080fd5b81356020615d6a61553283615654565b82815260059290921b84018101918181019086841115615d8957600080fd5b8286015b84811015615da45780358352918301918301615d8d565b509695505050505050565b60006020808385031215615dc257600080fd5b823567ffffffffffffffff80821115615dda57600080fd5b9084019060408287031215615dee57600080fd5b615df6615484565b8235615e018161523a565b81528284013582811115615e1457600080fd5b80840193505086601f840112615e2957600080fd5b8235615e3761553282615654565b81815260059190911b84018501908581019089831115615e5657600080fd5b8686015b83811015615f2057803586811115615e7157600080fd5b870160a0818d03601f19011215615e8757600080fd5b615e8f6153ce565b89820135615e9c8161523a565b81526040820135615eac8161523a565b818b0152615ebc6060830161524f565b604082015260808083013589811115615ed55760008081fd5b615ee38f8d83870101615d49565b60608401525060a083013589811115615efc5760008081fd5b615f0a8f8d83870101615d49565b9183019190915250845250918701918701615e5a565b5095830195909552509695505050505050565b60008083601f840112615f4557600080fd5b50813567ffffffffffffffff811115615f5d57600080fd5b6020830191508360208260051b85010111156152c857600080fd5b60008060008060008060008060a0898b031215615f9457600080fd5b8835615f9f8161523a565b97506020890135615faf8161523a565b9650604089013567ffffffffffffffff80821115615fcc57600080fd5b615fd88c838d01615f33565b909850965060608b0135915080821115615ff157600080fd5b615ffd8c838d01615f33565b909650945060808b013591508082111561601657600080fd5b506160238b828c01615286565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561605057600080fd5b863561605b8161523a565b9550602087013561606b8161523a565b94506040870135935060608701359250608087013567ffffffffffffffff81111561609557600080fd5b6160a189828a01615286565b979a9699509497509295939492505050565b60005b838110156160ce5781810151838201526020016160b6565b838111156105d25750506000910152565b60208152600082518060208401526160fe8160408501602087016160b3565b601f01601f19169190910160400192915050565b60006020828403121561612457600080fd5b815167ffffffffffffffff81111561613b57600080fd5b8201601f8101841361614c57600080fd5b805161615a615532826154fc565b81815285602083850101111561616f57600080fd5b6161808260208301602086016160b3565b95945050505050565b6000835161619b8184602088016160b3565b8351908301906161af8183602088016160b3565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156161f9576161f96161b8565b500390565b60006020828403121561621057600080fd5b815161535f8161523a565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361624c5761624c6161b8565b5060010190565b600082616289577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b600082198211156162a1576162a16161b8565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff821660ff81036162eb576162eb6161b8565b60010192915050565b600082516163068184602087016160b3565b9190910192915050565b60006020828403121561632257600080fd5b5051919050565b600081518084526020808501945080840160005b838110156159e85781518752958201959082019060010161633d565b600081518084526020808501808196508360051b8101915082860160005b858110156163f7578284038952815160a06001600160a01b0380835116875280888401511688880152604081818501511681890152505060608083015182828901526163c583890182616329565b92505050608080830151925086820381880152506163e38183616329565b9a87019a9550505090840190600101616377565b5091979650505050505050565b60208152600061535f6020830184616359565b60006020828403121561642957600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461535f57600080fd5b604080825283519082018190526000906020906060840190828701845b8281101561649b5781516001600160a01b031684529284019290840190600101616476565b505050838103828501526164af8186616329565b9695505050505050565b600060208083850312156164cc57600080fd5b825167ffffffffffffffff8111156164e357600080fd5b8301601f810185136164f457600080fd5b805161650261553282615654565b81815260059190911b8201830190838101908783111561652157600080fd5b928401925b8284101561653f57835182529284019290840190616526565b979650505050505050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516165848160048501602087016160b3565b919091016004019392505050565b6000602082840312156165a457600080fd5b815161535f81615cb3565b602081526001600160a01b03825116602082015260006020830151604080840152613fb16060840182616359565b60408152600061661a60408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b60408152600061661a60408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b60006001600160a01b038083168185168083038211156161af576161af6161b8565b6040815260006166c460408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b90506001600160a01b038316602083015292915050565b6040815260006166c460408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b825160009082906020808701845b8381101561674257815185529382019390820190600101616726565b5050948252509092019392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561678a5761678a6161b8565b500290565b805160009060208084018383156159e85781518752958201959082019060010161633d565b7fffffffff000000000000000000000000000000000000000000000000000000008616815260007fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808760601b166004840152808660601b1660188401525061653f616823602c84018661678f565b8461678f565b600082601f83011261683a57600080fd5b8151602061684a61553283615654565b82815260059290921b8401810191818101908684111561686957600080fd5b8286015b84811015615da4578051835291830191830161686d565b6000806040838503121561689757600080fd5b825167ffffffffffffffff808211156168af57600080fd5b6168bb86838701616829565b935060208501519150808211156168d157600080fd5b506155f08582860161682956fe608060405234801561001057600080fd5b5061155c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80632eb2c2d611610076578063a22cb4651161005b578063a22cb465146101a0578063e985e9c5146101b3578063f242432a146101e157600080fd5b80632eb2c2d61461016b5780634e1273f41461018057600080fd5b8062fdd58e146100a757806301ffc9a7146100e25780630e89341c14610105578063156e29f614610158575b600080fd5b6100cf6100b5366004610e37565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b6100f56100f0366004610e92565b6101f4565b60405190151581526020016100d9565b61014b610113366004610eb6565b5060408051808201909152600381527f7572690000000000000000000000000000000000000000000000000000000000602082015290565b6040516100d99190610f3a565b6100f5610166366004610f4d565b6102d9565b61017e61017936600461100e565b610300565b005b61019361018e3660046110c9565b6106f6565b6040516100d99190611135565b61017e6101ae366004611179565b61086d565b6100f56101c13660046111b5565b600160209081526000928352604080842090915290825290205460ff1681565b61017e6101ef3660046111e8565b610904565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061028757507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806102d357507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60006102f684848460405180602001604052806000815250610c0a565b5060019392505050565b84831461036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d41544348000000000000000000000000000000000060448201526064015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff891614806103c2575073ffffffffffffffffffffffffffffffffffffffff8816600090815260016020908152604080832033845290915290205460ff165b610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610365565b60008060005b878110156104fd5788888281811061044857610448611260565b90506020020135925086868281811061046357610463611260565b73ffffffffffffffffffffffffffffffffffffffff8e16600090815260208181526040808320898452825282208054939091029490940135955085939250906104ad9084906112be565b909155505073ffffffffffffffffffffffffffffffffffffffff8a16600090815260208181526040808320868452909152812080548492906104f09084906112d5565b909155505060010161042e565b508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610578949392919061133c565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff89163b1561066a576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff8b169063bc197c81906105ff9033908f908e908e908e908e908e908e906004016113b7565b6020604051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611428565b7fffffffff000000000000000000000000000000000000000000000000000000001614610684565b73ffffffffffffffffffffffffffffffffffffffff891615155b6106ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610365565b50505050505050505050565b6060838214610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610365565b8367ffffffffffffffff81111561077a5761077a611445565b6040519080825280602002602001820160405280156107a3578160200160208202803683370190505b50905060005b84811015610864576000808787848181106107c6576107c6611260565b90506020020160208101906107db9190611474565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085858481811061082957610829611260565b9050602002013581526020019081526020016000205482828151811061085157610851611260565b60209081029190910101526001016107a9565b50949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3373ffffffffffffffffffffffffffffffffffffffff87161480610958575073ffffffffffffffffffffffffffffffffffffffff8616600090815260016020908152604080832033845290915290205460ff165b6109be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610365565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260208181526040808320878452909152812080548592906109fc9084906112be565b909155505073ffffffffffffffffffffffffffffffffffffffff851660009081526020818152604080832087845290915281208054859290610a3f9084906112d5565b9091555050604080518581526020810185905273ffffffffffffffffffffffffffffffffffffffff808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff85163b15610b82576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff87169063f23a6e6190610b179033908b908a908a908a908a9060040161148f565b6020604051808303816000875af1158015610b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5a9190611428565b7fffffffff000000000000000000000000000000000000000000000000000000001614610b9c565b73ffffffffffffffffffffffffffffffffffffffff851615155b610c02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610365565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020818152604080832086845290915281208054849290610c489084906112d5565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15610d88576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e6190610d1d9033906000908990899089906004016114e1565b6020604051808303816000875af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190611428565b7fffffffff000000000000000000000000000000000000000000000000000000001614610da2565b73ffffffffffffffffffffffffffffffffffffffff841615155b610e08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610365565b50505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e3257600080fd5b919050565b60008060408385031215610e4a57600080fd5b610e5383610e0e565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610e8f57600080fd5b50565b600060208284031215610ea457600080fd5b8135610eaf81610e61565b9392505050565b600060208284031215610ec857600080fd5b5035919050565b6000815180845260005b81811015610ef557602081850181015186830182015201610ed9565b81811115610f07576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610eaf6020830184610ecf565b600080600060608486031215610f6257600080fd5b610f6b84610e0e565b95602085013595506040909401359392505050565b60008083601f840112610f9257600080fd5b50813567ffffffffffffffff811115610faa57600080fd5b6020830191508360208260051b8501011115610fc557600080fd5b9250929050565b60008083601f840112610fde57600080fd5b50813567ffffffffffffffff811115610ff657600080fd5b602083019150836020828501011115610fc557600080fd5b60008060008060008060008060a0898b03121561102a57600080fd5b61103389610e0e565b975061104160208a01610e0e565b9650604089013567ffffffffffffffff8082111561105e57600080fd5b61106a8c838d01610f80565b909850965060608b013591508082111561108357600080fd5b61108f8c838d01610f80565b909650945060808b01359150808211156110a857600080fd5b506110b58b828c01610fcc565b999c989b5096995094979396929594505050565b600080600080604085870312156110df57600080fd5b843567ffffffffffffffff808211156110f757600080fd5b61110388838901610f80565b9096509450602087013591508082111561111c57600080fd5b5061112987828801610f80565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561116d57835183529284019291840191600101611151565b50909695505050505050565b6000806040838503121561118c57600080fd5b61119583610e0e565b9150602083013580151581146111aa57600080fd5b809150509250929050565b600080604083850312156111c857600080fd5b6111d183610e0e565b91506111df60208401610e0e565b90509250929050565b60008060008060008060a0878903121561120157600080fd5b61120a87610e0e565b955061121860208801610e0e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561124257600080fd5b61124e89828a01610fcc565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156112d0576112d061128f565b500390565b600082198211156112e8576112e861128f565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561131f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006113506040830186886112ed565b82810360208401526113638185876112ed565b979650505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff808b168352808a1660208401525060a060408301526113f160a08301888a6112ed565b82810360608401526114048187896112ed565b9050828103608084015261141981858761136e565b9b9a5050505050505050505050565b60006020828403121561143a57600080fd5b8151610eaf81610e61565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561148657600080fd5b610eaf82610e0e565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301526114d560a08301848661136e565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261136360a0830184610ecf56fea2646970667358221220cd9f8600d6a338a94893c8e02113697be8e61b9abf390a7c179ce91017e4f11f64736f6c634300080e00336f7074696d697a65642d6f75742f436f6e64756974436f6e74726f6c6c65722e736f6c2f436f6e64756974436f6e74726f6c6c65722e6a736f6e7265666572656e63652d6f75742f5265666572656e6365436f6e64756974436f6e74726f6c6c65722e736f6c2f5265666572656e6365436f6e64756974436f6e74726f6c6c65722e6a736f6e7265666572656e63652d6f75742f5265666572656e6365436f6e73696465726174696f6e2e736f6c2f5265666572656e6365436f6e73696465726174696f6e2e6a736f6e6f7074696d697a65642d6f75742f436f6e73696465726174696f6e2e736f6c2f436f6e73696465726174696f6e2e6a736f6ea2646970667358221220add1de1101d8d36fef6a47783ff418d01c51ed951703252c6f45b983dcbcc51a64736f6c634300080e0033",
    "sourceMap": "723:2542:107:-:0;;;1572:26:56;;;-1:-1:-1;;1572:26:56;1594:4;1572:26;;;-1:-1:-1;;;218:101:115;;434:66;403:97;;723:2542:107;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "723:2542:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:295:105;;;:::i;:::-;;1627:116:58;;;;;;:::i;:::-;;:::i;206:217:117:-;;;;;;:::i;:::-;371:45;206:217;;;;;;;;;;;1917:66:125;1905:79;;;1887:98;;1875:2;1860:18;206:217:117;;;;;;;;974:96:58;;;;;;:::i;:::-;;:::i;1188:120::-;;;;;;:::i;:::-;;:::i;4647:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;7030:55:125;;;7012:74;;7000:2;6985:18;4647:455:58;6866:226:125;826:85:58;;;;;;:::i;:::-;;:::i;288:38:57:-;;217:64;288:38;;1998:140:58;;;;;;:::i;:::-;;:::i;8620:950:121:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2396:762:113:-;;;:::i;3919:568:58:-;;;;;;:::i;:::-;;:::i;:::-;;;17342:25:125;;;17330:2;17315:18;3919:568:58;17196:177:125;1179:804:107;;;;;;:::i;:::-;;:::i;2885:107:58:-;;;;;;:::i;:::-;;:::i;1515:106::-;;;;;;:::i;:::-;;:::i;3277:916:113:-;;;:::i;2998:915:58:-;;;;;;:::i;:::-;;:::i;5108:406::-;;;;;;:::i;:::-;;:::i;1314:130::-;;;;;;:::i;:::-;;:::i;1989:1274:107:-;;;;;;:::i;:::-;;:::i;737:83:58:-;;;;;;:::i;:::-;;:::i;1819:584:56:-;;;:::i;:::-;;;23809:14:125;;23802:22;23784:41;;23772:2;23757:18;1819:584:56;23644:187:125;453:271:116;;;;;;:::i;:::-;665:52;453:271;;;;;;;;;;;2680:81:58;;;;;;:::i;:::-;;:::i;1862:130::-;;;;;;:::i;:::-;;:::i;2290:297::-;;;;;;:::i;:::-;;:::i;1076:106::-;;;;;;:::i;:::-;;:::i;210:237:116:-;;;;;;:::i;:::-;393:47;210:237;;;;;;;;;1572:26:56;;;;;;;;;1353:295:105;1404:13;:11;:13::i;:::-;1427:17;;1467:7;;1427:70;;;;;-1:-1:-1;;;;;1467:7:105;;;1427:70;;;26636:34:125;1485:4:105;26686:18:125;;;26679:43;1427:17:105;26738:18:125;;;26731:50;1427:17:105;;;:31;;26548:18:125;;1427:70:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:26:105;;1569:16;;1507:134;;;;;-1:-1:-1;;;;;1569:16:105;;;1507:134;;;26636:34:125;1608:4:105;26686:18:125;;;26679:43;1507:26:105;26738:18:125;;;26731:50;1507:26:105;;;-1:-1:-1;1507:40:105;;-1:-1:-1;26548:18:125;;1507:134:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:295::o;1627:116:58:-;1690:18;;;;;-1:-1:-1;;;;;26984:55:125;;1690:18:58;;;26966:74:125;27056:18;;;27049:34;;;217:64:57;;1690:7:58;;26939:18:125;;1690::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1718:18:58;;;;;-1:-1:-1;;;;;7030:55:125;;1718:18:58;;;7012:74:125;217:64:57;;-1:-1:-1;1718:13:58;;-1:-1:-1;6985:18:125;;1718::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:116;;:::o;974:96::-;1018:22;;;;;-1:-1:-1;;;;;26984:55:125;;1018:22:58;;;26966:74:125;1031:8:58;27056:18:125;;;27049:34;217:64:57;;1018:7:58;;26939:18:125;;1018:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1050:13:58;;;;;-1:-1:-1;;;;;7030:55:125;;1050:13:58;;;7012:74:125;217:64:57;;-1:-1:-1;1050:8:58;;-1:-1:-1;6985:18:125;;1050:13:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:96;:::o;1188:120::-;1248:22;;;;;-1:-1:-1;;;;;26984:55:125;;1248:22:58;;;26966:74:125;1261:8:58;27056:18:125;;;27049:34;217:64:57;;1248:7:58;;26939:18:125;;1248:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1280:21:58;;;;;-1:-1:-1;;;;;27695:15:125;;;1280:21:58;;;27677:34:125;27747:15;;27727:18;;;27720:43;217:64:57;;-1:-1:-1;1280:8:58;;-1:-1:-1;27589:18:125;;1280:21:58;27442:327:125;4647:455:58;4807:16;;;;;4738:12;;;;217:64:57;;4807:10:58;;:16;;4818:4;;4807:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4807:16:58;;;;;;;;;;;;:::i;:::-;4825:4;4790:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4766:64;;4951:8;4945:15;4938:4;4928:8;4924:19;4921:1;4914:47;4906:55;-1:-1:-1;;;;;;5002:18:58;;4981:114;;;;;;;29797:2:125;4981:114:58;;;29779:21:125;29836:2;29816:18;;;29809:30;29875:34;29855:18;;;29848:62;29946:19;29926:18;;;29919:47;29983:19;;4981:114:58;;;;;;;;;4756:346;4647:455;;;;:::o;826:85::-;217:64:57;873:7:58;881:22;899:4;881:15;:22;:::i;:::-;873:31;;;;;;;;;;;;;17342:25:125;;17330:2;17315:18;;17196:177;1998:140:58;2077:18;;;;;-1:-1:-1;;;;;26984:55:125;;2077:18:58;;;26966:74:125;27056:18;;;27049:34;;;217:64:57;;2077:7:58;;26939:18:125;;2077::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2105:26:58;;;;;-1:-1:-1;;;;;27695:15:125;;;2105:26:58;;;27677:34:125;27747:15;;27727:18;;;27720:43;217:64:57;;-1:-1:-1;2105:13:58;;-1:-1:-1;27589:18:125;;2105:26:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:140;;;:::o;8620:950:121:-;8815:22;;:::i;:::-;8849:30;8882:65;8908:15;:29;;;8882:12;:65::i;:::-;8849:98;;8957:46;9006:86;9040:15;:21;;;9075:7;9006:20;:86::i;:::-;8957:135;;9103:45;9151:373;;;;;;;;9180:7;-1:-1:-1;;;;;9151:373:121;;;;;9201:4;-1:-1:-1;;;;;9151:373:121;;;;;9219:11;9151:373;;;;9244:19;9151:373;;;;9277:15;:25;;;9151:373;;;;;;;;:::i;:::-;;;;;9316:15;:25;;;9151:373;;;;9355:15;:23;;;9151:373;;;;9392:15;:24;;;9151:373;;;;9430:15;:20;;;9151:373;;;;9464:10;9151:373;;;;9488:19;:26;9151:373;;;9103:421;;9541:22;9534:29;;;;;8620:950;;;;;;:::o;2396:762:113:-;2528:102;;;;;;;;;;;;;;;;;;:10;:102::i;:::-;2477:17;;:163;;;;;-1:-1:-1;;;;;2477:163:113;;;;;-1:-1:-1;;;;;2477:163:113;;;;;;2702:150;;;;;;;;;;;;;;;;;;2819:17;;2800:38;;;-1:-1:-1;;;;;2819:17:113;;;2800:38;;;7012:74:125;6985:18;2800:38:113;;;;;;;;;;;;;2702:10;:150::i;:::-;2650:13;:212;;;;-1:-1:-1;;;;;2650:212:113;;;;;;2945:17;;2977:13;;2945:61;;;;;;;;30506:25:125;;;;3000:4:113;30547:18:125;;;30540:83;2945:17:113;;;:31;;30479:18:125;;2945:61:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2914:7;:102;;;;-1:-1:-1;;;;;2914:102:113;;;;;;;;;3026:17;;3109:13;;3026:125;;;;;;;;26636:34:125;;;;3109:13:113;;26686:18:125;;;26679:43;-1:-1:-1;26738:18:125;;;26731:50;3026:17:113;;;;:31;;26548:18:125;;3026:125:113;26379:408:125;3919:568:58;3987:14;4028:3;4021;:10;;4013:81;;;;;;;31092:2:125;4013:81:58;;;31074:21:125;31131:2;31111:18;;;31104:30;31170:34;31150:18;;;31143:62;31241:28;31221:18;;;31214:56;31287:19;;4013:81:58;30890:422:125;4013:81:58;4105:12;4120:9;4126:3;4120;:9;:::i;:::-;4105:24;;4144:4;4152:1;4144:9;4140:287;;4186:3;4177:12;;4140:287;;;294:78;4218:4;:19;4214:213;;4270:1;4261:10;;4214:213;;;4318:6;;;:::i;:::-;;-1:-1:-1;4362:11:58;4376:8;4318:6;4376:1;:8;:::i;:::-;4362:22;-1:-1:-1;4407:9:58;4362:22;4407:3;:9;:::i;:::-;4398:18;;4304:123;4214:213;4442:38;;;32133:21:125;;;32190:2;32170:18;;;32163:30;32229:14;32224:2;32209:18;;32202:42;32311:4;32296:20;;32289:36;;;4442:38:58;;;;;;;32276:3:125;4442:38:58;;;4003:484;3919:568;;;;;:::o;1179:804:107:-;1315:33;;;1252:60;1315:33;;;;;;;;;1252:60;1315:33;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:33:107;;;;;;;;;;;;;;;1252:96;;1363:7;1358:305;1380:32;1376:36;;;;1358:305;;;1450:202;1494:14;1526:112;1592:6;:25;;;1618:1;1592:28;;;;;;;;;:::i;:::-;;;;;1526:44;:112::i;:::-;1450:26;:202::i;:::-;1433:219;-1:-1:-1;1414:3:107;;;:::i;:::-;;;1358:305;;;;1672:34;1691:14;1672:18;:34::i;:::-;1716:56;1757:14;1716:40;:56::i;:::-;1782:43;1810:14;1782:27;:43::i;:::-;1863:41;;;;;;;;;1871:16;;-1:-1:-1;;;;;1871:16:107;1863:41;;;;;;;;1835:70;;1840:4;;:21;;1835:4;:70::i;:::-;1943:32;;;;;;;;;1951:7;;-1:-1:-1;;;;;1951:7:107;1943:32;;;;;;;;1915:61;;1920:4;;:21;;1915:4;:61::i;:::-;1242:741;1179:804;:::o;2885:107:58:-;2957:28;2962:5;2969:2;2973:4;2979:5;2957:4;:28::i;:::-;2885:107;;;:::o;1515:106::-;1564:22;;;;;-1:-1:-1;;;;;26984:55:125;;1564:22:58;;;26966:74:125;1577:8:58;27056:18:125;;;27049:34;217:64:57;;1564:7:58;;26939:18:125;;1564:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1596:18:58;;;;;-1:-1:-1;;;;;7030:55:125;;1596:18:58;;;7012:74:125;217:64:57;;-1:-1:-1;1596:13:58;;-1:-1:-1;6985:18:125;;1596::58;6866:226:125;3277:916:113;3418:120;;;;;;;;;;;;;;;;;;:10;:120::i;:::-;3358:26;;:190;;;;;-1:-1:-1;;;;;3358:190:113;;;;;-1:-1:-1;;;;;3358:190:113;;;;;;3619:177;;;;;;;;;;;;;;;;;;3754:26;;3735:47;;;-1:-1:-1;;;;;3754:26:113;;;3735:47;;;7012:74:125;6985:18;3735:47:113;6866:226:125;3619:177:113;3558:22;:248;;;;-1:-1:-1;;;;;3558:248:113;;;;;;3898:26;;3956:13;;3898:116;;;;;;;;30506:25:125;;;;3995:4:113;30547:18:125;;;30540:83;3898:26:113;;;:40;;30479:18:125;;3898:116:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3858:16;:166;;;;-1:-1:-1;;;;;3858:166:113;;;;;;;;;4034:26;;4135:22;;4034:152;;;;;;;;26636:34:125;;;;4135:22:113;;26686:18:125;;;26679:43;-1:-1:-1;26738:18:125;;;26731:50;4034:26:113;;;;:40;;26548:18:125;;4034:152:113;26379:408:125;2998:915:58;3152:38;;;-1:-1:-1;;;;;7030:55:125;;;3152:38:58;;;;7012:74:125;;;;3152:38:58;;;;;;;;;;6985:18:125;;;;3152:38:58;;;;;;;;;;;;;3141:50;;3117:20;;3141:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3114:77;;;3201:15;3230:7;3219:30;;;;;;;;;;;;:::i;:::-;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;3201:48;-1:-1:-1;3286:123:58;3404:4;3286:90;3373:2;3286:64;;-1:-1:-1;3286:35:58;:52;19139:9;;;:16;;;;;;;;;;;;;;;:9;19040:143;3286:64;:86;19455:10;;;:47;;;;;;;-1:-1:-1;19455:47:58;;;;;;;-1:-1:-1;;;;;19479:21:58;;;;19455:47;;;:10;19351:179;3286:90;:117;;:123::i;:::-;3454:6;3451:456;;;3516:34;;;;;;;;;;;;;;;;;;;;;;3505:46;;3478:23;;-1:-1:-1;;;;;3505:10:58;;;:46;;3516:34;3505:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3475:76;;;3565:14;3593:10;3582:33;;;;;;;;;;;;:::i;:::-;3565:50;;3639:7;3632:4;:14;3629:143;;;3677:14;3687:4;3677:7;:14;:::i;:::-;3666:26;;;;:::i;:::-;;;3629:143;;;3742:14;3749:7;3742:4;:14;:::i;:::-;3731:26;;;;:::i;:::-;;;3629:143;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;3785:111;3889:6;3785:72;;-1:-1:-1;3785:39:58;18878:156;3785:111;3461:446;;3073:840;;2998:915;;;;:::o;5108:406::-;5232:16;;;;;5180:12;;;;217:64:57;;5232:10:58;;:16;;5243:4;;5232:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5232:16:58;;;;;;;;;;;;:::i;:::-;5208:40;;5369:8;5363:15;5356:4;5346:8;5342:19;5339:1;5332:47;5324:55;-1:-1:-1;;;;;;5420:18:58;;5399:108;;;;;;;33375:2:125;5399:108:58;;;33357:21:125;33414:2;33394:18;;;33387:30;33453:34;33433:18;;;33426:62;33524:13;33504:18;;;33497:41;33555:19;;5399:108:58;33173:407:125;5399:108:58;5198:316;5108:406;;;:::o;1314:130::-;1388:18;;;;;-1:-1:-1;;;;;26984:55:125;;1388:18:58;;;26966:74:125;27056:18;;;27049:34;;;217:64:57;;1388:7:58;;26939:18:125;;1388::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1416:21:58;;;;;-1:-1:-1;;;;;27695:15:125;;;1416:21:58;;;27677:34:125;27747:15;;27727:18;;;27720:43;217:64:57;;-1:-1:-1;1416:8:58;;-1:-1:-1;27589:18:125;;1416:21:58;27442:327:125;1989:1274:107;2088:15;;2134:22:::1;::::0;::::1;::::0;2088:78:::1;::::0;;;;2068:17:::1;::::0;-1:-1:-1;;;;;2088:32:107::1;::::0;::::1;::::0;:78:::1;::::0;2134:22;2088:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2068:98:::0;-1:-1:-1;2176:55:107::1;::::0;;::::1;2197:33:::0;2176:8:::1;:55::i;:::-;2247:9;2242:1015;2266:7;:22;;;:29;2262:1;:33;2242:1015;;;2316:45;2364:7;:39;;;2404:1;2364:42;;;;;;;;:::i;:::-;;;;;;;2316:90;;2421:28;2483:13;:17;;;:24;2452:69;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2452:69:107::1;;2421:100;;2540:9;2535:121;2559:13;:17;;;:24;2555:1;:28;2535:121;;;2625:13;:16;;;2608:11;2620:1;2608:14;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2608:33:107;;::::1;:14;::::0;;::::1;::::0;;;;;;;:33;2585:3:::1;::::0;::::1;:::i;:::-;;;2535:121;;;-1:-1:-1::0;2737:19:107;;2799:17:::1;::::0;::::1;::::0;2708:109:::1;::::0;;;;2669:36:::1;::::0;-1:-1:-1;;;;;2708:77:107::1;::::0;::::1;::::0;:109:::1;::::0;2786:11;;2708:109:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2708:109:107::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2669:148;;2831:54;2888:82;2939:13;2888:29;:82::i;:::-;2831:139;;2984:100;3042:21;:28;3012:19;:26;:58;2984:10;:100::i;:::-;3104:9;3099:148;3123:19;:26;3119:1;:30;3099:148;;;3174:58;3183:19;3203:1;3183:22;;;;;;;;:::i;:::-;;;;;;;3207:21;3229:1;3207:24;;;;;;;;:::i;:::-;;;;;;;3174:8;:58::i;:::-;3151:3;::::0;::::1;:::i;:::-;;;3099:148;;;;2302:955;;;;2297:3;;;;:::i;:::-;;;2242:1015;;;;2058:1205;695:25:115::0;:23;:25::i;:::-;1989:1274:107;:::o;737:83:58:-;217:64:57;782:7:58;790:22;808:4;790:15;:22;:::i;1819:584:56:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:56;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;26966:74:125;;;2221:17:56;27056:18:125;;;27049:34;2196:43:56;;;;;;;;;26939:18:125;;;2196:43:56;;;-1:-1:-1;;1671:64:56;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:56;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:56:o;2680:81:58:-;2737:17;;;;;-1:-1:-1;;;;;26984:55:125;;2737:17:58;;;26966:74:125;27056:18;;;27049:34;;;217:64:57;;2737:7:58;;26939:18:125;;2737:17:58;26792:297:125;1862:130:58;1927:22;;;;;-1:-1:-1;;;;;26984:55:125;;1927:22:58;;;26966:74:125;1940:8:58;27056:18:125;;;27049:34;217:64:57;;1927:7:58;;26939:18:125;;1927:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1959:26:58;;;;;-1:-1:-1;;;;;27695:15:125;;;1959:26:58;;;27677:34:125;27747:15;;27727:18;;;27720:43;217:64:57;;-1:-1:-1;1959:13:58;;-1:-1:-1;27589:18:125;;1959:26:58;27442:327:125;2290:297:58;2366:81;;;;;39074:2:125;39056:21;;;39113:2;39093:18;;;39086:30;39152:34;39147:2;39132:18;;39125:62;39223:29;39218:2;39203:18;;39196:57;39285:3;39270:19;;38872:423;2366:81:58;;;;;;;;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;2457:123;2575:4;2457:90;2544:2;2457:64;;-1:-1:-1;2457:35:58;18878:156;1076:106;1134:18;;;;;-1:-1:-1;;;;;26984:55:125;;1134:18:58;;;26966:74:125;27056:18;;;27049:34;;;217:64:57;;1134:7:58;;26939:18:125;;1134::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:13:58;;;;;-1:-1:-1;;;;;7030:55:125;;1162:13:58;;;7012:74:125;217:64:57;;-1:-1:-1;1162:8:58;;-1:-1:-1;6985:18:125;;1162:13:58;6866:226:125;1476:789:113;1566:4;1577:2;1542:37;1518:13;:62;1590:54;:52;:54::i;:::-;1660:50;;;;;39502:2:125;39484:21;;;39541:2;39521:18;;;39514:30;39580:34;39575:2;39560:18;;39553:62;39651:13;39646:2;39631:18;;39624:41;39697:3;39682:19;;39300:407;1660:50:113;;;;;;;;1720:54;:52;:54::i;:::-;1802:17;;1785:57;;;;;;-1:-1:-1;;;;;1802:17:113;;;1785:57;;;39924:74:125;40014:18;;;40007:30;40073:2;40053:18;;;40046:30;40112:19;40092:18;;;40085:47;217:64:57;;1785:8:113;;40149:19:125;;1785:57:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1869:13:113;;1852:49;;;;;;-1:-1:-1;;;;;1869:13:113;;;1852:49;;;40391:74:125;40481:18;;;40474:30;40540:2;40520:18;;;40513:30;40579:15;40559:18;;;40552:43;217:64:57;;-1:-1:-1;1852:8:113;;-1:-1:-1;40612:19:125;;1852:49:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1928:7:113;;1911:37;;;;;;-1:-1:-1;;;;;1928:7:113;;;1911:37;;;40854:74:125;40944:18;;;40937:30;41003:1;40983:18;;;40976:29;41041:9;41021:18;;;41014:37;217:64:57;;-1:-1:-1;1911:8:113;;-1:-1:-1;41068:19:125;;1911:37:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1988:26:113;;1958:109;;;;;;-1:-1:-1;;;;;1988:26:113;;;1958:109;;;41310:74:125;41400:18;;;41393:30;41459:2;41439:18;;;41432:30;41498:28;41478:18;;;41471:56;217:64:57;;-1:-1:-1;1958:8:113;;-1:-1:-1;41544:19:125;;1958:109:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2094:22:113;;2077:67;;;;;;-1:-1:-1;;;;;2094:22:113;;;2077:67;;;41786:74:125;41876:18;;;41869:30;41935:2;41915:18;;;41908:30;41974:24;41954:18;;;41947:52;217:64:57;;-1:-1:-1;2077:8:113;;-1:-1:-1;42016:19:125;;2077:67:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2171:16:113;;2154:55;;;;;;-1:-1:-1;;;;;2171:16:113;;;2154:55;;;42258:74:125;42348:18;;;42341:30;42407:2;42387:18;;;42380:30;42446:18;42426;;;42419:46;217:64:57;;-1:-1:-1;2154:8:113;;-1:-1:-1;42482:19:125;;2154:55:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2219:39:113;;;;;;2236:4;2219:39;;;42724:74:125;42814:18;;;42807:30;;;;42873:2;42853:18;;;42846:30;42912:14;42892:18;;;42885:42;217:64:57;;-1:-1:-1;2219:8:113;;-1:-1:-1;42944:19:125;;2219:39:113;42512:457:125;7949:665:121;8066:18;8100:30;8162:19;:26;8133:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8133:65:121;;;;;;;;;;;;;;;;;8100:98;;8213:9;8208:372;8232:11;:18;8228:1;:22;8208:372;;;8288:281;;;;;;;;8315:19;8335:1;8315:22;;;;;;;;:::i;:::-;;;;;;;:31;;;8288:281;;;;;;;;:::i;:::-;;;;;8364:19;8384:1;8364:22;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1;;;;;8288:281:121;;;;;8410:19;8430:1;8410:22;;;;;;;;:::i;:::-;;;;;;;:43;;;8288:281;;;;8471:19;8491:1;8471:22;;;;;;;;:::i;:::-;;;;;;;:34;;;8288:281;;;;8523:19;8543:1;8523:22;;;;;;;;:::i;:::-;;;;;;;:32;;;8288:281;;;8271:11;8283:1;8271:14;;;;;;;;:::i;:::-;;;;;;:298;;;;8252:3;;;;;:::i;:::-;;;;8208:372;;7235:708;7368:26;7406:45;7491:11;:18;7454:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7454:65:121;;;;;;;;;;;;;;;7406:113;;7534:9;7529:373;7553:11;:18;7549:1;:22;7529:373;;;7616:275;;;;;;;;7651:11;7663:1;7651:14;;;;;;;;:::i;:::-;;;;;;;:23;;;7616:275;;;;;;;;:::i;:::-;;;;;7692:11;7704:1;7692:14;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;7616:275:121;;;;;7730:11;7742:1;7730:14;;;;;;;;:::i;:::-;;;;;;;:35;;;7616:275;;;;7783:11;7795:1;7783:14;;;;;;;;:::i;:::-;;;;;;;:26;;;7616:275;;;;7827:11;7839:1;7827:14;;;;;;;;:::i;:::-;;;;;;;:24;;;7616:275;;;;7869:8;-1:-1:-1;;;;;7616:275:121;;;;7592:18;7611:1;7592:21;;;;;;;;:::i;:::-;;;;;;:299;;;;7573:3;;;;:::i;:::-;;;7529:373;;;-1:-1:-1;7918:18:121;-1:-1:-1;7235:708:121;;;;;:::o;6755:1058:105:-;6885:33;6930:48;6989:19;7011:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7061:71:105;;;7088:34;7061:71;;;;;;;;;6989:39;;-1:-1:-1;7038:20:105;;7061:71;;;;;;;;;-1:-1:-1;;7169:71:105;;;7196:34;7169:71;;;;;;;;;7038:94;;-1:-1:-1;7142:24:105;;7169:71;-1:-1:-1;7169:71:105;;;;;;;;;;-1:-1:-1;7169:71:105;7142:98;;7255:9;7250:209;7274:34;7270:38;;7250:209;;;7338:17;:27;;;7366:1;7338:30;;;;;;;:::i;:::-;;;;;:33;;;7329:3;7333:1;7329:6;;;;;;;;:::i;:::-;;;;;;:42;;;;;7406:17;:27;;;7434:1;7406:30;;;;;;;:::i;:::-;;;;;:37;;;7398:46;;7447:1;7398:50;;;;:::i;:::-;7385:7;7393:1;7385:10;;;;;;;;:::i;:::-;;;;;;;;;;:63;7310:3;;;:::i;:::-;;;7250:209;;;-1:-1:-1;7483:22:105;;7528:20;;;;7576:33;;;7607:1;7576:33;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:33:105;;;;;;;;;;;;;;7559:50;;7639:136;;;;;;;;7685:7;-1:-1:-1;;;;;7639:136:105;;;;;7707:4;-1:-1:-1;;;;;7639:136:105;;;;;7725:2;-1:-1:-1;;;;;7639:136:105;;;;;7741:3;7639:136;;;;7758:7;7639:136;;;7619:14;7634:1;7619:17;;;;;;;;:::i;:::-;;;;;;;;;;:156;-1:-1:-1;7792:14:105;;6755:1058;-1:-1:-1;;;;;;6755:1058:105:o;5162:634::-;5332:33;5377:55;5501:9;:16;5483:8;:15;:34;;;;:::i;:::-;5435:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:96:105;;;;;;;;;;;;;;;5377:154;;5546:9;5541:97;5565:8;:15;5561:1;:19;5541:97;;;5616:8;5625:1;5616:11;;;;;;;;:::i;:::-;;;;;;;5601:9;5611:1;5601:12;;;;;;;;:::i;:::-;;;;;;:26;;;;5582:3;;;;:::i;:::-;;;5541:97;;;;5652:9;5647:117;5671:9;:16;5667:1;:20;5647:117;;;5741:9;5751:1;5741:12;;;;;;;;:::i;:::-;;;;;;;5708:9;5722:8;:15;5718:1;:19;;;;:::i;:::-;5708:30;;;;;;;;:::i;:::-;;;;;;:45;;;;5689:3;;;;:::i;:::-;;;5647:117;;8489:587;8605:9;8600:470;8620:14;:21;8616:1;:25;8600:470;;;8662:45;8710:14;8725:1;8710:17;;;;;;;;:::i;:::-;;;;;;;8662:65;;8741:12;8756:99;8782:13;:18;;;8818:23;8756:8;:99::i;:::-;8741:114;;8869:10;8882:51;8891:13;:16;;;8909:23;8882:8;:51::i;:::-;-1:-1:-1;;;;;8947:25:105;;;:18;;;:25;8986:21;;:16;;;:21;9036:17;;8869:64;;-1:-1:-1;9021:38:105;;8968:4;;9036:14;;9051:1;;9036:17;;;;;;:::i;:::-;;;;;;;:22;;;9021:8;:38::i;:::-;8648:422;;;8643:3;;;;:::i;:::-;;;8600:470;;10593:872;10731:9;10726:733;10750:14;:21;10746:1;:25;10726:733;;;10792:45;10840:14;10855:1;10840:17;;;;;;;;:::i;:::-;;;;;;;;;;;;10886:18;;;;10934:19;;10840:17;;-1:-1:-1;10886:18:105;10934:19;10871:12;11021:232;11045:13;:17;;;:24;11041:1;:28;11021:232;;;11094:7;-1:-1:-1;;;;;11094:12:105;;11128:4;11154:13;:17;;;11172:1;11154:20;;;;;;;;:::i;:::-;;;;;;;11196:13;:21;;;11218:1;11196:24;;;;;;;;:::i;:::-;;;;;;;;;;;11094:144;;;;;;;;;;-1:-1:-1;;;;;43194:55:125;;;11094:144:105;;;43176:74:125;43266:18;;;43259:34;;;;43309:18;;;43302:34;43149:18;;11094:144:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11071:3:105;;;:::i;:::-;;;11021:232;;;-1:-1:-1;11266:19:105;;;;;-1:-1:-1;;;;;7030:55:125;;11266:19:105;;;7012:74:125;217:64:57;;11266:13:105;;6985:18:125;;11266:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11333:7:105;;11299:49;;;;;-1:-1:-1;;;;;11333:7:105;;;11299:49;;;43515:74:125;11333:7:105;43605:18:125;;;43598:50;11299:25:105;;;;-1:-1:-1;11299:25:105;;-1:-1:-1;43488:18:125;;11299:49:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11396:16:105;;11362:58;;;;;-1:-1:-1;;;;;11396:16:105;;;11362:58;;;43515:74:125;11396:16:105;43605:18:125;;;43598:50;11362:25:105;;;;-1:-1:-1;11362:25:105;;-1:-1:-1;43488:18:125;;11362:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11434:14:105;;;;;;;;217:64:57;;-1:-1:-1;11434:12:105;;-1:-1:-1;11434:14:105;;;;;241:37:57;;11434:14:105;;;;;;;241:37:57;217:64;11434:14:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10778:681;;;;10773:3;;;;:::i;:::-;;;10726:733;;12706:249;12831:9;12826:123;12850:14;:21;12846:1;:25;12826:123;;;12892:46;12920:14;12935:1;12920:17;;;;;;;;:::i;:::-;;;;;;;12892:27;:46::i;:::-;12873:3;;;:::i;:::-;;;12826:123;;970:203:107;1081:2;;1084:7;1081:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:18;1149:6;1138:10;:18::i;20162:120:58:-;20242:33;20256:4;20270:3;20242:13;:33::i;4088:277:56:-;4156:1;4151;:6;4147:212;;4178:44;;;;;44352:2:125;44334:21;;;44391:2;44371:18;;;44364:30;44430:34;44425:2;44410:18;;44403:62;44501:7;44496:2;44481:18;;44474:35;44541:3;44526:19;;44150:401;4178:44:56;;;;;;;;4241:34;4273:1;4241:34;;;;;;:::i;:::-;;;;;;;;4294;4326:1;4294:34;;;;;;:::i;:::-;;;;;;;;4342:6;:4;:6::i;11755:532:105:-;11878:16;11906:35;11971:13;:17;;;:24;11944:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11944:61:105;;11906:99;;12020:9;12015:231;12039:13;:17;;;:24;12035:1;:28;12015:231;;;12162:16;;;;;-1:-1:-1;;;;;12108:84:105;;;;;;;:36;:84;;;;;;;12193:19;;12108:105;;;;;;;;;;;;12214:17;;;;:20;;12108:105;;:84;12232:1;;12214:20;;;;;;:::i;:::-;;;;;;;12108:127;;;;;;;;;;;;12084:18;12103:1;12084:21;;;;;;;;:::i;:::-;;;;;;;;;;:151;12065:3;;;:::i;:::-;;;12015:231;;3255:157:56;3315:9;3310:96;;3345:30;;;;;45792:2:125;45774:21;;;45831:2;45811:18;;;45804:30;45870:25;45865:2;45850:18;;45843:53;45928:2;45913:18;;45590:347;3345:30:56;;;;;;;;3389:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;46144:2:125;46126:21;;;46183:2;46163:18;;;46156:30;46222:34;46217:2;46202:18;;46195:62;46293:4;46288:2;46273:18;;46266:32;46330:3;46315:19;;45942:398;5286:41:56;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;882:114:115:-;967:21;:19;:21::i;:::-;943:46;;;;;23809:14:125;;23802:22;943:46:115;;;23784:41:125;23757:18;;943:46:115;23644:187:125;2547:448:105;2639:7;-1:-1:-1;;;;;2723:18:105;;2719:66;;-1:-1:-1;2772:1:105;2757:17;;2719:66;2810:23;2798:8;:35;;;;;;;;:::i;:::-;;2794:77;;-1:-1:-1;2856:4:105;2849:11;;2794:77;2885:23;2903:4;2885:17;:23::i;:::-;2880:88;;2939:17;2947:4;2955:1;2939:17;:::i;:::-;2924:33;;;;2880:88;-1:-1:-1;2984:4:105;;2547:448;-1:-1:-1;2547:448:105:o;3615:277:56:-;3683:1;-1:-1:-1;;;;;3678:6:56;:1;-1:-1:-1;;;;;3678:6:56;;3674:212;;3705:44;;;;;47519:2:125;47501:21;;;47558:2;47538:18;;;47531:30;47597:34;47592:2;47577:18;;47570:62;47668:7;47663:2;47648:18;;47641:35;47708:3;47693:19;;47317:401;3705:44:56;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;13184:358:105:-;13306:9;13301:235;13325:13;:17;;;:24;13321:1;:28;13301:235;;;13501:13;:21;;;13523:1;13501:24;;;;;;;;:::i;:::-;;;;;;;;;;;;13407:16;;;;;-1:-1:-1;;;;;13370:54:105;;;;;;;:36;:54;;;;;13442:19;;13370:105;;;;;;;;;13476:17;;;;:20;;13501:24;;13370:105;;13494:1;;13476:20;;;;;;:::i;:::-;;;;;;;13370:127;;;;;;;;;;;;:155;;;;;;;:::i;:::-;;;;-1:-1:-1;13351:3:105;;-1:-1:-1;13351:3:105;;:::i;:::-;;;13301:235;;733:143:115;823:12;;802:17;;;;;;:33;798:72;;851:8;;;20516:1088:58;20632:12;;;;20668:9;;;;20709:11;;;;20753:10;;;20730:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20632:12:58;;;;20668:9;;;;;;20618:11;;20730:33;;20753:10;;20730:33;;20753:10;20730:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20774:17;20811:4;20817:12;20825:3;20817:7;:12::i;:::-;20794:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20794:36:58;;;;;;;;;-1:-1:-1;;;;;20845:15:58;;;;;;:10;;;20794:36;20845:15;;;;;;:21;;;;;;;;;;20794:36;;-1:-1:-1;20845:21:58;;:15;;20877:34;;20894:3;;20899:11;;20877:34;;:::i;:::-;;;;-1:-1:-1;;20877:34:58;;;;;;;;;20867:45;;20877:34;20867:45;;;;20845:68;;;;;;;;;;-1:-1:-1;20845:68:58;;;;20840:110;;20929:10;20934:4;20929;:10::i;:::-;;20840:110;-1:-1:-1;;;;;20982:15:58;;20959:12;20982:15;;;;;;;;;;;:21;;;;;;;;;;21014:34;;20982:21;;20959:12;;21014:34;;21031:3;;21036:11;;21014:34;;:::i;:::-;;;;;;;;;;;;;21004:45;;;;;;20982:68;;;;;;;;;;;;20974:77;;20959:92;;21062:12;21101:17;21122:3;-1:-1:-1;;;;;21122:14:58;21137:4;21122:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21098:44:58;-1:-1:-1;21163:36:58;;-1:-1:-1;21098:44:58;21184:14;21187:11;21184:2;:14;:::i;:::-;21163;:36::i;:::-;21234:28;;;;;-1:-1:-1;;;;;26984:55:125;;21234:28:58;;;26966:74:125;27056:18;;;27049:34;;;21156:43:58;;-1:-1:-1;21219:12:58;;-1:-1:-1;21234:17:58;;;;26939:18:125;;21234:28:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21219:43;;21285:4;21277;:12;21273:171;;21305:128;;;;;49766:2:125;21305:128:58;;;49748:21:125;49805:3;49785:18;;;49778:31;49845:34;49825:18;;;49818:62;49916:34;49896:18;;;49889:62;49988:34;49967:19;;;49960:63;50060:16;50039:19;;;50032:45;50094:19;;21305:128:58;49564:555:125;21305:128:58;21453:34;;;;;-1:-1:-1;;;;;43194:55:125;;21453:34:58;;;43176:74:125;43266:18;;;43259:34;;;43309:18;;;43302:34;;;21453:18:58;;;;43149::125;;21453:34:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21504:12:58;;;21497:19;;;;;;-1:-1:-1;21533:9:58;;;21526:16;;;;;;21552:17;-1:-1:-1;21559:10:58;;21504:12;21552:17;:::i;:::-;21586:4;:11;;21579:18;;;20608:996;;;;;;;;20516:1088;;:::o;2410:424:56:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;43176:74:125;;;2670:17:56;43266:18:125;;;43259:34;;;;2705:4:56;43309:18:125;;;43302:34;2482:11:56;;1671:64;2579:43;;43149:18:125;;2645:67:56;;;-1:-1:-1;;2645:67:56;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:56;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:56;2813:7;:14;;;;;;;;2410:424::o;1002:140:115:-;1095:16;;1074:38;;;;;217:64:57;1074:38:115;;;26966:74:125;;;27056:18;;;27049:34;;;;1051:4:115;;1132:1;;1074:7;;26939:18:125;;1074:38:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;1067:68;;1002:140;:::o;1654:796:105:-;1711:4;-1:-1:-1;;;;;1731:16:105;;1727:717;;-1:-1:-1;1770:5:105;;1654:796;-1:-1:-1;1654:796:105:o;1727:717::-;-1:-1:-1;;;;;1796:14:105;;;:18;1792:652;;1831:12;;-1:-1:-1;;;;;1872:7:105;;1935:47;1831:12;;;2068:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2068:16:105;-1:-1:-1;2106:16:105;;;2120:1;2106:16;;;;;;;1897:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1897:267:105;;;;;;;;;;1872:306;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:348;;;;2215:7;:176;;;;-1:-1:-1;2314:59:105;;;2325:47;2314:59;;;1887:98:125;1860:18;2314:59:105;;;;;;;;;;;;2283:108;;;;;;2252:10;2242:21;;;;;;:149;2215:176;2192:199;1654:796;-1:-1:-1;;;;1654:796:105:o;1792:652::-;-1:-1:-1;2429:4:105;;1654:796;-1:-1:-1;1654:796:105:o;22791:397:58:-;22850:12;22878:19;22910:1;:8;22921:2;22910:13;;;;:::i;:::-;22900:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22900:24:58;;22878:46;;22939:9;22934:224;22958:1;:8;22954:1;:12;22934:224;;;22987:9;22999:1;23001;22999:4;;;;;;;;:::i;:::-;;;;;;;22987:16;;23132:1;23126;23122:2;23118:10;23114:2;23110:19;23102:6;23098:32;23091:43;23073:75;22968:3;;;;;:::i;:::-;;;;22934:224;;15660:3212;15784:12;;;;15820:9;;;;15861:11;;;;15905:10;;;15882:33;;;;;;;;;;;;;;;;;;;15747:7;;-1:-1:-1;;;;;15784:12:58;;15820:9;;;15861:11;15747:7;;15882:33;;15905:10;;15882:33;;;15905:10;15882:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15966:15:58;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;15998:34;;15882:33;;-1:-1:-1;15966:21:58;:15;;-1:-1:-1;15998:34:58;;-1:-1:-1;15882:33:58;;16020:11;;15998:34;;:::i;:::-;;;;-1:-1:-1;;15998:34:58;;;;;;;;;15988:45;;15998:34;15988:45;;;;15966:68;;;;;;;;;;-1:-1:-1;15966:68:58;;;;15962:174;;;-1:-1:-1;;;;;16057:15:58;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;16089:34;;16057:21;;:10;16089:34;;16106:3;;16111:11;;16089:34;;:::i;:::-;;;;;;;;;;;;;16079:45;;;;;;16057:68;;;;;;;;;;;;16050:75;;;;;;15660:3212;;;:::o;15962:174::-;16145:17;16182:4;16188:12;16196:3;16188:7;:12::i;:::-;16165:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16145:56;;14942:28;14934:37;;-1:-1:-1;;;;;16211:19:58;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16242:12;16281:17;16302:3;-1:-1:-1;;;;;16302:14:58;16317:4;16302:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16278:44:58;-1:-1:-1;16343:36:58;;-1:-1:-1;16278:44:58;16364:14;16367:11;16364:2;:14;:::i;16343:36::-;16429:35;;;;;-1:-1:-1;;;;;7030:55:125;;16429:35:58;;;7012:74:125;16336:43:58;;-1:-1:-1;16401:22:58;;-1:-1:-1;16429:21:58;;;;6985:18:125;;16429:35:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16429:35:58;;;;;;;;;;;;:::i;:::-;16400:64;;;16478:5;:12;16494:1;16478:17;16474:2056;;16511:12;14942:28;14934:37;;-1:-1:-1;;;;;16526:17:58;;16544:3;16549:5;16555:1;16549:8;;;;;;;;:::i;:::-;;;;;;;16526:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;26984:55:125;;;;26966:74;;27071:2;27056:18;;27049:34;26954:2;26939:18;;26792:297;16526:32:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16511:47;-1:-1:-1;16511:47:58;16572:106;;16619:44;16640:3;16653:5;16659:1;16653:8;;;;;;;;:::i;:::-;;;;;;;;;;;;16619:44;;;-1:-1:-1;;;;;26984:55:125;;;26966:74;;27056:18;;;27049:34;26939:18;16619:44:58;;;;;;;16572:106;16703:4;16695;:12;16691:178;;16727:127;;;;;53235:2:125;16727:127:58;;;53217:21:125;53274:3;53254:18;;;53247:31;53314:34;53294:18;;;53287:62;53385:34;53365:18;;;53358:62;53457:34;53436:19;;;53429:63;53529:15;53508:19;;;53501:44;53562:19;;16727:127:58;53033:554:125;16727:127:58;16887:86;16897:3;16902:4;16935:3;16940:11;16918:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16908:45;;;;;;16963:5;16969:1;16963:8;;;;;;;;:::i;:::-;;;;;;;;;;;;16887:86;;;-1:-1:-1;;;;;53839:55:125;;;53821:74;;53943:66;53931:79;;;53911:18;;;53904:107;;;;54027:18;;;54020:34;54085:2;54070:18;;54063:34;53808:3;53793:19;16887:86:58;;;;;;;17066:5;17072:1;17066:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16987:15:58;;17058:17;16987:15;;;;;;;;;;:21;;;;;;;;;;17019:34;;17066:8;;16987:21;;17019:34;;17036:3;;17041:11;;17019:34;;:::i;:::-;;;;-1:-1:-1;;17019:34:58;;;;;;;;;17009:45;;17019:34;17009:45;;;;16987:68;;;;;;;;;;;;-1:-1:-1;16987:68:58;;;:88;;;;-1:-1:-1;;;;;17089:15:58;;;;17160:4;17089:10;;;:15;;;;;:21;;;;;;;;;;17121:34;;17160:4;;-1:-1:-1;17121:34:58;;17138:3;;17143:11;;17121:34;;:::i;:::-;;;;;;;-1:-1:-1;;17121:34:58;;;;;;17111:45;;17121:34;17111:45;;;;17089:68;;;;;;;;;;-1:-1:-1;17089:68:58;:75;;;;;;;;;;;;;-1:-1:-1;16474:2056:58;;;17200:1;17185:5;:12;:16;17181:1349;;;17222:9;17217:1190;17241:5;:12;17237:1;:16;17217:1190;;;17278:12;14942:28;14934:37;;-1:-1:-1;;;;;17293:17:58;;17311:3;17316:5;17322:1;17316:8;;;;;;;;:::i;:::-;;;;;;;17293:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;26984:55:125;;;;26966:74;;27071:2;27056:18;;27049:34;26954:2;26939:18;;26792:297;17293:32:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17278:47;-1:-1:-1;17278:47:58;17343:114;;17394:44;17415:3;17428:5;17434:1;17428:8;;;;;;;;:::i;:::-;;;;;;;;;;;;17394:44;;;-1:-1:-1;;;;;26984:55:125;;;26966:74;;27056:18;;;27049:34;26939:18;17394:44:58;;;;;;;17343:114;14942:28;14934:37;;-1:-1:-1;;;;;17499:18:58;;17518:3;17523:5;17529:1;17523:8;;;;;;;;:::i;:::-;;;;;;;;;;;17499:53;;;;;;;;;;-1:-1:-1;;;;;43194:55:125;;;17499:53:58;;;43176:74:125;43266:18;;;43259:34;17533:18:58;43309::125;;;43302:34;43149:18;;17499:53:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17570:12;17600:17;17675:3;-1:-1:-1;;;;;17675:14:58;17690:4;17675:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17657:38:58;;-1:-1:-1;17657:38:58;-1:-1:-1;17724:36:58;17657:38;17745:14;17748:11;17745:2;:14;:::i;17724:36::-;17717:43;;17801:7;:37;;;;;17820:18;17812:4;:26;17801:37;17797:539;;;17936:86;17946:3;17951:4;17984:3;17989:11;17967:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17957:45;;;;;;18012:5;18018:1;18012:8;;;;;;;;:::i;:::-;;;;;;;;;;;;17936:86;;;-1:-1:-1;;;;;53839:55:125;;;53821:74;;53943:66;53931:79;;;53911:18;;;53904:107;;;;54027:18;;;54020:34;54085:2;54070:18;;54063:34;53808:3;53793:19;17936:86:58;;;;;;;18123:5;18129:1;18123:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18044:15:58;;18115:17;18044:15;;;;;;;;;;:21;;;;;;;;;;18076:34;;18123:8;;18044:21;;18076:34;;18093:3;;18098:11;;18076:34;;:::i;:::-;;;;;;;;;;;;;18066:45;;;;;;18044:68;;;;;;;;;;;:88;;;;18225:4;18154;:10;;:15;18165:3;-1:-1:-1;;;;;18154:15:58;-1:-1:-1;;;;;18154:15:58;;;;;;;;;;;;:21;18170:4;18154:21;;;;;;;;;;;;;;;;;:68;18203:3;18208:11;18186:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18176:45;;;;;;18154:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;14942:28;14934:37;;-1:-1:-1;;;;;18251:18:58;;18270:3;18275:5;18281:1;18275:8;;;;;;;;:::i;:::-;;;;;;;;;;;18251:39;;;;;;;;;;-1:-1:-1;;;;;43194:55:125;;;18251:39:58;;;43176:74:125;43266:18;;;43259:34;43309:18;;;43302:34;;;43149:18;;18251:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18312:5;;;;;17797:539;14942:28;14934:37;;-1:-1:-1;;;;;18353:18:58;;18372:3;18377:5;18383:1;18377:8;;;;;;;;:::i;:::-;;;;;;;;;;;18353:39;;;;;;;;;;-1:-1:-1;;;;;43194:55:125;;;18353:39:58;;;43176:74:125;43266:18;;;43259:34;43309:18;;;43302:34;;;43149:18;;18353:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17260:1147;;;17255:3;;;;;:::i;:::-;;;;17217:1190;;;;17181:1349;;;18437:82;;;;;;54310:2:125;18437:82:58;;;54292:21:125;54329:18;;;54322:30;;;;54388:34;54368:18;;;54361:62;54459:34;54439:18;;;54432:62;54511:19;;18437:82:58;54108:428:125;18437:82:58;-1:-1:-1;;;;;18548:15:58;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;18580:34;;18548:21;;:15;18580:34;;18597:3;;18602:11;;18580:34;;:::i;:::-;;;;-1:-1:-1;;18580:34:58;;;;;;;;;18570:45;;18580:34;18570:45;;;;18548:68;;;;;;;;;;-1:-1:-1;18548:68:58;;;;18540:128;;;;;;;54743:2:125;18540:128:58;;;54725:21:125;54782:2;54762:18;;;54755:30;54821:34;54801:18;;;54794:62;54892:17;54872:18;;;54865:45;54927:19;;18540:128:58;54541:411:125;18540:128:58;18686:12;;;18679:19;;;;;;18715:9;;;18708:16;;;;;;18734:17;-1:-1:-1;18741:10:58;;18686:12;18734:17;:::i;:::-;18761:18;18768:11;;;18761:18;;;-1:-1:-1;;;;;18797:15:58;;;;;;;;;;;;:21;;;;;;;;;;18829:34;;18797:21;;18761:18;18829:34;;18846:3;;18851:11;;18829:34;;:::i;:::-;;;;;;;;;;;;;18819:45;;;;;;18797:68;;;;;;;;;;;;18790:75;;;;;;;;;15660:3212;;;:::o;22488:297::-;22562:7;22581:11;22603;22628:2;22617:1;:8;:13;:29;;22638:1;:8;22617:29;;;22633:2;22617:29;22603:43;;22661:6;22656:103;22677:3;22673:1;:7;22656:103;;;22742:5;:1;22746;22742:5;:::i;:::-;22716:1;22718:10;22727:1;22718:6;:10;:::i;:::-;22716:13;;;;;;;;:::i;:::-;;;;;;;22708:40;;22701:47;;;;;22682:3;;;;:::i;:::-;;;;22656:103;;;-1:-1:-1;22775:3:58;;22488:297;-1:-1:-1;;;;22488:297:58:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:154:125:-;-1:-1:-1;;;;;93:5:125;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;312:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;617:2;602:18;;;;589:32;;-1:-1:-1;;;312:315:125:o;632:347::-;683:8;693:6;747:3;740:4;732:6;728:17;724:27;714:55;;765:1;762;755:12;714:55;-1:-1:-1;788:20:125;;831:18;820:30;;817:50;;;863:1;860;853:12;817:50;900:4;892:6;888:17;876:29;;952:3;945:4;936:6;928;924:19;920:30;917:39;914:59;;;969:1;966;959:12;914:59;632:347;;;;;:::o;984:754::-;1081:6;1089;1097;1105;1113;1166:3;1154:9;1145:7;1141:23;1137:33;1134:53;;;1183:1;1180;1173:12;1134:53;1222:9;1209:23;1241:31;1266:5;1241:31;:::i;:::-;1291:5;-1:-1:-1;1348:2:125;1333:18;;1320:32;1361:33;1320:32;1361:33;:::i;:::-;1413:7;-1:-1:-1;1467:2:125;1452:18;;1439:32;;-1:-1:-1;1522:2:125;1507:18;;1494:32;1549:18;1538:30;;1535:50;;;1581:1;1578;1571:12;1535:50;1620:58;1670:7;1661:6;1650:9;1646:22;1620:58;:::i;:::-;984:754;;;;-1:-1:-1;984:754:125;;-1:-1:-1;1697:8:125;;1594:84;984:754;-1:-1:-1;;;984:754:125:o;1996:247::-;2055:6;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2163:9;2150:23;2182:31;2207:5;2182:31;:::i;:::-;2232:5;1996:247;-1:-1:-1;;;1996:247:125:o;2248:388::-;2316:6;2324;2377:2;2365:9;2356:7;2352:23;2348:32;2345:52;;;2393:1;2390;2383:12;2345:52;2432:9;2419:23;2451:31;2476:5;2451:31;:::i;:::-;2501:5;-1:-1:-1;2558:2:125;2543:18;;2530:32;2571:33;2530:32;2571:33;:::i;:::-;2623:7;2613:17;;;2248:388;;;;;:::o;2641:184::-;2693:77;2690:1;2683:88;2790:4;2787:1;2780:15;2814:4;2811:1;2804:15;2830:253;2902:2;2896:9;2944:4;2932:17;;2979:18;2964:34;;3000:22;;;2961:62;2958:88;;;3026:18;;:::i;:::-;3062:2;3055:22;2830:253;:::o;3088:::-;3160:2;3154:9;3202:4;3190:17;;3237:18;3222:34;;3258:22;;;3219:62;3216:88;;;3284:18;;:::i;3346:255::-;3418:2;3412:9;3460:6;3448:19;;3497:18;3482:34;;3518:22;;;3479:62;3476:88;;;3544:18;;:::i;3606:253::-;3678:2;3672:9;3720:4;3708:17;;3755:18;3740:34;;3776:22;;;3737:62;3734:88;;;3802:18;;:::i;3864:253::-;3936:2;3930:9;3978:4;3966:17;;4013:18;3998:34;;4034:22;;;3995:62;3992:88;;;4060:18;;:::i;4122:251::-;4194:2;4188:9;;;4224:15;;4269:18;4254:34;;4290:22;;;4251:62;4248:88;;;4316:18;;:::i;4640:253::-;4713:2;4707:9;4755:3;4743:16;;4789:18;4774:34;;4810:22;;;4771:62;4768:88;;;4836:18;;:::i;4898:334::-;4969:2;4963:9;5025:2;5015:13;;-1:-1:-1;;5011:86:125;4999:99;;5128:18;5113:34;;5149:22;;;5110:62;5107:88;;;5175:18;;:::i;:::-;5211:2;5204:22;4898:334;;-1:-1:-1;4898:334:125:o;5237:246::-;5286:4;5319:18;5311:6;5308:30;5305:56;;;5341:18;;:::i;:::-;-1:-1:-1;5398:2:125;5386:15;-1:-1:-1;;5382:88:125;5472:4;5378:99;;5237:246::o;5488:338::-;5553:5;5582:53;5598:36;5627:6;5598:36;:::i;:::-;5582:53;:::i;:::-;5573:62;;5658:6;5651:5;5644:21;5698:3;5689:6;5684:3;5680:16;5677:25;5674:45;;;5715:1;5712;5705:12;5674:45;5764:6;5759:3;5752:4;5745:5;5741:16;5728:43;5818:1;5811:4;5802:6;5795:5;5791:18;5787:29;5780:40;5488:338;;;;;:::o;5831:222::-;5874:5;5927:3;5920:4;5912:6;5908:17;5904:27;5894:55;;5945:1;5942;5935:12;5894:55;5967:80;6043:3;6034:6;6021:20;6014:4;6006:6;6002:17;5967:80;:::i;6058:671::-;6145:6;6153;6206:2;6194:9;6185:7;6181:23;6177:32;6174:52;;;6222:1;6219;6212:12;6174:52;6262:9;6249:23;6291:18;6332:2;6324:6;6321:14;6318:34;;;6348:1;6345;6338:12;6318:34;6371:50;6413:7;6404:6;6393:9;6389:22;6371:50;:::i;:::-;6361:60;;6474:2;6463:9;6459:18;6446:32;6430:48;;6503:2;6493:8;6490:16;6487:36;;;6519:1;6516;6509:12;6487:36;-1:-1:-1;6542:24:125;;6597:4;6589:13;;6585:27;-1:-1:-1;6575:55:125;;6626:1;6623;6616:12;6575:55;6649:74;6715:7;6710:2;6697:16;6692:2;6688;6684:11;6649:74;:::i;:::-;6639:84;;;6058:671;;;;;:::o;7097:180::-;7156:6;7209:2;7197:9;7188:7;7184:23;7180:32;7177:52;;;7225:1;7222;7215:12;7177:52;-1:-1:-1;7248:23:125;;7097:180;-1:-1:-1;7097:180:125:o;7525:456::-;7602:6;7610;7618;7671:2;7659:9;7650:7;7646:23;7642:32;7639:52;;;7687:1;7684;7677:12;7639:52;7726:9;7713:23;7745:31;7770:5;7745:31;:::i;:::-;7795:5;-1:-1:-1;7852:2:125;7837:18;;7824:32;7865:33;7824:32;7865:33;:::i;:::-;7525:456;;7917:7;;-1:-1:-1;;;7971:2:125;7956:18;;;;7943:32;;7525:456::o;7986:192::-;8055:4;8088:18;8080:6;8077:30;8074:56;;;8110:18;;:::i;:::-;-1:-1:-1;8155:1:125;8151:14;8167:4;8147:25;;7986:192::o;8183:149::-;8257:20;;8306:1;8296:12;;8286:40;;8322:1;8319;8312:12;8337:1331;8400:5;8453:3;8446:4;8438:6;8434:17;8430:27;8420:55;;8471:1;8468;8461:12;8420:55;8507:6;8494:20;8533:4;8557:69;8573:52;8622:2;8573:52;:::i;8557:69::-;8660:15;;;8722:4;8765:11;;;8753:24;;8749:33;;;8691:12;;;;8648:3;8794:15;;;8791:35;;;8822:1;8819;8812:12;8791:35;8858:2;8850:6;8846:15;8870:769;8886:6;8881:3;8878:15;8870:769;;;8962:2;8956:3;8951;8947:13;8943:22;8940:112;;;9006:1;9035:2;9031;9024:14;8940:112;9078:22;;:::i;:::-;9127:29;9152:3;9127:29;:::i;:::-;9120:5;9113:44;9207:2;9202:3;9198:12;9185:26;9224:33;9249:7;9224:33;:::i;:::-;9277:14;;;9270:31;9324:2;9375:12;;;9362:26;9346:14;;;9339:50;9412:2;9463:12;;;9450:26;9434:14;;;9427:50;9500:3;9552:12;;;9539:26;9523:14;;;9516:50;9579:18;;9617:12;;;;8903;;8870:769;;;-1:-1:-1;9657:5:125;;8337:1331;-1:-1:-1;;;;;;;8337:1331:125:o;9673:1509::-;9744:5;9797:3;9790:4;9782:6;9778:17;9774:27;9764:55;;9815:1;9812;9805:12;9764:55;9851:6;9838:20;9877:4;9901:69;9917:52;9966:2;9917:52;:::i;9901:69::-;10004:15;;;10066:4;10109:11;;;10097:24;;10093:33;;;10035:12;;;;9992:3;10138:15;;;10135:35;;;10166:1;10163;10156:12;10135:35;10202:2;10194:6;10190:15;10214:939;10230:6;10225:3;10222:15;10214:939;;;10306:2;10300:3;10295;10291:13;10287:22;10284:112;;;10350:1;10379:2;10375;10368:14;10284:112;10422:22;;:::i;:::-;10471:29;10496:3;10471:29;:::i;:::-;10464:5;10457:44;10551:2;10546:3;10542:12;10529:26;10568:33;10593:7;10568:33;:::i;:::-;10621:14;;;10614:31;10668:2;10719:12;;;10706:26;10690:14;;;10683:50;10756:2;10807:12;;;10794:26;10778:14;;;10771:50;10844:3;10896:12;;;10883:26;10867:14;;;10860:50;10933:3;10977:12;;;10964:26;11003:33;10964:26;11003:33;:::i;:::-;11056:14;;;11049:31;11093:18;;11131:12;;;;10247;;10214:939;;11187:150;11262:20;;11311:1;11301:12;;11291:40;;11327:1;11324;11317:12;11342:1686;11469:6;11477;11485;11493;11546:3;11534:9;11525:7;11521:23;11517:33;11514:53;;;11563:1;11560;11553:12;11514:53;11603:9;11590:23;11632:18;11673:2;11665:6;11662:14;11659:34;;;11689:1;11686;11679:12;11659:34;11712:22;;;;11768:6;11750:16;;;11746:29;11743:49;;;11788:1;11785;11778:12;11743:49;11814:22;;:::i;:::-;11859;11878:2;11859:22;:::i;:::-;11852:5;11845:37;11914:31;11941:2;11937;11933:11;11914:31;:::i;:::-;11909:2;11902:5;11898:14;11891:55;11992:2;11988;11984:11;11971:25;12021:2;12011:8;12008:16;12005:36;;;12037:1;12034;12027:12;12005:36;12073:65;12130:7;12119:8;12115:2;12111:17;12073:65;:::i;:::-;12068:2;12061:5;12057:14;12050:89;;12185:2;12181;12177:11;12164:25;12214:2;12204:8;12201:16;12198:36;;;12230:1;12227;12220:12;12198:36;12266:73;12331:7;12320:8;12316:2;12312:17;12266:73;:::i;:::-;12261:2;12254:5;12250:14;12243:97;;12373:39;12407:3;12403:2;12399:12;12373:39;:::i;:::-;12367:3;12356:15;;12349:64;12467:3;12459:12;;;12446:26;12429:15;;;12422:51;12527:3;12519:12;;;12506:26;12489:15;;;12482:51;12587:3;12579:12;;;12566:26;12549:15;;;12542:51;12612:3;12660:11;;;12647:25;12631:14;;;12624:49;12692:3;12740:11;;;12727:25;12711:14;;;12704:49;12772:3;12820:11;;;12807:25;12791:14;;;12784:49;;;;-1:-1:-1;12360:5:125;-1:-1:-1;12876:38:125;12910:2;12895:18;;12876:38;:::i;:::-;12866:48;;12933:38;12967:2;12956:9;12952:18;12933:38;:::i;:::-;11342:1686;;;;-1:-1:-1;12923:48:125;;13018:2;13003:18;12990:32;;-1:-1:-1;;11342:1686:125:o;13033:184::-;13085:77;13082:1;13075:88;13182:4;13179:1;13172:15;13206:4;13203:1;13196:15;13222:139;13302:1;13295:5;13292:12;13282:46;;13308:18;;:::i;:::-;13337;;13222:139::o;13366:838::-;13428:3;13466:5;13460:12;13493:6;13488:3;13481:19;13519:4;13548:2;13543:3;13539:12;13532:19;;13585:2;13578:5;13574:14;13606:1;13616:563;13630:6;13627:1;13624:13;13616:563;;;13695:6;13689:13;13715:40;13751:3;13746:2;13740:9;13715:40;:::i;:::-;13799:11;;;13793:18;-1:-1:-1;;;;;13789:67:125;13775:12;;;13768:89;13880:4;13924:11;;;13918:18;13904:12;;;13897:40;13960:4;14004:11;;;13998:18;13984:12;;;13977:40;14040:4;14084:11;;;14078:18;14064:12;;;14057:40;14126:4;14117:14;;;;14154:15;;;;13652:1;13645:9;13616:563;;;-1:-1:-1;14195:3:125;;13366:838;-1:-1:-1;;;;;13366:838:125:o;14209:1005::-;14279:3;14317:5;14311:12;14344:6;14339:3;14332:19;14370:4;14399:2;14394:3;14390:12;14383:19;;14436:2;14429:5;14425:14;14457:1;14467:722;14481:6;14478:1;14475:13;14467:722;;;14546:6;14540:13;14566:40;14602:3;14597:2;14591:9;14566:40;:::i;:::-;14645:11;;;14639:18;-1:-1:-1;;;;;14756:21:125;;;14742:12;;;14735:43;14801:4;14845:11;;;14839:18;14825:12;;;14818:40;14881:4;14925:11;;;14919:18;14905:12;;;14898:40;14961:4;15005:11;;;14999:18;14985:12;;;14978:40;15041:4;15089:11;;;15083:18;15079:27;15065:12;;;15058:49;15136:4;15127:14;;;;15164:15;;;;14503:1;14496:9;14467:722;;15219:140;15300:1;15293:5;15290:12;15280:46;;15306:18;;:::i;15364:1506::-;15559:2;15548:9;15541:21;15571:53;15620:2;15609:9;15605:18;15596:6;15590:13;-1:-1:-1;;;;;6800:54:125;6788:67;;6734:127;15571:53;15522:4;15671:2;15663:6;15659:15;15653:22;15684:52;15732:2;15721:9;15717:18;15703:12;-1:-1:-1;;;;;6800:54:125;6788:67;;6734:127;15684:52;;15785:2;15777:6;15773:15;15767:22;15808:6;15850:2;15845;15834:9;15830:18;15823:30;15876:74;15945:3;15934:9;15930:19;15914:14;15876:74;:::i;:::-;15862:88;;15999:2;15991:6;15987:15;15981:22;-1:-1:-1;;16056:9:125;16048:6;16044:22;16040:95;16034:3;16023:9;16019:19;16012:124;16159:69;16221:6;16205:14;16159:69;:::i;:::-;16145:83;;;16277:3;16269:6;16265:16;16259:23;16291:62;16348:3;16337:9;16333:19;16317:14;16291:62;:::i;:::-;;16408:3;16400:6;16396:16;16390:23;16384:3;16373:9;16369:19;16362:52;16469:3;16461:6;16457:16;16451:23;16445:3;16434:9;16430:19;16423:52;16512:3;16504:6;16500:16;16494:23;16536:3;16575:2;16570;16559:9;16555:18;16548:30;16615:2;16607:6;16603:15;16597:22;16587:32;;;16638:3;16677:2;16672;16661:9;16657:18;16650:30;16717:2;16709:6;16705:15;16699:22;16689:32;;;16740:3;16779:2;16774;16763:9;16759:18;16752:30;16836:2;16828:6;16824:15;16818:22;16813:2;16802:9;16798:18;16791:50;;;;16858:6;16850:14;;;15364:1506;;;;:::o;16875:316::-;16952:6;16960;16968;17021:2;17009:9;17000:7;16996:23;16992:32;16989:52;;;17037:1;17034;17027:12;16989:52;-1:-1:-1;;17060:23:125;;;17130:2;17115:18;;17102:32;;-1:-1:-1;17181:2:125;17166:18;;;17153:32;;16875:316;-1:-1:-1;16875:316:125:o;17378:1975::-;17466:6;17519:4;17507:9;17498:7;17494:23;17490:34;17487:54;;;17537:1;17534;17527:12;17487:54;17563:22;;:::i;:::-;17630:7;17623:4;17612:9;17608:20;17604:34;17594:62;;17652:1;17649;17642:12;17594:62;17676:23;;:::i;:::-;17721:3;17762:4;17751:9;17747:20;17790:7;17782:6;17779:19;17776:39;;;17811:1;17808;17801:12;17776:39;17835:9;17853:1441;17869:6;17864:3;17861:15;17853:1441;;;17953:6;17947:3;17938:7;17934:17;17930:30;17927:50;;;17973:1;17970;17963:12;17927:50;18005:22;;:::i;:::-;18068:3;18055:17;18085:33;18110:7;18085:33;:::i;:::-;18131:24;;18178:4;18223:12;;;18210:26;18249:33;18210:26;18249:33;:::i;:::-;18302:16;;;18295:33;18364:2;18355:12;;18351:26;-1:-1:-1;18341:54:125;;18391:1;18388;18381:12;18341:54;18421:23;;:::i;:::-;18470:5;18513:6;18508:3;18504:16;18549:7;18539:8;18536:21;18533:41;;;18570:1;18567;18560:12;18533:41;18609:2;18604:3;18600:12;18625:550;18643:8;18636:5;18633:19;18625:550;;;18739:2;18731:5;18722:7;18718:19;18714:28;18711:48;;;18755:1;18752;18745:12;18711:48;18791:22;;:::i;:::-;18859:5;18846:19;18837:7;18830:36;18922:2;18915:5;18911:14;18898:28;18978:34;18969:7;18965:48;18956:7;18953:61;18943:89;;19028:1;19025;19018:12;18943:89;19056:16;;;19049:33;19099:22;;19147:14;;;;18675:2;18664:14;18625:550;;;-1:-1:-1;;19208:2:125;19195:16;;19188:31;-1:-1:-1;19232:20:125;;;19272:12;;;;17895:6;17886:16;17853:1441;;;-1:-1:-1;;19303:20:125;;-1:-1:-1;19310:5:125;17378:1975;-1:-1:-1;;;17378:1975:125:o;19358:118::-;19444:5;19437:13;19430:21;19423:5;19420:32;19410:60;;19466:1;19463;19456:12;19481:592;19564:6;19572;19580;19588;19641:3;19629:9;19620:7;19616:23;19612:33;19609:53;;;19658:1;19655;19648:12;19609:53;19697:9;19684:23;19716:31;19741:5;19716:31;:::i;:::-;19766:5;-1:-1:-1;19823:2:125;19808:18;;19795:32;19836:33;19795:32;19836:33;:::i;:::-;19888:7;-1:-1:-1;19942:2:125;19927:18;;19914:32;;-1:-1:-1;19998:2:125;19983:18;;19970:32;20011:30;19970:32;20011:30;:::i;:::-;19481:592;;;;-1:-1:-1;19481:592:125;;-1:-1:-1;;19481:592:125:o;20078:322::-;20147:6;20200:2;20188:9;20179:7;20175:23;20171:32;20168:52;;;20216:1;20213;20206:12;20168:52;20256:9;20243:23;20289:18;20281:6;20278:30;20275:50;;;20321:1;20318;20311:12;20275:50;20344;20386:7;20377:6;20366:9;20362:22;20344:50;:::i;20405:671::-;20459:5;20512:3;20505:4;20497:6;20493:17;20489:27;20479:55;;20530:1;20527;20520:12;20479:55;20566:6;20553:20;20592:4;20616:69;20632:52;20681:2;20632:52;:::i;20616:69::-;20719:15;;;20805:1;20801:10;;;;20789:23;;20785:32;;;20750:12;;;;20829:15;;;20826:35;;;20857:1;20854;20847:12;20826:35;20893:2;20885:6;20881:15;20905:142;20921:6;20916:3;20913:15;20905:142;;;20987:17;;20975:30;;21025:12;;;;20938;;20905:142;;;-1:-1:-1;21065:5:125;20405:671;-1:-1:-1;;;;;;20405:671:125:o;21081:2558::-;21166:6;21197:2;21240;21228:9;21219:7;21215:23;21211:32;21208:52;;;21256:1;21253;21246:12;21208:52;21296:9;21283:23;21325:18;21366:2;21358:6;21355:14;21352:34;;;21382:1;21379;21372:12;21352:34;21405:22;;;;21461:4;21443:16;;;21439:27;21436:47;;;21479:1;21476;21469:12;21436:47;21505:22;;:::i;:::-;21564:2;21551:16;21576:33;21601:7;21576:33;:::i;:::-;21618:22;;21678:11;;;21665:25;21702:16;;;21699:36;;;21731:1;21728;21721:12;21699:36;21762:8;21758:2;21754:17;21744:27;;;21809:7;21802:4;21798:2;21794:13;21790:27;21780:55;;21831:1;21828;21821:12;21780:55;21867:2;21854:16;21890:69;21906:52;21955:2;21906:52;:::i;21890:69::-;21993:15;;;22075:1;22071:10;;;;22063:19;;22059:28;;;22024:12;;;;22099:19;;;22096:39;;;22131:1;22128;22121:12;22096:39;22163:2;22159;22155:11;22175:1396;22191:6;22186:3;22183:15;22175:1396;;;22277:3;22264:17;22313:2;22300:11;22297:19;22294:39;;;22329:1;22326;22319:12;22294:39;22356:20;;22487:4;22400:16;;;-1:-1:-1;;22396:89:125;22392:100;22389:120;;;22505:1;22502;22495:12;22389:120;22537:22;;:::i;:::-;22608:2;22604;22600:11;22587:25;22625:33;22650:7;22625:33;:::i;:::-;22671:24;;22744:4;22736:13;;22723:27;22763:33;22723:27;22763:33;:::i;:::-;22816:16;;;22809:33;22882:31;22909:2;22901:11;;22882:31;:::i;:::-;22875:4;22866:7;22862:18;22855:59;22937:3;22990:2;22986;22982:11;22969:25;23023:2;23013:8;23010:16;23007:106;;;23067:1;23096:2;23092;23085:14;23007:106;23151:65;23208:7;23203:2;23192:8;23188:2;23184:17;23180:26;23151:65;:::i;:::-;23146:2;23137:7;23133:16;23126:91;;23267:4;23263:2;23259:13;23246:27;23302:2;23292:8;23289:16;23286:106;;;23346:1;23375:2;23371;23364:14;23286:106;23430:65;23487:7;23482:2;23471:8;23467:2;23463:17;23459:26;23430:65;:::i;:::-;23412:16;;;23405:91;;;;-1:-1:-1;23509:20:125;;-1:-1:-1;23549:12:125;;;;22208;;22175:1396;;;-1:-1:-1;23587:14:125;;;23580:29;;;;-1:-1:-1;23591:5:125;21081:2558;-1:-1:-1;;;;;;21081:2558:125:o;23836:367::-;23899:8;23909:6;23963:3;23956:4;23948:6;23944:17;23940:27;23930:55;;23981:1;23978;23971:12;23930:55;-1:-1:-1;24004:20:125;;24047:18;24036:30;;24033:50;;;24079:1;24076;24069:12;24033:50;24116:4;24108:6;24104:17;24092:29;;24176:3;24169:4;24159:6;24156:1;24152:14;24144:6;24140:27;24136:38;24133:47;24130:67;;;24193:1;24190;24183:12;24208:1338;24368:6;24376;24384;24392;24400;24408;24416;24424;24477:3;24465:9;24456:7;24452:23;24448:33;24445:53;;;24494:1;24491;24484:12;24445:53;24533:9;24520:23;24552:31;24577:5;24552:31;:::i;:::-;24602:5;-1:-1:-1;24659:2:125;24644:18;;24631:32;24672:33;24631:32;24672:33;:::i;:::-;24724:7;-1:-1:-1;24782:2:125;24767:18;;24754:32;24805:18;24835:14;;;24832:34;;;24862:1;24859;24852:12;24832:34;24901:70;24963:7;24954:6;24943:9;24939:22;24901:70;:::i;:::-;24990:8;;-1:-1:-1;24875:96:125;-1:-1:-1;25078:2:125;25063:18;;25050:32;;-1:-1:-1;25094:16:125;;;25091:36;;;25123:1;25120;25113:12;25091:36;25162:72;25226:7;25215:8;25204:9;25200:24;25162:72;:::i;:::-;25253:8;;-1:-1:-1;25136:98:125;-1:-1:-1;25341:3:125;25326:19;;25313:33;;-1:-1:-1;25358:16:125;;;25355:36;;;25387:1;25384;25377:12;25355:36;;25426:60;25478:7;25467:8;25456:9;25452:24;25426:60;:::i;:::-;24208:1338;;;;-1:-1:-1;24208:1338:125;;-1:-1:-1;24208:1338:125;;;;;;25505:8;-1:-1:-1;;;24208:1338:125:o;25551:823::-;25657:6;25665;25673;25681;25689;25697;25750:3;25738:9;25729:7;25725:23;25721:33;25718:53;;;25767:1;25764;25757:12;25718:53;25806:9;25793:23;25825:31;25850:5;25825:31;:::i;:::-;25875:5;-1:-1:-1;25932:2:125;25917:18;;25904:32;25945:33;25904:32;25945:33;:::i;:::-;25997:7;-1:-1:-1;26051:2:125;26036:18;;26023:32;;-1:-1:-1;26102:2:125;26087:18;;26074:32;;-1:-1:-1;26157:3:125;26142:19;;26129:33;26185:18;26174:30;;26171:50;;;26217:1;26214;26207:12;26171:50;26256:58;26306:7;26297:6;26286:9;26282:22;26256:58;:::i;:::-;25551:823;;;;-1:-1:-1;25551:823:125;;-1:-1:-1;25551:823:125;;26333:8;;25551:823;-1:-1:-1;;;25551:823:125:o;27774:258::-;27846:1;27856:113;27870:6;27867:1;27864:13;27856:113;;;27946:11;;;27940:18;27927:11;;;27920:39;27892:2;27885:10;27856:113;;;27987:6;27984:1;27981:13;27978:48;;;-1:-1:-1;;28022:1:125;28004:16;;27997:27;27774:258::o;28037:442::-;28186:2;28175:9;28168:21;28149:4;28218:6;28212:13;28261:6;28256:2;28245:9;28241:18;28234:34;28277:66;28336:6;28331:2;28320:9;28316:18;28311:2;28303:6;28299:15;28277:66;:::i;:::-;28395:2;28383:15;-1:-1:-1;;28379:88:125;28364:104;;;;28470:2;28360:113;;28037:442;-1:-1:-1;;28037:442:125:o;28484:635::-;28563:6;28616:2;28604:9;28595:7;28591:23;28587:32;28584:52;;;28632:1;28629;28622:12;28584:52;28665:9;28659:16;28698:18;28690:6;28687:30;28684:50;;;28730:1;28727;28720:12;28684:50;28753:22;;28806:4;28798:13;;28794:27;-1:-1:-1;28784:55:125;;28835:1;28832;28825:12;28784:55;28864:2;28858:9;28889:49;28905:32;28934:2;28905:32;:::i;28889:49::-;28961:2;28954:5;28947:17;29001:7;28996:2;28991;28987;28983:11;28979:20;28976:33;28973:53;;;29022:1;29019;29012:12;28973:53;29035:54;29086:2;29081;29074:5;29070:14;29065:2;29061;29057:11;29035:54;:::i;:::-;29108:5;28484:635;-1:-1:-1;;;;;28484:635:125:o;29124:466::-;29299:3;29337:6;29331:13;29353:53;29399:6;29394:3;29387:4;29379:6;29375:17;29353:53;:::i;:::-;29469:13;;29428:16;;;;29491:57;29469:13;29428:16;29525:4;29513:17;;29491:57;:::i;:::-;29564:20;;29124:466;-1:-1:-1;;;;29124:466:125:o;30013:184::-;30065:77;30062:1;30055:88;30162:4;30159:1;30152:15;30186:4;30183:1;30176:15;30202:125;30242:4;30270:1;30267;30264:8;30261:34;;;30275:18;;:::i;:::-;-1:-1:-1;30312:9:125;;30202:125::o;30634:251::-;30704:6;30757:2;30745:9;30736:7;30732:23;30728:32;30725:52;;;30773:1;30770;30763:12;30725:52;30805:9;30799:16;30824:31;30849:5;30824:31;:::i;31317:195::-;31356:3;31387:66;31380:5;31377:77;31374:103;;31457:18;;:::i;:::-;-1:-1:-1;31504:1:125;31493:13;;31317:195::o;31517:266::-;31549:1;31575;31565:189;;31610:77;31607:1;31600:88;31711:4;31708:1;31701:15;31739:4;31736:1;31729:15;31565:189;-1:-1:-1;31768:9:125;;31517:266::o;31788:128::-;31828:3;31859:1;31855:6;31852:1;31849:13;31846:39;;;31865:18;;:::i;:::-;-1:-1:-1;31901:9:125;;31788:128::o;32336:184::-;32388:77;32385:1;32378:88;32485:4;32482:1;32475:15;32509:4;32506:1;32499:15;32525:175;32562:3;32606:4;32599:5;32595:16;32635:4;32626:7;32623:17;32620:43;;32643:18;;:::i;:::-;32692:1;32679:15;;32525:175;-1:-1:-1;;32525:175:125:o;32705:274::-;32834:3;32872:6;32866:13;32888:53;32934:6;32929:3;32922:4;32914:6;32910:17;32888:53;:::i;:::-;32957:16;;;;;32705:274;-1:-1:-1;;32705:274:125:o;32984:184::-;33054:6;33107:2;33095:9;33086:7;33082:23;33078:32;33075:52;;;33123:1;33120;33113:12;33075:52;-1:-1:-1;33146:16:125;;32984:184;-1:-1:-1;32984:184:125:o;33585:456::-;33659:3;33697:5;33691:12;33724:6;33719:3;33712:19;33750:4;33779:2;33774:3;33770:12;33763:19;;33816:2;33809:5;33805:14;33837:1;33847:169;33861:6;33858:1;33855:13;33847:169;;;33922:13;;33910:26;;33956:12;;;;33991:15;;;;33883:1;33876:9;33847:169;;34046:1356;34123:3;34161:5;34155:12;34188:6;34183:3;34176:19;34214:4;34255:2;34250:3;34246:12;34280:11;34307;34300:18;;34357:6;34354:1;34350:14;34343:5;34339:26;34327:38;;34399:2;34392:5;34388:14;34420:1;34430:946;34444:6;34441:1;34438:13;34430:946;;;34515:5;34509:4;34505:16;34500:3;34493:29;34551:6;34545:13;34581:4;-1:-1:-1;;;;;34691:2:125;34686;34680:9;34676:18;34670:4;34663:32;34754:2;34748;34744;34740:11;34734:18;34730:27;34725:2;34719:4;34715:13;34708:50;34781:4;34844:2;34838;34834;34830:11;34824:18;34820:27;34815:2;34809:4;34805:13;34798:50;;;34871:4;34922:2;34918;34914:11;34908:18;34961:2;34956;34950:4;34946:13;34939:25;34991:78;35065:2;35059:4;35055:13;35041:12;34991:78;:::i;:::-;34977:92;;;;35092:4;35145:2;35141;35137:11;35131:18;35109:40;;35196:4;35188:6;35184:17;35179:2;35173:4;35169:13;35162:40;;35223:73;35289:6;35273:14;35223:73;:::i;:::-;35354:12;;;;35215:81;-1:-1:-1;;;35319:15:125;;;;34466:1;34459:9;34430:946;;;-1:-1:-1;35392:4:125;;34046:1356;-1:-1:-1;;;;;;;34046:1356:125:o;35407:369::-;35670:2;35659:9;35652:21;35633:4;35690:80;35766:2;35755:9;35751:18;35743:6;35690:80;:::i;35781:336::-;35850:6;35903:2;35891:9;35882:7;35878:23;35874:32;35871:52;;;35919:1;35916;35909:12;35871:52;35951:9;35945:16;36001:66;35994:5;35990:78;35983:5;35980:89;35970:117;;36083:1;36080;36073:12;36122:876;36390:2;36402:21;;;36472:13;;36375:18;;;36494:22;;;36342:4;;36569;;36547:2;36532:18;;;36596:15;;;36342:4;36639:218;36653:6;36650:1;36647:13;36639:218;;;36718:13;;-1:-1:-1;;;;;36714:62:125;36702:75;;36797:12;;;;36832:15;;;;36675:1;36668:9;36639:218;;;36643:3;;;36902:9;36897:3;36893:19;36888:2;36877:9;36873:18;36866:47;36930:62;36988:3;36980:6;36930:62;:::i;:::-;36922:70;36122:876;-1:-1:-1;;;;;;36122:876:125:o;37003:890::-;37098:6;37129:2;37172;37160:9;37151:7;37147:23;37143:32;37140:52;;;37188:1;37185;37178:12;37140:52;37221:9;37215:16;37254:18;37246:6;37243:30;37240:50;;;37286:1;37283;37276:12;37240:50;37309:22;;37362:4;37354:13;;37350:27;-1:-1:-1;37340:55:125;;37391:1;37388;37381:12;37340:55;37420:2;37414:9;37443:69;37459:52;37508:2;37459:52;:::i;37443:69::-;37546:15;;;37628:1;37624:10;;;;37616:19;;37612:28;;;37577:12;;;;37652:19;;;37649:39;;;37684:1;37681;37674:12;37649:39;37708:11;;;;37728:135;37744:6;37739:3;37736:15;37728:135;;;37810:10;;37798:23;;37761:12;;;;37841;;;;37728:135;;;37882:5;37003:890;-1:-1:-1;;;;;;;37003:890:125:o;38200:417::-;38397:66;38389:6;38385:79;38380:3;38373:92;38355:3;38494:6;38488:13;38510:61;38564:6;38560:1;38555:3;38551:11;38544:4;38536:6;38532:17;38510:61;:::i;:::-;38591:16;;;;38609:1;38587:24;;38200:417;-1:-1:-1;;;38200:417:125:o;38622:245::-;38689:6;38742:2;38730:9;38721:7;38717:23;38713:32;38710:52;;;38758:1;38755;38748:12;38710:52;38790:9;38784:16;38809:28;38831:5;38809:28;:::i;43659:486::-;43840:2;43829:9;43822:21;-1:-1:-1;;;;;43889:6:125;43883:13;43879:62;43874:2;43863:9;43859:18;43852:90;43803:4;43989:2;43981:6;43977:15;43971:22;44031:4;44024;44013:9;44009:20;44002:34;44053:86;44135:2;44124:9;44120:18;44106:12;44053:86;:::i;44720:348::-;44950:2;44939:9;44932:21;44913:4;44970:49;45015:2;45004:9;45000:18;44633:2;44621:15;;44668:12;44661:4;44652:14;;44645:36;44706:2;44697:12;;44556:159;44970:49;44962:57;;45055:6;45050:2;45039:9;45035:18;45028:34;44720:348;;;;:::o;45237:::-;45467:2;45456:9;45449:21;45430:4;45487:49;45532:2;45521:9;45517:18;45150:2;45138:15;;45185:12;45178:4;45169:14;;45162:36;45223:2;45214:12;;45073:159;47051:261;47091:3;-1:-1:-1;;;;;47188:2:125;47185:1;47181:10;47218:2;47215:1;47211:10;47249:3;47245:2;47241:12;47236:3;47233:21;47230:47;;;47257:18;;:::i;47723:397::-;47953:2;47942:9;47935:21;47916:4;47973:49;48018:2;48007:9;48003:18;44633:2;44621:15;;44668:12;44661:4;44652:14;;44645:36;44706:2;44697:12;;44556:159;47973:49;47965:57;;-1:-1:-1;;;;;48062:6:125;48058:55;48053:2;48042:9;48038:18;48031:83;47723:397;;;;:::o;48125:::-;48355:2;48344:9;48337:21;48318:4;48375:49;48420:2;48409:9;48405:18;45150:2;45138:15;;45185:12;45178:4;45169:14;;45162:36;45223:2;45214:12;;45073:159;48527:610;48773:13;;48716:3;;48747;;48826:4;48853:15;;;48716:3;48896:175;48910:6;48907:1;48904:13;48896:175;;;48973:13;;48959:28;;49009:14;;;;49046:15;;;;48932:1;48925:9;48896:175;;;-1:-1:-1;;49080:21:125;;;-1:-1:-1;49117:14:125;;;;;-1:-1:-1;;;48527:610:125:o;49142:228::-;49182:7;49308:1;49240:66;49236:74;49233:1;49230:81;49225:1;49218:9;49211:17;49207:105;49204:131;;;49315:18;;:::i;:::-;-1:-1:-1;49355:9:125;;49142:228::o;50497:398::-;50582:12;;50550:3;;50632:4;50659:14;;;50550:3;50709:13;;50701:169;;50776:13;;50764:26;;50810:12;;;;50845:15;;;;50737:1;50730:9;50701:169;;50900:836;51364:66;51356:6;51352:79;51347:3;51340:92;51322:3;51451:66;51567:2;51558:6;51554:2;51550:15;51546:24;51542:1;51537:3;51533:11;51526:45;51622:2;51613:6;51609:2;51605:15;51601:24;51596:2;51591:3;51587:12;51580:46;;51642:88;51679:50;51725:2;51720:3;51716:12;51708:6;51679:50;:::i;:::-;51671:6;51642:88;:::i;51741:668::-;51806:5;51859:3;51852:4;51844:6;51840:17;51836:27;51826:55;;51877:1;51874;51867:12;51826:55;51906:6;51900:13;51932:4;51956:69;51972:52;52021:2;51972:52;:::i;51956:69::-;52059:15;;;52145:1;52141:10;;;;52129:23;;52125:32;;;52090:12;;;;52169:15;;;52166:35;;;52197:1;52194;52187:12;52166:35;52233:2;52225:6;52221:15;52245:135;52261:6;52256:3;52253:15;52245:135;;;52327:10;;52315:23;;52358:12;;;;52278;;52245:135;;52414:614;52543:6;52551;52604:2;52592:9;52583:7;52579:23;52575:32;52572:52;;;52620:1;52617;52610:12;52572:52;52653:9;52647:16;52682:18;52723:2;52715:6;52712:14;52709:34;;;52739:1;52736;52729:12;52709:34;52762:72;52826:7;52817:6;52806:9;52802:22;52762:72;:::i;:::-;52752:82;;52880:2;52869:9;52865:18;52859:25;52843:41;;52909:2;52899:8;52896:16;52893:36;;;52925:1;52922;52915:12;52893:36;;52948:74;53014:7;53003:8;52992:9;52988:24;52948:74;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_deployAndConfigurePrecompiledOptimizedConsideration()": "4f3f8651",
    "_deployAndConfigurePrecompiledReferenceConsideration()": "79a59ce2",
    "bound(uint256,uint256,uint256)": "5a6c1eed",
    "createMirrorOrderParameters((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),address,address,bytes32)": "4a6b6d1d",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "executeBatch1155((address,(address,address,address,uint256[],uint256[])[]))": "b3391824",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testExecuteBatch1155(((address,address,(uint256,uint128)[10])[10]))": "69d820d5",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/foundry/conduit/ConduitExecuteBatch1155.t.sol",
    "id": 74203,
    "exportedSymbols": {
      "BaseConduitTest": [
        73670
      ],
      "BaseConsiderationTest": [
        75801
      ],
      "Conduit": [
        315
      ],
      "ConduitBatch1155Transfer": [
        1135
      ],
      "ConduitExecuteBatch1155Test": [
        74202
      ],
      "ConduitItemType": [
        1104
      ],
      "ConduitTransfer": [
        1122
      ],
      "ERC1155Recipient": [
        77085
      ],
      "ERC721Recipient": [
        77111
      ],
      "TestERC1155": [
        9875
      ],
      "TestERC20": [
        9971
      ],
      "TestERC721": [
        10007
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3234:107",
    "nodes": [
      {
        "id": 73926,
        "nodeType": "PragmaDirective",
        "src": "32:24:107",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 73928,
        "nodeType": "ImportDirective",
        "src": "58:75:107",
        "absolutePath": "test/foundry/utils/BaseConsiderationTest.sol",
        "file": "../utils/BaseConsiderationTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 75802,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73927,
              "name": "BaseConsiderationTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75801,
              "src": "67:21:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73932,
        "nodeType": "ImportDirective",
        "src": "134:127:107",
        "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
        "file": "../../../contracts/conduit/lib/ConduitStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 1136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73929,
              "name": "ConduitTransfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1122,
              "src": "143:15:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 73930,
              "name": "ConduitBatch1155Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1135,
              "src": "160:24:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 73931,
              "name": "ConduitItemType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1104,
              "src": "186:15:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73934,
        "nodeType": "ImportDirective",
        "src": "262:70:107",
        "absolutePath": "contracts/test/TestERC1155.sol",
        "file": "../../../contracts/test/TestERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 9876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73933,
              "name": "TestERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9875,
              "src": "271:11:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73936,
        "nodeType": "ImportDirective",
        "src": "333:66:107",
        "absolutePath": "contracts/test/TestERC20.sol",
        "file": "../../../contracts/test/TestERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 9972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73935,
              "name": "TestERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9971,
              "src": "342:9:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73938,
        "nodeType": "ImportDirective",
        "src": "400:68:107",
        "absolutePath": "contracts/test/TestERC721.sol",
        "file": "../../../contracts/test/TestERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 10008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73937,
              "name": "TestERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10007,
              "src": "409:10:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73940,
        "nodeType": "ImportDirective",
        "src": "469:63:107",
        "absolutePath": "test/foundry/utils/ERC721Recipient.sol",
        "file": "../utils/ERC721Recipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 77112,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73939,
              "name": "ERC721Recipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77111,
              "src": "478:15:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73942,
        "nodeType": "ImportDirective",
        "src": "533:65:107",
        "absolutePath": "test/foundry/utils/ERC1155Recipient.sol",
        "file": "../utils/ERC1155Recipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 77086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73941,
              "name": "ERC1155Recipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77085,
              "src": "542:16:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73944,
        "nodeType": "ImportDirective",
        "src": "599:56:107",
        "absolutePath": "test/foundry/conduit/BaseConduitTest.sol",
        "file": "./BaseConduitTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 73671,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73943,
              "name": "BaseConduitTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73670,
              "src": "608:15:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73946,
        "nodeType": "ImportDirective",
        "src": "656:65:107",
        "absolutePath": "contracts/conduit/Conduit.sol",
        "file": "../../../contracts/conduit/Conduit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74203,
        "sourceUnit": 316,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73945,
              "name": "Conduit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 315,
              "src": "665:7:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74202,
        "nodeType": "ContractDefinition",
        "src": "723:2542:107",
        "nodes": [
          {
            "id": 73954,
            "nodeType": "StructDefinition",
            "src": "785:75:107",
            "canonicalName": "ConduitExecuteBatch1155Test.FuzzInputs",
            "members": [
              {
                "constant": false,
                "id": 73953,
                "mutability": "mutable",
                "name": "batchIntermediates",
                "nameLocation": "835:18:107",
                "nodeType": "VariableDeclaration",
                "scope": 73954,
                "src": "813:40:107",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_storage_$10_storage_ptr",
                  "typeString": "struct BaseConduitTest.BatchIntermediate[10]"
                },
                "typeName": {
                  "baseType": {
                    "id": 73950,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73949,
                      "name": "BatchIntermediate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72362,
                      "src": "813:17:107"
                    },
                    "referencedDeclaration": 72362,
                    "src": "813:17:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_storage_ptr",
                      "typeString": "struct BaseConduitTest.BatchIntermediate"
                    }
                  },
                  "id": 73952,
                  "length": {
                    "hexValue": "3130",
                    "id": 73951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "831:2:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "813:21:107",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_storage_$10_storage_ptr",
                    "typeString": "struct BaseConduitTest.BatchIntermediate[10]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FuzzInputs",
            "nameLocation": "792:10:107",
            "scope": 74202,
            "visibility": "public"
          },
          {
            "id": 73962,
            "nodeType": "StructDefinition",
            "src": "866:98:107",
            "canonicalName": "ConduitExecuteBatch1155Test.Context",
            "members": [
              {
                "constant": false,
                "id": 73957,
                "mutability": "mutable",
                "name": "conduit",
                "nameLocation": "899:7:107",
                "nodeType": "VariableDeclaration",
                "scope": 73962,
                "src": "891:15:107",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Conduit_$315",
                  "typeString": "contract Conduit"
                },
                "typeName": {
                  "id": 73956,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73955,
                    "name": "Conduit",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 315,
                    "src": "891:7:107"
                  },
                  "referencedDeclaration": 315,
                  "src": "891:7:107",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Conduit_$315",
                    "typeString": "contract Conduit"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73961,
                "mutability": "mutable",
                "name": "batchTransfers",
                "nameLocation": "943:14:107",
                "nodeType": "VariableDeclaration",
                "scope": 73962,
                "src": "916:41:107",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                  "typeString": "struct ConduitBatch1155Transfer[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 73959,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73958,
                      "name": "ConduitBatch1155Transfer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1135,
                      "src": "916:24:107"
                    },
                    "referencedDeclaration": 1135,
                    "src": "916:24:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                      "typeString": "struct ConduitBatch1155Transfer"
                    }
                  },
                  "id": 73960,
                  "nodeType": "ArrayTypeName",
                  "src": "916:26:107",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                    "typeString": "struct ConduitBatch1155Transfer[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Context",
            "nameLocation": "873:7:107",
            "scope": 74202,
            "visibility": "public"
          },
          {
            "id": 73991,
            "nodeType": "FunctionDefinition",
            "src": "970:203:107",
            "body": {
              "id": 73990,
              "nodeType": "Block",
              "src": "1067:106:107",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 73978,
                        "nodeType": "Block",
                        "src": "1093:2:107",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 73979,
                      "nodeType": "TryCatchClause",
                      "src": "1093:2:107"
                    },
                    {
                      "block": {
                        "id": 73987,
                        "nodeType": "Block",
                        "src": "1124:43:107",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 73984,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73981,
                                  "src": "1149:6:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 73983,
                                "name": "assertPass",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77001,
                                "src": "1138:10:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) view"
                                }
                              },
                              "id": 73985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1138:18:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 73986,
                            "nodeType": "ExpressionStatement",
                            "src": "1138:18:107"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 73988,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 73982,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 73981,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1116:6:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 73988,
                            "src": "1103:19:107",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 73980,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1103:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1102:21:107"
                      },
                      "src": "1096:71:107"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 73976,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73972,
                        "src": "1084:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      ],
                      "id": 73975,
                      "name": "fn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73969,
                      "src": "1081:2:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitExecuteBatch1155Test.Context memory) external"
                      }
                    },
                    "id": 73977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:11:107",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73989,
                  "nodeType": "TryStatement",
                  "src": "1077:90:107"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test",
            "nameLocation": "979:4:107",
            "parameters": {
              "id": 73973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73969,
                  "mutability": "mutable",
                  "name": "fn",
                  "nameLocation": "1018:2:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 73991,
                  "src": "984:36:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                    "typeString": "function (struct ConduitExecuteBatch1155Test.Context) external"
                  },
                  "typeName": {
                    "id": 73968,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 73966,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 73965,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 73968,
                          "src": "993:14:107",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                            "typeString": "struct ConduitExecuteBatch1155Test.Context"
                          },
                          "typeName": {
                            "id": 73964,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 73963,
                              "name": "Context",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 73962,
                              "src": "993:7:107"
                            },
                            "referencedDeclaration": 73962,
                            "src": "993:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Context_$73962_storage_ptr",
                              "typeString": "struct ConduitExecuteBatch1155Test.Context"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "992:16:107"
                    },
                    "returnParameterTypes": {
                      "id": 73967,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "1018:0:107"
                    },
                    "src": "984:36:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                      "typeString": "function (struct ConduitExecuteBatch1155Test.Context) external"
                    },
                    "visibility": "external"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73972,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1037:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 73991,
                  "src": "1022:22:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                    "typeString": "struct ConduitExecuteBatch1155Test.Context"
                  },
                  "typeName": {
                    "id": 73971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73970,
                      "name": "Context",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73962,
                      "src": "1022:7:107"
                    },
                    "referencedDeclaration": 73962,
                    "src": "1022:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Context_$73962_storage_ptr",
                      "typeString": "struct ConduitExecuteBatch1155Test.Context"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:62:107"
            },
            "returnParameters": {
              "id": 73974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:107"
            },
            "scope": 74202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74066,
            "nodeType": "FunctionDefinition",
            "src": "1179:804:107",
            "body": {
              "id": 74065,
              "nodeType": "Block",
              "src": "1242:741:107",
              "statements": [
                {
                  "assignments": [
                    74001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74001,
                      "mutability": "mutable",
                      "name": "batchTransfers",
                      "nameLocation": "1298:14:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 74065,
                      "src": "1252:60:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ConduitBatch1155Transfer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 73999,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73998,
                            "name": "ConduitBatch1155Transfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1135,
                            "src": "1252:24:107"
                          },
                          "referencedDeclaration": 1135,
                          "src": "1252:24:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer"
                          }
                        },
                        "id": 74000,
                        "nodeType": "ArrayTypeName",
                        "src": "1252:26:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74008,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 74006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1346:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1315:30:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ConduitBatch1155Transfer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74003,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74002,
                            "name": "ConduitBatch1155Transfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1135,
                            "src": "1319:24:107"
                          },
                          "referencedDeclaration": 1135,
                          "src": "1319:24:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer"
                          }
                        },
                        "id": 74004,
                        "nodeType": "ArrayTypeName",
                        "src": "1319:26:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        }
                      }
                    },
                    "id": 74007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:33:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1252:96:107"
                },
                {
                  "body": {
                    "id": 74033,
                    "nodeType": "Block",
                    "src": "1419:244:107",
                    "statements": [
                      {
                        "expression": {
                          "id": 74031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74021,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74001,
                            "src": "1433:14:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 74023,
                                "name": "batchTransfers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74001,
                                "src": "1494:14:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 74025,
                                        "name": "inputs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 73994,
                                        "src": "1592:6:107",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FuzzInputs_$73954_memory_ptr",
                                          "typeString": "struct ConduitExecuteBatch1155Test.FuzzInputs memory"
                                        }
                                      },
                                      "id": 74026,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "batchIntermediates",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 73953,
                                      "src": "1592:25:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_memory_ptr_$10_memory_ptr",
                                        "typeString": "struct BaseConduitTest.BatchIntermediate memory[10] memory"
                                      }
                                    },
                                    "id": 74028,
                                    "indexExpression": {
                                      "id": 74027,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74010,
                                      "src": "1618:1:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1592:28:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_memory_ptr",
                                      "typeString": "struct BaseConduitTest.BatchIntermediate memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_memory_ptr",
                                      "typeString": "struct BaseConduitTest.BatchIntermediate memory"
                                    }
                                  ],
                                  "id": 74024,
                                  "name": "deployTokenAndCreateConduitBatch1155Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73028,
                                  "src": "1526:44:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BatchIntermediate_$72362_memory_ptr_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (struct BaseConduitTest.BatchIntermediate memory) returns (struct ConduitBatch1155Transfer memory[] memory)"
                                  }
                                },
                                "id": 74029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1526:112:107",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              ],
                              "id": 74022,
                              "name": "extendConduitTransferArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                72742,
                                72821
                              ],
                              "referencedDeclaration": 72821,
                              "src": "1450:26:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (struct ConduitBatch1155Transfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) pure returns (struct ConduitBatch1155Transfer memory[] memory)"
                              }
                            },
                            "id": 74030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1450:202:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "src": "1433:219:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                          }
                        },
                        "id": 74032,
                        "nodeType": "ExpressionStatement",
                        "src": "1433:219:107"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74013,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74010,
                      "src": "1376:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74014,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73994,
                          "src": "1380:6:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FuzzInputs_$73954_memory_ptr",
                            "typeString": "struct ConduitExecuteBatch1155Test.FuzzInputs memory"
                          }
                        },
                        "id": 74015,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchIntermediates",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73953,
                        "src": "1380:25:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_memory_ptr_$10_memory_ptr",
                          "typeString": "struct BaseConduitTest.BatchIntermediate memory[10] memory"
                        }
                      },
                      "id": 74016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1380:32:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1376:36:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74034,
                  "initializationExpression": {
                    "assignments": [
                      74010
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74010,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "1369:1:107",
                        "nodeType": "VariableDeclaration",
                        "scope": 74034,
                        "src": "1363:7:107",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 74009,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1363:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74012,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1373:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1363:11:107"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1414:3:107",
                      "subExpression": {
                        "id": 74018,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74010,
                        "src": "1416:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 74020,
                    "nodeType": "ExpressionStatement",
                    "src": "1414:3:107"
                  },
                  "nodeType": "ForStatement",
                  "src": "1358:305:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74036,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74001,
                        "src": "1691:14:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74035,
                      "name": "makeRecipientsSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73086,
                        73151
                      ],
                      "referencedDeclaration": 73151,
                      "src": "1672:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:34:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74038,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:34:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74040,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74001,
                        "src": "1757:14:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74039,
                      "name": "mintTokensAndSetTokenApprovalsForConduit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73356,
                        73460
                      ],
                      "referencedDeclaration": 73460,
                      "src": "1716:40:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:56:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74042,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:56:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74044,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74001,
                        "src": "1810:14:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74043,
                      "name": "updateExpectedTokenBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73582,
                        73609
                      ],
                      "referencedDeclaration": 73609,
                      "src": "1782:27:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:43:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74046,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:43:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74048,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1840:4:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConduitExecuteBatch1155Test_$74202",
                            "typeString": "contract ConduitExecuteBatch1155Test"
                          }
                        },
                        "id": 74049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executeBatch1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74201,
                        "src": "1840:21:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteBatch1155Test.Context memory) external"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74051,
                            "name": "referenceConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75357,
                            "src": "1871:16:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            }
                          },
                          {
                            "id": 74052,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74001,
                            "src": "1889:14:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          ],
                          "id": 74050,
                          "name": "Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73962,
                          "src": "1863:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Context_$73962_storage_ptr_$",
                            "typeString": "type(struct ConduitExecuteBatch1155Test.Context storage pointer)"
                          }
                        },
                        "id": 74053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1863:41:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteBatch1155Test.Context memory) external"
                        },
                        {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      ],
                      "id": 74047,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73991,
                      "src": "1835:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$_$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct ConduitExecuteBatch1155Test.Context memory) external,struct ConduitExecuteBatch1155Test.Context memory)"
                      }
                    },
                    "id": 74054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:70:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74055,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:70:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74057,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1920:4:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConduitExecuteBatch1155Test_$74202",
                            "typeString": "contract ConduitExecuteBatch1155Test"
                          }
                        },
                        "id": 74058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executeBatch1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74201,
                        "src": "1920:21:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteBatch1155Test.Context memory) external"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74060,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75360,
                            "src": "1951:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            }
                          },
                          {
                            "id": 74061,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74001,
                            "src": "1960:14:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          ],
                          "id": 74059,
                          "name": "Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73962,
                          "src": "1943:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Context_$73962_storage_ptr_$",
                            "typeString": "type(struct ConduitExecuteBatch1155Test.Context storage pointer)"
                          }
                        },
                        "id": 74062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:32:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteBatch1155Test.Context memory) external"
                        },
                        {
                          "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                          "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                        }
                      ],
                      "id": 74056,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73991,
                      "src": "1915:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_external_nonpayable$_t_struct$_Context_$73962_memory_ptr_$returns$__$_$_t_struct$_Context_$73962_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct ConduitExecuteBatch1155Test.Context memory) external,struct ConduitExecuteBatch1155Test.Context memory)"
                      }
                    },
                    "id": 74063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:61:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74064,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:61:107"
                }
              ]
            },
            "functionSelector": "69d820d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExecuteBatch1155",
            "nameLocation": "1188:20:107",
            "parameters": {
              "id": 73995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73994,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "1227:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 74066,
                  "src": "1209:24:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FuzzInputs_$73954_memory_ptr",
                    "typeString": "struct ConduitExecuteBatch1155Test.FuzzInputs"
                  },
                  "typeName": {
                    "id": 73993,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73992,
                      "name": "FuzzInputs",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73954,
                      "src": "1209:10:107"
                    },
                    "referencedDeclaration": 73954,
                    "src": "1209:10:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzInputs_$73954_storage_ptr",
                      "typeString": "struct ConduitExecuteBatch1155Test.FuzzInputs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:26:107"
            },
            "returnParameters": {
              "id": 73996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:107"
            },
            "scope": 74202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74201,
            "nodeType": "FunctionDefinition",
            "src": "1989:1274:107",
            "body": {
              "id": 74200,
              "nodeType": "Block",
              "src": "2058:1205:107",
              "statements": [
                {
                  "assignments": [
                    74075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74075,
                      "mutability": "mutable",
                      "name": "magicValue",
                      "nameLocation": "2075:10:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 74200,
                      "src": "2068:17:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 74074,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2068:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74082,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74079,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74069,
                          "src": "2134:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                            "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                          }
                        },
                        "id": 74080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchTransfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73961,
                        "src": "2134:22:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 74076,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74069,
                          "src": "2088:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                            "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                          }
                        },
                        "id": 74077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "conduit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73957,
                        "src": "2088:15:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Conduit_$315",
                          "typeString": "contract Conduit"
                        }
                      },
                      "id": 74078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeBatch1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "2088:32:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                      }
                    },
                    "id": 74081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:78:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2068:98:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74084,
                        "name": "magicValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74075,
                        "src": "2185:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 74085,
                            "name": "Conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2197:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Conduit_$315_$",
                              "typeString": "type(contract Conduit)"
                            }
                          },
                          "id": 74086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "executeBatch1155",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 143,
                          "src": "2197:24:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function Conduit.executeBatch1155(struct ConduitBatch1155Transfer calldata[] calldata) returns (bytes4)"
                          }
                        },
                        "id": 74087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2197:33:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 74083,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12583,
                        12608,
                        12621,
                        12637,
                        12697,
                        12757,
                        12819,
                        12881,
                        10478,
                        10503,
                        10533,
                        10558,
                        10617,
                        10642,
                        10672,
                        10697,
                        11797,
                        11832
                      ],
                      "referencedDeclaration": 10533,
                      "src": "2176:8:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 74088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:55:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74089,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:55:107"
                },
                {
                  "body": {
                    "id": 74198,
                    "nodeType": "Block",
                    "src": "2302:955:107",
                    "statements": [
                      {
                        "assignments": [
                          74104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74104,
                            "mutability": "mutable",
                            "name": "batchTransfer",
                            "nameLocation": "2348:13:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 74198,
                            "src": "2316:45:107",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            },
                            "typeName": {
                              "id": 74103,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 74102,
                                "name": "ConduitBatch1155Transfer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1135,
                                "src": "2316:24:107"
                              },
                              "referencedDeclaration": 1135,
                              "src": "2316:24:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                                "typeString": "struct ConduitBatch1155Transfer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74109,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 74105,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74069,
                              "src": "2364:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                                "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                              }
                            },
                            "id": 74106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "batchTransfers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73961,
                            "src": "2364:39:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "id": 74108,
                          "indexExpression": {
                            "id": 74107,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74091,
                            "src": "2404:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2364:42:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                            "typeString": "struct ConduitBatch1155Transfer memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2316:90:107"
                      },
                      {
                        "assignments": [
                          74114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74114,
                            "mutability": "mutable",
                            "name": "toAddresses",
                            "nameLocation": "2438:11:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 74198,
                            "src": "2421:28:107",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74112,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2421:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74113,
                              "nodeType": "ArrayTypeName",
                              "src": "2421:9:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74122,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 74118,
                                  "name": "batchTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74104,
                                  "src": "2483:13:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                    "typeString": "struct ConduitBatch1155Transfer memory"
                                  }
                                },
                                "id": 74119,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ids",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1131,
                                "src": "2483:17:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 74120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "2483:24:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 74117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2452:13:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74115,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2456:7:107",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74116,
                              "nodeType": "ArrayTypeName",
                              "src": "2456:9:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 74121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2452:69:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2421:100:107"
                      },
                      {
                        "body": {
                          "id": 74142,
                          "nodeType": "Block",
                          "src": "2590:66:107",
                          "statements": [
                            {
                              "expression": {
                                "id": 74140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 74135,
                                    "name": "toAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74114,
                                    "src": "2608:11:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 74137,
                                  "indexExpression": {
                                    "id": 74136,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74124,
                                    "src": "2620:1:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2608:14:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 74138,
                                    "name": "batchTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74104,
                                    "src": "2625:13:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                      "typeString": "struct ConduitBatch1155Transfer memory"
                                    }
                                  },
                                  "id": 74139,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "to",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1128,
                                  "src": "2625:16:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2608:33:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74141,
                              "nodeType": "ExpressionStatement",
                              "src": "2608:33:107"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74127,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74124,
                            "src": "2555:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 74128,
                                "name": "batchTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74104,
                                "src": "2559:13:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory"
                                }
                              },
                              "id": 74129,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1131,
                              "src": "2559:17:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2559:24:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2555:28:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74143,
                        "initializationExpression": {
                          "assignments": [
                            74124
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74124,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "2548:1:107",
                              "nodeType": "VariableDeclaration",
                              "scope": 74143,
                              "src": "2540:9:107",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74123,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2540:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74126,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2552:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2540:13:107"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 74133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "2585:3:107",
                            "subExpression": {
                              "id": 74132,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74124,
                              "src": "2587:1:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74134,
                          "nodeType": "ExpressionStatement",
                          "src": "2585:3:107"
                        },
                        "nodeType": "ForStatement",
                        "src": "2535:121:107"
                      },
                      {
                        "assignments": [
                          74148
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74148,
                            "mutability": "mutable",
                            "name": "actualBatchBalances",
                            "nameLocation": "2686:19:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 74198,
                            "src": "2669:36:107",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74146,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2669:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74147,
                              "nodeType": "ArrayTypeName",
                              "src": "2669:9:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74158,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 74154,
                              "name": "toAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74114,
                              "src": "2786:11:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 74155,
                                "name": "batchTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74104,
                                "src": "2799:13:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory"
                                }
                              },
                              "id": 74156,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1131,
                              "src": "2799:17:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 74150,
                                    "name": "batchTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74104,
                                    "src": "2737:13:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                      "typeString": "struct ConduitBatch1155Transfer memory"
                                    }
                                  },
                                  "id": 74151,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1124,
                                  "src": "2737:19:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 74149,
                                "name": "TestERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9875,
                                "src": "2708:11:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TestERC1155_$9875_$",
                                  "typeString": "type(contract TestERC1155)"
                                }
                              },
                              "id": 74152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2708:62:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC1155_$9875",
                                "typeString": "contract TestERC1155"
                              }
                            },
                            "id": 74153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOfBatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80345,
                            "src": "2708:77:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory,uint256[] memory) view external returns (uint256[] memory)"
                            }
                          },
                          "id": 74157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2708:109:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2669:148:107"
                      },
                      {
                        "assignments": [
                          74163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74163,
                            "mutability": "mutable",
                            "name": "expectedBatchBalances",
                            "nameLocation": "2864:21:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 74198,
                            "src": "2831:54:107",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74161,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2831:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74162,
                              "nodeType": "ArrayTypeName",
                              "src": "2831:9:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74167,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 74165,
                              "name": "batchTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74104,
                              "src": "2939:13:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                "typeString": "struct ConduitBatch1155Transfer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                "typeString": "struct ConduitBatch1155Transfer memory"
                              }
                            ],
                            "id": 74164,
                            "name": "getExpectedBatchTokenBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73536,
                            "src": "2888:29:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (struct ConduitBatch1155Transfer memory) view returns (uint256[] memory)"
                            }
                          },
                          "id": 74166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2888:82:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2831:139:107"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 74173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 74169,
                                  "name": "actualBatchBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74148,
                                  "src": "3012:19:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 74170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3012:26:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 74171,
                                  "name": "expectedBatchBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74163,
                                  "src": "3042:21:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 74172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3042:28:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3012:58:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 74168,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              10427,
                              10448
                            ],
                            "referencedDeclaration": 10427,
                            "src": "2984:10:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 74174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:100:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74175,
                        "nodeType": "ExpressionStatement",
                        "src": "2984:100:107"
                      },
                      {
                        "body": {
                          "id": 74196,
                          "nodeType": "Block",
                          "src": "3156:91:107",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 74188,
                                      "name": "actualBatchBalances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74148,
                                      "src": "3183:19:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74190,
                                    "indexExpression": {
                                      "id": 74189,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74177,
                                      "src": "3203:1:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3183:22:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 74191,
                                      "name": "expectedBatchBalances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74163,
                                      "src": "3207:21:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74193,
                                    "indexExpression": {
                                      "id": 74192,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74177,
                                      "src": "3229:1:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3207:24:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 74187,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    12583,
                                    12608,
                                    12621,
                                    12637,
                                    12697,
                                    12757,
                                    12819,
                                    12881,
                                    10478,
                                    10503,
                                    10533,
                                    10558,
                                    10617,
                                    10642,
                                    10672,
                                    10697,
                                    11797,
                                    11832
                                  ],
                                  "referencedDeclaration": 10672,
                                  "src": "3174:8:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 74194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3174:58:107",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74195,
                              "nodeType": "ExpressionStatement",
                              "src": "3174:58:107"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74180,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74177,
                            "src": "3119:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 74181,
                              "name": "actualBatchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74148,
                              "src": "3123:19:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3123:26:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3119:30:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74197,
                        "initializationExpression": {
                          "assignments": [
                            74177
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74177,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "3112:1:107",
                              "nodeType": "VariableDeclaration",
                              "scope": 74197,
                              "src": "3104:9:107",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74176,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3104:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74179,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3116:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3104:13:107"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 74185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "3151:3:107",
                            "subExpression": {
                              "id": 74184,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74177,
                              "src": "3153:1:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74186,
                          "nodeType": "ExpressionStatement",
                          "src": "3151:3:107"
                        },
                        "nodeType": "ForStatement",
                        "src": "3099:148:107"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74094,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74091,
                      "src": "2262:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74095,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74069,
                          "src": "2266:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                            "typeString": "struct ConduitExecuteBatch1155Test.Context memory"
                          }
                        },
                        "id": 74096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchTransfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73961,
                        "src": "2266:22:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      },
                      "id": 74097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2266:29:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2262:33:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74199,
                  "initializationExpression": {
                    "assignments": [
                      74091
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74091,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2255:1:107",
                        "nodeType": "VariableDeclaration",
                        "scope": 74199,
                        "src": "2247:9:107",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2247:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74093,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2259:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2247:13:107"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2297:3:107",
                      "subExpression": {
                        "id": 74099,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74091,
                        "src": "2299:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74101,
                    "nodeType": "ExpressionStatement",
                    "src": "2297:3:107"
                  },
                  "nodeType": "ForStatement",
                  "src": "2242:1015:107"
                }
              ]
            },
            "functionSelector": "b3391824",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74071,
                  "name": "stateless",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76985,
                  "src": "2048:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:9:107"
              }
            ],
            "name": "executeBatch1155",
            "nameLocation": "1998:16:107",
            "parameters": {
              "id": 74070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74069,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "2030:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 74201,
                  "src": "2015:22:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Context_$73962_memory_ptr",
                    "typeString": "struct ConduitExecuteBatch1155Test.Context"
                  },
                  "typeName": {
                    "id": 74068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74067,
                      "name": "Context",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73962,
                      "src": "2015:7:107"
                    },
                    "referencedDeclaration": 73962,
                    "src": "2015:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Context_$73962_storage_ptr",
                      "typeString": "struct ConduitExecuteBatch1155Test.Context"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:24:107"
            },
            "returnParameters": {
              "id": 74073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:0:107"
            },
            "scope": 74202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73947,
              "name": "BaseConduitTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 73670,
              "src": "763:15:107"
            },
            "id": 73948,
            "nodeType": "InheritanceSpecifier",
            "src": "763:15:107"
          }
        ],
        "canonicalName": "ConduitExecuteBatch1155Test",
        "contractDependencies": [
          9875
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74202,
          73670,
          77111,
          81618,
          77085,
          80666,
          75801,
          78847,
          77034,
          13266,
          11973,
          11944
        ],
        "name": "ConduitExecuteBatch1155Test",
        "nameLocation": "732:27:107",
        "scope": 74203,
        "usedErrors": [
          76977
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 107
}