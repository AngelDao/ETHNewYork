{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "RevertWithFailureStatus",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_deployAndConfigurePrecompiledOptimizedConsideration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_deployAndConfigurePrecompiledReferenceConsideration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalConsiderationItems",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderParameters",
          "name": "orderParameters",
          "type": "tuple"
        },
        {
          "internalType": "address payable",
          "name": "offerer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        }
      ],
      "name": "createMirrorOrderParameters",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalConsiderationItems",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderParameters",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract Conduit",
              "name": "conduit",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ConduitItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ConduitTransfer[]",
              "name": "transfers",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ConduitBatch1155Transfer[]",
              "name": "batchTransfers",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ConduitExecuteWithBatch1155Test.Context",
          "name": "context",
          "type": "tuple"
        }
      ],
      "name": "executeWithBatch1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "identifier",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint8",
                  "name": "numTokenIds",
                  "type": "uint8"
                }
              ],
              "internalType": "struct BaseConduitTest.ConduitTransferIntermediate[10]",
              "name": "transferIntermediates",
              "type": "tuple[10]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct BaseConduitTest.IdAmount[10]",
                  "name": "idAmounts",
                  "type": "tuple[10]"
                }
              ],
              "internalType": "struct BaseConduitTest.BatchIntermediate[10]",
              "name": "batchIntermediates",
              "type": "tuple[10]"
            }
          ],
          "internalType": "struct ConduitExecuteWithBatch1155Test.FuzzInputs",
          "name": "inputs",
          "type": "tuple"
        }
      ],
      "name": "testExecuteWithBatch1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "734:4347:108:-:0;;;1572:26:56;;;-1:-1:-1;;1572:26:56;1594:4;1572:26;;;-1:-1:-1;;;218:101:115;;434:66;403:97;;734:4347:108;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "734:4347:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:295:105;;;:::i;:::-;;1627:116:58;;;;;;:::i;:::-;;:::i;1294:1429:108:-;;;;;;:::i;:::-;;:::i;206:217:117:-;;;;;;:::i;:::-;;:::i;:::-;;;8216:66:125;8204:79;;;8186:98;;8174:2;8159:18;206:217:117;;;;;;;;974:96:58;;;;;;:::i;:::-;;:::i;1188:120::-;;;;;;:::i;:::-;;:::i;4647:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10733:55:125;;;10715:74;;10703:2;10688:18;4647:455:58;10569:226:125;826:85:58;;;;;;:::i;:::-;;:::i;288:38:57:-;;217:64;288:38;;1998:140:58;;;;;;:::i;:::-;;:::i;8620:950:121:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2396:762:113:-;;;:::i;3919:568:58:-;;;;;;:::i;:::-;;:::i;:::-;;;21267:25:125;;;21255:2;21240:18;3919:568:58;21121:177:125;2885:107:58;;;;;;:::i;:::-;;:::i;1515:106::-;;;;;;:::i;:::-;;:::i;3277:916:113:-;;;:::i;2998:915:58:-;;;;;;:::i;:::-;;:::i;5108:406::-;;;;;;:::i;:::-;;:::i;1314:130::-;;;;;;:::i;:::-;;:::i;737:83::-;;;;;;:::i;:::-;;:::i;1819:584:56:-;;;:::i;:::-;;;22515:14:125;;22508:22;22490:41;;22478:2;22463:18;1819:584:56;22350:187:125;453:271:116;;;;;;:::i;:::-;665:52;453:271;;;;;;;;;;;2680:81:58;;;;;;:::i;:::-;;:::i;2729:2350:108:-;;;;;;:::i;:::-;;:::i;1862:130:58:-;;;;;;:::i;:::-;;:::i;2290:297::-;;;;;;:::i;:::-;;:::i;1076:106::-;;;;;;:::i;:::-;;:::i;210:237:116:-;;;;;;:::i;:::-;393:47;210:237;;;;;;;;;1572:26:56;;;;;;;;;1353:295:105;1404:13;:11;:13::i;:::-;1427:17;;1467:7;;1427:70;;;;;-1:-1:-1;;;;;1467:7:105;;;1427:70;;;30726:34:125;1485:4:105;30776:18:125;;;30769:43;1427:17:105;30828:18:125;;;30821:50;1427:17:105;;;:31;;30638:18:125;;1427:70:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:26:105;;1569:16;;1507:134;;;;;-1:-1:-1;;;;;1569:16:105;;;1507:134;;;30726:34:125;1608:4:105;30776:18:125;;;30769:43;1507:26:105;30828:18:125;;;30821:50;1507:26:105;;;-1:-1:-1;1507:40:105;;-1:-1:-1;30638:18:125;;1507:134:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:295::o;1627:116:58:-;1690:18;;;;;-1:-1:-1;;;;;31074:55:125;;1690:18:58;;;31056:74:125;31146:18;;;31139:34;;;217:64:57;;1690:7:58;;31029:18:125;;1690::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1718:18:58;;;;;-1:-1:-1;;;;;10733:55:125;;1718:18:58;;;10715:74:125;217:64:57;;-1:-1:-1;1718:13:58;;-1:-1:-1;10688:18:125;;1718::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:116;;:::o;1294:1429:108:-;1408:24;;;1371:34;1408:24;;;;;;;;;1371:34;1408:24;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:24:108;;-1:-1:-1;;1408:24:108;;;;;;;;;;;;1371:61;;1447:7;1442:293;1464:35;1460:39;;;;1442:293;;;1532:192;1576:9;1603:107;1661:6;:28;;;1690:1;1661:31;;;;;;;;;:::i;:::-;;;;;1603:36;:107::i;:::-;1532:26;:192::i;:::-;1520:204;-1:-1:-1;1501:3:108;;;:::i;:::-;;;1442:293;;;-1:-1:-1;1808:33:108;;;1745:60;1808:33;;;;;;;;;1745:60;1808:33;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:33:108;;-1:-1:-1;;1808:33:108;;;;;;;;;;;;1745:96;;1856:7;1851:305;1873:32;1869:36;;;;1851:305;;;1943:202;1987:14;2019:112;2085:6;:25;;;2111:1;2085:28;;;;;;;;;:::i;:::-;;;;;2019:44;:112::i;:::-;1943:26;:202::i;:::-;1926:219;-1:-1:-1;1907:3:108;;;:::i;:::-;;;1851:305;;;;2165:29;2184:9;2165:18;:29::i;:::-;2204:34;2223:14;2204:18;:34::i;:::-;2248:51;2289:9;2248:40;:51::i;:::-;2309:38;2337:9;2309:27;:38::i;:::-;2357:56;2398:14;2357:40;:56::i;:::-;2423:43;2451:14;2423:27;:43::i;:::-;2534:52;;;;;;;;2542:16;;-1:-1:-1;;;;;2542:16:108;2534:52;;;;;;;;;;;;;;2477:119;;2495:4;;:25;;2477:4;:119::i;:::-;2663:43;;;;;;;;2671:7;;-1:-1:-1;;;;;2671:7:108;2663:43;;;;;;;;;;;;;;2606:110;;2624:4;;:25;;2606:4;:110::i;:::-;1361:1362;;1294:1429;:::o;206:217:117:-;371:45;206:217;;;;;;;;:::o;974:96:58:-;1018:22;;;;;-1:-1:-1;;;;;31074:55:125;;1018:22:58;;;31056:74:125;1031:8:58;31146:18:125;;;31139:34;217:64:57;;1018:7:58;;31029:18:125;;1018:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1050:13:58;;;;;-1:-1:-1;;;;;10733:55:125;;1050:13:58;;;10715:74:125;217:64:57;;-1:-1:-1;1050:8:58;;-1:-1:-1;10688:18:125;;1050:13:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:96;:::o;1188:120::-;1248:22;;;;;-1:-1:-1;;;;;31074:55:125;;1248:22:58;;;31056:74:125;1261:8:58;31146:18:125;;;31139:34;217:64:57;;1248:7:58;;31029:18:125;;1248:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1280:21:58;;;;;-1:-1:-1;;;;;32343:15:125;;;1280:21:58;;;32325:34:125;32395:15;;32375:18;;;32368:43;217:64:57;;-1:-1:-1;1280:8:58;;-1:-1:-1;32237:18:125;;1280:21:58;32090:327:125;4647:455:58;4807:16;;;;;4738:12;;;;217:64:57;;4807:10:58;;:16;;4818:4;;4807:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4807:16:58;;;;;;;;;;;;:::i;:::-;4825:4;4790:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4766:64;;4951:8;4945:15;4938:4;4928:8;4924:19;4921:1;4914:47;4906:55;-1:-1:-1;;;;;;5002:18:58;;4981:114;;;;;;;34445:2:125;4981:114:58;;;34427:21:125;34484:2;34464:18;;;34457:30;34523:34;34503:18;;;34496:62;34594:19;34574:18;;;34567:47;34631:19;;4981:114:58;;;;;;;;;4756:346;4647:455;;;;:::o;826:85::-;217:64:57;873:7:58;881:22;899:4;881:15;:22;:::i;:::-;873:31;;;;;;;;;;;;;21267:25:125;;21255:2;21240:18;;21121:177;1998:140:58;2077:18;;;;;-1:-1:-1;;;;;31074:55:125;;2077:18:58;;;31056:74:125;31146:18;;;31139:34;;;217:64:57;;2077:7:58;;31029:18:125;;2077::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2105:26:58;;;;;-1:-1:-1;;;;;32343:15:125;;;2105:26:58;;;32325:34:125;32395:15;;32375:18;;;32368:43;217:64:57;;-1:-1:-1;2105:13:58;;-1:-1:-1;32237:18:125;;2105:26:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:140;;;:::o;8620:950:121:-;8815:22;;:::i;:::-;8849:30;8882:65;8908:15;:29;;;8882:12;:65::i;:::-;8849:98;;8957:46;9006:86;9040:15;:21;;;9075:7;9006:20;:86::i;:::-;8957:135;;9103:45;9151:373;;;;;;;;9180:7;-1:-1:-1;;;;;9151:373:121;;;;;9201:4;-1:-1:-1;;;;;9151:373:121;;;;;9219:11;9151:373;;;;9244:19;9151:373;;;;9277:15;:25;;;9151:373;;;;;;;;:::i;:::-;;;;;9316:15;:25;;;9151:373;;;;9355:15;:23;;;9151:373;;;;9392:15;:24;;;9151:373;;;;9430:15;:20;;;9151:373;;;;9464:10;9151:373;;;;9488:19;:26;9151:373;;;9103:421;;9541:22;9534:29;;;;;8620:950;;;;;;:::o;2396:762:113:-;2528:102;;;;;;;;;;;;;;;;;;:10;:102::i;:::-;2477:17;;:163;;;;;-1:-1:-1;;;;;2477:163:113;;;;;-1:-1:-1;;;;;2477:163:113;;;;;;2702:150;;;;;;;;;;;;;;;;;;2819:17;;2800:38;;;-1:-1:-1;;;;;2819:17:113;;;2800:38;;;10715:74:125;10688:18;2800:38:113;;;;;;;;;;;;;2702:10;:150::i;:::-;2650:13;:212;;;;-1:-1:-1;;;;;2650:212:113;;;;;;2945:17;;2977:13;;2945:61;;;;;;;;34965:25:125;;;;3000:4:113;35006:18:125;;;34999:83;2945:17:113;;;:31;;34938:18:125;;2945:61:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2914:7;:102;;;;-1:-1:-1;;;;;2914:102:113;;;;;;;;;3026:17;;3109:13;;3026:125;;;;;;;;30726:34:125;;;;3109:13:113;;30776:18:125;;;30769:43;-1:-1:-1;30828:18:125;;;30821:50;3026:17:113;;;;:31;;30638:18:125;;3026:125:113;30469:408:125;3919:568:58;3987:14;4028:3;4021;:10;;4013:81;;;;;;;35551:2:125;4013:81:58;;;35533:21:125;35590:2;35570:18;;;35563:30;35629:34;35609:18;;;35602:62;35700:28;35680:18;;;35673:56;35746:19;;4013:81:58;35349:422:125;4013:81:58;4105:12;4120:9;4126:3;4120;:9;:::i;:::-;4105:24;;4144:4;4152:1;4144:9;4140:287;;4186:3;4177:12;;4140:287;;;-1:-1:-1;;4218:4:58;:19;4214:213;;4270:1;4261:10;;4214:213;;;4318:6;;;:::i;:::-;;-1:-1:-1;4362:11:58;4376:8;4318:6;4376:1;:8;:::i;:::-;4362:22;-1:-1:-1;4407:9:58;4362:22;4407:3;:9;:::i;:::-;4398:18;;4304:123;4214:213;4442:38;;;36627:21:125;;;36684:2;36664:18;;;36657:30;36723:14;36718:2;36703:18;;36696:42;36805:4;36790:20;;36783:36;;;4442:38:58;;;;;;;36770:3:125;4442:38:58;;;4003:484;3919:568;;;;;:::o;2885:107::-;2957:28;2962:5;2969:2;2973:4;2979:5;2957:4;:28::i;1515:106::-;1564:22;;;;;-1:-1:-1;;;;;31074:55:125;;1564:22:58;;;31056:74:125;1577:8:58;31146:18:125;;;31139:34;217:64:57;;1564:7:58;;31029:18:125;;1564:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1596:18:58;;;;;-1:-1:-1;;;;;10733:55:125;;1596:18:58;;;10715:74:125;217:64:57;;-1:-1:-1;1596:13:58;;-1:-1:-1;10688:18:125;;1596::58;10569:226:125;3277:916:113;3418:120;;;;;;;;;;;;;;;;;;:10;:120::i;:::-;3358:26;;:190;;;;;-1:-1:-1;;;;;3358:190:113;;;;;-1:-1:-1;;;;;3358:190:113;;;;;;3619:177;;;;;;;;;;;;;;;;;;3754:26;;3735:47;;;-1:-1:-1;;;;;3754:26:113;;;3735:47;;;10715:74:125;10688:18;3735:47:113;10569:226:125;3619:177:113;3558:22;:248;;;;-1:-1:-1;;;;;3558:248:113;;;;;;3898:26;;3956:13;;3898:116;;;;;;;;34965:25:125;;;;3995:4:113;35006:18:125;;;34999:83;3898:26:113;;;:40;;34938:18:125;;3898:116:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3858:16;:166;;;;-1:-1:-1;;;;;3858:166:113;;;;;;;;;4034:26;;4135:22;;4034:152;;;;;;;;30726:34:125;;;;4135:22:113;;30776:18:125;;;30769:43;-1:-1:-1;30828:18:125;;;30821:50;4034:26:113;;;;:40;;30638:18:125;;4034:152:113;30469:408:125;2998:915:58;3152:38;;;-1:-1:-1;;;;;10733:55:125;;;3152:38:58;;;;10715:74:125;;;;3152:38:58;;;;;;;;;;10688:18:125;;;;3152:38:58;;;;;;;;;;;;;3141:50;;3117:20;;3141:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3114:77;;;3201:15;3230:7;3219:30;;;;;;;;;;;;:::i;:::-;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;3201:48;-1:-1:-1;3286:123:58;3404:4;3286:90;3373:2;3286:64;;-1:-1:-1;3286:35:58;:52;19139:9;;;:16;;;;;;;;;;;;;;;:9;19040:143;3286:64;:86;19455:10;;;:47;;;;;;;-1:-1:-1;19455:47:58;;;;;;;-1:-1:-1;;;;;19479:21:58;;;;19455:47;;;:10;19351:179;3286:90;:117;;:123::i;:::-;3454:6;3451:456;;;3516:34;;;;;;;;;;;;;;;;;;;;;;3505:46;;3478:23;;-1:-1:-1;;;;;3505:10:58;;;:46;;3516:34;3505:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3475:76;;;3565:14;3593:10;3582:33;;;;;;;;;;;;:::i;:::-;3565:50;;3639:7;3632:4;:14;3629:143;;;3677:14;3687:4;3677:7;:14;:::i;:::-;3666:26;;;;:::i;:::-;;;3629:143;;;3742:14;3749:7;3742:4;:14;:::i;:::-;3731:26;;;;:::i;:::-;;;3629:143;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;3785:111;3889:6;3785:72;;-1:-1:-1;3785:39:58;18878:156;3785:111;3461:446;;3073:840;;2998:915;;;;:::o;5108:406::-;5232:16;;;;;5180:12;;;;217:64:57;;5232:10:58;;:16;;5243:4;;5232:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5232:16:58;;;;;;;;;;;;:::i;:::-;5208:40;;5369:8;5363:15;5356:4;5346:8;5342:19;5339:1;5332:47;5324:55;-1:-1:-1;;;;;;5420:18:58;;5399:108;;;;;;;37500:2:125;5399:108:58;;;37482:21:125;37539:2;37519:18;;;37512:30;37578:34;37558:18;;;37551:62;37649:13;37629:18;;;37622:41;37680:19;;5399:108:58;37298:407:125;5399:108:58;5198:316;5108:406;;;:::o;1314:130::-;1388:18;;;;;-1:-1:-1;;;;;31074:55:125;;1388:18:58;;;31056:74:125;31146:18;;;31139:34;;;217:64:57;;1388:7:58;;31029:18:125;;1388::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1416:21:58;;;;;-1:-1:-1;;;;;32343:15:125;;;1416:21:58;;;32325:34:125;32395:15;;32375:18;;;32368:43;217:64:57;;-1:-1:-1;1416:8:58;;-1:-1:-1;32237:18:125;;1416:21:58;32090:327:125;737:83:58;217:64:57;782:7:58;790:22;808:4;790:15;:22;:::i;1819:584:56:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:56;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;31056:74:125;;;2221:17:56;31146:18:125;;;31139:34;2196:43:56;;;;;;;;;31029:18:125;;;2196:43:56;;;-1:-1:-1;;1671:64:56;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:56;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:56:o;2680:81:58:-;2737:17;;;;;-1:-1:-1;;;;;31074:55:125;;2737:17:58;;;31056:74:125;31146:18;;;31139:34;;;217:64:57;;2737:7:58;;31029:18:125;;2737:17:58;30882:297:125;2729:2350:108;2832:15;;2882:17:::1;::::0;::::1;::::0;2913:22:::1;::::0;;::::1;::::0;2832:113;;;;;2812:17:::1;::::0;-1:-1:-1;;;;;2832:36:108::1;::::0;::::1;::::0;:113:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2812:133:::0;-1:-1:-1;2955:59:108::1;::::0;;::::1;2976:37:::0;2955:8:::1;:59::i;:::-;3030:9;3025:1023;3049:7;:17;;;:24;3045:1;:28;3025:1023;;;3094:31;3128:7;:17;;;3146:1;3128:20;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;3189:17;;3128:20;;-1:-1:-1;3225:36:108::1;3189:17:::0;3234:26:::1;::::0;::::1;;;;;;:::i;:::-;3225:36;::::0;21267:25:125;;;21255:2;21240:18;3225:36:108::1;;;;;;;3292:21;3280:8;:33;;;;;;;;:::i;:::-;::::0;3276:762:::1;;3373:14;::::0;::::1;::::0;3399:11:::1;::::0;::::1;::::0;3363:48:::1;::::0;;;;-1:-1:-1;;;;;10733:55:125;;;3363:48:108::1;::::0;::::1;10715:74:125::0;3333:151:108::1;::::0;3363:35;;;::::1;::::0;::::1;::::0;10688:18:125;;3363:48:108::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11663:11:105::0;;;;-1:-1:-1;;;;;11626:49:105;;;11584:7;11626:49;;;:36;:49;;;;;;;;11676:14;;;;11626:65;;;;;;;;;;;11709:19;;;;11626:116;;;;;;3333:8:108::1;:151::i;:::-;3276:762;;;3521:23;3509:8;:35;;;;;;;;:::i;:::-;::::0;3505:533:::1;;3606:14;::::0;::::1;::::0;3657:11:::1;::::0;::::1;::::0;3694:19:::1;::::0;::::1;::::0;3594:141:::1;::::0;;;;3564:244:::1;::::0;-1:-1:-1;;;;;3594:37:108::1;::::0;::::1;::::0;:141:::1;::::0;::::1;;-1:-1:-1::0;;;;;31074:55:125;;;;31056:74;;31161:2;31146:18;;31139:34;31044:2;31029:18;;30882:297;3505:533:108::1;3845:22;3833:8;:34;;;;;;;;:::i;:::-;::::0;3829:209:::1;;3928:14;::::0;::::1;::::0;3952:19:::1;::::0;::::1;::::0;3917:55:::1;::::0;;;;::::1;::::0;::::1;21267:25:125::0;;;;3887:136:108::1;::::0;-1:-1:-1;;;;;3917:34:108::1;::::0;::::1;::::0;21240:18:125;;3917:55:108::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3994:8;:11;;;3887:8;:136::i;:::-;3080:968;;3075:3;;;;:::i;:::-;;;3025:1023;;;;4063:9;4058:1015;4082:7;:22;;;:29;4078:1;:33;4058:1015;;;4132:45;4180:7;:39;;;4220:1;4180:42;;;;;;;;:::i;:::-;;;;;;;4132:90;;4237:28;4299:13;:17;;;:24;4268:69;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4268:69:108::1;;4237:100;;4356:9;4351:121;4375:13;:17;;;:24;4371:1;:28;4351:121;;;4441:13;:16;;;4424:11;4436:1;4424:14;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4424:33:108;;::::1;:14;::::0;;::::1;::::0;;;;;;;:33;4401:3:::1;::::0;::::1;:::i;:::-;;;4351:121;;;-1:-1:-1::0;4553:19:108;;4615:17:::1;::::0;::::1;::::0;4524:109:::1;::::0;;;;4485:36:::1;::::0;-1:-1:-1;;;;;4524:77:108::1;::::0;::::1;::::0;:109:::1;::::0;4602:11;;4524:109:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4524:109:108::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4485:148;;4647:54;4704:82;4755:13;4704:29;:82::i;:::-;4647:139;;4800:100;4858:21;:28;4828:19;:26;:58;4800:10;:100::i;:::-;4920:9;4915:148;4939:19;:26;4935:1;:30;4915:148;;;4990:58;4999:19;5019:1;4999:22;;;;;;;;:::i;:::-;;;;;;;5023:21;5045:1;5023:24;;;;;;;;:::i;:::-;;;;;;;4990:8;:58::i;:::-;4967:3;::::0;::::1;:::i;:::-;;;4915:148;;;;4118:955;;;;4113:3;;;;:::i;:::-;;;4058:1015;;;;2802:2277;695:25:115::0;:23;:25::i;:::-;2729:2350:108;:::o;1862:130:58:-;1927:22;;;;;-1:-1:-1;;;;;31074:55:125;;1927:22:58;;;31056:74:125;1940:8:58;31146:18:125;;;31139:34;217:64:57;;1927:7:58;;31029:18:125;;1927:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1959:26:58;;;;;-1:-1:-1;;;;;32343:15:125;;;1959:26:58;;;32325:34:125;32395:15;;32375:18;;;32368:43;217:64:57;;-1:-1:-1;1959:13:58;;-1:-1:-1;32237:18:125;;1959:26:58;32090:327:125;2290:297:58;2366:81;;;;;44556:2:125;44538:21;;;44595:2;44575:18;;;44568:30;44634:34;44629:2;44614:18;;44607:62;44705:29;44700:2;44685:18;;44678:57;44767:3;44752:19;;44354:423;2366:81:58;;;;;;;;18984:12;:22;;;;-1:-1:-1;;;;;18984:22:58;;;;;2457:123;2575:4;2457:90;2544:2;2457:64;;-1:-1:-1;2457:35:58;18878:156;1076:106;1134:18;;;;;-1:-1:-1;;;;;31074:55:125;;1134:18:58;;;31056:74:125;31146:18;;;31139:34;;;217:64:57;;1134:7:58;;31029:18:125;;1134::58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:13:58;;;;;-1:-1:-1;;;;;10733:55:125;;1162:13:58;;;10715:74:125;217:64:57;;-1:-1:-1;1162:8:58;;-1:-1:-1;10688:18:125;;1162:13:58;10569:226:125;1476:789:113;1566:4;1577:2;1542:37;1518:13;:62;1590:54;:52;:54::i;:::-;1660:50;;;;;44984:2:125;44966:21;;;45023:2;45003:18;;;44996:30;45062:34;45057:2;45042:18;;45035:62;45133:13;45128:2;45113:18;;45106:41;45179:3;45164:19;;44782:407;1660:50:113;;;;;;;;1720:54;:52;:54::i;:::-;1802:17;;1785:57;;;;;;-1:-1:-1;;;;;1802:17:113;;;1785:57;;;45406:74:125;45496:18;;;45489:30;45555:2;45535:18;;;45528:30;45594:19;45574:18;;;45567:47;217:64:57;;1785:8:113;;45631:19:125;;1785:57:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1869:13:113;;1852:49;;;;;;-1:-1:-1;;;;;1869:13:113;;;1852:49;;;45873:74:125;45963:18;;;45956:30;46022:2;46002:18;;;45995:30;46061:15;46041:18;;;46034:43;217:64:57;;-1:-1:-1;1852:8:113;;-1:-1:-1;46094:19:125;;1852:49:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1928:7:113;;1911:37;;;;;;-1:-1:-1;;;;;1928:7:113;;;1911:37;;;46336:74:125;46426:18;;;46419:30;46485:1;46465:18;;;46458:29;46523:9;46503:18;;;46496:37;217:64:57;;-1:-1:-1;1911:8:113;;-1:-1:-1;46550:19:125;;1911:37:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1988:26:113;;1958:109;;;;;;-1:-1:-1;;;;;1988:26:113;;;1958:109;;;46792:74:125;46882:18;;;46875:30;46941:2;46921:18;;;46914:30;46980:28;46960:18;;;46953:56;217:64:57;;-1:-1:-1;1958:8:113;;-1:-1:-1;47026:19:125;;1958:109:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2094:22:113;;2077:67;;;;;;-1:-1:-1;;;;;2094:22:113;;;2077:67;;;47268:74:125;47358:18;;;47351:30;47417:2;47397:18;;;47390:30;47456:24;47436:18;;;47429:52;217:64:57;;-1:-1:-1;2077:8:113;;-1:-1:-1;47498:19:125;;2077:67:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2171:16:113;;2154:55;;;;;;-1:-1:-1;;;;;2171:16:113;;;2154:55;;;47740:74:125;47830:18;;;47823:30;47889:2;47869:18;;;47862:30;47928:18;47908;;;47901:46;217:64:57;;-1:-1:-1;2154:8:113;;-1:-1:-1;47964:19:125;;2154:55:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2219:39:113;;;;;;2236:4;2219:39;;;48206:74:125;48296:18;;;48289:30;;;;48355:2;48335:18;;;48328:30;48394:14;48374:18;;;48367:42;217:64:57;;-1:-1:-1;2219:8:113;;-1:-1:-1;48426:19:125;;2219:39:113;47994:457:125;5960:789:105;6087:24;6123;6204:1;6180:12;:21;;;:25;;;;:::i;:::-;6179:31;;6209:1;6179:31;:::i;:::-;6150:70;;;;;;;;;;:::i;:::-;6123:97;-1:-1:-1;6230:13:105;6269:21;6257:8;:33;;;;;;;;:::i;:::-;;6253:266;;6322:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6306:32;;6253:266;;;6371:23;6359:8;:35;;;;;;;;:::i;:::-;;6355:164;;6426:17;;;;;:::i;6355:164::-;6491:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6475:33;;6355:164;6548:194;6599:12;6629:5;6652:8;6678:12;:17;;;6713:12;:15;;;6548:33;:194::i;:::-;6529:213;5960:789;-1:-1:-1;;;;5960:789:105:o;4587:569::-;4739:24;4775:34;4865:9;:16;4847:8;:15;:34;;;;:::i;:::-;4812:79;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4812:79:105;;-1:-1:-1;;4812:79:105;;;;;;;;;;;;4775:116;;4906:9;4901:97;4925:8;:15;4921:1;:19;4901:97;;;4976:8;4985:1;4976:11;;;;;;;;:::i;:::-;;;;;;;4961:9;4971:1;4961:12;;;;;;;;:::i;:::-;;;;;;:26;;;;4942:3;;;;:::i;:::-;;;4901:97;;;;5012:9;5007:117;5031:9;:16;5027:1;:20;5007:117;;;5101:9;5111:1;5101:12;;;;;;;;:::i;:::-;;;;;;;5068:9;5082:8;:15;5078:1;:19;;;;:::i;:::-;5068:30;;;;;;;;:::i;:::-;;;;;;:45;;;;5049:3;;;;:::i;:::-;;;5007:117;;;-1:-1:-1;5140:9:105;-1:-1:-1;4587:569:105;;;;;:::o;6755:1058::-;6885:33;6930:48;6989:19;7011:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7061:71:105;;;7088:34;7061:71;;;;;;;;;6989:39;;-1:-1:-1;7038:20:105;;7061:71;;;;;;;;;-1:-1:-1;;7169:71:105;;;7196:34;7169:71;;;;;;;;;7038:94;;-1:-1:-1;7142:24:105;;7169:71;-1:-1:-1;7169:71:105;;;;;;;;;;-1:-1:-1;7169:71:105;7142:98;;7255:9;7250:209;7274:34;7270:38;;7250:209;;;7338:17;:27;;;7366:1;7338:30;;;;;;;:::i;:::-;;;;;:33;;;7329:3;7333:1;7329:6;;;;;;;;:::i;:::-;;;;;;:42;;;;;7406:17;:27;;;7434:1;7406:30;;;;;;;:::i;:::-;;;;;:37;;;7398:46;;7447:1;7398:50;;;;:::i;:::-;7385:7;7393:1;7385:10;;;;;;;;:::i;:::-;;;;;;;;;;:63;7310:3;;;:::i;:::-;;;7250:209;;;-1:-1:-1;7483:22:105;;7528:20;;;;7576:33;;;7607:1;7576:33;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:33:105;;-1:-1:-1;;7576:33:105;;;;;;;;;;;7559:50;;7639:136;;;;;;;;7685:7;-1:-1:-1;;;;;7639:136:105;;;;;7707:4;-1:-1:-1;;;;;7639:136:105;;;;;7725:2;-1:-1:-1;;;;;7639:136:105;;;;;7741:3;7639:136;;;;7758:7;7639:136;;;7619:14;7634:1;7619:17;;;;;;;;:::i;:::-;;;;;;;;;;:156;-1:-1:-1;7792:14:105;;6755:1058;-1:-1:-1;;;;;;6755:1058:105:o;5162:634::-;5332:33;5377:55;5501:9;:16;5483:8;:15;:34;;;;:::i;:::-;5435:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:96:105;;-1:-1:-1;;5435:96:105;;;;;;;;;;;;5377:154;;5546:9;5541:97;5565:8;:15;5561:1;:19;5541:97;;;5616:8;5625:1;5616:11;;;;;;;;:::i;:::-;;;;;;;5601:9;5611:1;5601:12;;;;;;;;:::i;:::-;;;;;;:26;;;;5582:3;;;;:::i;:::-;;;5541:97;;;;5652:9;5647:117;5671:9;:16;5667:1;:20;5647:117;;;5741:9;5751:1;5741:12;;;;;;;;:::i;:::-;;;;;;;5708:9;5722:8;:15;5718:1;:19;;;;:::i;:::-;5708:30;;;;;;;;:::i;:::-;;;;;;:45;;;;5689:3;;;;:::i;:::-;;;5647:117;;8078:405;8166:9;8161:316;8181:9;:16;8177:1;:20;8161:316;;;8218:31;8252:9;8262:1;8252:12;;;;;;;;:::i;:::-;;;;;;;8218:46;;8278:12;8293:42;8302:8;:13;;;8317:8;:17;;;8293:8;:42::i;:::-;8278:57;;8349:10;8362:40;8371:8;:11;;;8384:8;:17;;;8362:8;:40::i;:::-;-1:-1:-1;;;;;8416:20:105;;;:13;;;:20;8450:16;;;:11;;;;:16;;;;-1:-1:-1;8199:3:105;;;:::i;:::-;;;8161:316;;;;8078:405;:::o;8489:587::-;8605:9;8600:470;8620:14;:21;8616:1;:25;8600:470;;;8662:45;8710:14;8725:1;8710:17;;;;;;;;:::i;:::-;;;;;;;8662:65;;8741:12;8756:99;8782:13;:18;;;8818:23;8756:8;:99::i;:::-;8741:114;;8869:10;8882:51;8891:13;:16;;;8909:23;8882:8;:51::i;:::-;-1:-1:-1;;;;;8947:25:105;;;:18;;;:25;8986:21;;:16;;;:21;9036:17;;8869:64;;-1:-1:-1;9021:38:105;;8968:4;;9036:14;;9051:1;;9036:17;;;;;;:::i;:::-;;;;;;;:22;;;9021:8;:38::i;:::-;8648:422;;;8643:3;;;;:::i;:::-;;;8600:470;;9082:1505;9206:9;9201:1380;9225:9;:16;9221:1;:20;9201:1380;;;9262:31;9296:9;9306:1;9296:12;;;;;;;;:::i;:::-;;;;;;;;;;;;9349:17;;9395:13;;;;9438:14;;;;9296:12;;-1:-1:-1;9349:17:105;9395:13;9482:21;9470:8;:33;;;;;;;;:::i;:::-;;9466:1105;;9592:15;;;;9575:33;;;;;-1:-1:-1;;;;;31074:55:125;;;9575:33:105;;;31056:74:125;31146:18;;;31139:34;;;;9551:5:105;;9575:10;;;;;31029:18:125;;9575:33:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9626:19:105;;;;;-1:-1:-1;;;;;10733:55:125;;9626:19:105;;;10715:74:125;217:64:57;;9626:13:105;;10688:18:125;;9626:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9685:7:105;;9663:43;;;;;-1:-1:-1;;;;;9685:7:105;;;9663:43;;;31056:74:125;-1:-1:-1;;31146:18:125;;;31139:34;9663:13:105;;;;-1:-1:-1;9663:13:105;;-1:-1:-1;31029:18:125;;9663:43:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9746:16:105;;9724:52;;;;;-1:-1:-1;;;;;9746:16:105;;;9724:52;;;31056:74:125;-1:-1:-1;;31146:18:125;;;31139:34;9724:13:105;;;;;;31029:18:125;;9724:52:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9794:14:105;;;;;;;;217:64:57;;9794:12:105;;:14;;;;;241:37:57;;9794:14:105;;;;;;;241:37:57;217:64;9794:14:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9505:318;9466:1105;;;9845:23;9833:8;:35;;;;;;;;:::i;:::-;;9829:742;;9965:19;;;;9986:15;;;;9946:56;;;;;-1:-1:-1;;;;;49434:55:125;;;9946:56:105;;;49416:74:125;49506:18;;;49499:34;;;;49549:18;;;49542:34;;;;9922:5:105;;9946:12;;;;;49389:18:125;;9946:56:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10020:19:105;;;;;-1:-1:-1;;;;;10733:55:125;;10020:19:105;;;10715:74:125;217:64:57;;10020:13:105;;10688:18:125;;10020:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10091:7:105;;10057:49;;;;;-1:-1:-1;;;;;10091:7:105;;;10057:49;;;49755:74:125;10091:7:105;49845:18:125;;;49838:50;10057:25:105;;;;-1:-1:-1;10057:25:105;;-1:-1:-1;49728:18:125;;10057:49:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10158:16:105;;10124:58;;;;;-1:-1:-1;;;;;10158:16:105;;;10124:58;;;49755:74:125;10158:16:105;49845:18:125;;;49838:50;10124:25:105;;;;-1:-1:-1;10124:25:105;;-1:-1:-1;49728:18:125;;10124:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10200:14:105;;;;;;;;217:64:57;;-1:-1:-1;10200:12:105;;-1:-1:-1;10200:14:105;;;;;241:37:57;;10200:14:105;;;;;;;241:37:57;217:64;10200:14:105;;;;;;;;;;9829:742;10326:19;;;;10308:38;;;;;-1:-1:-1;;;;;31074:55:125;;;10308:38:105;;;31056:74:125;31146:18;;;31139:34;;;;10284:5:105;;10308:11;;;;;31029:18:125;;10308:38:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10364:19:105;;;;;-1:-1:-1;;;;;10733:55:125;;10364:19:105;;;10715:74:125;217:64:57;;10364:13:105;;10688:18:125;;10364:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10434:16:105;;10401:57;;;;;-1:-1:-1;;;;;10434:16:105;;;10401:57;;;49755:74:125;10434:16:105;49845:18:125;;;49838:50;10401:24:105;;;;-1:-1:-1;10401:24:105;;-1:-1:-1;49728:18:125;;10401:57:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10509:7:105;;10476:48;;;;;-1:-1:-1;;;;;10509:7:105;;;10476:48;;;49755:74:125;10509:7:105;49845:18:125;;;49838:50;10476:24:105;;;;-1:-1:-1;10476:24:105;;-1:-1:-1;49728:18:125;;10476:48:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10542:14:105;;;;;;;;217:64:57;;-1:-1:-1;10542:12:105;;-1:-1:-1;10542:14:105;;;;;241:37:57;;10542:14:105;;;;;;;241:37:57;217:64;10542:14:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10235:336;9829:742;9248:1333;;;;9243:3;;;;:::i;:::-;;;9201:1380;;12293:407;12402:9;12397:297;12421:9;:16;12417:1;:20;12397:297;;;12458:31;12492:9;12502:1;12492:12;;;;;;;;:::i;:::-;;;;;;;;;;;12545:17;;12492:12;;-1:-1:-1;12592:22:105;12580:8;:34;;;;;;;;:::i;:::-;;12576:108;;12634:35;12656:9;12666:1;12656:12;;;;;;;;:::i;:::-;;;;;;;12634:21;:35::i;:::-;12444:250;;12439:3;;;;:::i;:::-;;;12397:297;;10593:872;10731:9;10726:733;10750:14;:21;10746:1;:25;10726:733;;;10792:45;10840:14;10855:1;10840:17;;;;;;;;:::i;:::-;;;;;;;;;;;;10886:18;;;;10934:19;;10840:17;;-1:-1:-1;10886:18:105;10934:19;10871:12;11021:232;11045:13;:17;;;:24;11041:1;:28;11021:232;;;11094:7;-1:-1:-1;;;;;11094:12:105;;11128:4;11154:13;:17;;;11172:1;11154:20;;;;;;;;:::i;:::-;;;;;;;11196:13;:21;;;11218:1;11196:24;;;;;;;;:::i;:::-;;;;;;;;;;;11094:144;;;;;;;;;;-1:-1:-1;;;;;49434:55:125;;;11094:144:105;;;49416:74:125;49506:18;;;49499:34;;;;49549:18;;;49542:34;49389:18;;11094:144:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11071:3:105;;;:::i;:::-;;;11021:232;;;-1:-1:-1;11266:19:105;;;;;-1:-1:-1;;;;;10733:55:125;;11266:19:105;;;10715:74:125;217:64:57;;11266:13:105;;10688:18:125;;11266:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11333:7:105;;11299:49;;;;;-1:-1:-1;;;;;11333:7:105;;;11299:49;;;49755:74:125;11333:7:105;49845:18:125;;;49838:50;11299:25:105;;;;-1:-1:-1;11299:25:105;;-1:-1:-1;49728:18:125;;11299:49:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11396:16:105;;11362:58;;;;;-1:-1:-1;;;;;11396:16:105;;;11362:58;;;49755:74:125;11396:16:105;49845:18:125;;;49838:50;11362:25:105;;;;-1:-1:-1;11362:25:105;;-1:-1:-1;49728:18:125;;11362:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11434:14:105;;;;;;;;217:64:57;;-1:-1:-1;11434:12:105;;-1:-1:-1;11434:14:105;;;;;241:37:57;;11434:14:105;;;;;;;241:37:57;217:64;11434:14:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10778:681;;;;10773:3;;;;:::i;:::-;;;10726:733;;12706:249;12831:9;12826:123;12850:14;:21;12846:1;:25;12826:123;;;12892:46;12920:14;12935:1;12920:17;;;;;;;;:::i;:::-;;;;;;;12892:27;:46::i;:::-;12873:3;;;:::i;:::-;;;12826:123;;1085:203:108;1196:2;;1199:7;1196:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:18;1264:6;1253:10;:18::i;7949:665:121:-;8066:18;8100:30;8162:19;:26;8133:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8133:65:121;;;;;;;;;;;;;;;;;8100:98;;8213:9;8208:372;8232:11;:18;8228:1;:22;8208:372;;;8288:281;;;;;;;;8315:19;8335:1;8315:22;;;;;;;;:::i;:::-;;;;;;;:31;;;8288:281;;;;;;;;:::i;:::-;;;;;8364:19;8384:1;8364:22;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1;;;;;8288:281:121;;;;;8410:19;8430:1;8410:22;;;;;;;;:::i;:::-;;;;;;;:43;;;8288:281;;;;8471:19;8491:1;8471:22;;;;;;;;:::i;:::-;;;;;;;:34;;;8288:281;;;;8523:19;8543:1;8523:22;;;;;;;;:::i;:::-;;;;;;;:32;;;8288:281;;;8271:11;8283:1;8271:14;;;;;;;;:::i;:::-;;;;;;:298;;;;8252:3;;;;;:::i;:::-;;;;8208:372;;7235:708;7368:26;7406:45;7491:11;:18;7454:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7454:65:121;;-1:-1:-1;;7454:65:121;;;;;;;;;;;;7406:113;;7534:9;7529:373;7553:11;:18;7549:1;:22;7529:373;;;7616:275;;;;;;;;7651:11;7663:1;7651:14;;;;;;;;:::i;:::-;;;;;;;:23;;;7616:275;;;;;;;;:::i;:::-;;;;;7692:11;7704:1;7692:14;;;;;;;;:::i;:::-;;;;;;;:20;;;-1:-1:-1;;;;;7616:275:121;;;;;7730:11;7742:1;7730:14;;;;;;;;:::i;:::-;;;;;;;:35;;;7616:275;;;;7783:11;7795:1;7783:14;;;;;;;;:::i;:::-;;;;;;;:26;;;7616:275;;;;7827:11;7839:1;7827:14;;;;;;;;:::i;:::-;;;;;;;:24;;;7616:275;;;;7869:8;-1:-1:-1;;;;;7616:275:121;;;;7592:18;7611:1;7592:21;;;;;;;;:::i;:::-;;;;;;:299;;;;7573:3;;;;:::i;:::-;;;7529:373;;20162:120:58;20242:33;20256:4;20270:3;20242:13;:33::i;4088:277:56:-;4156:1;4151;:6;4147:212;;4178:44;;;;;50868:2:125;50850:21;;;50907:2;50887:18;;;50880:30;50946:34;50941:2;50926:18;;50919:62;51017:7;51012:2;50997:18;;50990:35;51057:3;51042:19;;50666:401;4178:44:56;;;;;;;;4241:34;4273:1;4241:34;;;;;;:::i;:::-;;;;;;;;4294;4326:1;4294:34;;;;;;:::i;:::-;;;;;;;;4342:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;52308:2:125;52290:21;;;52347:2;52327:18;;;52320:30;52386:34;52381:2;52366:18;;52359:62;52457:4;52452:2;52437:18;;52430:32;52494:3;52479:19;;52106:398;5286:41:56;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:56;:1;-1:-1:-1;;;;;3678:6:56;;3674:212;;3705:44;;;;;53417:2:125;53399:21;;;53456:2;53436:18;;;53429:30;53495:34;53490:2;53475:18;;53468:62;53566:7;53561:2;53546:18;;53539:35;53606:3;53591:19;;53215:401;3705:44:56;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;11755:532:105:-;11878:16;11906:35;11971:13;:17;;;:24;11944:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11944:61:105;;11906:99;;12020:9;12015:231;12039:13;:17;;;:24;12035:1;:28;12015:231;;;12162:16;;;;;-1:-1:-1;;;;;12108:84:105;;;;;;;:36;:84;;;;;;;12193:19;;12108:105;;;;;;;;;;;;12214:17;;;;:20;;12108:105;;:84;12232:1;;12214:20;;;;;;:::i;:::-;;;;;;;12108:127;;;;;;;;;;;;12084:18;12103:1;12084:21;;;;;;;;:::i;:::-;;;;;;;;;;:151;12065:3;;;:::i;:::-;;;12015:231;;3255:157:56;3315:9;3310:96;;3345:30;;;;;54627:2:125;54609:21;;;54666:2;54646:18;;;54639:30;54705:25;54700:2;54685:18;;54678:53;54763:2;54748:18;;54425:347;3345:30:56;;;;;;;;3389:6;:4;:6::i;882:114:115:-;967:21;:19;:21::i;:::-;943:46;;;;;22515:14:125;;22508:22;943:46:115;;;22490:41:125;22463:18;;943:46:115;22350:187:125;3029:1552:105;3264:24;;3360:21;3348:8;:33;;;;;;;;:::i;:::-;;3344:342;;3409:24;;;3431:1;3409:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3409:24:105;;-1:-1:-1;;3409:24:105;;;;;;;;;;;3397:36;;3462:183;;;;;;;;3495:8;3462:183;;;;;;;;:::i;:::-;;;;;3521:12;-1:-1:-1;;;;;3462:183:105;;;;;3551:4;-1:-1:-1;;;;;3462:183:105;;;;;3573:2;-1:-1:-1;;;;;3462:183:105;;;;;3593:1;3462:183;;;;3612:12;:19;;;3462:183;;;;;3447:9;3457:1;3447:12;;;;;;;;:::i;:::-;;;;;;;;;;:198;3666:9;-1:-1:-1;3659:16:105;;3344:342;3695:28;3754:1;3727:12;:24;;;:28;;;;:::i;:::-;3726:34;;3759:1;3726:34;:::i;:::-;3695:65;;;;3804:20;3782:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:43:105;;-1:-1:-1;;3782:43:105;;;;;;;;;;;;3770:55;;3840:9;3835:714;3859:20;3855:1;:24;3835:714;;;3916:23;3904:8;:35;;;;;;;;:::i;:::-;;3900:639;;3974:237;;;;;;;;4011:8;3974:237;;;;;;;;:::i;:::-;;;;;4041:12;-1:-1:-1;;;;;3974:237:105;;;;;4075:4;-1:-1:-1;;;;;3974:237:105;;;;;4101:2;-1:-1:-1;;;;;3974:237:105;;;;;4151:1;4125:12;:23;;;:27;;;;;;:::i;:::-;3974:237;;;;4174:12;:19;;;3974:237;;;;;3959:9;3969:1;3959:12;;;;;;;;:::i;:::-;;;;;;:252;;;;3900:639;;;4248:22;4236:8;:34;;;;;;;;:::i;:::-;;4232:307;;4305:219;;;;;;;;4342:8;4305:219;;;;;;;;:::i;:::-;;;;;4372:12;-1:-1:-1;;;;;4305:219:105;;;;;4406:4;-1:-1:-1;;;;;4305:219:105;;;;;4432:2;-1:-1:-1;;;;;4305:219:105;;;;;4482:1;4456:12;:23;;;:27;;;;;;:::i;:::-;4305:219;;;;4505:1;4305:219;;;4290:9;4300:1;4290:12;;;;;;;;:::i;:::-;;;;;;:234;;;;4232:307;3881:3;;;:::i;:::-;;;3835:714;;;-1:-1:-1;4565:9:105;;3029:1552;-1:-1:-1;;;;;;;3029:1552:105:o;2547:448::-;2639:7;-1:-1:-1;;;;;2723:18:105;;2719:66;;-1:-1:-1;2772:1:105;2757:17;;2719:66;2810:23;2798:8;:35;;;;;;;;:::i;:::-;;2794:77;;-1:-1:-1;2856:4:105;2849:11;;2794:77;2885:23;2903:4;2885:17;:23::i;:::-;2880:88;;2939:17;2947:4;2955:1;2939:17;:::i;:::-;2924:33;;;;2880:88;-1:-1:-1;2984:4:105;;2547:448;-1:-1:-1;2547:448:105:o;12961:217::-;13156:15;;;;13081:11;;;;-1:-1:-1;;;;;13044:49:105;;;;;;;:36;:49;;;;;;;;13094:14;;;;13044:65;;;;;;;;;;;13123:19;;;;13044:108;;;;;;;:127;;:108;;:49;:127;;13156:15;;13044:127;:::i;:::-;;;;-1:-1:-1;;;12961:217:105:o;13184:358::-;13306:9;13301:235;13325:13;:17;;;:24;13321:1;:28;13301:235;;;13501:13;:21;;;13523:1;13501:24;;;;;;;;:::i;:::-;;;;;;;;;;;;13407:16;;;;;-1:-1:-1;;;;;13370:54:105;;;;;;;:36;:54;;;;;13442:19;;13370:105;;;;;;;;;13476:17;;;;:20;;13501:24;;13370:105;;13494:1;;13476:20;;;;;;:::i;:::-;;;;;;;13370:127;;;;;;;;;;;;:155;;;;;;;:::i;:::-;;;;-1:-1:-1;13351:3:105;;-1:-1:-1;13351:3:105;;:::i;:::-;;;13301:235;;733:143:115;823:12;;802:17;;;;;;:33;798:72;;851:8;;;20516:1088:58;20632:12;;;;20668:9;;;;20709:11;;;;20753:10;;;20730:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20632:12:58;;;;20668:9;;;;;;20618:11;;20730:33;;20753:10;;20730:33;;20753:10;20730:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20774:17;20811:4;20817:12;20825:3;20817:7;:12::i;:::-;20794:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20794:36:58;;;;;;;;;-1:-1:-1;;;;;20845:15:58;;;;;;:10;;;20794:36;20845:15;;;;;;:21;;;;;;;;;;20794:36;;-1:-1:-1;20845:21:58;;:15;;20877:34;;20894:3;;20899:11;;20877:34;;:::i;:::-;;;;-1:-1:-1;;20877:34:58;;;;;;;;;20867:45;;20877:34;20867:45;;;;20845:68;;;;;;;;;;-1:-1:-1;20845:68:58;;;;20840:110;;20929:10;20934:4;20929;:10::i;:::-;;20840:110;-1:-1:-1;;;;;20982:15:58;;20959:12;20982:15;;;;;;;;;;;:21;;;;;;;;;;21014:34;;20982:21;;20959:12;;21014:34;;21031:3;;21036:11;;21014:34;;:::i;:::-;;;;;;;;;;;;;21004:45;;;;;;20982:68;;;;;;;;;;;;20974:77;;20959:92;;21062:12;21101:17;21122:3;-1:-1:-1;;;;;21122:14:58;21137:4;21122:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21098:44:58;-1:-1:-1;21163:36:58;;-1:-1:-1;21098:44:58;21184:14;21187:11;21184:2;:14;:::i;:::-;21163;:36::i;:::-;21234:28;;;;;-1:-1:-1;;;;;31074:55:125;;21234:28:58;;;31056:74:125;31146:18;;;31139:34;;;21156:43:58;;-1:-1:-1;21219:12:58;;-1:-1:-1;21234:17:58;;;;31029:18:125;;21234:28:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21219:43;;21285:4;21277;:12;21273:171;;21305:128;;;;;56282:2:125;21305:128:58;;;56264:21:125;56321:3;56301:18;;;56294:31;56361:34;56341:18;;;56334:62;56432:34;56412:18;;;56405:62;56504:34;56483:19;;;56476:63;56576:16;56555:19;;;56548:45;56610:19;;21305:128:58;56080:555:125;21305:128:58;21453:34;;;;;-1:-1:-1;;;;;49434:55:125;;21453:34:58;;;49416:74:125;49506:18;;;49499:34;;;49549:18;;;49542:34;;;21453:18:58;;;;49389::125;;21453:34:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21504:12:58;;;21497:19;;;;;;-1:-1:-1;21533:9:58;;;21526:16;;;;;;21552:17;-1:-1:-1;21559:10:58;;21504:12;21552:17;:::i;:::-;21586:4;:11;;21579:18;;;20608:996;;;;;;;;20516:1088;;:::o;2410:424:56:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;49416:74:125;;;2670:17:56;49506:18:125;;;49499:34;;;;2705:4:56;49549:18:125;;;49542:34;2482:11:56;;1671:64;2579:43;;49389:18:125;;2645:67:56;;;-1:-1:-1;;2645:67:56;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:56;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:56;2813:7;:14;;;;;;;;2410:424::o;1002:140:115:-;1095:16;;1074:38;;;;;217:64:57;1074:38:115;;;31056:74:125;;;31146:18;;;31139:34;;;;1051:4:115;;1132:1;;1074:7;;31029:18:125;;1074:38:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;1067:68;;1002:140;:::o;1654:796:105:-;1711:4;-1:-1:-1;;;;;1731:16:105;;1727:717;;-1:-1:-1;1770:5:105;;1654:796;-1:-1:-1;1654:796:105:o;1727:717::-;-1:-1:-1;;;;;1796:14:105;;;:18;1792:652;;1831:12;;-1:-1:-1;;;;;1872:7:105;;1935:47;1831:12;;;2068:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2068:16:105;-1:-1:-1;2106:16:105;;;2120:1;2106:16;;;;;;;1897:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1897:267:105;;;;;;;;;;1872:306;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:348;;;;2215:7;:176;;;;-1:-1:-1;2314:59:105;;;2325:47;2314:59;;;8186:98:125;8159:18;2314:59:105;;;;;;;;;;;;2283:108;;;;;;2252:10;2242:21;;;;;;:149;2192:199;1654:796;-1:-1:-1;;;;1654:796:105:o;1792:652::-;-1:-1:-1;2429:4:105;;1654:796;-1:-1:-1;1654:796:105:o;22791:397:58:-;22850:12;22878:19;22910:1;:8;22921:2;22910:13;;;;:::i;:::-;22900:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22900:24:58;;22878:46;;22939:9;22934:224;22958:1;:8;22954:1;:12;22934:224;;;22987:9;22999:1;23001;22999:4;;;;;;;;:::i;:::-;;;;;;;22987:16;;23132:1;23126;23122:2;23118:10;23114:2;23110:19;23102:6;23098:32;23091:43;23073:75;22968:3;;;;;:::i;:::-;;;;22934:224;;15660:3212;15784:12;;;;15820:9;;;;15861:11;;;;15905:10;;;15882:33;;;;;;;;;;;;;;;;;;;15747:7;;-1:-1:-1;;;;;15784:12:58;;15820:9;;;15861:11;15747:7;;15882:33;;15905:10;;15882:33;;;15905:10;15882:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15966:15:58;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;15998:34;;15882:33;;-1:-1:-1;15966:21:58;:15;;-1:-1:-1;15998:34:58;;-1:-1:-1;15882:33:58;;16020:11;;15998:34;;:::i;:::-;;;;-1:-1:-1;;15998:34:58;;;;;;;;;15988:45;;15998:34;15988:45;;;;15966:68;;;;;;;;;;-1:-1:-1;15966:68:58;;;;15962:174;;;-1:-1:-1;;;;;16057:15:58;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;16089:34;;16057:21;;:10;16089:34;;16106:3;;16111:11;;16089:34;;:::i;:::-;;;;;;;;;;;;;16079:45;;;;;;16057:68;;;;;;;;;;;;16050:75;;;;;;15660:3212;;;:::o;15962:174::-;16145:17;16182:4;16188:12;16196:3;16188:7;:12::i;:::-;16165:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16145:56;;14942:28;14934:37;;-1:-1:-1;;;;;16211:19:58;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16242:12;16281:17;16302:3;-1:-1:-1;;;;;16302:14:58;16317:4;16302:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16278:44:58;-1:-1:-1;16343:36:58;;-1:-1:-1;16278:44:58;16364:14;16367:11;16364:2;:14;:::i;16343:36::-;16429:35;;;;;-1:-1:-1;;;;;10733:55:125;;16429:35:58;;;10715:74:125;16336:43:58;;-1:-1:-1;16401:22:58;;-1:-1:-1;16429:21:58;;;;10688:18:125;;16429:35:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16429:35:58;;;;;;;;;;;;:::i;:::-;16400:64;;;16478:5;:12;16494:1;16478:17;16474:2056;;16511:12;14942:28;14934:37;;-1:-1:-1;;;;;16526:17:58;;16544:3;16549:5;16555:1;16549:8;;;;;;;;:::i;:::-;;;;;;;16526:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;31074:55:125;;;;31056:74;;31161:2;31146:18;;31139:34;31044:2;31029:18;;30882:297;16526:32:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16511:47;-1:-1:-1;16511:47:58;16572:106;;16619:44;16640:3;16653:5;16659:1;16653:8;;;;;;;;:::i;:::-;;;;;;;;;;;;16619:44;;;-1:-1:-1;;;;;31074:55:125;;;31056:74;;31146:18;;;31139:34;31029:18;16619:44:58;;;;;;;16572:106;16703:4;16695;:12;16691:178;;16727:127;;;;;59751:2:125;16727:127:58;;;59733:21:125;59790:3;59770:18;;;59763:31;59830:34;59810:18;;;59803:62;59901:34;59881:18;;;59874:62;59973:34;59952:19;;;59945:63;60045:15;60024:19;;;60017:44;60078:19;;16727:127:58;59549:554:125;16727:127:58;16887:86;16897:3;16902:4;16935:3;16940:11;16918:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16908:45;;;;;;16963:5;16969:1;16963:8;;;;;;;;:::i;:::-;;;;;;;;;;;;16887:86;;;-1:-1:-1;;;;;60355:55:125;;;60337:74;;60459:66;60447:79;;;60427:18;;;60420:107;;;;60543:18;;;60536:34;60601:2;60586:18;;60579:34;60324:3;60309:19;16887:86:58;;;;;;;17066:5;17072:1;17066:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16987:15:58;;17058:17;16987:15;;;;;;;;;;:21;;;;;;;;;;17019:34;;17066:8;;16987:21;;17019:34;;17036:3;;17041:11;;17019:34;;:::i;:::-;;;;-1:-1:-1;;17019:34:58;;;;;;;;;17009:45;;17019:34;17009:45;;;;16987:68;;;;;;;;;;;;-1:-1:-1;16987:68:58;;;:88;;;;-1:-1:-1;;;;;17089:15:58;;;;17160:4;17089:10;;;:15;;;;;:21;;;;;;;;;;17121:34;;17160:4;;-1:-1:-1;17121:34:58;;17138:3;;17143:11;;17121:34;;:::i;:::-;;;;;;;-1:-1:-1;;17121:34:58;;;;;;17111:45;;17121:34;17111:45;;;;17089:68;;;;;;;;;;-1:-1:-1;17089:68:58;:75;;;;;;;;;;;;;-1:-1:-1;16474:2056:58;;;17200:1;17185:5;:12;:16;17181:1349;;;17222:9;17217:1190;17241:5;:12;17237:1;:16;17217:1190;;;17278:12;14942:28;14934:37;;-1:-1:-1;;;;;17293:17:58;;17311:3;17316:5;17322:1;17316:8;;;;;;;;:::i;:::-;;;;;;;17293:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;31074:55:125;;;;31056:74;;31161:2;31146:18;;31139:34;31044:2;31029:18;;30882:297;17293:32:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17278:47;-1:-1:-1;17278:47:58;17343:114;;17394:44;17415:3;17428:5;17434:1;17428:8;;;;;;;;:::i;:::-;;;;;;;;;;;;17394:44;;;-1:-1:-1;;;;;31074:55:125;;;31056:74;;31146:18;;;31139:34;31029:18;17394:44:58;;;;;;;17343:114;14942:28;14934:37;;-1:-1:-1;;;;;17499:18:58;;17518:3;17523:5;17529:1;17523:8;;;;;;;;:::i;:::-;;;;;;;;;;;17499:53;;;;;;;;;;-1:-1:-1;;;;;49434:55:125;;;17499:53:58;;;49416:74:125;49506:18;;;49499:34;17533:18:58;49549::125;;;49542:34;49389:18;;17499:53:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17570:12;17600:17;17675:3;-1:-1:-1;;;;;17675:14:58;17690:4;17675:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17657:38:58;;-1:-1:-1;17657:38:58;-1:-1:-1;17724:36:58;17657:38;17745:14;17748:11;17745:2;:14;:::i;17724:36::-;17717:43;;17801:7;:37;;;;;17820:18;17812:4;:26;17801:37;17797:539;;;17936:86;17946:3;17951:4;17984:3;17989:11;17967:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17957:45;;;;;;18012:5;18018:1;18012:8;;;;;;;;:::i;:::-;;;;;;;;;;;;17936:86;;;-1:-1:-1;;;;;60355:55:125;;;60337:74;;60459:66;60447:79;;;60427:18;;;60420:107;;;;60543:18;;;60536:34;60601:2;60586:18;;60579:34;60324:3;60309:19;17936:86:58;;;;;;;18123:5;18129:1;18123:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18044:15:58;;18115:17;18044:15;;;;;;;;;;:21;;;;;;;;;;18076:34;;18123:8;;18044:21;;18076:34;;18093:3;;18098:11;;18076:34;;:::i;:::-;;;;;;;;;;;;;18066:45;;;;;;18044:68;;;;;;;;;;;:88;;;;18225:4;18154;:10;;:15;18165:3;-1:-1:-1;;;;;18154:15:58;-1:-1:-1;;;;;18154:15:58;;;;;;;;;;;;:21;18170:4;18154:21;;;;;;;;;;;;;;;;;:68;18203:3;18208:11;18186:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18176:45;;;;;;18154:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;14942:28;14934:37;;-1:-1:-1;;;;;18251:18:58;;18270:3;18275:5;18281:1;18275:8;;;;;;;;:::i;:::-;;;;;;;;;;;18251:39;;;;;;;;;;-1:-1:-1;;;;;49434:55:125;;;18251:39:58;;;49416:74:125;49506:18;;;49499:34;49549:18;;;49542:34;;;49389:18;;18251:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18312:5;;;;;17797:539;14942:28;14934:37;;-1:-1:-1;;;;;18353:18:58;;18372:3;18377:5;18383:1;18377:8;;;;;;;;:::i;:::-;;;;;;;;;;;18353:39;;;;;;;;;;-1:-1:-1;;;;;49434:55:125;;;18353:39:58;;;49416:74:125;49506:18;;;49499:34;49549:18;;;49542:34;;;49389:18;;18353:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17260:1147;;;17255:3;;;;;:::i;:::-;;;;17217:1190;;;;17181:1349;;;18437:82;;;;;;60826:2:125;18437:82:58;;;60808:21:125;60845:18;;;60838:30;;;;60904:34;60884:18;;;60877:62;60975:34;60955:18;;;60948:62;61027:19;;18437:82:58;60624:428:125;18437:82:58;-1:-1:-1;;;;;18548:15:58;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;18580:34;;18548:21;;:15;18580:34;;18597:3;;18602:11;;18580:34;;:::i;:::-;;;;-1:-1:-1;;18580:34:58;;;;;;;;;18570:45;;18580:34;18570:45;;;;18548:68;;;;;;;;;;-1:-1:-1;18548:68:58;;;;18540:128;;;;;;;61259:2:125;18540:128:58;;;61241:21:125;61298:2;61278:18;;;61271:30;61337:34;61317:18;;;61310:62;61408:17;61388:18;;;61381:45;61443:19;;18540:128:58;61057:411:125;18540:128:58;18686:12;;;18679:19;;;;;;18715:9;;;18708:16;;;;;;18734:17;-1:-1:-1;18741:10:58;;18686:12;18734:17;:::i;:::-;18761:18;18768:11;;;18761:18;;;-1:-1:-1;;;;;18797:15:58;;;;;;;;;;;;:21;;;;;;;;;;18829:34;;18797:21;;18761:18;18829:34;;18846:3;;18851:11;;18829:34;;:::i;:::-;;;;;;;;;;;;;18819:45;;;;;;18797:68;;;;;;;;;;;;18790:75;;;;;;;;;15660:3212;;;:::o;22488:297::-;22562:7;22581:11;22603;22628:2;22617:1;:8;:13;:29;;22638:1;:8;22617:29;;;22633:2;22617:29;22603:43;;22661:6;22656:103;22677:3;22673:1;:7;22656:103;;;22742:5;:1;22746;22742:5;:::i;:::-;22716:1;22718:10;22727:1;22718:6;:10;:::i;:::-;22716:13;;;;;;;;:::i;:::-;;;;;;;22708:40;;22701:47;;;;;22682:3;;;;:::i;:::-;;;;22656:103;;;-1:-1:-1;22775:3:58;;22488:297;-1:-1:-1;;;;22488:297:58:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:154:125:-;-1:-1:-1;;;;;93:5:125;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;312:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;617:2;602:18;;;;589:32;;-1:-1:-1;;;312:315:125:o;632:184::-;684:77;681:1;674:88;781:4;778:1;771:15;805:4;802:1;795:15;821:253;893:2;887:9;935:4;923:17;;970:18;955:34;;991:22;;;952:62;949:88;;;1017:18;;:::i;:::-;1053:2;1046:22;821:253;:::o;1079:251::-;1151:2;1145:9;;;1181:15;;1226:18;1211:34;;1247:22;;;1208:62;1205:88;;;1273:18;;:::i;1597:253::-;1669:2;1663:9;1711:4;1699:17;;1746:18;1731:34;;1767:22;;;1728:62;1725:88;;;1793:18;;:::i;1855:253::-;1927:2;1921:9;1969:4;1957:17;;2004:18;1989:34;;2025:22;;;1986:62;1983:88;;;2051:18;;:::i;2113:255::-;2185:2;2179:9;2227:6;2215:19;;2264:18;2249:34;;2285:22;;;2246:62;2243:88;;;2311:18;;:::i;2373:253::-;2446:2;2440:9;2488:3;2476:16;;2522:18;2507:34;;2543:22;;;2504:62;2501:88;;;2569:18;;:::i;2631:334::-;2702:2;2696:9;2758:2;2748:13;;-1:-1:-1;;2744:86:125;2732:99;;2861:18;2846:34;;2882:22;;;2843:62;2840:88;;;2908:18;;:::i;:::-;2944:2;2937:22;2631:334;;-1:-1:-1;2631:334:125:o;2970:156::-;3036:20;;3096:4;3085:16;;3075:27;;3065:55;;3116:1;3113;3106:12;3131:188;3199:20;;3259:34;3248:46;;3238:57;;3228:85;;3309:1;3306;3299:12;3324:1974;3391:5;3444:3;3437:4;3429:6;3425:17;3421:27;3411:55;;3462:1;3459;3452:12;3411:55;3486:23;;:::i;:::-;3531:3;3569:4;3561:6;3557:17;3597:3;3589:6;3586:15;3583:35;;;3614:1;3611;3604:12;3583:35;3638:6;3653:1616;3669:6;3664:3;3661:15;3653:1616;;;3737:6;3778:2;3772:3;3767;3763:13;3759:22;3756:112;;;3822:1;3851:2;3847;3840:14;3756:112;3894:22;;:::i;:::-;3957:3;3944:17;3974:33;3999:7;3974:33;:::i;:::-;4020:22;;4065:2;4108:12;;;4095:26;4134:33;4095:26;4134:33;:::i;:::-;4187:14;;;4180:31;4234:2;4272;4263:12;;4259:22;-1:-1:-1;4249:120:125;;4323:1;4352:2;4348;4341:14;4249:120;4395:23;;:::i;:::-;4478:12;;;;4444:5;4506:17;;;4503:107;;;4564:1;4593:2;4589;4582:14;4503:107;4645:2;4640:3;4636:12;4661:493;4679:8;4672:5;4669:19;4661:493;;;4771:2;4763:5;4758:3;4754:15;4750:24;4747:130;;;4823:1;4856:2;4852;4845:14;4747:130;4909:22;;:::i;:::-;4977:5;4964:19;4955:7;4948:36;5026:34;5056:2;5049:5;5045:14;5026:34;:::i;:::-;5008:16;;;5001:60;5078:22;;5126:14;;;;4700;;4661:493;;;-1:-1:-1;5174:14:125;;;5167:29;;;;-1:-1:-1;5209:18:125;;;5247:12;;;;-1:-1:-1;3695:6:125;3686:16;3653:1616;;;-1:-1:-1;5287:5:125;;3324:1974;-1:-1:-1;;;;;3324:1974:125:o;5303:1623::-;5391:6;5444:4;5432:9;5423:7;5419:23;5415:34;5412:54;;;5462:1;5459;5452:12;5412:54;5488:22;;:::i;:::-;5555:7;5548:4;5537:9;5533:20;5529:34;5519:62;;5577:1;5574;5567:12;5519:62;5601:23;;:::i;:::-;5646:3;5687:4;5676:9;5672:20;5715:7;5707:6;5704:19;5701:39;;;5736:1;5733;5726:12;5701:39;5760:9;5778:998;5794:6;5789:3;5786:15;5778:998;;;5876:4;5870:3;5861:7;5857:17;5853:28;5850:118;;;5922:1;5951:2;5947;5940:14;5850:118;5996:22;;:::i;:::-;6047:21;6064:3;6047:21;:::i;:::-;6038:7;6031:38;6092:2;6144;6139:3;6135:12;6122:26;6161:33;6186:7;6161:33;:::i;:::-;6214:16;;;6207:33;6263:4;6308:12;;;6295:26;6334:33;6295:26;6334:33;:::i;:::-;6387:16;;;6380:33;6436:2;6476:32;6495:12;;;6476:32;:::i;:::-;6458:16;;;6451:58;6532:3;6573:32;6592:12;;;6573:32;:::i;:::-;6555:16;;;6548:58;6629:3;6670:30;6687:12;;;6670:30;:::i;:::-;6652:16;;;6645:56;6714:20;;;6754:12;;;;5820:4;5811:14;5778:998;;;5782:3;6799:5;6792;6785:20;6837:58;6887:7;6879:6;6837:58;:::i;:::-;6832:2;6821:14;;6814:82;-1:-1:-1;6825:5:125;;5303:1623;-1:-1:-1;;;;;5303:1623:125:o;6931:347::-;6982:8;6992:6;7046:3;7039:4;7031:6;7027:17;7023:27;7013:55;;7064:1;7061;7054:12;7013:55;-1:-1:-1;7087:20:125;;7130:18;7119:30;;7116:50;;;7162:1;7159;7152:12;7116:50;7199:4;7191:6;7187:17;7175:29;;7251:3;7244:4;7235:6;7227;7223:19;7219:30;7216:39;7213:59;;;7268:1;7265;7258:12;7213:59;6931:347;;;;;:::o;7283:754::-;7380:6;7388;7396;7404;7412;7465:3;7453:9;7444:7;7440:23;7436:33;7433:53;;;7482:1;7479;7472:12;7433:53;7521:9;7508:23;7540:31;7565:5;7540:31;:::i;:::-;7590:5;-1:-1:-1;7647:2:125;7632:18;;7619:32;7660:33;7619:32;7660:33;:::i;:::-;7712:7;-1:-1:-1;7766:2:125;7751:18;;7738:32;;-1:-1:-1;7821:2:125;7806:18;;7793:32;7848:18;7837:30;;7834:50;;;7880:1;7877;7870:12;7834:50;7919:58;7969:7;7960:6;7949:9;7945:22;7919:58;:::i;:::-;7283:754;;;;-1:-1:-1;7283:754:125;;-1:-1:-1;7996:8:125;;7893:84;7283:754;-1:-1:-1;;;7283:754:125:o;8295:247::-;8354:6;8407:2;8395:9;8386:7;8382:23;8378:32;8375:52;;;8423:1;8420;8413:12;8375:52;8462:9;8449:23;8481:31;8506:5;8481:31;:::i;:::-;8531:5;8295:247;-1:-1:-1;;;8295:247:125:o;8547:388::-;8615:6;8623;8676:2;8664:9;8655:7;8651:23;8647:32;8644:52;;;8692:1;8689;8682:12;8644:52;8731:9;8718:23;8750:31;8775:5;8750:31;:::i;:::-;8800:5;-1:-1:-1;8857:2:125;8842:18;;8829:32;8870:33;8829:32;8870:33;:::i;:::-;8922:7;8912:17;;;8547:388;;;;;:::o;8940:246::-;8989:4;9022:18;9014:6;9011:30;9008:56;;;9044:18;;:::i;:::-;-1:-1:-1;9101:2:125;9089:15;-1:-1:-1;;9085:88:125;9175:4;9081:99;;8940:246::o;9191:338::-;9256:5;9285:53;9301:36;9330:6;9301:36;:::i;:::-;9285:53;:::i;:::-;9276:62;;9361:6;9354:5;9347:21;9401:3;9392:6;9387:3;9383:16;9380:25;9377:45;;;9418:1;9415;9408:12;9377:45;9467:6;9462:3;9455:4;9448:5;9444:16;9431:43;9521:1;9514:4;9505:6;9498:5;9494:18;9490:29;9483:40;9191:338;;;;;:::o;9534:222::-;9577:5;9630:3;9623:4;9615:6;9611:17;9607:27;9597:55;;9648:1;9645;9638:12;9597:55;9670:80;9746:3;9737:6;9724:20;9717:4;9709:6;9705:17;9670:80;:::i;9761:671::-;9848:6;9856;9909:2;9897:9;9888:7;9884:23;9880:32;9877:52;;;9925:1;9922;9915:12;9877:52;9965:9;9952:23;9994:18;10035:2;10027:6;10024:14;10021:34;;;10051:1;10048;10041:12;10021:34;10074:50;10116:7;10107:6;10096:9;10092:22;10074:50;:::i;:::-;10064:60;;10177:2;10166:9;10162:18;10149:32;10133:48;;10206:2;10196:8;10193:16;10190:36;;;10222:1;10219;10212:12;10190:36;-1:-1:-1;10245:24:125;;10300:4;10292:13;;10288:27;-1:-1:-1;10278:55:125;;10329:1;10326;10319:12;10278:55;10352:74;10418:7;10413:2;10400:16;10395:2;10391;10387:11;10352:74;:::i;:::-;10342:84;;;9761:671;;;;;:::o;10800:180::-;10859:6;10912:2;10900:9;10891:7;10887:23;10883:32;10880:52;;;10928:1;10925;10918:12;10880:52;-1:-1:-1;10951:23:125;;10800:180;-1:-1:-1;10800:180:125:o;11228:456::-;11305:6;11313;11321;11374:2;11362:9;11353:7;11349:23;11345:32;11342:52;;;11390:1;11387;11380:12;11342:52;11429:9;11416:23;11448:31;11473:5;11448:31;:::i;:::-;11498:5;-1:-1:-1;11555:2:125;11540:18;;11527:32;11568:33;11527:32;11568:33;:::i;:::-;11228:456;;11620:7;;-1:-1:-1;;;11674:2:125;11659:18;;;;11646:32;;11228:456::o;11689:192::-;11758:4;11791:18;11783:6;11780:30;11777:56;;;11813:18;;:::i;:::-;-1:-1:-1;11858:1:125;11854:14;11870:4;11850:25;;11689:192::o;11886:149::-;11960:20;;12009:1;11999:12;;11989:40;;12025:1;12022;12015:12;12040:1331;12103:5;12156:3;12149:4;12141:6;12137:17;12133:27;12123:55;;12174:1;12171;12164:12;12123:55;12210:6;12197:20;12236:4;12260:69;12276:52;12325:2;12276:52;:::i;12260:69::-;12363:15;;;12425:4;12468:11;;;12456:24;;12452:33;;;12394:12;;;;12351:3;12497:15;;;12494:35;;;12525:1;12522;12515:12;12494:35;12561:2;12553:6;12549:15;12573:769;12589:6;12584:3;12581:15;12573:769;;;12665:2;12659:3;12654;12650:13;12646:22;12643:112;;;12709:1;12738:2;12734;12727:14;12643:112;12781:22;;:::i;:::-;12830:29;12855:3;12830:29;:::i;:::-;12823:5;12816:44;12910:2;12905:3;12901:12;12888:26;12927:33;12952:7;12927:33;:::i;:::-;12980:14;;;12973:31;13027:2;13078:12;;;13065:26;13049:14;;;13042:50;13115:2;13166:12;;;13153:26;13137:14;;;13130:50;13203:3;13255:12;;;13242:26;13226:14;;;13219:50;13282:18;;13320:12;;;;12606;;12573:769;;13376:1509;13447:5;13500:3;13493:4;13485:6;13481:17;13477:27;13467:55;;13518:1;13515;13508:12;13467:55;13554:6;13541:20;13580:4;13604:69;13620:52;13669:2;13620:52;:::i;13604:69::-;13707:15;;;13769:4;13812:11;;;13800:24;;13796:33;;;13738:12;;;;13695:3;13841:15;;;13838:35;;;13869:1;13866;13859:12;13838:35;13905:2;13897:6;13893:15;13917:939;13933:6;13928:3;13925:15;13917:939;;;14009:2;14003:3;13998;13994:13;13990:22;13987:112;;;14053:1;14082:2;14078;14071:14;13987:112;14125:22;;:::i;:::-;14174:29;14199:3;14174:29;:::i;:::-;14167:5;14160:44;14254:2;14249:3;14245:12;14232:26;14271:33;14296:7;14271:33;:::i;:::-;14324:14;;;14317:31;14371:2;14422:12;;;14409:26;14393:14;;;14386:50;14459:2;14510:12;;;14497:26;14481:14;;;14474:50;14547:3;14599:12;;;14586:26;14570:14;;;14563:50;14636:3;14680:12;;;14667:26;14706:33;14667:26;14706:33;:::i;:::-;14759:14;;;14752:31;14796:18;;14834:12;;;;13950;;13917:939;;14890:108;14972:1;14965:5;14962:12;14952:40;;14988:1;14985;14978:12;15003:148;15078:20;;15107:38;15078:20;15107:38;:::i;15156:1686::-;15283:6;15291;15299;15307;15360:3;15348:9;15339:7;15335:23;15331:33;15328:53;;;15377:1;15374;15367:12;15328:53;15417:9;15404:23;15446:18;15487:2;15479:6;15476:14;15473:34;;;15503:1;15500;15493:12;15473:34;15526:22;;;;15582:6;15564:16;;;15560:29;15557:49;;;15602:1;15599;15592:12;15557:49;15628:22;;:::i;:::-;15673;15692:2;15673:22;:::i;:::-;15666:5;15659:37;15728:31;15755:2;15751;15747:11;15728:31;:::i;:::-;15723:2;15716:5;15712:14;15705:55;15806:2;15802;15798:11;15785:25;15835:2;15825:8;15822:16;15819:36;;;15851:1;15848;15841:12;15819:36;15887:65;15944:7;15933:8;15929:2;15925:17;15887:65;:::i;:::-;15882:2;15875:5;15871:14;15864:89;;15999:2;15995;15991:11;15978:25;16028:2;16018:8;16015:16;16012:36;;;16044:1;16041;16034:12;16012:36;16080:73;16145:7;16134:8;16130:2;16126:17;16080:73;:::i;:::-;16075:2;16068:5;16064:14;16057:97;;16187:39;16221:3;16217:2;16213:12;16187:39;:::i;:::-;16181:3;16170:15;;16163:64;16281:3;16273:12;;;16260:26;16243:15;;;16236:51;16341:3;16333:12;;;16320:26;16303:15;;;16296:51;16401:3;16393:12;;;16380:26;16363:15;;;16356:51;16426:3;16474:11;;;16461:25;16445:14;;;16438:49;16506:3;16554:11;;;16541:25;16525:14;;;16518:49;16586:3;16634:11;;;16621:25;16605:14;;;16598:49;;;;-1:-1:-1;16174:5:125;-1:-1:-1;16690:38:125;16724:2;16709:18;;16690:38;:::i;:::-;16680:48;;16747:38;16781:2;16770:9;16766:18;16747:38;:::i;:::-;15156:1686;;;;-1:-1:-1;16737:48:125;;16832:2;16817:18;16804:32;;-1:-1:-1;;15156:1686:125:o;16847:184::-;16899:77;16896:1;16889:88;16996:4;16993:1;16986:15;17020:4;17017:1;17010:15;17036:139;17116:1;17109:5;17106:12;17096:46;;17122:18;;:::i;:::-;17151;;17036:139::o;17180:838::-;17242:3;17280:5;17274:12;17307:6;17302:3;17295:19;17333:4;17362:2;17357:3;17353:12;17346:19;;17399:2;17392:5;17388:14;17420:1;17430:563;17444:6;17441:1;17438:13;17430:563;;;17509:6;17503:13;17529:40;17565:3;17560:2;17554:9;17529:40;:::i;:::-;17613:11;;;17607:18;-1:-1:-1;;;;;17603:67:125;17589:12;;;17582:89;17694:4;17738:11;;;17732:18;17718:12;;;17711:40;17774:4;17818:11;;;17812:18;17798:12;;;17791:40;17854:4;17898:11;;;17892:18;17878:12;;;17871:40;17940:4;17931:14;;;;17968:15;;;;17466:1;17459:9;17430:563;;;-1:-1:-1;18009:3:125;;17180:838;-1:-1:-1;;;;;17180:838:125:o;18023:1005::-;18093:3;18131:5;18125:12;18158:6;18153:3;18146:19;18184:4;18213:2;18208:3;18204:12;18197:19;;18250:2;18243:5;18239:14;18271:1;18281:722;18295:6;18292:1;18289:13;18281:722;;;18360:6;18354:13;18380:40;18416:3;18411:2;18405:9;18380:40;:::i;:::-;18459:11;;;18453:18;-1:-1:-1;;;;;18570:21:125;;;18556:12;;;18549:43;18615:4;18659:11;;;18653:18;18639:12;;;18632:40;18695:4;18739:11;;;18733:18;18719:12;;;18712:40;18775:4;18819:11;;;18813:18;18799:12;;;18792:40;18855:4;18903:11;;;18897:18;18893:27;18879:12;;;18872:49;18950:4;18941:14;;;;18978:15;;;;18317:1;18310:9;18281:722;;19033:114;19115:1;19108:5;19105:12;19095:46;;19121:18;;:::i;19152:132::-;19213:38;19245:5;19213:38;:::i;19289:1506::-;19484:2;19473:9;19466:21;19496:53;19545:2;19534:9;19530:18;19521:6;19515:13;-1:-1:-1;;;;;10503:54:125;10491:67;;10437:127;19496:53;19447:4;19596:2;19588:6;19584:15;19578:22;19609:52;19657:2;19646:9;19642:18;19628:12;-1:-1:-1;;;;;10503:54:125;10491:67;;10437:127;19609:52;;19710:2;19702:6;19698:15;19692:22;19733:6;19775:2;19770;19759:9;19755:18;19748:30;19801:74;19870:3;19859:9;19855:19;19839:14;19801:74;:::i;:::-;19787:88;;19924:2;19916:6;19912:15;19906:22;-1:-1:-1;;19981:9:125;19973:6;19969:22;19965:95;19959:3;19948:9;19944:19;19937:124;20084:69;20146:6;20130:14;20084:69;:::i;:::-;20070:83;;;20202:3;20194:6;20190:16;20184:23;20216:62;20273:3;20262:9;20258:19;20242:14;20216:62;:::i;:::-;;20333:3;20325:6;20321:16;20315:23;20309:3;20298:9;20294:19;20287:52;20394:3;20386:6;20382:16;20376:23;20370:3;20359:9;20355:19;20348:52;20437:3;20429:6;20425:16;20419:23;20461:3;20500:2;20495;20484:9;20480:18;20473:30;20540:2;20532:6;20528:15;20522:22;20512:32;;;20563:3;20602:2;20597;20586:9;20582:18;20575:30;20642:2;20634:6;20630:15;20624:22;20614:32;;;20665:3;20704:2;20699;20688:9;20684:18;20677:30;20761:2;20753:6;20749:15;20743:22;20738:2;20727:9;20723:18;20716:50;;;;20783:6;20775:14;;;19289:1506;;;;:::o;20800:316::-;20877:6;20885;20893;20946:2;20934:9;20925:7;20921:23;20917:32;20914:52;;;20962:1;20959;20952:12;20914:52;-1:-1:-1;;20985:23:125;;;21055:2;21040:18;;21027:32;;-1:-1:-1;21106:2:125;21091:18;;;21078:32;;20800:316;-1:-1:-1;20800:316:125:o;21303:118::-;21389:5;21382:13;21375:21;21368:5;21365:32;21355:60;;21411:1;21408;21401:12;21426:592;21509:6;21517;21525;21533;21586:3;21574:9;21565:7;21561:23;21557:33;21554:53;;;21603:1;21600;21593:12;21554:53;21642:9;21629:23;21661:31;21686:5;21661:31;:::i;:::-;21711:5;-1:-1:-1;21768:2:125;21753:18;;21740:32;21781:33;21740:32;21781:33;:::i;:::-;21833:7;-1:-1:-1;21887:2:125;21872:18;;21859:32;;-1:-1:-1;21943:2:125;21928:18;;21915:32;21956:30;21915:32;21956:30;:::i;:::-;21426:592;;;;-1:-1:-1;21426:592:125;;-1:-1:-1;;21426:592:125:o;22023:322::-;22092:6;22145:2;22133:9;22124:7;22120:23;22116:32;22113:52;;;22161:1;22158;22151:12;22113:52;22201:9;22188:23;22234:18;22226:6;22223:30;22220:50;;;22266:1;22263;22256:12;22220:50;22289;22331:7;22322:6;22311:9;22307:22;22289:50;:::i;22542:367::-;22605:8;22615:6;22669:3;22662:4;22654:6;22650:17;22646:27;22636:55;;22687:1;22684;22677:12;22636:55;-1:-1:-1;22710:20:125;;22753:18;22742:30;;22739:50;;;22785:1;22782;22775:12;22739:50;22822:4;22814:6;22810:17;22798:29;;22882:3;22875:4;22865:6;22862:1;22858:14;22850:6;22846:27;22842:38;22839:47;22836:67;;;22899:1;22896;22889:12;22914:1338;23074:6;23082;23090;23098;23106;23114;23122;23130;23183:3;23171:9;23162:7;23158:23;23154:33;23151:53;;;23200:1;23197;23190:12;23151:53;23239:9;23226:23;23258:31;23283:5;23258:31;:::i;:::-;23308:5;-1:-1:-1;23365:2:125;23350:18;;23337:32;23378:33;23337:32;23378:33;:::i;:::-;23430:7;-1:-1:-1;23488:2:125;23473:18;;23460:32;23511:18;23541:14;;;23538:34;;;23568:1;23565;23558:12;23538:34;23607:70;23669:7;23660:6;23649:9;23645:22;23607:70;:::i;:::-;23696:8;;-1:-1:-1;23581:96:125;-1:-1:-1;23784:2:125;23769:18;;23756:32;;-1:-1:-1;23800:16:125;;;23797:36;;;23829:1;23826;23819:12;23797:36;23868:72;23932:7;23921:8;23910:9;23906:24;23868:72;:::i;:::-;23959:8;;-1:-1:-1;23842:98:125;-1:-1:-1;24047:3:125;24032:19;;24019:33;;-1:-1:-1;24064:16:125;;;24061:36;;;24093:1;24090;24083:12;24061:36;;24132:60;24184:7;24173:8;24162:9;24158:24;24132:60;:::i;:::-;22914:1338;;;;-1:-1:-1;22914:1338:125;;-1:-1:-1;22914:1338:125;;;;;;24211:8;-1:-1:-1;;;22914:1338:125:o;24257:671::-;24311:5;24364:3;24357:4;24349:6;24345:17;24341:27;24331:55;;24382:1;24379;24372:12;24331:55;24418:6;24405:20;24444:4;24468:69;24484:52;24533:2;24484:52;:::i;24468:69::-;24571:15;;;24657:1;24653:10;;;;24641:23;;24637:32;;;24602:12;;;;24681:15;;;24678:35;;;24709:1;24706;24699:12;24678:35;24745:2;24737:6;24733:15;24757:142;24773:6;24768:3;24765:15;24757:142;;;24839:17;;24827:30;;24877:12;;;;24790;;24757:142;;;-1:-1:-1;24917:5:125;24257:671;-1:-1:-1;;;;;;24257:671:125:o;24933:2186::-;25011:5;25064:3;25057:4;25049:6;25045:17;25041:27;25031:55;;25082:1;25079;25072:12;25031:55;25118:6;25105:20;25144:4;25168:69;25184:52;25233:2;25184:52;:::i;25168:69::-;25271:15;;;25357:1;25353:10;;;;25341:23;;25337:32;;;25302:12;;;;25381:15;;;25378:35;;;25409:1;25406;25399:12;25378:35;25445:2;25437:6;25433:15;25457:1633;25473:6;25468:3;25465:15;25457:1633;;;25559:3;25546:17;25586:18;25636:2;25623:11;25620:19;25617:109;;;25680:1;25709:2;25705;25698:14;25617:109;25761:11;25753:6;25749:24;25739:34;;25796:4;25907:2;-1:-1:-1;;25833:2:125;25828:3;25824:12;25820:85;25816:94;25813:184;;;25951:1;25980:2;25976;25969:14;25813:184;26023:22;;:::i;:::-;26094:2;26090;26086:11;26073:25;26111:33;26136:7;26111:33;:::i;:::-;26157:22;;26202:2;26245:11;;;26232:25;26270:33;26232:25;26270:33;:::i;:::-;26323:14;;;26316:31;26370:2;26408:31;26427:11;;;26408:31;:::i;:::-;26403:2;26396:5;26392:14;26385:55;26464:3;26453:14;;26517:3;26513:2;26509:12;26496:26;26551:2;26541:8;26538:16;26535:109;;;26596:1;26626:3;26621;26614:16;26535:109;26680:61;26737:3;26732:2;26721:8;26717:2;26713:17;26709:26;26680:61;:::i;:::-;26675:2;26668:5;26664:14;26657:85;;;26792:2;26788;26784:11;26771:25;26755:41;;26825:2;26815:8;26812:16;26809:109;;;26870:1;26900:3;26895;26888:16;26809:109;26955:61;27012:3;27007:2;26996:8;26992:2;26988:17;26984:26;26955:61;:::i;:::-;26938:15;;;26931:86;27030:18;;-1:-1:-1;;;27068:12:125;;;;25490;;25457:1633;;27124:2512;27209:6;27240:2;27283;27271:9;27262:7;27258:23;27254:32;27251:52;;;27299:1;27296;27289:12;27251:52;27339:9;27326:23;27368:18;27409:2;27401:6;27398:14;27395:34;;;27425:1;27422;27415:12;27395:34;27463:6;27452:9;27448:22;27438:32;;27489:4;27527:2;27522;27513:7;27509:16;27505:25;27502:45;;;27543:1;27540;27533:12;27502:45;27569:22;;:::i;:::-;27628:2;27615:16;27640:33;27665:7;27640:33;:::i;:::-;27682:22;;27742:11;;;27729:25;27766:16;;;27763:36;;;27795:1;27792;27785:12;27763:36;27818:17;;27866:4;27858:13;;27854:27;-1:-1:-1;27844:55:125;;27895:1;27892;27885:12;27844:55;27931:2;27918:16;27954:69;27970:52;28019:2;27970:52;:::i;27954:69::-;28057:15;;;28119:4;28158:11;;;28150:20;;28146:29;;;28088:12;;;;28045:3;28187:19;;;28184:39;;;28219:1;28216;28209:12;28184:39;28243:11;;;;28263:1097;28279:6;28274:3;28271:15;28263:1097;;;28359:2;28353:3;28344:7;28340:17;28336:26;28333:116;;;28403:1;28432:2;28428;28421:14;28333:116;28477:22;;:::i;:::-;28540:3;28527:17;28557:40;28589:7;28557:40;:::i;:::-;28610:24;;28675:12;;;28662:26;28701:33;28662:26;28701:33;:::i;:::-;28754:16;;;28747:33;28803:2;28846:12;;;28833:26;28872:33;28833:26;28872:33;:::i;:::-;28925:16;;;28918:33;28992:12;;;28979:26;29018:33;28979:26;29018:33;:::i;:::-;29071:16;;;29064:33;29121:3;29176:13;;;29163:27;29144:17;;;29137:54;29215:3;29270:13;;;29257:27;29238:17;;;29231:54;29298:20;;28296:12;;;;29338;;;;28263:1097;;;28267:3;29392:5;29387:2;29380:5;29376:14;29369:29;;;;;29444:2;29440;29436:11;29423:25;29407:41;;29473:2;29463:8;29460:16;29457:36;;;29489:1;29486;29479:12;29457:36;29525:80;29597:7;29586:8;29582:2;29578:17;29525:80;:::i;:::-;29520:2;29509:14;;29502:104;29513:5;27124:2512;-1:-1:-1;;;;;;;27124:2512:125:o;29641:823::-;29747:6;29755;29763;29771;29779;29787;29840:3;29828:9;29819:7;29815:23;29811:33;29808:53;;;29857:1;29854;29847:12;29808:53;29896:9;29883:23;29915:31;29940:5;29915:31;:::i;:::-;29965:5;-1:-1:-1;30022:2:125;30007:18;;29994:32;30035:33;29994:32;30035:33;:::i;:::-;30087:7;-1:-1:-1;30141:2:125;30126:18;;30113:32;;-1:-1:-1;30192:2:125;30177:18;;30164:32;;-1:-1:-1;30247:3:125;30232:19;;30219:33;30275:18;30264:30;;30261:50;;;30307:1;30304;30297:12;30261:50;30346:58;30396:7;30387:6;30376:9;30372:22;30346:58;:::i;:::-;29641:823;;;;-1:-1:-1;29641:823:125;;-1:-1:-1;29641:823:125;;30423:8;;29641:823;-1:-1:-1;;;29641:823:125:o;31184:184::-;31236:77;31233:1;31226:88;31333:4;31330:1;31323:15;31357:4;31354:1;31347:15;31373:184;31425:77;31422:1;31415:88;31522:4;31519:1;31512:15;31546:4;31543:1;31536:15;31562:175;31599:3;31643:4;31636:5;31632:16;31672:4;31663:7;31660:17;31657:43;;31680:18;;:::i;:::-;31729:1;31716:15;;31562:175;-1:-1:-1;;31562:175:125:o;32422:258::-;32494:1;32504:113;32518:6;32515:1;32512:13;32504:113;;;32594:11;;;32588:18;32575:11;;;32568:39;32540:2;32533:10;32504:113;;;32635:6;32632:1;32629:13;32626:48;;;-1:-1:-1;;32670:1:125;32652:16;;32645:27;32422:258::o;32685:442::-;32834:2;32823:9;32816:21;32797:4;32866:6;32860:13;32909:6;32904:2;32893:9;32889:18;32882:34;32925:66;32984:6;32979:2;32968:9;32964:18;32959:2;32951:6;32947:15;32925:66;:::i;:::-;33043:2;33031:15;-1:-1:-1;;33027:88:125;33012:104;;;;33118:2;33008:113;;32685:442;-1:-1:-1;;32685:442:125:o;33132:635::-;33211:6;33264:2;33252:9;33243:7;33239:23;33235:32;33232:52;;;33280:1;33277;33270:12;33232:52;33313:9;33307:16;33346:18;33338:6;33335:30;33332:50;;;33378:1;33375;33368:12;33332:50;33401:22;;33454:4;33446:13;;33442:27;-1:-1:-1;33432:55:125;;33483:1;33480;33473:12;33432:55;33512:2;33506:9;33537:49;33553:32;33582:2;33553:32;:::i;33537:49::-;33609:2;33602:5;33595:17;33649:7;33644:2;33639;33635;33631:11;33627:20;33624:33;33621:53;;;33670:1;33667;33660:12;33621:53;33683:54;33734:2;33729;33722:5;33718:14;33713:2;33709;33705:11;33683:54;:::i;33772:466::-;33947:3;33985:6;33979:13;34001:53;34047:6;34042:3;34035:4;34027:6;34023:17;34001:53;:::i;:::-;34117:13;;34076:16;;;;34139:57;34117:13;34076:16;34173:4;34161:17;;34139:57;:::i;:::-;34212:20;;33772:466;-1:-1:-1;;;;33772:466:125:o;34661:125::-;34701:4;34729:1;34726;34723:8;34720:34;;;34734:18;;:::i;:::-;-1:-1:-1;34771:9:125;;34661:125::o;35093:251::-;35163:6;35216:2;35204:9;35195:7;35191:23;35187:32;35184:52;;;35232:1;35229;35222:12;35184:52;35264:9;35258:16;35283:31;35308:5;35283:31;:::i;35776:195::-;35815:3;-1:-1:-1;;35839:5:125;35836:77;35833:103;;35916:18;;:::i;:::-;-1:-1:-1;35963:1:125;35952:13;;35776:195::o;35976:184::-;36028:77;36025:1;36018:88;36125:4;36122:1;36115:15;36149:4;36146:1;36139:15;36165:112;36197:1;36223;36213:35;;36228:18;;:::i;:::-;-1:-1:-1;36262:9:125;;36165:112::o;36282:128::-;36322:3;36353:1;36349:6;36346:1;36343:13;36340:39;;;36359:18;;:::i;:::-;-1:-1:-1;36395:9:125;;36282:128::o;36830:274::-;36959:3;36997:6;36991:13;37013:53;37059:6;37054:3;37047:4;37039:6;37035:17;37013:53;:::i;:::-;37082:16;;;;;36830:274;-1:-1:-1;;36830:274:125:o;37109:184::-;37179:6;37232:2;37220:9;37211:7;37207:23;37203:32;37200:52;;;37248:1;37245;37238:12;37200:52;-1:-1:-1;37271:16:125;;37109:184;-1:-1:-1;37109:184:125:o;38012:417::-;38209:66;38201:6;38197:79;38192:3;38185:92;38167:3;38306:6;38300:13;38322:61;38376:6;38372:1;38367:3;38363:11;38356:4;38348:6;38344:17;38322:61;:::i;:::-;38403:16;;;;38421:1;38399:24;;38012:417;-1:-1:-1;;;38012:417:125:o;38434:245::-;38501:6;38554:2;38542:9;38533:7;38529:23;38525:32;38522:52;;;38570:1;38567;38560:12;38522:52;38602:9;38596:16;38621:28;38643:5;38621:28;:::i;38684:1067::-;38752:3;38790:5;38784:12;38817:6;38812:3;38805:19;38843:4;38872:2;38867:3;38863:12;38856:19;;38909:2;38902:5;38898:14;38930:1;38940:786;38954:6;38951:1;38948:13;38940:786;;;39019:6;39013:13;39055:2;39049:9;39071:35;39103:2;39071:35;:::i;:::-;39119:15;;39173:11;;;39167:18;-1:-1:-1;;;;;39284:21:125;;;39270:12;;;39263:43;39329:4;39377:11;;;39371:18;39367:27;;39353:12;;;39346:49;39418:4;39466:11;;;39460:18;39456:27;;;39442:12;;;39435:49;39507:4;39551:11;;;39545:18;39531:12;;;39524:40;39587:4;39631:11;;;39625:18;39611:12;;;39604:40;39673:4;39664:14;;;;39701:15;;;;38976:1;38969:9;38940:786;;39756:456;39830:3;39868:5;39862:12;39895:6;39890:3;39883:19;39921:4;39950:2;39945:3;39941:12;39934:19;;39987:2;39980:5;39976:14;40008:1;40018:169;40032:6;40029:1;40026:13;40018:169;;;40093:13;;40081:26;;40127:12;;;;40162:15;;;;40054:1;40047:9;40018:169;;40217:1356;40294:3;40332:5;40326:12;40359:6;40354:3;40347:19;40385:4;40426:2;40421:3;40417:12;40451:11;40478;40471:18;;40528:6;40525:1;40521:14;40514:5;40510:26;40498:38;;40570:2;40563:5;40559:14;40591:1;40601:946;40615:6;40612:1;40609:13;40601:946;;;40686:5;40680:4;40676:16;40671:3;40664:29;40722:6;40716:13;40752:4;-1:-1:-1;;;;;40862:2:125;40857;40851:9;40847:18;40841:4;40834:32;40925:2;40919;40915;40911:11;40905:18;40901:27;40896:2;40890:4;40886:13;40879:50;40952:4;41015:2;41009;41005;41001:11;40995:18;40991:27;40986:2;40980:4;40976:13;40969:50;;;41042:4;41093:2;41089;41085:11;41079:18;41132:2;41127;41121:4;41117:13;41110:25;41162:78;41236:2;41230:4;41226:13;41212:12;41162:78;:::i;:::-;41148:92;;;;41263:4;41316:2;41312;41308:11;41302:18;41280:40;;41367:4;41359:6;41355:17;41350:2;41344:4;41340:13;41333:40;;41394:73;41460:6;41444:14;41394:73;:::i;:::-;41525:12;;;;41386:81;-1:-1:-1;;;41490:15:125;;;;40637:1;40630:9;40601:946;;;-1:-1:-1;41563:4:125;;40217:1356;-1:-1:-1;;;;;;;40217:1356:125:o;41578:654::-;41985:2;41974:9;41967:21;41948:4;42011:71;42078:2;42067:9;42063:18;42055:6;42011:71;:::i;:::-;42130:9;42122:6;42118:22;42113:2;42102:9;42098:18;42091:50;42158:68;42219:6;42211;42158:68;:::i;42237:336::-;42306:6;42359:2;42347:9;42338:7;42334:23;42330:32;42327:52;;;42375:1;42372;42365:12;42327:52;42407:9;42401:16;42457:66;42450:5;42446:78;42439:5;42436:89;42426:117;;42539:1;42536;42529:12;42578:876;42846:2;42858:21;;;42928:13;;42831:18;;;42950:22;;;42798:4;;43025;;43003:2;42988:18;;;43052:15;;;42798:4;43095:218;43109:6;43106:1;43103:13;43095:218;;;43174:13;;-1:-1:-1;;;;;43170:62:125;43158:75;;43253:12;;;;43288:15;;;;43131:1;43124:9;43095:218;;;43099:3;;;43358:9;43353:3;43349:19;43344:2;43333:9;43329:18;43322:47;43386:62;43444:3;43436:6;43386:62;:::i;:::-;43378:70;42578:876;-1:-1:-1;;;;;;42578:876:125:o;43459:890::-;43554:6;43585:2;43628;43616:9;43607:7;43603:23;43599:32;43596:52;;;43644:1;43641;43634:12;43596:52;43677:9;43671:16;43710:18;43702:6;43699:30;43696:50;;;43742:1;43739;43732:12;43696:50;43765:22;;43818:4;43810:13;;43806:27;-1:-1:-1;43796:55:125;;43847:1;43844;43837:12;43796:55;43876:2;43870:9;43899:69;43915:52;43964:2;43915:52;:::i;43899:69::-;44002:15;;;44084:1;44080:10;;;;44072:19;;44068:28;;;44033:12;;;;44108:19;;;44105:39;;;44140:1;44137;44130:12;44105:39;44164:11;;;;44184:135;44200:6;44195:3;44192:15;44184:135;;;44266:10;;44254:23;;44217:12;;;;44297;;;;44184:135;;;44338:5;43459:890;-1:-1:-1;;;;;;;43459:890:125:o;48456:157::-;48486:1;48520:4;48517:1;48513:12;48544:3;48534:37;;48551:18;;:::i;:::-;48603:3;48596:4;48593:1;48589:12;48585:22;48580:27;;;48456:157;;;;:::o;48618:204::-;48656:3;48692:4;48689:1;48685:12;48724:4;48721:1;48717:12;48759:3;48753:4;48749:14;48744:3;48741:23;48738:49;;;48767:18;;:::i;:::-;48803:13;;48618:204;-1:-1:-1;;;48618:204:125:o;49899:762::-;50080:2;50069:9;50062:21;-1:-1:-1;;;;;50129:6:125;50123:13;50119:62;50114:2;50103:9;50099:18;50092:90;50043:4;50229:2;50221:6;50217:15;50211:22;50269:4;50264:2;50253:9;50249:18;50242:32;50297:78;50370:3;50359:9;50355:19;50341:12;50297:78;:::i;:::-;50283:92;;50424:2;50416:6;50412:15;50406:22;-1:-1:-1;;50482:9:125;50474:6;50470:22;50466:95;50459:4;50448:9;50444:20;50437:125;50579:76;50648:6;50632:14;50579:76;:::i;51236:348::-;51466:2;51455:9;51448:21;51429:4;51486:49;51531:2;51520:9;51516:18;51149:2;51137:15;;51184:12;51177:4;51168:14;;51161:36;51222:2;51213:12;;51072:159;51486:49;51478:57;;51571:6;51566:2;51555:9;51551:18;51544:34;51236:348;;;;:::o;51753:::-;51983:2;51972:9;51965:21;51946:4;52003:49;52048:2;52037:9;52033:18;51666:2;51654:15;;51701:12;51694:4;51685:14;;51678:36;51739:2;51730:12;;51589:159;53621:397;53851:2;53840:9;53833:21;53814:4;53871:49;53916:2;53905:9;53901:18;51149:2;51137:15;;51184:12;51177:4;51168:14;;51161:36;51222:2;51213:12;;51072:159;53871:49;53863:57;;-1:-1:-1;;;;;53960:6:125;53956:55;53951:2;53940:9;53936:18;53929:83;53621:397;;;;:::o;54023:::-;54253:2;54242:9;54235:21;54216:4;54273:49;54318:2;54307:9;54303:18;51666:2;51654:15;;51701:12;51694:4;51685:14;;51678:36;51739:2;51730:12;;51589:159;54777:261;54817:3;-1:-1:-1;;;;;54914:2:125;54911:1;54907:10;54944:2;54941:1;54937:10;54975:3;54971:2;54967:12;54962:3;54959:21;54956:47;;;54983:18;;:::i;55043:610::-;55289:13;;55232:3;;55263;;55342:4;55369:15;;;55232:3;55412:175;55426:6;55423:1;55420:13;55412:175;;;55489:13;;55475:28;;55525:14;;;;55562:15;;;;55448:1;55441:9;55412:175;;;-1:-1:-1;;55596:21:125;;;-1:-1:-1;55633:14:125;;;;;-1:-1:-1;;;55043:610:125:o;55658:228::-;55698:7;55824:1;-1:-1:-1;;55752:74:125;55749:1;55746:81;55741:1;55734:9;55727:17;55723:105;55720:131;;;55831:18;;:::i;:::-;-1:-1:-1;55871:9:125;;55658:228::o;57013:398::-;57098:12;;57066:3;;57148:4;57175:14;;;57066:3;57225:13;;57217:169;;57292:13;;57280:26;;57326:12;;;;57361:15;;;;57253:1;57246:9;57217:169;;57416:836;57880:66;57872:6;57868:79;57863:3;57856:92;57838:3;57967:66;58083:2;58074:6;58070:2;58066:15;58062:24;58058:1;58053:3;58049:11;58042:45;58138:2;58129:6;58125:2;58121:15;58117:24;58112:2;58107:3;58103:12;58096:46;;58158:88;58195:50;58241:2;58236:3;58232:12;58224:6;58195:50;:::i;:::-;58187:6;58158:88;:::i;58257:668::-;58322:5;58375:3;58368:4;58360:6;58356:17;58352:27;58342:55;;58393:1;58390;58383:12;58342:55;58422:6;58416:13;58448:4;58472:69;58488:52;58537:2;58488:52;:::i;58472:69::-;58575:15;;;58661:1;58657:10;;;;58645:23;;58641:32;;;58606:12;;;;58685:15;;;58682:35;;;58713:1;58710;58703:12;58682:35;58749:2;58741:6;58737:15;58761:135;58777:6;58772:3;58769:15;58761:135;;;58843:10;;58831:23;;58874:12;;;;58794;;58761:135;;58930:614;59059:6;59067;59120:2;59108:9;59099:7;59095:23;59091:32;59088:52;;;59136:1;59133;59126:12;59088:52;59169:9;59163:16;59198:18;59239:2;59231:6;59228:14;59225:34;;;59255:1;59252;59245:12;59225:34;59278:72;59342:7;59333:6;59322:9;59318:22;59278:72;:::i;:::-;59268:82;;59396:2;59385:9;59381:18;59375:25;59359:41;;59425:2;59415:8;59412:16;59409:36;;;59441:1;59438;59431:12;59409:36;;59464:74;59530:7;59519:8;59508:9;59504:24;59464:74;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_deployAndConfigurePrecompiledOptimizedConsideration()": "4f3f8651",
    "_deployAndConfigurePrecompiledReferenceConsideration()": "79a59ce2",
    "bound(uint256,uint256,uint256)": "5a6c1eed",
    "createMirrorOrderParameters((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),address,address,bytes32)": "4a6b6d1d",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "executeWithBatch1155((address,(uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[]))": "c9ed238a",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testExecuteWithBatch1155(((uint8,address,address,uint128,uint128,uint8)[10],(address,address,(uint256,uint128)[10])[10]))": "142bc698",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/foundry/conduit/ConduitExecuteWithBatch1155.t.sol",
    "id": 74641,
    "exportedSymbols": {
      "BaseConduitTest": [
        73670
      ],
      "Conduit": [
        315
      ],
      "ConduitBatch1155Transfer": [
        1135
      ],
      "ConduitController": [
        1073
      ],
      "ConduitExecuteWithBatch1155Test": [
        74640
      ],
      "ConduitItemType": [
        1104
      ],
      "ConduitTransfer": [
        1122
      ],
      "ERC1155Recipient": [
        77085
      ],
      "ERC721Recipient": [
        77111
      ],
      "TestERC1155": [
        9875
      ],
      "TestERC20": [
        9971
      ],
      "TestERC721": [
        10007
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:5049:108",
    "nodes": [
      {
        "id": 74204,
        "nodeType": "PragmaDirective",
        "src": "33:24:108",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 74206,
        "nodeType": "ImportDirective",
        "src": "59:65:108",
        "absolutePath": "contracts/conduit/Conduit.sol",
        "file": "../../../contracts/conduit/Conduit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 316,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74205,
              "name": "Conduit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 315,
              "src": "68:7:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74208,
        "nodeType": "ImportDirective",
        "src": "125:85:108",
        "absolutePath": "contracts/conduit/ConduitController.sol",
        "file": "../../../contracts/conduit/ConduitController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 1074,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74207,
              "name": "ConduitController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1073,
              "src": "134:17:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74210,
        "nodeType": "ImportDirective",
        "src": "211:56:108",
        "absolutePath": "test/foundry/conduit/BaseConduitTest.sol",
        "file": "./BaseConduitTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 73671,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74209,
              "name": "BaseConduitTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73670,
              "src": "220:15:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74214,
        "nodeType": "ImportDirective",
        "src": "268:127:108",
        "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
        "file": "../../../contracts/conduit/lib/ConduitStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 1136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74211,
              "name": "ConduitTransfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1122,
              "src": "277:15:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 74212,
              "name": "ConduitBatch1155Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1135,
              "src": "294:24:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 74213,
              "name": "ConduitItemType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1104,
              "src": "320:15:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74216,
        "nodeType": "ImportDirective",
        "src": "396:70:108",
        "absolutePath": "contracts/test/TestERC1155.sol",
        "file": "../../../contracts/test/TestERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 9876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74215,
              "name": "TestERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9875,
              "src": "405:11:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74218,
        "nodeType": "ImportDirective",
        "src": "467:66:108",
        "absolutePath": "contracts/test/TestERC20.sol",
        "file": "../../../contracts/test/TestERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 9972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74217,
              "name": "TestERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9971,
              "src": "476:9:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74220,
        "nodeType": "ImportDirective",
        "src": "534:68:108",
        "absolutePath": "contracts/test/TestERC721.sol",
        "file": "../../../contracts/test/TestERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 10008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74219,
              "name": "TestERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10007,
              "src": "543:10:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74222,
        "nodeType": "ImportDirective",
        "src": "603:63:108",
        "absolutePath": "test/foundry/utils/ERC721Recipient.sol",
        "file": "../utils/ERC721Recipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 77112,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74221,
              "name": "ERC721Recipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77111,
              "src": "612:15:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74224,
        "nodeType": "ImportDirective",
        "src": "667:65:108",
        "absolutePath": "test/foundry/utils/ERC1155Recipient.sol",
        "file": "../utils/ERC1155Recipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74641,
        "sourceUnit": 77086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74223,
              "name": "ERC1155Recipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77085,
              "src": "676:16:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74640,
        "nodeType": "ContractDefinition",
        "src": "734:4347:108",
        "nodes": [
          {
            "id": 74237,
            "nodeType": "StructDefinition",
            "src": "800:138:108",
            "canonicalName": "ConduitExecuteWithBatch1155Test.FuzzInputs",
            "members": [
              {
                "constant": false,
                "id": 74231,
                "mutability": "mutable",
                "name": "transferIntermediates",
                "nameLocation": "860:21:108",
                "nodeType": "VariableDeclaration",
                "scope": 74237,
                "src": "828:53:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ConduitTransferIntermediate_$72347_storage_$10_storage_ptr",
                  "typeString": "struct BaseConduitTest.ConduitTransferIntermediate[10]"
                },
                "typeName": {
                  "baseType": {
                    "id": 74228,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74227,
                      "name": "ConduitTransferIntermediate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72347,
                      "src": "828:27:108"
                    },
                    "referencedDeclaration": 72347,
                    "src": "828:27:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConduitTransferIntermediate_$72347_storage_ptr",
                      "typeString": "struct BaseConduitTest.ConduitTransferIntermediate"
                    }
                  },
                  "id": 74230,
                  "length": {
                    "hexValue": "3130",
                    "id": 74229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "856:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "828:31:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConduitTransferIntermediate_$72347_storage_$10_storage_ptr",
                    "typeString": "struct BaseConduitTest.ConduitTransferIntermediate[10]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74236,
                "mutability": "mutable",
                "name": "batchIntermediates",
                "nameLocation": "913:18:108",
                "nodeType": "VariableDeclaration",
                "scope": 74237,
                "src": "891:40:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_storage_$10_storage_ptr",
                  "typeString": "struct BaseConduitTest.BatchIntermediate[10]"
                },
                "typeName": {
                  "baseType": {
                    "id": 74233,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74232,
                      "name": "BatchIntermediate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72362,
                      "src": "891:17:108"
                    },
                    "referencedDeclaration": 72362,
                    "src": "891:17:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_storage_ptr",
                      "typeString": "struct BaseConduitTest.BatchIntermediate"
                    }
                  },
                  "id": 74235,
                  "length": {
                    "hexValue": "3130",
                    "id": 74234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "909:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "891:21:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_storage_$10_storage_ptr",
                    "typeString": "struct BaseConduitTest.BatchIntermediate[10]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FuzzInputs",
            "nameLocation": "807:10:108",
            "scope": 74640,
            "visibility": "public"
          },
          {
            "id": 74249,
            "nodeType": "StructDefinition",
            "src": "944:135:108",
            "canonicalName": "ConduitExecuteWithBatch1155Test.Context",
            "members": [
              {
                "constant": false,
                "id": 74240,
                "mutability": "mutable",
                "name": "conduit",
                "nameLocation": "977:7:108",
                "nodeType": "VariableDeclaration",
                "scope": 74249,
                "src": "969:15:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Conduit_$315",
                  "typeString": "contract Conduit"
                },
                "typeName": {
                  "id": 74239,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 74238,
                    "name": "Conduit",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 315,
                    "src": "969:7:108"
                  },
                  "referencedDeclaration": 315,
                  "src": "969:7:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Conduit_$315",
                    "typeString": "contract Conduit"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74244,
                "mutability": "mutable",
                "name": "transfers",
                "nameLocation": "1012:9:108",
                "nodeType": "VariableDeclaration",
                "scope": 74249,
                "src": "994:27:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_storage_$dyn_storage_ptr",
                  "typeString": "struct ConduitTransfer[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 74242,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74241,
                      "name": "ConduitTransfer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1122,
                      "src": "994:15:108"
                    },
                    "referencedDeclaration": 1122,
                    "src": "994:15:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConduitTransfer_$1122_storage_ptr",
                      "typeString": "struct ConduitTransfer"
                    }
                  },
                  "id": 74243,
                  "nodeType": "ArrayTypeName",
                  "src": "994:17:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_storage_$dyn_storage_ptr",
                    "typeString": "struct ConduitTransfer[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74248,
                "mutability": "mutable",
                "name": "batchTransfers",
                "nameLocation": "1058:14:108",
                "nodeType": "VariableDeclaration",
                "scope": 74249,
                "src": "1031:41:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                  "typeString": "struct ConduitBatch1155Transfer[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 74246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74245,
                      "name": "ConduitBatch1155Transfer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1135,
                      "src": "1031:24:108"
                    },
                    "referencedDeclaration": 1135,
                    "src": "1031:24:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                      "typeString": "struct ConduitBatch1155Transfer"
                    }
                  },
                  "id": 74247,
                  "nodeType": "ArrayTypeName",
                  "src": "1031:26:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                    "typeString": "struct ConduitBatch1155Transfer[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Context",
            "nameLocation": "951:7:108",
            "scope": 74640,
            "visibility": "public"
          },
          {
            "id": 74278,
            "nodeType": "FunctionDefinition",
            "src": "1085:203:108",
            "body": {
              "id": 74277,
              "nodeType": "Block",
              "src": "1182:106:108",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 74265,
                        "nodeType": "Block",
                        "src": "1208:2:108",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 74266,
                      "nodeType": "TryCatchClause",
                      "src": "1208:2:108"
                    },
                    {
                      "block": {
                        "id": 74274,
                        "nodeType": "Block",
                        "src": "1239:43:108",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 74271,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74268,
                                  "src": "1264:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 74270,
                                "name": "assertPass",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77001,
                                "src": "1253:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) view"
                                }
                              },
                              "id": 74272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1253:18:108",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 74273,
                            "nodeType": "ExpressionStatement",
                            "src": "1253:18:108"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 74275,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 74269,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 74268,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1231:6:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74275,
                            "src": "1218:19:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 74267,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1218:5:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1217:21:108"
                      },
                      "src": "1211:71:108"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 74263,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74259,
                        "src": "1199:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      ],
                      "id": 74262,
                      "name": "fn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74256,
                      "src": "1196:2:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context memory) external"
                      }
                    },
                    "id": 74264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:11:108",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74276,
                  "nodeType": "TryStatement",
                  "src": "1192:90:108"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test",
            "nameLocation": "1094:4:108",
            "parameters": {
              "id": 74260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74256,
                  "mutability": "mutable",
                  "name": "fn",
                  "nameLocation": "1133:2:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 74278,
                  "src": "1099:36:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                    "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context) external"
                  },
                  "typeName": {
                    "id": 74255,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 74253,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 74252,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 74255,
                          "src": "1108:14:108",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                          },
                          "typeName": {
                            "id": 74251,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 74250,
                              "name": "Context",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 74249,
                              "src": "1108:7:108"
                            },
                            "referencedDeclaration": 74249,
                            "src": "1108:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Context_$74249_storage_ptr",
                              "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1107:16:108"
                    },
                    "returnParameterTypes": {
                      "id": 74254,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "1133:0:108"
                    },
                    "src": "1099:36:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                      "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context) external"
                    },
                    "visibility": "external"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74259,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1152:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 74278,
                  "src": "1137:22:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                    "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                  },
                  "typeName": {
                    "id": 74258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74257,
                      "name": "Context",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74249,
                      "src": "1137:7:108"
                    },
                    "referencedDeclaration": 74249,
                    "src": "1137:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Context_$74249_storage_ptr",
                      "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:62:108"
            },
            "returnParameters": {
              "id": 74261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:0:108"
            },
            "scope": 74640,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74405,
            "nodeType": "FunctionDefinition",
            "src": "1294:1429:108",
            "body": {
              "id": 74404,
              "nodeType": "Block",
              "src": "1361:1362:108",
              "statements": [
                {
                  "assignments": [
                    74288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74288,
                      "mutability": "mutable",
                      "name": "transfers",
                      "nameLocation": "1396:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 74404,
                      "src": "1371:34:108",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ConduitTransfer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74286,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74285,
                            "name": "ConduitTransfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1122,
                            "src": "1371:15:108"
                          },
                          "referencedDeclaration": 1122,
                          "src": "1371:15:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_storage_ptr",
                            "typeString": "struct ConduitTransfer"
                          }
                        },
                        "id": 74287,
                        "nodeType": "ArrayTypeName",
                        "src": "1371:17:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74295,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 74293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1408:21:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ConduitTransfer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74290,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74289,
                            "name": "ConduitTransfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1122,
                            "src": "1412:15:108"
                          },
                          "referencedDeclaration": 1122,
                          "src": "1412:15:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_storage_ptr",
                            "typeString": "struct ConduitTransfer"
                          }
                        },
                        "id": 74291,
                        "nodeType": "ArrayTypeName",
                        "src": "1412:17:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        }
                      }
                    },
                    "id": 74294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:24:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ConduitTransfer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:61:108"
                },
                {
                  "body": {
                    "id": 74320,
                    "nodeType": "Block",
                    "src": "1506:229:108",
                    "statements": [
                      {
                        "expression": {
                          "id": 74318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74308,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74288,
                            "src": "1520:9:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 74310,
                                "name": "transfers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74288,
                                "src": "1576:9:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitTransfer memory[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 74312,
                                        "name": "inputs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74281,
                                        "src": "1661:6:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FuzzInputs_$74237_memory_ptr",
                                          "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs memory"
                                        }
                                      },
                                      "id": 74313,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferIntermediates",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 74231,
                                      "src": "1661:28:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ConduitTransferIntermediate_$72347_memory_ptr_$10_memory_ptr",
                                        "typeString": "struct BaseConduitTest.ConduitTransferIntermediate memory[10] memory"
                                      }
                                    },
                                    "id": 74315,
                                    "indexExpression": {
                                      "id": 74314,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74297,
                                      "src": "1690:1:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1661:31:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransferIntermediate_$72347_memory_ptr",
                                      "typeString": "struct BaseConduitTest.ConduitTransferIntermediate memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransferIntermediate_$72347_memory_ptr",
                                      "typeString": "struct BaseConduitTest.ConduitTransferIntermediate memory"
                                    }
                                  ],
                                  "id": 74311,
                                  "name": "deployTokenAndCreateConduitTransfers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72902,
                                  "src": "1603:36:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransferIntermediate_$72347_memory_ptr_$returns$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (struct BaseConduitTest.ConduitTransferIntermediate memory) returns (struct ConduitTransfer memory[] memory)"
                                  }
                                },
                                "id": 74316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1603:107:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitTransfer memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitTransfer memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitTransfer memory[] memory"
                                }
                              ],
                              "id": 74309,
                              "name": "extendConduitTransferArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                72742,
                                72821
                              ],
                              "referencedDeclaration": 72742,
                              "src": "1532:26:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitTransfer memory[] memory) pure returns (struct ConduitTransfer memory[] memory)"
                              }
                            },
                            "id": 74317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:192:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            }
                          },
                          "src": "1520:204:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ConduitTransfer memory[] memory"
                          }
                        },
                        "id": 74319,
                        "nodeType": "ExpressionStatement",
                        "src": "1520:204:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74300,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74297,
                      "src": "1460:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74301,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74281,
                          "src": "1464:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FuzzInputs_$74237_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs memory"
                          }
                        },
                        "id": 74302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferIntermediates",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74231,
                        "src": "1464:28:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransferIntermediate_$72347_memory_ptr_$10_memory_ptr",
                          "typeString": "struct BaseConduitTest.ConduitTransferIntermediate memory[10] memory"
                        }
                      },
                      "id": 74303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1464:35:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1460:39:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74321,
                  "initializationExpression": {
                    "assignments": [
                      74297
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74297,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1453:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 74321,
                        "src": "1447:7:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 74296,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1447:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74299,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1457:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1447:11:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1501:3:108",
                      "subExpression": {
                        "id": 74305,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74297,
                        "src": "1503:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 74307,
                    "nodeType": "ExpressionStatement",
                    "src": "1501:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "1442:293:108"
                },
                {
                  "assignments": [
                    74326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74326,
                      "mutability": "mutable",
                      "name": "batchTransfers",
                      "nameLocation": "1791:14:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 74404,
                      "src": "1745:60:108",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ConduitBatch1155Transfer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74324,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74323,
                            "name": "ConduitBatch1155Transfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1135,
                            "src": "1745:24:108"
                          },
                          "referencedDeclaration": 1135,
                          "src": "1745:24:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer"
                          }
                        },
                        "id": 74325,
                        "nodeType": "ArrayTypeName",
                        "src": "1745:26:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74333,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 74331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1839:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 74330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1808:30:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ConduitBatch1155Transfer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74328,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74327,
                            "name": "ConduitBatch1155Transfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1135,
                            "src": "1812:24:108"
                          },
                          "referencedDeclaration": 1135,
                          "src": "1812:24:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer"
                          }
                        },
                        "id": 74329,
                        "nodeType": "ArrayTypeName",
                        "src": "1812:26:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_storage_$dyn_storage_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        }
                      }
                    },
                    "id": 74332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:33:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1745:96:108"
                },
                {
                  "body": {
                    "id": 74358,
                    "nodeType": "Block",
                    "src": "1912:244:108",
                    "statements": [
                      {
                        "expression": {
                          "id": 74356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74346,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74326,
                            "src": "1926:14:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 74348,
                                "name": "batchTransfers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74326,
                                "src": "1987:14:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 74350,
                                        "name": "inputs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74281,
                                        "src": "2085:6:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FuzzInputs_$74237_memory_ptr",
                                          "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs memory"
                                        }
                                      },
                                      "id": 74351,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "batchIntermediates",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 74236,
                                      "src": "2085:25:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_memory_ptr_$10_memory_ptr",
                                        "typeString": "struct BaseConduitTest.BatchIntermediate memory[10] memory"
                                      }
                                    },
                                    "id": 74353,
                                    "indexExpression": {
                                      "id": 74352,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74335,
                                      "src": "2111:1:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2085:28:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_memory_ptr",
                                      "typeString": "struct BaseConduitTest.BatchIntermediate memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_BatchIntermediate_$72362_memory_ptr",
                                      "typeString": "struct BaseConduitTest.BatchIntermediate memory"
                                    }
                                  ],
                                  "id": 74349,
                                  "name": "deployTokenAndCreateConduitBatch1155Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73028,
                                  "src": "2019:44:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BatchIntermediate_$72362_memory_ptr_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (struct BaseConduitTest.BatchIntermediate memory) returns (struct ConduitBatch1155Transfer memory[] memory)"
                                  }
                                },
                                "id": 74354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2019:112:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                                }
                              ],
                              "id": 74347,
                              "name": "extendConduitTransferArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                72742,
                                72821
                              ],
                              "referencedDeclaration": 72821,
                              "src": "1943:26:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (struct ConduitBatch1155Transfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) pure returns (struct ConduitBatch1155Transfer memory[] memory)"
                              }
                            },
                            "id": 74355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1943:202:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "src": "1926:219:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                          }
                        },
                        "id": 74357,
                        "nodeType": "ExpressionStatement",
                        "src": "1926:219:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74338,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74335,
                      "src": "1869:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74339,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74281,
                          "src": "1873:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FuzzInputs_$74237_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs memory"
                          }
                        },
                        "id": 74340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchIntermediates",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74236,
                        "src": "1873:25:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchIntermediate_$72362_memory_ptr_$10_memory_ptr",
                          "typeString": "struct BaseConduitTest.BatchIntermediate memory[10] memory"
                        }
                      },
                      "id": 74341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1873:32:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1869:36:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74359,
                  "initializationExpression": {
                    "assignments": [
                      74335
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74335,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "1862:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 74359,
                        "src": "1856:7:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 74334,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1856:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74337,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1866:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1856:11:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1907:3:108",
                      "subExpression": {
                        "id": 74343,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74335,
                        "src": "1909:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 74345,
                    "nodeType": "ExpressionStatement",
                    "src": "1907:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "1851:305:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74361,
                        "name": "transfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74288,
                        "src": "2184:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      ],
                      "id": 74360,
                      "name": "makeRecipientsSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73086,
                        73151
                      ],
                      "referencedDeclaration": 73086,
                      "src": "2165:18:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitTransfer memory[] memory)"
                      }
                    },
                    "id": 74362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:29:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74363,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:29:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74365,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74326,
                        "src": "2223:14:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74364,
                      "name": "makeRecipientsSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73086,
                        73151
                      ],
                      "referencedDeclaration": 73151,
                      "src": "2204:18:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:34:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74367,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:34:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74369,
                        "name": "transfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74288,
                        "src": "2289:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      ],
                      "id": 74368,
                      "name": "mintTokensAndSetTokenApprovalsForConduit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73356,
                        73460
                      ],
                      "referencedDeclaration": 73356,
                      "src": "2248:40:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitTransfer memory[] memory)"
                      }
                    },
                    "id": 74370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:51:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74371,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:51:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74373,
                        "name": "transfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74288,
                        "src": "2337:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      ],
                      "id": 74372,
                      "name": "updateExpectedTokenBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73582,
                        73609
                      ],
                      "referencedDeclaration": 73582,
                      "src": "2309:27:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitTransfer memory[] memory)"
                      }
                    },
                    "id": 74374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:38:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74375,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:38:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74377,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74326,
                        "src": "2398:14:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74376,
                      "name": "mintTokensAndSetTokenApprovalsForConduit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73356,
                        73460
                      ],
                      "referencedDeclaration": 73460,
                      "src": "2357:40:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:56:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74379,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:56:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74381,
                        "name": "batchTransfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74326,
                        "src": "2451:14:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "id": 74380,
                      "name": "updateExpectedTokenBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73582,
                        73609
                      ],
                      "referencedDeclaration": 73609,
                      "src": "2423:27:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct ConduitBatch1155Transfer memory[] memory)"
                      }
                    },
                    "id": 74382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:43:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74383,
                  "nodeType": "ExpressionStatement",
                  "src": "2423:43:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74385,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2495:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConduitExecuteWithBatch1155Test_$74640",
                            "typeString": "contract ConduitExecuteWithBatch1155Test"
                          }
                        },
                        "id": 74386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executeWithBatch1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74639,
                        "src": "2495:25:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context memory) external"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74388,
                            "name": "referenceConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75357,
                            "src": "2542:16:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            }
                          },
                          {
                            "id": 74389,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74288,
                            "src": "2560:9:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            }
                          },
                          {
                            "id": 74390,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74326,
                            "src": "2571:14:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          ],
                          "id": 74387,
                          "name": "Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74249,
                          "src": "2534:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Context_$74249_storage_ptr_$",
                            "typeString": "type(struct ConduitExecuteWithBatch1155Test.Context storage pointer)"
                          }
                        },
                        "id": 74391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:52:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context memory) external"
                        },
                        {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      ],
                      "id": 74384,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74278,
                      "src": "2477:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$_$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct ConduitExecuteWithBatch1155Test.Context memory) external,struct ConduitExecuteWithBatch1155Test.Context memory)"
                      }
                    },
                    "id": 74392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:119:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74393,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:119:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74395,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2624:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConduitExecuteWithBatch1155Test_$74640",
                            "typeString": "contract ConduitExecuteWithBatch1155Test"
                          }
                        },
                        "id": 74396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executeWithBatch1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74639,
                        "src": "2624:25:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context memory) external"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74398,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75360,
                            "src": "2671:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            }
                          },
                          {
                            "id": 74399,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74288,
                            "src": "2680:9:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            }
                          },
                          {
                            "id": 74400,
                            "name": "batchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74326,
                            "src": "2691:14:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Conduit_$315",
                              "typeString": "contract Conduit"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          ],
                          "id": 74397,
                          "name": "Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74249,
                          "src": "2663:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Context_$74249_storage_ptr_$",
                            "typeString": "type(struct ConduitExecuteWithBatch1155Test.Context storage pointer)"
                          }
                        },
                        "id": 74401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2663:43:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                          "typeString": "function (struct ConduitExecuteWithBatch1155Test.Context memory) external"
                        },
                        {
                          "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                          "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                        }
                      ],
                      "id": 74394,
                      "name": "test",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74278,
                      "src": "2606:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_external_nonpayable$_t_struct$_Context_$74249_memory_ptr_$returns$__$_$_t_struct$_Context_$74249_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct ConduitExecuteWithBatch1155Test.Context memory) external,struct ConduitExecuteWithBatch1155Test.Context memory)"
                      }
                    },
                    "id": 74402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:110:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74403,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:110:108"
                }
              ]
            },
            "functionSelector": "142bc698",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExecuteWithBatch1155",
            "nameLocation": "1303:24:108",
            "parameters": {
              "id": 74282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74281,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "1346:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 74405,
                  "src": "1328:24:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FuzzInputs_$74237_memory_ptr",
                    "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs"
                  },
                  "typeName": {
                    "id": 74280,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74279,
                      "name": "FuzzInputs",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74237,
                      "src": "1328:10:108"
                    },
                    "referencedDeclaration": 74237,
                    "src": "1328:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzInputs_$74237_storage_ptr",
                      "typeString": "struct ConduitExecuteWithBatch1155Test.FuzzInputs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:26:108"
            },
            "returnParameters": {
              "id": 74283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:108"
            },
            "scope": 74640,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74639,
            "nodeType": "FunctionDefinition",
            "src": "2729:2350:108",
            "body": {
              "id": 74638,
              "nodeType": "Block",
              "src": "2802:2277:108",
              "statements": [
                {
                  "assignments": [
                    74414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74414,
                      "mutability": "mutable",
                      "name": "magicValue",
                      "nameLocation": "2819:10:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 74638,
                      "src": "2812:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 74413,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2812:6:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74423,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74418,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74408,
                          "src": "2882:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                          }
                        },
                        "id": 74419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74244,
                        "src": "2882:17:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 74420,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74408,
                          "src": "2913:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                          }
                        },
                        "id": 74421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchTransfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74248,
                        "src": "2913:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 74415,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74408,
                          "src": "2832:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                          }
                        },
                        "id": 74416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "conduit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74240,
                        "src": "2832:15:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Conduit_$315",
                          "typeString": "contract Conduit"
                        }
                      },
                      "id": 74417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeWithBatch1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "2832:36:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                      }
                    },
                    "id": 74422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:113:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2812:133:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74425,
                        "name": "magicValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74414,
                        "src": "2964:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 74426,
                            "name": "Conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2976:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Conduit_$315_$",
                              "typeString": "type(contract Conduit)"
                            }
                          },
                          "id": 74427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "executeWithBatch1155",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 195,
                          "src": "2976:28:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1122_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1135_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function Conduit.executeWithBatch1155(struct ConduitTransfer calldata[] calldata,struct ConduitBatch1155Transfer calldata[] calldata) returns (bytes4)"
                          }
                        },
                        "id": 74428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2976:37:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 74424,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12583,
                        12608,
                        12621,
                        12637,
                        12697,
                        12757,
                        12819,
                        12881,
                        10478,
                        10503,
                        10533,
                        10558,
                        10617,
                        10642,
                        10672,
                        10697,
                        11797,
                        11832
                      ],
                      "referencedDeclaration": 10533,
                      "src": "2955:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 74429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:59:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74430,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:59:108"
                },
                {
                  "body": {
                    "id": 74526,
                    "nodeType": "Block",
                    "src": "3080:968:108",
                    "statements": [
                      {
                        "assignments": [
                          74445
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74445,
                            "mutability": "mutable",
                            "name": "transfer",
                            "nameLocation": "3117:8:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74526,
                            "src": "3094:31:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                              "typeString": "struct ConduitTransfer"
                            },
                            "typeName": {
                              "id": 74444,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 74443,
                                "name": "ConduitTransfer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1122,
                                "src": "3094:15:108"
                              },
                              "referencedDeclaration": 1122,
                              "src": "3094:15:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitTransfer_$1122_storage_ptr",
                                "typeString": "struct ConduitTransfer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74450,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 74446,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74408,
                              "src": "3128:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                                "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                              }
                            },
                            "id": 74447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74244,
                            "src": "3128:17:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitTransfer memory[] memory"
                            }
                          },
                          "id": 74449,
                          "indexExpression": {
                            "id": 74448,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74432,
                            "src": "3146:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3128:20:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                            "typeString": "struct ConduitTransfer memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3094:54:108"
                      },
                      {
                        "assignments": [
                          74453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74453,
                            "mutability": "mutable",
                            "name": "itemType",
                            "nameLocation": "3178:8:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74526,
                            "src": "3162:24:108",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                              "typeString": "enum ConduitItemType"
                            },
                            "typeName": {
                              "id": 74452,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 74451,
                                "name": "ConduitItemType",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1104,
                                "src": "3162:15:108"
                              },
                              "referencedDeclaration": 1104,
                              "src": "3162:15:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74456,
                        "initialValue": {
                          "expression": {
                            "id": 74454,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74445,
                            "src": "3189:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                              "typeString": "struct ConduitTransfer memory"
                            }
                          },
                          "id": 74455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "itemType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1111,
                          "src": "3189:17:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                            "typeString": "enum ConduitItemType"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3162:44:108"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 74460,
                                    "name": "transfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74445,
                                    "src": "3242:8:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                      "typeString": "struct ConduitTransfer memory"
                                    }
                                  },
                                  "id": 74461,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "itemType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1111,
                                  "src": "3242:17:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                    "typeString": "enum ConduitItemType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                    "typeString": "enum ConduitItemType"
                                  }
                                ],
                                "id": 74459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3234:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 74458,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3234:7:108",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 74462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3234:26:108",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 74457,
                            "name": "log_uint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10183,
                            "src": "3225:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 74463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3225:36:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74464,
                        "nodeType": "EmitStatement",
                        "src": "3220:41:108"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                            "typeString": "enum ConduitItemType"
                          },
                          "id": 74468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74465,
                            "name": "itemType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74453,
                            "src": "3280:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 74466,
                              "name": "ConduitItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "3292:15:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1104_$",
                                "typeString": "type(enum ConduitItemType)"
                              }
                            },
                            "id": 74467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1101,
                            "src": "3292:21:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "src": "3280:33:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                              "typeString": "enum ConduitItemType"
                            },
                            "id": 74487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 74484,
                              "name": "itemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74453,
                              "src": "3509:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 74485,
                                "name": "ConduitItemType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1104,
                                "src": "3521:15:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1104_$",
                                  "typeString": "type(enum ConduitItemType)"
                                }
                              },
                              "id": 74486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1103,
                              "src": "3521:23:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "src": "3509:35:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                "typeString": "enum ConduitItemType"
                              },
                              "id": 74508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 74505,
                                "name": "itemType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74453,
                                "src": "3833:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 74506,
                                  "name": "ConduitItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1104,
                                  "src": "3845:15:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1104_$",
                                    "typeString": "type(enum ConduitItemType)"
                                  }
                                },
                                "id": 74507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC721",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1102,
                                "src": "3845:22:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$1104",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "src": "3833:34:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 74523,
                            "nodeType": "IfStatement",
                            "src": "3829:209:108",
                            "trueBody": {
                              "id": 74522,
                              "nodeType": "Block",
                              "src": "3869:169:108",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 74515,
                                              "name": "transfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 74445,
                                              "src": "3952:8:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                                "typeString": "struct ConduitTransfer memory"
                                              }
                                            },
                                            "id": 74516,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "identifier",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1119,
                                            "src": "3952:19:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 74511,
                                                  "name": "transfer",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 74445,
                                                  "src": "3928:8:108",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                                    "typeString": "struct ConduitTransfer memory"
                                                  }
                                                },
                                                "id": 74512,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "token",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1113,
                                                "src": "3928:14:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 74510,
                                              "name": "TestERC721",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10007,
                                              "src": "3917:10:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_TestERC721_$10007_$",
                                                "typeString": "type(contract TestERC721)"
                                              }
                                            },
                                            "id": 74513,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3917:26:108",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_TestERC721_$10007",
                                              "typeString": "contract TestERC721"
                                            }
                                          },
                                          "id": 74514,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "ownerOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 81123,
                                          "src": "3917:34:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                            "typeString": "function (uint256) view external returns (address)"
                                          }
                                        },
                                        "id": 74517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3917:55:108",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 74518,
                                          "name": "transfer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 74445,
                                          "src": "3994:8:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                            "typeString": "struct ConduitTransfer memory"
                                          }
                                        },
                                        "id": 74519,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1117,
                                        "src": "3994:11:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 74509,
                                      "name": "assertEq",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        12583,
                                        12608,
                                        12621,
                                        12637,
                                        12697,
                                        12757,
                                        12819,
                                        12881,
                                        10478,
                                        10503,
                                        10533,
                                        10558,
                                        10617,
                                        10642,
                                        10672,
                                        10697,
                                        11797,
                                        11832
                                      ],
                                      "referencedDeclaration": 10478,
                                      "src": "3887:8:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                        "typeString": "function (address,address)"
                                      }
                                    },
                                    "id": 74520,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3887:136:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 74521,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3887:136:108"
                                }
                              ]
                            }
                          },
                          "id": 74524,
                          "nodeType": "IfStatement",
                          "src": "3505:533:108",
                          "trueBody": {
                            "id": 74504,
                            "nodeType": "Block",
                            "src": "3546:277:108",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 74494,
                                            "name": "transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74445,
                                            "src": "3657:8:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                              "typeString": "struct ConduitTransfer memory"
                                            }
                                          },
                                          "id": 74495,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1117,
                                          "src": "3657:11:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 74496,
                                            "name": "transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74445,
                                            "src": "3694:8:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                              "typeString": "struct ConduitTransfer memory"
                                            }
                                          },
                                          "id": 74497,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "identifier",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1119,
                                          "src": "3694:19:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 74490,
                                                "name": "transfer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 74445,
                                                "src": "3606:8:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                                  "typeString": "struct ConduitTransfer memory"
                                                }
                                              },
                                              "id": 74491,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "token",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1113,
                                              "src": "3606:14:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 74489,
                                            "name": "TestERC1155",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9875,
                                            "src": "3594:11:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_TestERC1155_$9875_$",
                                              "typeString": "type(contract TestERC1155)"
                                            }
                                          },
                                          "id": 74492,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3594:27:108",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_TestERC1155_$9875",
                                            "typeString": "contract TestERC1155"
                                          }
                                        },
                                        "id": 74493,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 80036,
                                        "src": "3594:37:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (address,uint256) view external returns (uint256)"
                                        }
                                      },
                                      "id": 74498,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3594:141:108",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 74500,
                                          "name": "transfer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 74445,
                                          "src": "3781:8:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                            "typeString": "struct ConduitTransfer memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                            "typeString": "struct ConduitTransfer memory"
                                          }
                                        ],
                                        "id": 74499,
                                        "name": "getExpectedTokenBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 73480,
                                        "src": "3757:23:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_ConduitTransfer_$1122_memory_ptr_$returns$_t_uint256_$",
                                          "typeString": "function (struct ConduitTransfer memory) view returns (uint256)"
                                        }
                                      },
                                      "id": 74501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3757:33:108",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 74488,
                                    "name": "assertEq",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      12583,
                                      12608,
                                      12621,
                                      12637,
                                      12697,
                                      12757,
                                      12819,
                                      12881,
                                      10478,
                                      10503,
                                      10533,
                                      10558,
                                      10617,
                                      10642,
                                      10672,
                                      10697,
                                      11797,
                                      11832
                                    ],
                                    "referencedDeclaration": 10672,
                                    "src": "3564:8:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                      "typeString": "function (uint256,uint256)"
                                    }
                                  },
                                  "id": 74502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3564:244:108",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 74503,
                                "nodeType": "ExpressionStatement",
                                "src": "3564:244:108"
                              }
                            ]
                          }
                        },
                        "id": 74525,
                        "nodeType": "IfStatement",
                        "src": "3276:762:108",
                        "trueBody": {
                          "id": 74483,
                          "nodeType": "Block",
                          "src": "3315:184:108",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 74475,
                                          "name": "transfer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 74445,
                                          "src": "3399:8:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                            "typeString": "struct ConduitTransfer memory"
                                          }
                                        },
                                        "id": 74476,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1117,
                                        "src": "3399:11:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 74471,
                                              "name": "transfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 74445,
                                              "src": "3373:8:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                                "typeString": "struct ConduitTransfer memory"
                                              }
                                            },
                                            "id": 74472,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "token",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1113,
                                            "src": "3373:14:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 74470,
                                          "name": "TestERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9971,
                                          "src": "3363:9:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_TestERC20_$9971_$",
                                            "typeString": "type(contract TestERC20)"
                                          }
                                        },
                                        "id": 74473,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3363:25:108",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TestERC20_$9971",
                                          "typeString": "contract TestERC20"
                                        }
                                      },
                                      "id": 74474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 80697,
                                      "src": "3363:35:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 74477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3363:48:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 74479,
                                        "name": "transfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74445,
                                        "src": "3457:8:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                          "typeString": "struct ConduitTransfer memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1122_memory_ptr",
                                          "typeString": "struct ConduitTransfer memory"
                                        }
                                      ],
                                      "id": 74478,
                                      "name": "getExpectedTokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73480,
                                      "src": "3433:23:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_struct$_ConduitTransfer_$1122_memory_ptr_$returns$_t_uint256_$",
                                        "typeString": "function (struct ConduitTransfer memory) view returns (uint256)"
                                      }
                                    },
                                    "id": 74480,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3433:33:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 74469,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    12583,
                                    12608,
                                    12621,
                                    12637,
                                    12697,
                                    12757,
                                    12819,
                                    12881,
                                    10478,
                                    10503,
                                    10533,
                                    10558,
                                    10617,
                                    10642,
                                    10672,
                                    10697,
                                    11797,
                                    11832
                                  ],
                                  "referencedDeclaration": 10672,
                                  "src": "3333:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 74481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3333:151:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74482,
                              "nodeType": "ExpressionStatement",
                              "src": "3333:151:108"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74435,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74432,
                      "src": "3045:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74436,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74408,
                          "src": "3049:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                          }
                        },
                        "id": 74437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74244,
                        "src": "3049:17:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1122_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitTransfer memory[] memory"
                        }
                      },
                      "id": 74438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3049:24:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3045:28:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74527,
                  "initializationExpression": {
                    "assignments": [
                      74432
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74432,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3038:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 74527,
                        "src": "3030:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74431,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3030:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74434,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3042:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3030:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3075:3:108",
                      "subExpression": {
                        "id": 74440,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74432,
                        "src": "3077:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74442,
                    "nodeType": "ExpressionStatement",
                    "src": "3075:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "3025:1023:108"
                },
                {
                  "body": {
                    "id": 74636,
                    "nodeType": "Block",
                    "src": "4118:955:108",
                    "statements": [
                      {
                        "assignments": [
                          74542
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74542,
                            "mutability": "mutable",
                            "name": "batchTransfer",
                            "nameLocation": "4164:13:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74636,
                            "src": "4132:45:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            },
                            "typeName": {
                              "id": 74541,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 74540,
                                "name": "ConduitBatch1155Transfer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1135,
                                "src": "4132:24:108"
                              },
                              "referencedDeclaration": 1135,
                              "src": "4132:24:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_storage_ptr",
                                "typeString": "struct ConduitBatch1155Transfer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74547,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 74543,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74408,
                              "src": "4180:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                                "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                              }
                            },
                            "id": 74544,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "batchTransfers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74248,
                            "src": "4180:39:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                            }
                          },
                          "id": 74546,
                          "indexExpression": {
                            "id": 74545,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74529,
                            "src": "4220:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4180:42:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                            "typeString": "struct ConduitBatch1155Transfer memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4132:90:108"
                      },
                      {
                        "assignments": [
                          74552
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74552,
                            "mutability": "mutable",
                            "name": "toAddresses",
                            "nameLocation": "4254:11:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74636,
                            "src": "4237:28:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74550,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4237:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74551,
                              "nodeType": "ArrayTypeName",
                              "src": "4237:9:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74560,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 74556,
                                  "name": "batchTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74542,
                                  "src": "4299:13:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                    "typeString": "struct ConduitBatch1155Transfer memory"
                                  }
                                },
                                "id": 74557,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ids",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1131,
                                "src": "4299:17:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 74558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4299:24:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 74555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4268:13:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74553,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4272:7:108",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74554,
                              "nodeType": "ArrayTypeName",
                              "src": "4272:9:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 74559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4268:69:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4237:100:108"
                      },
                      {
                        "body": {
                          "id": 74580,
                          "nodeType": "Block",
                          "src": "4406:66:108",
                          "statements": [
                            {
                              "expression": {
                                "id": 74578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 74573,
                                    "name": "toAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74552,
                                    "src": "4424:11:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 74575,
                                  "indexExpression": {
                                    "id": 74574,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74562,
                                    "src": "4436:1:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4424:14:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 74576,
                                    "name": "batchTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74542,
                                    "src": "4441:13:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                      "typeString": "struct ConduitBatch1155Transfer memory"
                                    }
                                  },
                                  "id": 74577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "to",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1128,
                                  "src": "4441:16:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4424:33:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 74579,
                              "nodeType": "ExpressionStatement",
                              "src": "4424:33:108"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74565,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74562,
                            "src": "4371:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 74566,
                                "name": "batchTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74542,
                                "src": "4375:13:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory"
                                }
                              },
                              "id": 74567,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1131,
                              "src": "4375:17:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4375:24:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4371:28:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74581,
                        "initializationExpression": {
                          "assignments": [
                            74562
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74562,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "4364:1:108",
                              "nodeType": "VariableDeclaration",
                              "scope": 74581,
                              "src": "4356:9:108",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74561,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4356:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74564,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4368:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4356:13:108"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 74571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4401:3:108",
                            "subExpression": {
                              "id": 74570,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74562,
                              "src": "4403:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74572,
                          "nodeType": "ExpressionStatement",
                          "src": "4401:3:108"
                        },
                        "nodeType": "ForStatement",
                        "src": "4351:121:108"
                      },
                      {
                        "assignments": [
                          74586
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74586,
                            "mutability": "mutable",
                            "name": "actualBatchBalances",
                            "nameLocation": "4502:19:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74636,
                            "src": "4485:36:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74584,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4485:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74585,
                              "nodeType": "ArrayTypeName",
                              "src": "4485:9:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74596,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 74592,
                              "name": "toAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74552,
                              "src": "4602:11:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 74593,
                                "name": "batchTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74542,
                                "src": "4615:13:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                  "typeString": "struct ConduitBatch1155Transfer memory"
                                }
                              },
                              "id": 74594,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1131,
                              "src": "4615:17:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 74588,
                                    "name": "batchTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74542,
                                    "src": "4553:13:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                      "typeString": "struct ConduitBatch1155Transfer memory"
                                    }
                                  },
                                  "id": 74589,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1124,
                                  "src": "4553:19:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 74587,
                                "name": "TestERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9875,
                                "src": "4524:11:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TestERC1155_$9875_$",
                                  "typeString": "type(contract TestERC1155)"
                                }
                              },
                              "id": 74590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4524:62:108",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC1155_$9875",
                                "typeString": "contract TestERC1155"
                              }
                            },
                            "id": 74591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOfBatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80345,
                            "src": "4524:77:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory,uint256[] memory) view external returns (uint256[] memory)"
                            }
                          },
                          "id": 74595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4524:109:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4485:148:108"
                      },
                      {
                        "assignments": [
                          74601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74601,
                            "mutability": "mutable",
                            "name": "expectedBatchBalances",
                            "nameLocation": "4680:21:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 74636,
                            "src": "4647:54:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 74599,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4647:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74600,
                              "nodeType": "ArrayTypeName",
                              "src": "4647:9:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74605,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 74603,
                              "name": "batchTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74542,
                              "src": "4755:13:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                "typeString": "struct ConduitBatch1155Transfer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr",
                                "typeString": "struct ConduitBatch1155Transfer memory"
                              }
                            ],
                            "id": 74602,
                            "name": "getExpectedBatchTokenBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73536,
                            "src": "4704:29:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (struct ConduitBatch1155Transfer memory) view returns (uint256[] memory)"
                            }
                          },
                          "id": 74604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4704:82:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4647:139:108"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 74611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 74607,
                                  "name": "actualBatchBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74586,
                                  "src": "4828:19:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 74608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4828:26:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 74609,
                                  "name": "expectedBatchBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74601,
                                  "src": "4858:21:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 74610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4858:28:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4828:58:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 74606,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              10427,
                              10448
                            ],
                            "referencedDeclaration": 10427,
                            "src": "4800:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 74612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4800:100:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74613,
                        "nodeType": "ExpressionStatement",
                        "src": "4800:100:108"
                      },
                      {
                        "body": {
                          "id": 74634,
                          "nodeType": "Block",
                          "src": "4972:91:108",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 74626,
                                      "name": "actualBatchBalances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74586,
                                      "src": "4999:19:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74628,
                                    "indexExpression": {
                                      "id": 74627,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74615,
                                      "src": "5019:1:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4999:22:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 74629,
                                      "name": "expectedBatchBalances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74601,
                                      "src": "5023:21:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74631,
                                    "indexExpression": {
                                      "id": 74630,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74615,
                                      "src": "5045:1:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5023:24:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 74625,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    12583,
                                    12608,
                                    12621,
                                    12637,
                                    12697,
                                    12757,
                                    12819,
                                    12881,
                                    10478,
                                    10503,
                                    10533,
                                    10558,
                                    10617,
                                    10642,
                                    10672,
                                    10697,
                                    11797,
                                    11832
                                  ],
                                  "referencedDeclaration": 10672,
                                  "src": "4990:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 74632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4990:58:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74633,
                              "nodeType": "ExpressionStatement",
                              "src": "4990:58:108"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74618,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74615,
                            "src": "4935:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 74619,
                              "name": "actualBatchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74586,
                              "src": "4939:19:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4939:26:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4935:30:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74635,
                        "initializationExpression": {
                          "assignments": [
                            74615
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74615,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "4928:1:108",
                              "nodeType": "VariableDeclaration",
                              "scope": 74635,
                              "src": "4920:9:108",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74614,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4920:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74617,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4932:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4920:13:108"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 74623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4967:3:108",
                            "subExpression": {
                              "id": 74622,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74615,
                              "src": "4969:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74624,
                          "nodeType": "ExpressionStatement",
                          "src": "4967:3:108"
                        },
                        "nodeType": "ForStatement",
                        "src": "4915:148:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74532,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74529,
                      "src": "4078:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 74533,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74408,
                          "src": "4082:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                            "typeString": "struct ConduitExecuteWithBatch1155Test.Context memory"
                          }
                        },
                        "id": 74534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "batchTransfers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74248,
                        "src": "4082:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1135_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ConduitBatch1155Transfer memory[] memory"
                        }
                      },
                      "id": 74535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4082:29:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4078:33:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74637,
                  "initializationExpression": {
                    "assignments": [
                      74529
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74529,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4071:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 74637,
                        "src": "4063:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4063:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74531,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4075:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4063:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4113:3:108",
                      "subExpression": {
                        "id": 74537,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74529,
                        "src": "4115:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74539,
                    "nodeType": "ExpressionStatement",
                    "src": "4113:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "4058:1015:108"
                }
              ]
            },
            "functionSelector": "c9ed238a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74411,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74410,
                  "name": "stateless",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76985,
                  "src": "2792:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "2792:9:108"
              }
            ],
            "name": "executeWithBatch1155",
            "nameLocation": "2738:20:108",
            "parameters": {
              "id": 74409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74408,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "2774:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 74639,
                  "src": "2759:22:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Context_$74249_memory_ptr",
                    "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                  },
                  "typeName": {
                    "id": 74407,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74406,
                      "name": "Context",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74249,
                      "src": "2759:7:108"
                    },
                    "referencedDeclaration": 74249,
                    "src": "2759:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Context_$74249_storage_ptr",
                      "typeString": "struct ConduitExecuteWithBatch1155Test.Context"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:24:108"
            },
            "returnParameters": {
              "id": 74412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2802:0:108"
            },
            "scope": 74640,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74225,
              "name": "BaseConduitTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 73670,
              "src": "778:15:108"
            },
            "id": 74226,
            "nodeType": "InheritanceSpecifier",
            "src": "778:15:108"
          }
        ],
        "canonicalName": "ConduitExecuteWithBatch1155Test",
        "contractDependencies": [
          9875,
          9971,
          10007
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74640,
          73670,
          77111,
          81618,
          77085,
          80666,
          75801,
          78847,
          77034,
          13266,
          11973,
          11944
        ],
        "name": "ConduitExecuteWithBatch1155Test",
        "nameLocation": "743:31:108",
        "scope": 74641,
        "usedErrors": [
          76977
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 108
}