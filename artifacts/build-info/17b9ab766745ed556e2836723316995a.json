{
  "id": "17b9ab766745ed556e2836723316995a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.14",
  "solcLongVersion": "0.8.14+commit.80d49f37",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/test/EIP1271Wallet.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface ERC20ApprovalInterface {\n    function approve(address, uint256) external returns (bool);\n}\n\ninterface NFTApprovalInterface {\n    function setApprovalForAll(address, bool) external;\n}\n\ncontract EIP1271Wallet {\n    bytes4 private constant _EIP_1271_MAGIC_VALUE = 0x1626ba7e;\n\n    address public immutable owner;\n\n    bool public showRevertMessage;\n\n    mapping(bytes32 => bool) public digestApproved;\n\n    bool public isValid;\n\n    constructor(address _owner) {\n        owner = _owner;\n        showRevertMessage = true;\n        isValid = true;\n    }\n\n    function setValid(bool valid) external {\n        isValid = valid;\n    }\n\n    function revertWithMessage(bool showMessage) external {\n        showRevertMessage = showMessage;\n    }\n\n    function registerDigest(bytes32 digest, bool approved) external {\n        digestApproved[digest] = approved;\n    }\n\n    function approveERC20(\n        ERC20ApprovalInterface token,\n        address operator,\n        uint256 amount\n    ) external {\n        if (msg.sender != owner) {\n            revert(\"Only owner\");\n        }\n\n        token.approve(operator, amount);\n    }\n\n    function approveNFT(NFTApprovalInterface token, address operator) external {\n        if (msg.sender != owner) {\n            revert(\"Only owner\");\n        }\n\n        token.setApprovalForAll(operator, true);\n    }\n\n    function isValidSignature(bytes32 digest, bytes memory signature)\n        external\n        view\n        returns (bytes4)\n    {\n        if (digestApproved[digest]) {\n            return _EIP_1271_MAGIC_VALUE;\n        }\n\n        // NOTE: this is obviously not secure, do not use outside of testing.\n        if (signature.length == 64) {\n            // All signatures of length 64 are OK as long as valid is true\n            return isValid ? _EIP_1271_MAGIC_VALUE : bytes4(0xffffffff);\n        }\n\n        if (signature.length != 65) {\n            revert();\n        }\n\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        if (\n            uint256(s) >\n            0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\n        ) {\n            revert();\n        }\n\n        if (v != 27 && v != 28) {\n            revert();\n        }\n\n        address signer = ecrecover(digest, v, r, s);\n\n        if (signer == address(0)) {\n            revert();\n        }\n\n        if (signer != owner) {\n            if (showRevertMessage) {\n                revert(\"BAD SIGNER\");\n            }\n\n            revert();\n        }\n\n        return isValid ? _EIP_1271_MAGIC_VALUE : bytes4(0xffffffff);\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 19066
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/test/EIP1271Wallet.sol": {
        "EIP1271Wallet": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ERC20ApprovalInterface",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approveERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract NFTApprovalInterface",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "approveNFT",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "digestApproved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "digest",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "digest",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "registerDigest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "showMessage",
                  "type": "bool"
                }
              ],
              "name": "revertWithMessage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "valid",
                  "type": "bool"
                }
              ],
              "name": "setValid",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "showRevertMessage",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "constructor_EIP1271Wallet": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a03461009c57601f610a1b38819003918201601f19168301916001600160401b038311848410176100a15780849260209460405283398101031261009c57516001600160a01b038116810361009c5761006f90608052600160ff19818160005416176000556002541617600255565b60405161096390816100b882396080518181816103d701528181610524015281816105b001526107cf0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081631626ba7e146100de5750806329e282e8146100d557806346a35674146100cc5780636c64edee146100c357806384e6d7e7146100ba5780638da5cb5b146100b157806397fe8014146100a8578063a8e5e4aa1461009f578063bb5d40eb146100965763de77d5e01461008e57600080fd5b61000e6106a5565b5061000e610681565b5061000e61056c565b5061000e610548565b5061000e6104f6565b5061000e610393565b5061000e610321565b5061000e6102cd565b5061000e61026a565b346101cb5760406003193601126101cb5760243567ffffffffffffffff8082116101c757366023830112156101c75781600401359081116101ba575b6040519161015060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116018461021f565b81835236602483830101116101b6579260208261017f949360246101b2970183860137830101526004356106fc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b0390f35b8380fd5b6101c26101ce565b61011a565b8280fd5b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161021257604052565b61021a6101ce565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761021257604052565b8015150361000e57565b503461000e57604060031936011261000e5760243561028881610260565b600435600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911515161790556000604051f35b503461000e57602060031936011261000e576004356102eb81610260565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541691151516176000556000604051f35b503461000e57602060031936011261000e5760043561033f81610260565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541691151516176002556000604051f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e57604060031936011261000e576004356103b181610375565b602435906103be82610375565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361048c5716803b1561000e576040517fa22cb46500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260016024820152906000908290604490829084905af1801561047f575b61046a57005b8061047761047d926101fe565b806104eb565b005b6104876106ef565b610464565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606490fd5b600091031261000e57565b503461000e57600060031936011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57600060031936011261000e57602060ff600054166040519015158152f35b503461000e57606060031936011261000e5760043561058a81610375565b6024359061059782610375565b73ffffffffffffffffffffffffffffffffffffffff91827f000000000000000000000000000000000000000000000000000000000000000016330361048c5760209161063b9160006040519586809581947f095ea7b300000000000000000000000000000000000000000000000000000000835260443590600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0393165af18015610674575b61064d57005b61047d9060203d811161066d575b610665818361021f565b8101906106d7565b503d61065b565b61067c6106ef565b610647565b503461000e57600060031936011261000e57602060ff600254166040519015158152f35b503461000e57602060031936011261000e576004356000526001602052602060ff604060002054166040519015158152f35b9081602091031261000e57516106ec81610260565b90565b506040513d6000823e3d90fd5b61071a610713826000526001602052604060002090565b5460ff1690565b610907578151604081146108cf5760410361000e576020820151906060604084015193015192600093841a927f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082116108c057601b841415806108c4575b6108c0576040805193845260ff94909416602080850191909152938301526060820152828052829060809060015afa156108b3575b73ffffffffffffffffffffffffffffffffffffffff808251169081156101c7577f00000000000000000000000000000000000000000000000000000000000000001603610848575060025460ff1615610824577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b7fffffffff0000000000000000000000000000000000000000000000000000000090565b805460ff166108545780fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f424144205349474e4552000000000000000000000000000000000000000000006044820152606490fd5b6108bb6106ef565b6107ad565b8480fd5b50601c841415610778565b5050506108de60025460ff1690565b15610824577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b50507f1626ba7e000000000000000000000000000000000000000000000000000000009056fea2646970667358221220258550fa89f90ff2d7d3c928a91f77444140dda2eeaa919b96546cb4c9cf79f264736f6c634300080e0033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH2 0x9C JUMPI PUSH1 0x1F PUSH2 0xA1B CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xA1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x9C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x9C JUMPI PUSH2 0x6F SWAP1 PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP2 DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x963 SWAP1 DUP2 PUSH2 0xB8 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3D7 ADD MSTORE DUP2 DUP2 PUSH2 0x524 ADD MSTORE DUP2 DUP2 PUSH2 0x5B0 ADD MSTORE PUSH2 0x7CF ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1626BA7E EQ PUSH2 0xDE JUMPI POP DUP1 PUSH4 0x29E282E8 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x46A35674 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x6C64EDEE EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x84E6D7E7 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x97FE8014 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBB5D40EB EQ PUSH2 0x96 JUMPI PUSH4 0xDE77D5E0 EQ PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x6A5 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x681 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x56C JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x548 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x4F6 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x393 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x321 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2CD JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x26A JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x1C7 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1C7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x150 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP5 PUSH2 0x21F JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1B6 JUMPI SWAP3 PUSH1 0x20 DUP3 PUSH2 0x17F SWAP5 SWAP4 PUSH1 0x24 PUSH2 0x1B2 SWAP8 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x212 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x21A PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x212 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x288 DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x33F DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3B1 DUP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3BE DUP3 PUSH2 0x375 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x48C JUMPI AND DUP1 EXTCODESIZE ISZERO PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA22CB46500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x47F JUMPI JUMPDEST PUSH2 0x46A JUMPI STOP JUMPDEST DUP1 PUSH2 0x477 PUSH2 0x47D SWAP3 PUSH2 0x1FE JUMP JUMPDEST DUP1 PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x487 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x58A DUP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x597 DUP3 PUSH2 0x375 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0x48C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x63B SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x674 JUMPI JUMPDEST PUSH2 0x64D JUMPI STOP JUMPDEST PUSH2 0x47D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x66D JUMPI JUMPDEST PUSH2 0x665 DUP2 DUP4 PUSH2 0x21F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x6D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x65B JUMP JUMPDEST PUSH2 0x67C PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE JUMPI MLOAD PUSH2 0x6EC DUP2 PUSH2 0x260 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x71A PUSH2 0x713 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x907 JUMPI DUP2 MLOAD PUSH1 0x40 DUP2 EQ PUSH2 0x8CF JUMPI PUSH1 0x41 SUB PUSH2 0xE JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP3 PUSH1 0x0 SWAP4 DUP5 BYTE SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT PUSH2 0x8C0 JUMPI PUSH1 0x1B DUP5 EQ ISZERO DUP1 PUSH2 0x8C4 JUMPI JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE DUP3 SWAP1 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x8B3 JUMPI JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1C7 JUMPI PUSH32 0x0 AND SUB PUSH2 0x848 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x824 JUMPI PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x854 JUMPI DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x424144205349474E455200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x8BB PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP PUSH1 0x1C DUP5 EQ ISZERO PUSH2 0x778 JUMP JUMPDEST POP POP POP PUSH2 0x8DE PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x824 JUMPI PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST POP POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP6 POP STATICCALL DUP10 0xF9 0xF CALLCODE 0xD7 0xD3 0xC9 0x28 0xA9 0x1F PUSH24 0x444140DDA2EEAA919B96546CB4C9CF79F264736F6C634300 ADDMOD 0xE STOP CALLER ",
              "sourceMap": "251:2526:0:-:0;;;;;;;;;;;;;-1:-1:-1;;251:2526:0;;;;-1:-1:-1;;;;;251:2526:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:2526:0;;;;;;;;535:14;;579:4;251:2526;;;;559:24;251:2526;;;559:24;251:2526;593:14;251:2526;;;593:14;251:2526;497:117;251:2526;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;251:2526:0;;;;;;-1:-1:-1;251:2526:0;;;;;-1:-1:-1;251:2526:0"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 1259,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1751,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bytes32_uint8_bytes32_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_17d9": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_841b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_approveERC20": {
                  "entryPoint": 1388,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approveNFT": {
                  "entryPoint": 915,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_digestApproved": {
                  "entryPoint": 1701,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isValid": {
                  "entryPoint": 1665,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 1270,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_registerDigest": {
                  "entryPoint": 618,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_revertWithMessage": {
                  "entryPoint": 717,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setValid": {
                  "entryPoint": 801,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_showRevertMessage": {
                  "entryPoint": 1352,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 543,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_2213": {
                  "entryPoint": 510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_isValidSignature": {
                  "entryPoint": 1788,
                  "id": 254,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_bool_of_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 462,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_forward": {
                  "entryPoint": 1775,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 608,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_contract_NFTApprovalInterface": {
                  "entryPoint": 885,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "24": [
                  {
                    "length": 32,
                    "start": 983
                  },
                  {
                    "length": 32,
                    "start": 1316
                  },
                  {
                    "length": 32,
                    "start": 1456
                  },
                  {
                    "length": 32,
                    "start": 1999
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b6000803560e01c9081631626ba7e146100de5750806329e282e8146100d557806346a35674146100cc5780636c64edee146100c357806384e6d7e7146100ba5780638da5cb5b146100b157806397fe8014146100a8578063a8e5e4aa1461009f578063bb5d40eb146100965763de77d5e01461008e57600080fd5b61000e6106a5565b5061000e610681565b5061000e61056c565b5061000e610548565b5061000e6104f6565b5061000e610393565b5061000e610321565b5061000e6102cd565b5061000e61026a565b346101cb5760406003193601126101cb5760243567ffffffffffffffff8082116101c757366023830112156101c75781600401359081116101ba575b6040519161015060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116018461021f565b81835236602483830101116101b6579260208261017f949360246101b2970183860137830101526004356106fc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b0390f35b8380fd5b6101c26101ce565b61011a565b8280fd5b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161021257604052565b61021a6101ce565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761021257604052565b8015150361000e57565b503461000e57604060031936011261000e5760243561028881610260565b600435600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911515161790556000604051f35b503461000e57602060031936011261000e576004356102eb81610260565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541691151516176000556000604051f35b503461000e57602060031936011261000e5760043561033f81610260565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541691151516176002556000604051f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e57604060031936011261000e576004356103b181610375565b602435906103be82610375565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361048c5716803b1561000e576040517fa22cb46500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260016024820152906000908290604490829084905af1801561047f575b61046a57005b8061047761047d926101fe565b806104eb565b005b6104876106ef565b610464565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606490fd5b600091031261000e57565b503461000e57600060031936011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57600060031936011261000e57602060ff600054166040519015158152f35b503461000e57606060031936011261000e5760043561058a81610375565b6024359061059782610375565b73ffffffffffffffffffffffffffffffffffffffff91827f000000000000000000000000000000000000000000000000000000000000000016330361048c5760209161063b9160006040519586809581947f095ea7b300000000000000000000000000000000000000000000000000000000835260443590600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0393165af18015610674575b61064d57005b61047d9060203d811161066d575b610665818361021f565b8101906106d7565b503d61065b565b61067c6106ef565b610647565b503461000e57600060031936011261000e57602060ff600254166040519015158152f35b503461000e57602060031936011261000e576004356000526001602052602060ff604060002054166040519015158152f35b9081602091031261000e57516106ec81610260565b90565b506040513d6000823e3d90fd5b61071a610713826000526001602052604060002090565b5460ff1690565b610907578151604081146108cf5760410361000e576020820151906060604084015193015192600093841a927f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082116108c057601b841415806108c4575b6108c0576040805193845260ff94909416602080850191909152938301526060820152828052829060809060015afa156108b3575b73ffffffffffffffffffffffffffffffffffffffff808251169081156101c7577f00000000000000000000000000000000000000000000000000000000000000001603610848575060025460ff1615610824577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b7fffffffff0000000000000000000000000000000000000000000000000000000090565b805460ff166108545780fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f424144205349474e4552000000000000000000000000000000000000000000006044820152606490fd5b6108bb6106ef565b6107ad565b8480fd5b50601c841415610778565b5050506108de60025460ff1690565b15610824577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b50507f1626ba7e000000000000000000000000000000000000000000000000000000009056fea2646970667358221220258550fa89f90ff2d7d3c928a91f77444140dda2eeaa919b96546cb4c9cf79f264736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1626BA7E EQ PUSH2 0xDE JUMPI POP DUP1 PUSH4 0x29E282E8 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x46A35674 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x6C64EDEE EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x84E6D7E7 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x97FE8014 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBB5D40EB EQ PUSH2 0x96 JUMPI PUSH4 0xDE77D5E0 EQ PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x6A5 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x681 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x56C JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x548 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x4F6 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x393 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x321 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2CD JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x26A JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x1C7 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1C7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x150 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP5 PUSH2 0x21F JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1B6 JUMPI SWAP3 PUSH1 0x20 DUP3 PUSH2 0x17F SWAP5 SWAP4 PUSH1 0x24 PUSH2 0x1B2 SWAP8 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x212 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x21A PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x212 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x288 DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x33F DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3B1 DUP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3BE DUP3 PUSH2 0x375 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x48C JUMPI AND DUP1 EXTCODESIZE ISZERO PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA22CB46500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x47F JUMPI JUMPDEST PUSH2 0x46A JUMPI STOP JUMPDEST DUP1 PUSH2 0x477 PUSH2 0x47D SWAP3 PUSH2 0x1FE JUMP JUMPDEST DUP1 PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x487 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x58A DUP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x597 DUP3 PUSH2 0x375 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0x48C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x63B SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x674 JUMPI JUMPDEST PUSH2 0x64D JUMPI STOP JUMPDEST PUSH2 0x47D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x66D JUMPI JUMPDEST PUSH2 0x665 DUP2 DUP4 PUSH2 0x21F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x6D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x65B JUMP JUMPDEST PUSH2 0x67C PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE JUMPI MLOAD PUSH2 0x6EC DUP2 PUSH2 0x260 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x71A PUSH2 0x713 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x907 JUMPI DUP2 MLOAD PUSH1 0x40 DUP2 EQ PUSH2 0x8CF JUMPI PUSH1 0x41 SUB PUSH2 0xE JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP3 PUSH1 0x0 SWAP4 DUP5 BYTE SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT PUSH2 0x8C0 JUMPI PUSH1 0x1B DUP5 EQ ISZERO DUP1 PUSH2 0x8C4 JUMPI JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE DUP3 SWAP1 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x8B3 JUMPI JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1C7 JUMPI PUSH32 0x0 AND SUB PUSH2 0x848 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x824 JUMPI PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x854 JUMPI DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x424144205349474E455200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x8BB PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP PUSH1 0x1C DUP5 EQ ISZERO PUSH2 0x778 JUMP JUMPDEST POP POP POP PUSH2 0x8DE PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x824 JUMPI PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST POP POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP6 POP STATICCALL DUP10 0xF9 0xF CALLCODE 0xD7 0xD3 0xC9 0x28 0xA9 0x1F PUSH24 0x444140DDA2EEAA919B96546CB4C9CF79F264736F6C634300 ADDMOD 0xE STOP CALLER ",
              "sourceMap": "251:2526:0:-:0;;;;;;;;;-1:-1:-1;251:2526:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;:::i;:::-;;;-1:-1:-1;251:2526:0;879:14;251:2526;;;-1:-1:-1;251:2526:0;;;;;;;;;;;;;;-1:-1:-1;251:2526:0;;;;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;:::i;:::-;;;761:31;251:2526;;;;;;;761:31;251:2526;761:31;251:2526;;;;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;:::i;:::-;;;669:15;251:2526;;;;;;;669:15;251:2526;-1:-1:-1;251:2526:0;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;1287:5;;;251:2526;1273:10;:19;1269:70;;251:2526;1349:39;;;;;251:2526;;;1349:39;;251:2526;;;;1349:39;;251:2526;1383:4;251:2526;;;;;-1:-1:-1;;251:2526:0;;;;;;-1:-1:-1;;1349:39:0;;;;;;251:2526;1349:39;;251:2526;1349:39;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;1269:70;251:2526;;1308:20;;;251:2526;;1308:20;;251:2526;;;;;;;;;;;;;1308:20;251:2526;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;345:30;251:2526;;;;;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:2526:0;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;1078:5;;;251:2526;1064:10;:19;1060:70;;251:2526;;1140:31;251:2526;-1:-1:-1;251:2526:0;;1140:31;;;;;;251:2526;1140:31;;251:2526;;1140:31;251:2526;1140:31;;251:2526;;;;;;;;;;;;;;;;;1140:31;;251:2526;;1140:31;;;;;;251:2526;1140:31;;251:2526;1140:31;;;251:2526;1140:31;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;251:2526;;;;;;-1:-1:-1;;251:2526:0;;;;;;;471:19;251:2526;;;;;;;;;;;;;;;;-1:-1:-1;;251:2526:0;;;;;;;-1:-1:-1;251:2526:0;418:46;251:2526;;;;;-1:-1:-1;251:2526:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;1401:1374;1540:22;;;251:2526;;1540:14;251:2526;;;;;;;1540:22;251:2526;;;;;1540:22;1536:81;;328:10;;1729:2;1709:22;;1705:187;;1926:2;1906:22;1902:61;;2029:164;;;;;;1729:2;2029:164;;;;;;-1:-1:-1;;2029:164:0;;;2220:91;2245:66;2220:91;;2203:152;;2374:2;2369:7;;;:18;;;1401:1374;2365:57;;1729:2;251:2526;;;;;;;;;;2029:164;328:10;;;;;;;;;;251:2526;328:10;;;251:2526;2449:26;;;251:2526;;328:10;;1540:14;2449:26;;;;;1401:1374;251:2526;2449:26;;;251:2526;2490:20;;;2486:59;;2569:5;251:2526;2559:15;2555:144;;-1:-1:-1;2716:7:0;251:2526;;;2716:52;;;251:2526;1401:1374;:::o;2716:52::-;251:2526;1401:1374;:::o;2555:144::-;251:2526;;;;2590:76;;2680:8;;2590:76;1729:2;251:2526;2631:20;;;328:10;2631:20;;;328:10;;;;;251:2526;328:10;251:2526;;;328:10;;;1308:20;2449:26;;;:::i;:::-;;;2365:57;2403:8;;;2369:18;2380:7;2385:2;2380:7;;;2369:18;;1705:187;251:2526;;;;1829:7;251:2526;;;;;;1829:52;;;251:2526;1822:59;:::o;1536:81::-;1578:28;;251:2526;1578:28;:::o"
            },
            "methodIdentifiers": {
              "approveERC20(address,address,uint256)": "a8e5e4aa",
              "approveNFT(address,address)": "84e6d7e7",
              "digestApproved(bytes32)": "de77d5e0",
              "isValid()": "bb5d40eb",
              "isValidSignature(bytes32,bytes)": "1626ba7e",
              "owner()": "8da5cb5b",
              "registerDigest(bytes32,bool)": "29e282e8",
              "revertWithMessage(bool)": "46a35674",
              "setValid(bool)": "6c64edee",
              "showRevertMessage()": "97fe8014"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract ERC20ApprovalInterface\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract NFTApprovalInterface\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"approveNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"digestApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"registerDigest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"showMessage\",\"type\":\"bool\"}],\"name\":\"revertWithMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setValid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showRevertMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EIP1271Wallet.sol\":\"EIP1271Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/test/EIP1271Wallet.sol\":{\"keccak256\":\"0x12a6cba19f7b20cd8368c8377fc7ad1a3fa7e73018646a4b0cc5ccd228b7daf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bedbeb8039566d3b651ea49be365fb30e0937a86de7ce6d307524c7a447837\",\"dweb:/ipfs/QmZqgcUGqnZeUm38iun9oczBGARimy4tna1VJTBpyTcLbF\"]}},\"version\":1}"
        },
        "ERC20ApprovalInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EIP1271Wallet.sol\":\"ERC20ApprovalInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/test/EIP1271Wallet.sol\":{\"keccak256\":\"0x12a6cba19f7b20cd8368c8377fc7ad1a3fa7e73018646a4b0cc5ccd228b7daf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bedbeb8039566d3b651ea49be365fb30e0937a86de7ce6d307524c7a447837\",\"dweb:/ipfs/QmZqgcUGqnZeUm38iun9oczBGARimy4tna1VJTBpyTcLbF\"]}},\"version\":1}"
        },
        "NFTApprovalInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "setApprovalForAll(address,bool)": "a22cb465"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EIP1271Wallet.sol\":\"NFTApprovalInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/test/EIP1271Wallet.sol\":{\"keccak256\":\"0x12a6cba19f7b20cd8368c8377fc7ad1a3fa7e73018646a4b0cc5ccd228b7daf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bedbeb8039566d3b651ea49be365fb30e0937a86de7ce6d307524c7a447837\",\"dweb:/ipfs/QmZqgcUGqnZeUm38iun9oczBGARimy4tna1VJTBpyTcLbF\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/test/EIP1271Wallet.sol": {
        "ast": {
          "absolutePath": "contracts/test/EIP1271Wallet.sol",
          "exportedSymbols": {
            "EIP1271Wallet": [
              255
            ],
            "ERC20ApprovalInterface": [
              11
            ],
            "NFTApprovalInterface": [
              19
            ]
          },
          "id": 256,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC20ApprovalInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 11,
              "linearizedBaseContracts": [
                11
              ],
              "name": "ERC20ApprovalInterface",
              "nameLocation": "67:22:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "095ea7b3",
                  "id": 10,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "105:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "113:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "113:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "122:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "122:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "112:18:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "149:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "149:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "148:6:0"
                  },
                  "scope": 11,
                  "src": "96:59:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 256,
              "src": "57:100:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "NFTApprovalInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 19,
              "linearizedBaseContracts": [
                19
              ],
              "name": "NFTApprovalInterface",
              "nameLocation": "169:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a22cb465",
                  "id": 18,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "205:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "223:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "232:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "222:15:0"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "246:0:0"
                  },
                  "scope": 19,
                  "src": "196:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 256,
              "src": "159:90:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "EIP1271Wallet",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 255,
              "linearizedBaseContracts": [
                255
              ],
              "name": "EIP1271Wallet",
              "nameLocation": "260:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 22,
                  "mutability": "constant",
                  "name": "_EIP_1271_MAGIC_VALUE",
                  "nameLocation": "304:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "280:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783136323662613765",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "328:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_371636862_by_1",
                      "typeString": "int_const 371636862"
                    },
                    "value": "0x1626ba7e"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 24,
                  "mutability": "immutable",
                  "name": "owner",
                  "nameLocation": "370:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "345:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "97fe8014",
                  "id": 26,
                  "mutability": "mutable",
                  "name": "showRevertMessage",
                  "nameLocation": "394:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "382:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "de77d5e0",
                  "id": 30,
                  "mutability": "mutable",
                  "name": "digestApproved",
                  "nameLocation": "450:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "418:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 29,
                    "keyType": {
                      "id": 27,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "418:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueType": {
                      "id": 28,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "bb5d40eb",
                  "id": 32,
                  "mutability": "mutable",
                  "name": "isValid",
                  "nameLocation": "483:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "471:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "525:89:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 37,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "535:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 38,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "543:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "535:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40,
                        "nodeType": "ExpressionStatement",
                        "src": "535:14:0"
                      },
                      {
                        "expression": {
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 41,
                            "name": "showRevertMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "559:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "579:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "559:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "ExpressionStatement",
                        "src": "559:24:0"
                      },
                      {
                        "expression": {
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 45,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "593:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "603:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "593:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "593:14:0"
                      }
                    ]
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "517:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "509:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "509:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "508:16:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "525:0:0"
                  },
                  "scope": 255,
                  "src": "497:117:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "659:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "669:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 56,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "679:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "669:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "669:15:0"
                      }
                    ]
                  },
                  "functionSelector": "6c64edee",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setValid",
                  "nameLocation": "629:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "valid",
                        "nameLocation": "643:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "638:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "637:12:0"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:0:0"
                  },
                  "scope": 255,
                  "src": "620:71:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "751:48:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 65,
                            "name": "showRevertMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "761:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 66,
                            "name": "showMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "781:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "761:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "761:31:0"
                      }
                    ]
                  },
                  "functionSelector": "46a35674",
                  "id": 70,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertWithMessage",
                  "nameLocation": "706:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "showMessage",
                        "nameLocation": "729:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "724:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "724:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "723:18:0"
                  },
                  "returnParameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "751:0:0"
                  },
                  "scope": 255,
                  "src": "697:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "869:50:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 77,
                              "name": "digestApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "879:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 79,
                            "indexExpression": {
                              "id": 78,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "894:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "879:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 80,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "904:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "879:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "879:33:0"
                      }
                    ]
                  },
                  "functionSelector": "29e282e8",
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerDigest",
                  "nameLocation": "814:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "digest",
                        "nameLocation": "837:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "829:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "829:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "850:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "845:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "828:31:0"
                  },
                  "returnParameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "869:0:0"
                  },
                  "scope": 255,
                  "src": "805:114:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "1050:128:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 94,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1064:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1064:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 96,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1078:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1064:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 103,
                        "nodeType": "IfStatement",
                        "src": "1060:70:0",
                        "trueBody": {
                          "id": 102,
                          "nodeType": "Block",
                          "src": "1085:45:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4f6e6c79206f776e6572",
                                    "id": 99,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1106:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                                      "typeString": "literal_string \"Only owner\""
                                    },
                                    "value": "Only owner"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                                      "typeString": "literal_string \"Only owner\""
                                    }
                                  ],
                                  "id": 98,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1099:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1099:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 101,
                              "nodeType": "ExpressionStatement",
                              "src": "1099:20:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 107,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1154:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 108,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1164:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 104,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "1140:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20ApprovalInterface_$11",
                                "typeString": "contract ERC20ApprovalInterface"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "1140:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1140:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "1140:31:0"
                      }
                    ]
                  },
                  "functionSelector": "a8e5e4aa",
                  "id": 112,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveERC20",
                  "nameLocation": "934:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "979:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "956:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20ApprovalInterface_$11",
                          "typeString": "contract ERC20ApprovalInterface"
                        },
                        "typeName": {
                          "id": 86,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 85,
                            "name": "ERC20ApprovalInterface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11,
                            "src": "956:22:0"
                          },
                          "referencedDeclaration": 11,
                          "src": "956:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20ApprovalInterface_$11",
                            "typeString": "contract ERC20ApprovalInterface"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1002:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "994:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1028:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "1020:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "946:94:0"
                  },
                  "returnParameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:0:0"
                  },
                  "scope": 255,
                  "src": "925:253:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "1259:136:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 120,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1273:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1273:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 122,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1287:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 129,
                        "nodeType": "IfStatement",
                        "src": "1269:70:0",
                        "trueBody": {
                          "id": 128,
                          "nodeType": "Block",
                          "src": "1294:45:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4f6e6c79206f776e6572",
                                    "id": 125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1315:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                                      "typeString": "literal_string \"Only owner\""
                                    },
                                    "value": "Only owner"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                                      "typeString": "literal_string \"Only owner\""
                                    }
                                  ],
                                  "id": 124,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1308:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1308:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 127,
                              "nodeType": "ExpressionStatement",
                              "src": "1308:20:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 133,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "1373:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1383:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 130,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1349:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTApprovalInterface_$19",
                                "typeString": "contract NFTApprovalInterface"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setApprovalForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "1349:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool) external"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1349:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1349:39:0"
                      }
                    ]
                  },
                  "functionSelector": "84e6d7e7",
                  "id": 138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveNFT",
                  "nameLocation": "1193:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1225:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1204:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTApprovalInterface_$19",
                          "typeString": "contract NFTApprovalInterface"
                        },
                        "typeName": {
                          "id": 114,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 113,
                            "name": "NFTApprovalInterface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 19,
                            "src": "1204:20:0"
                          },
                          "referencedDeclaration": 19,
                          "src": "1204:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTApprovalInterface_$19",
                            "typeString": "contract NFTApprovalInterface"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1240:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1232:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1232:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1203:46:0"
                  },
                  "returnParameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 255,
                  "src": "1184:211:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "1526:1249:0",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 147,
                            "name": "digestApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1540:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 149,
                          "indexExpression": {
                            "id": 148,
                            "name": "digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1555:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1540:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 153,
                        "nodeType": "IfStatement",
                        "src": "1536:81:0",
                        "trueBody": {
                          "id": 152,
                          "nodeType": "Block",
                          "src": "1564:53:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 150,
                                "name": "_EIP_1271_MAGIC_VALUE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1585:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "functionReturnParameters": 146,
                              "id": 151,
                              "nodeType": "Return",
                              "src": "1578:28:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 154,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "1709:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1709:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3634",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1729:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "1709:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 167,
                        "nodeType": "IfStatement",
                        "src": "1705:187:0",
                        "trueBody": {
                          "id": 166,
                          "nodeType": "Block",
                          "src": "1733:159:0",
                          "statements": [
                            {
                              "expression": {
                                "condition": {
                                  "id": 158,
                                  "name": "isValid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1829:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30786666666666666666",
                                      "id": 162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1870:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4294967295_by_1",
                                        "typeString": "int_const 4294967295"
                                      },
                                      "value": "0xffffffff"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_4294967295_by_1",
                                        "typeString": "int_const 4294967295"
                                      }
                                    ],
                                    "id": 161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1863:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes4_$",
                                      "typeString": "type(bytes4)"
                                    },
                                    "typeName": {
                                      "id": 160,
                                      "name": "bytes4",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1863:6:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1863:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "1829:52:0",
                                "trueExpression": {
                                  "id": 159,
                                  "name": "_EIP_1271_MAGIC_VALUE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "1839:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "functionReturnParameters": 146,
                              "id": 165,
                              "nodeType": "Return",
                              "src": "1822:59:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 168,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "1906:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1906:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1926:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "1906:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 176,
                        "nodeType": "IfStatement",
                        "src": "1902:61:0",
                        "trueBody": {
                          "id": 175,
                          "nodeType": "Block",
                          "src": "1930:33:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 172,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1944:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1944:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 174,
                              "nodeType": "ExpressionStatement",
                              "src": "1944:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 178,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "1981:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "1973:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1973:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 179,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1973:9:0"
                      },
                      {
                        "assignments": [
                          181
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 181,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "2000:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "1992:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 180,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1992:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 182,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1992:9:0"
                      },
                      {
                        "assignments": [
                          184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 184,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "2017:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "2011:7:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2011:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 185,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2011:7:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2038:155:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2052:32:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "2067:9:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2078:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2063:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2063:20:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2057:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2057:27:0"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:1:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2097:32:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "2112:9:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2123:4:0",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2108:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2108:20:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2102:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2102:27:0"
                              },
                              "variableNames": [
                                {
                                  "name": "s",
                                  "nodeType": "YulIdentifier",
                                  "src": "2097:1:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2142:41:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2152:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "signature",
                                            "nodeType": "YulIdentifier",
                                            "src": "2165:9:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2176:4:0",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2161:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2161:20:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2155:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2155:27:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "byte",
                                  "nodeType": "YulIdentifier",
                                  "src": "2147:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2147:36:0"
                              },
                              "variableNames": [
                                {
                                  "name": "v",
                                  "nodeType": "YulIdentifier",
                                  "src": "2142:1:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 178,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2052:1:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 181,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2097:1:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 142,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2067:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 142,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2112:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 142,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2165:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 184,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2142:1:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 186,
                        "nodeType": "InlineAssembly",
                        "src": "2029:164:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 189,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 181,
                                "src": "2228:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2220:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 187,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2220:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2220:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2245:66:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "2220:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 197,
                        "nodeType": "IfStatement",
                        "src": "2203:152:0",
                        "trueBody": {
                          "id": 196,
                          "nodeType": "Block",
                          "src": "2322:33:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 193,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "2336:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2336:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 195,
                              "nodeType": "ExpressionStatement",
                              "src": "2336:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 198,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "2369:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "3237",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2374:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_27_by_1",
                                "typeString": "int_const 27"
                              },
                              "value": "27"
                            },
                            "src": "2369:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 201,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "2380:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "3238",
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2385:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28_by_1",
                                "typeString": "int_const 28"
                              },
                              "value": "28"
                            },
                            "src": "2380:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2369:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 209,
                        "nodeType": "IfStatement",
                        "src": "2365:57:0",
                        "trueBody": {
                          "id": 208,
                          "nodeType": "Block",
                          "src": "2389:33:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 205,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "2403:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2403:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 207,
                              "nodeType": "ExpressionStatement",
                              "src": "2403:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          211
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 211,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "2440:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "2432:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 210,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2432:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 218,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "2459:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 214,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "2467:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 215,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2470:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 216,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "2473:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 212,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "2449:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2449:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2432:43:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 219,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2490:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2508:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2500:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 220,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2500:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2500:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2490:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 229,
                        "nodeType": "IfStatement",
                        "src": "2486:59:0",
                        "trueBody": {
                          "id": 228,
                          "nodeType": "Block",
                          "src": "2512:33:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 225,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "2526:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2526:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 227,
                              "nodeType": "ExpressionStatement",
                              "src": "2526:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 230,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2559:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 231,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2569:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2559:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 244,
                        "nodeType": "IfStatement",
                        "src": "2555:144:0",
                        "trueBody": {
                          "id": 243,
                          "nodeType": "Block",
                          "src": "2576:123:0",
                          "statements": [
                            {
                              "condition": {
                                "id": 233,
                                "name": "showRevertMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2594:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 239,
                              "nodeType": "IfStatement",
                              "src": "2590:76:0",
                              "trueBody": {
                                "id": 238,
                                "nodeType": "Block",
                                "src": "2613:53:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "424144205349474e4552",
                                          "id": 235,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2638:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_841bce61020da005f130b314f0dbf7f1c741be1de11e63845c50d80211ca3ba8",
                                            "typeString": "literal_string \"BAD SIGNER\""
                                          },
                                          "value": "BAD SIGNER"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_841bce61020da005f130b314f0dbf7f1c741be1de11e63845c50d80211ca3ba8",
                                            "typeString": "literal_string \"BAD SIGNER\""
                                          }
                                        ],
                                        "id": 234,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "2631:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2631:20:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 237,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2631:20:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 240,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "2680:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2680:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 242,
                              "nodeType": "ExpressionStatement",
                              "src": "2680:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "condition": {
                            "id": 245,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2716:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "hexValue": "30786666666666666666",
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2757:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967295_by_1",
                                  "typeString": "int_const 4294967295"
                                },
                                "value": "0xffffffff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_4294967295_by_1",
                                  "typeString": "int_const 4294967295"
                                }
                              ],
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2750:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 247,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "2750:6:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2750:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2716:52:0",
                          "trueExpression": {
                            "id": 246,
                            "name": "_EIP_1271_MAGIC_VALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "2726:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 146,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "2709:59:0"
                      }
                    ]
                  },
                  "functionSelector": "1626ba7e",
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "1410:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "digest",
                        "nameLocation": "1435:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1427:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "1456:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1443:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1443:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1426:40:0"
                  },
                  "returnParameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1514:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1514:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1513:8:0"
                  },
                  "scope": 255,
                  "src": "1401:1374:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 256,
              "src": "251:2526:0",
              "usedErrors": []
            }
          ],
          "src": "32:2746:0"
        },
        "id": 0
      }
    }
  }
}
