{
  "id": "e5ed9367c8a86a0b3dd725d9342699db",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.14",
  "solcLongVersion": "0.8.14+commit.80d49f37",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/conduit/Conduit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\n\nimport { ConduitItemType } from \"./lib/ConduitEnums.sol\";\n\nimport { TokenTransferrer } from \"../lib/TokenTransferrer.sol\";\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"./lib/ConduitStructs.sol\";\n\nimport \"./lib/ConduitConstants.sol\";\n\n/**\n * @title Conduit\n * @author 0age\n * @notice This contract serves as an originator for \"proxied\" transfers. Each\n *         conduit is deployed and controlled by a \"conduit controller\" that can\n *         add and remove \"channels\" or contracts that can instruct the conduit\n *         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n *         conduit has an owner that can arbitrarily add or remove channels, and\n *         a malicious or negligent owner can add a channel that allows for any\n *         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n *         cautious with what conduits you give token approvals to!*\n */\ncontract Conduit is ConduitInterface, TokenTransferrer {\n    // Set deployer as an immutable controller that can update channel statuses.\n    address private immutable _controller;\n\n    // Track the status of each channel.\n    mapping(address => bool) private _channels;\n\n    /**\n     * @notice Ensure that the caller is currently registered as an open channel\n     *         on the conduit.\n     */\n    modifier onlyOpenChannel() {\n        // Utilize assembly to access channel storage mapping directly.\n        assembly {\n            // Write the caller to scratch space.\n            mstore(ChannelKey_channel_ptr, caller())\n\n            // Write the storage slot for _channels to scratch space.\n            mstore(ChannelKey_slot_ptr, _channels.slot)\n\n            // Derive the position in storage of _channels[msg.sender]\n            // and check if the stored value is zero.\n            if iszero(\n                sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length))\n            ) {\n                // The caller is not an open channel; revert with\n                // ChannelClosed(caller). First, set error signature in memory.\n                mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature)\n\n                // Next, set the caller as the argument.\n                mstore(ChannelClosed_channel_ptr, caller())\n\n                // Finally, revert, returning full custom error with argument.\n                revert(ChannelClosed_error_ptr, ChannelClosed_error_length)\n            }\n        }\n\n        // Continue with function execution.\n        _;\n    }\n\n    /**\n     * @notice In the constructor, set the deployer as the controller.\n     */\n    constructor() {\n        // Set the deployer as the controller.\n        _controller = msg.sender;\n    }\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        override\n        onlyOpenChannel\n        returns (bytes4 magicValue)\n    {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = transfers.length;\n\n        // Iterate over each transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(transfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.execute.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param batchTransfers The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeBatch1155.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n     *         transfers as well as batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param standardTransfers The ERC20/721/1155 item transfers to perform.\n     * @param batchTransfers    The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = standardTransfers.length;\n\n        // Iterate over each standard transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(standardTransfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward aside from the free memory\n        // pointer having the default value.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeWithBatch1155.selector;\n    }\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external override {\n        // Ensure that the caller is the controller of this contract.\n        if (msg.sender != _controller) {\n            revert InvalidController();\n        }\n\n        // Ensure that the channel does not already have the indicated status.\n        if (_channels[channel] == isOpen) {\n            revert ChannelStatusAlreadySet(channel, isOpen);\n        }\n\n        // Update the status of the channel.\n        _channels[channel] = isOpen;\n\n        // Emit a corresponding event.\n        emit ChannelUpdated(channel, isOpen);\n    }\n\n    /**\n     * @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n     *      channels are expected to implement checks against transferring any\n     *      zero-amount items if that constraint is desired.\n     *\n     * @param item The ERC20/721/1155 item to transfer.\n     */\n    function _transfer(ConduitTransfer calldata item) internal {\n        // Determine the transfer method based on the respective item type.\n        if (item.itemType == ConduitItemType.ERC20) {\n            // Transfer ERC20 token. Note that item.identifier is ignored and\n            // therefore ERC20 transfer items are potentially malleable — this\n            // check should be performed by the calling channel if a constraint\n            // on item malleability is desired.\n            _performERC20Transfer(item.token, item.from, item.to, item.amount);\n        } else if (item.itemType == ConduitItemType.ERC721) {\n            // Ensure that exactly one 721 item is being transferred.\n            if (item.amount != 1) {\n                revert InvalidERC721TransferAmount();\n            }\n\n            // Transfer ERC721 token.\n            _performERC721Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier\n            );\n        } else if (item.itemType == ConduitItemType.ERC1155) {\n            // Transfer ERC1155 token.\n            _performERC1155Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier,\n                item.amount\n            );\n        } else {\n            // Throw with an error.\n            revert InvalidItemType();\n        }\n    }\n}\n"
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title ConduitInterface\n * @author 0age\n * @notice ConduitInterface contains all external function interfaces, events,\n *         and errors for conduit contracts.\n */\ninterface ConduitInterface {\n    /**\n     * @dev Revert with an error when attempting to execute transfers using a\n     *      caller that does not have an open channel.\n     */\n    error ChannelClosed(address channel);\n\n    /**\n     * @dev Revert with an error when attempting to update a channel to the\n     *      current status of that channel.\n     */\n    error ChannelStatusAlreadySet(address channel, bool isOpen);\n\n    /**\n     * @dev Revert with an error when attempting to execute a transfer for an\n     *      item that does not have an ERC20/721/1155 item type.\n     */\n    error InvalidItemType();\n\n    /**\n     * @dev Revert with an error when attempting to update the status of a\n     *      channel from a caller that is not the conduit controller.\n     */\n    error InvalidController();\n\n    /**\n     * @dev Emit an event whenever a channel is opened or closed.\n     *\n     * @param channel The channel that has been updated.\n     * @param open    A boolean indicating whether the conduit is open or not.\n     */\n    event ChannelUpdated(address indexed channel, bool open);\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n     *         open channel can call this function.\n     *\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of transfers, both single and batch 1155. Only\n     *         a caller with an open channel can call this function.\n     *\n     * @param standardTransfers  The ERC20/721/1155 transfers to perform.\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external;\n}\n"
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nenum ConduitItemType {\n    NATIVE, // unused\n    ERC20,\n    ERC721,\n    ERC1155\n}\n"
      },
      "contracts/lib/TokenTransferrer.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"./TokenTransferrerConstants.sol\";\n\n// prettier-ignore\nimport {\n    TokenTransferrerErrors\n} from \"../interfaces/TokenTransferrerErrors.sol\";\n\nimport { ConduitBatch1155Transfer } from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title TokenTransferrer\n * @author 0age\n * @custom:coauthor d1ll0n\n * @custom:coauthor transmissions11\n * @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n *         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n *         by conduits deployed by the ConduitController. Use great caution when\n *         considering these functions for use in other codebases, as there are\n *         significant side effects and edge cases that need to be thoroughly\n *         understood and carefully addressed.\n */\ncontract TokenTransferrer is TokenTransferrerErrors {\n    /**\n     * @dev Internal function to transfer ERC20 tokens from a given originator\n     *      to a given recipient. Sufficient approvals must be set on the\n     *      contract performing the transfer.\n     *\n     * @param token      The ERC20 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC20Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC20 token transfer.\n        assembly {\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data into memory, starting with function selector.\n            mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature)\n            mstore(ERC20_transferFrom_from_ptr, from)\n            mstore(ERC20_transferFrom_to_ptr, to)\n            mstore(ERC20_transferFrom_amount_ptr, amount)\n\n            // Make call & copy up to 32 bytes of return data to scratch space.\n            // Scratch space does not need to be cleared ahead of time, as the\n            // subsequent check will ensure that either at least a full word of\n            // return data is received (in which case it will be overwritten) or\n            // that no data is received (in which case scratch space will be\n            // ignored) on a successful call to the given token.\n            let callStatus := call(\n                gas(),\n                token,\n                0,\n                ERC20_transferFrom_sig_ptr,\n                ERC20_transferFrom_length,\n                0,\n                OneWord\n            )\n\n            // Determine whether transfer was successful using status & result.\n            let success := and(\n                // Set success to whether the call reverted, if not check it\n                // either returned exactly 1 (can't just be non-zero data), or\n                // had no return data.\n                or(\n                    and(eq(mload(0), 1), gt(returndatasize(), 31)),\n                    iszero(returndatasize())\n                ),\n                callStatus\n            )\n\n            // Handle cases where either the transfer failed or no data was\n            // returned. Group these, as most transfers will succeed with data.\n            // Equivalent to `or(iszero(success), iszero(returndatasize()))`\n            // but after it's inverted for JUMPI this expression is cheaper.\n            if iszero(and(success, iszero(iszero(returndatasize())))) {\n                // If the token has no code or the transfer failed: Equivalent\n                // to `or(iszero(success), iszero(extcodesize(token)))` but\n                // after it's inverted for JUMPI this expression is cheaper.\n                if iszero(and(iszero(iszero(extcodesize(token))), success)) {\n                    // If the transfer failed:\n                    if iszero(success) {\n                        // If it was due to a revert:\n                        if iszero(callStatus) {\n                            // If it returned a message, bubble it up as long as\n                            // sufficient gas remains to do so:\n                            if returndatasize() {\n                                // Ensure that sufficient gas is available to\n                                // copy returndata while expanding memory where\n                                // necessary. Start by computing the word size\n                                // of returndata and allocated memory. Round up\n                                // to the nearest full word.\n                                let returnDataWords := div(\n                                    add(returndatasize(), AlmostOneWord),\n                                    OneWord\n                                )\n\n                                // Note: use the free memory pointer in place of\n                                // msize() to work around a Yul warning that\n                                // prevents accessing msize directly when the IR\n                                // pipeline is activated.\n                                let msizeWords := div(memPointer, OneWord)\n\n                                // Next, compute the cost of the returndatacopy.\n                                let cost := mul(CostPerWord, returnDataWords)\n\n                                // Then, compute cost of new memory allocation.\n                                if gt(returnDataWords, msizeWords) {\n                                    cost := add(\n                                        cost,\n                                        add(\n                                            mul(\n                                                sub(\n                                                    returnDataWords,\n                                                    msizeWords\n                                                ),\n                                                CostPerWord\n                                            ),\n                                            div(\n                                                sub(\n                                                    mul(\n                                                        returnDataWords,\n                                                        returnDataWords\n                                                    ),\n                                                    mul(msizeWords, msizeWords)\n                                                ),\n                                                MemoryExpansionCoefficient\n                                            )\n                                        )\n                                    )\n                                }\n\n                                // Finally, add a small constant and compare to\n                                // gas remaining; bubble up the revert data if\n                                // enough gas is still available.\n                                if lt(add(cost, ExtraGasBuffer), gas()) {\n                                    // Copy returndata to memory; overwrite\n                                    // existing memory.\n                                    returndatacopy(0, 0, returndatasize())\n\n                                    // Revert, specifying memory region with\n                                    // copied returndata.\n                                    revert(0, returndatasize())\n                                }\n                            }\n\n                            // Otherwise revert with a generic error message.\n                            mstore(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_signature\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_token_ptr,\n                                token\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_from_ptr,\n                                from\n                            )\n                            mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                            mstore(TokenTransferGenericFailure_error_id_ptr, 0)\n                            mstore(\n                                TokenTransferGenericFailure_error_amount_ptr,\n                                amount\n                            )\n                            revert(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_length\n                            )\n                        }\n\n                        // Otherwise revert with a message about the token\n                        // returning false or non-compliant return values.\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_signature\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_token_ptr,\n                            token\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_from_ptr,\n                            from\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_to_ptr,\n                            to\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_amount_ptr,\n                            amount\n                        )\n                        revert(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_length\n                        )\n                    }\n\n                    // Otherwise, revert with error about token not having code:\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Otherwise, the token just returned no data despite the call\n                // having succeeded; no need to optimize for this as it's not\n                // technically ERC20 compliant.\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer an ERC721 token from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer. Note that this function does\n     *      not check whether the receiver can accept the ERC721 token (i.e. it\n     *      does not use `safeTransferFrom`).\n     *\n     * @param token      The ERC721 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The tokenId to transfer.\n     */\n    function _performERC721Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier\n    ) internal {\n        // Utilize assembly to perform an optimized ERC721 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data to memory starting with function selector.\n            mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature)\n            mstore(ERC721_transferFrom_from_ptr, from)\n            mstore(ERC721_transferFrom_to_ptr, to)\n            mstore(ERC721_transferFrom_id_ptr, identifier)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC721_transferFrom_sig_ptr,\n                ERC721_transferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, 1)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer.\n     *\n     * @param token      The ERC1155 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The id to transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC1155Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC1155 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The following memory slots will be used when populating call data\n            // for the transfer; read the values and restore them later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n            let slot0x80 := mload(Slot0x80)\n            let slot0xA0 := mload(Slot0xA0)\n            let slot0xC0 := mload(Slot0xC0)\n\n            // Write call data into memory, beginning with function selector.\n            mstore(\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_signature\n            )\n            mstore(ERC1155_safeTransferFrom_from_ptr, from)\n            mstore(ERC1155_safeTransferFrom_to_ptr, to)\n            mstore(ERC1155_safeTransferFrom_id_ptr, identifier)\n            mstore(ERC1155_safeTransferFrom_amount_ptr, amount)\n            mstore(\n                ERC1155_safeTransferFrom_data_offset_ptr,\n                ERC1155_safeTransferFrom_data_length_offset\n            )\n            mstore(ERC1155_safeTransferFrom_data_length_ptr, 0)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, amount)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            mstore(Slot0x80, slot0x80) // Restore slot 0x80.\n            mstore(Slot0xA0, slot0xA0) // Restore slot 0xA0.\n            mstore(Slot0xC0, slot0xC0) // Restore slot 0xC0.\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer. NOTE: this function is not\n     *      memory-safe; it will overwrite existing memory, restore the free\n     *      memory pointer to the default value, and overwrite the zero slot.\n     *      This function should only be called once memory is no longer\n     *      required and when uninitialized arrays are not utilized, and memory\n     *      should be considered fully corrupted (aside from the existence of a\n     *      default-value free memory pointer) after calling this function.\n     *\n     * @param batchTransfers The group of 1155 batch transfers to perform.\n     */\n    function _performERC1155BatchTransfers(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) internal {\n        // Utilize assembly to perform optimized batch 1155 transfers.\n        assembly {\n            let len := batchTransfers.length\n            // Pointer to first head in the array, which is offset to the struct\n            // at each index. This gets incremented after each loop to avoid\n            // multiplying by 32 to get the offset for each element.\n            let nextElementHeadPtr := batchTransfers.offset\n\n            // Pointer to beginning of the head of the array. This is the\n            // reference position each offset references. It's held static to\n            // let each loop calculate the data position for an element.\n            let arrayHeadPtr := nextElementHeadPtr\n\n            // Write the function selector, which will be reused for each call:\n            // safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\n            mstore(\n                ConduitBatch1155Transfer_from_offset,\n                ERC1155_safeBatchTransferFrom_signature\n            )\n\n            // Iterate over each batch transfer.\n            for {\n                let i := 0\n            } lt(i, len) {\n                i := add(i, 1)\n            } {\n                // Read the offset to the beginning of the element and add\n                // it to pointer to the beginning of the array head to get\n                // the absolute position of the element in calldata.\n                let elementPtr := add(\n                    arrayHeadPtr,\n                    calldataload(nextElementHeadPtr)\n                )\n\n                // Retrieve the token from calldata.\n                let token := calldataload(elementPtr)\n\n                // If the token has no code, revert.\n                if iszero(extcodesize(token)) {\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Get the total number of supplied ids.\n                let idsLength := calldataload(\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset)\n                )\n\n                // Determine the expected offset for the amounts array.\n                let expectedAmountsOffset := add(\n                    ConduitBatch1155Transfer_amounts_length_baseOffset,\n                    mul(idsLength, OneWord)\n                )\n\n                // Validate struct encoding.\n                let invalidEncoding := iszero(\n                    and(\n                        // ids.length == amounts.length\n                        eq(\n                            idsLength,\n                            calldataload(add(elementPtr, expectedAmountsOffset))\n                        ),\n                        and(\n                            // ids_offset == 0xa0\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatch1155Transfer_ids_head_offset\n                                    )\n                                ),\n                                ConduitBatch1155Transfer_ids_length_offset\n                            ),\n                            // amounts_offset == 0xc0 + ids.length*32\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatchTransfer_amounts_head_offset\n                                    )\n                                ),\n                                expectedAmountsOffset\n                            )\n                        )\n                    )\n                )\n\n                // Revert with an error if the encoding is not valid.\n                if invalidEncoding {\n                    mstore(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_selector\n                    )\n                    revert(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_length\n                    )\n                }\n\n                // Update the offset position for the next loop\n                nextElementHeadPtr := add(nextElementHeadPtr, OneWord)\n\n                // Copy the first section of calldata (before dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_from_offset),\n                    ConduitBatch1155Transfer_usable_head_size\n                )\n\n                // Determine size of calldata required for ids and amounts. Note\n                // that the size includes both lengths as well as the data.\n                let idsAndAmountsSize := add(TwoWords, mul(idsLength, TwoWords))\n\n                // Update the offset for the data array in memory.\n                mstore(\n                    BatchTransfer1155Params_data_head_ptr,\n                    add(\n                        BatchTransfer1155Params_ids_length_offset,\n                        idsAndAmountsSize\n                    )\n                )\n\n                // Set the length of the data array in memory to zero.\n                mstore(\n                    add(\n                        BatchTransfer1155Params_data_length_basePtr,\n                        idsAndAmountsSize\n                    ),\n                    0\n                )\n\n                // Determine the total calldata size for the call to transfer.\n                let transferDataSize := add(\n                    BatchTransfer1155Params_calldata_baseSize,\n                    idsAndAmountsSize\n                )\n\n                // Copy second section of calldata (including dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ids_length_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset),\n                    idsAndAmountsSize\n                )\n\n                // Perform the call to transfer 1155 tokens.\n                let success := call(\n                    gas(),\n                    token,\n                    0,\n                    ConduitBatch1155Transfer_from_offset, // Data portion start.\n                    transferDataSize, // Location of the length of callData.\n                    0,\n                    0\n                )\n\n                // If the transfer reverted:\n                if iszero(success) {\n                    // If it returned a message, bubble it up as long as\n                    // sufficient gas remains to do so:\n                    if returndatasize() {\n                        // Ensure that sufficient gas is available to copy\n                        // returndata while expanding memory where necessary.\n                        // Start by computing word size of returndata and\n                        // allocated memory. Round up to the nearest full word.\n                        let returnDataWords := div(\n                            add(returndatasize(), AlmostOneWord),\n                            OneWord\n                        )\n\n                        // Note: use transferDataSize in place of msize() to\n                        // work around a Yul warning that prevents accessing\n                        // msize directly when the IR pipeline is activated.\n                        // The free memory pointer is not used here because\n                        // this function does almost all memory management\n                        // manually and does not update it, and transferDataSize\n                        // should be the largest memory value used (unless a\n                        // previous batch was larger).\n                        let msizeWords := div(transferDataSize, OneWord)\n\n                        // Next, compute the cost of the returndatacopy.\n                        let cost := mul(CostPerWord, returnDataWords)\n\n                        // Then, compute cost of new memory allocation.\n                        if gt(returnDataWords, msizeWords) {\n                            cost := add(\n                                cost,\n                                add(\n                                    mul(\n                                        sub(returnDataWords, msizeWords),\n                                        CostPerWord\n                                    ),\n                                    div(\n                                        sub(\n                                            mul(\n                                                returnDataWords,\n                                                returnDataWords\n                                            ),\n                                            mul(msizeWords, msizeWords)\n                                        ),\n                                        MemoryExpansionCoefficient\n                                    )\n                                )\n                            )\n                        }\n\n                        // Finally, add a small constant and compare to gas\n                        // remaining; bubble up the revert data if enough gas is\n                        // still available.\n                        if lt(add(cost, ExtraGasBuffer), gas()) {\n                            // Copy returndata to memory; overwrite existing.\n                            returndatacopy(0, 0, returndatasize())\n\n                            // Revert with memory region containing returndata.\n                            revert(0, returndatasize())\n                        }\n                    }\n\n                    // Set the error signature.\n                    mstore(\n                        0,\n                        ERC1155BatchTransferGenericFailure_error_signature\n                    )\n\n                    // Write the token.\n                    mstore(ERC1155BatchTransferGenericFailure_token_ptr, token)\n\n                    // Increase the offset to ids by 32.\n                    mstore(\n                        BatchTransfer1155Params_ids_head_ptr,\n                        ERC1155BatchTransferGenericFailure_ids_offset\n                    )\n\n                    // Increase the offset to amounts by 32.\n                    mstore(\n                        BatchTransfer1155Params_amounts_head_ptr,\n                        add(\n                            OneWord,\n                            mload(BatchTransfer1155Params_amounts_head_ptr)\n                        )\n                    )\n\n                    // Return modified region. The total size stays the same as\n                    // `token` uses the same number of bytes as `data.length`.\n                    revert(0, transferDataSize)\n                }\n            }\n\n            // Reset the free memory pointer to the default value; memory must\n            // be assumed to be dirtied and not reused from this point forward.\n            // Also note that the zero slot is not reset to zero, meaning empty\n            // arrays cannot be safely created or utilized until it is restored.\n            mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer)\n        }\n    }\n}\n"
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport { ConduitItemType } from \"./ConduitEnums.sol\";\n\nstruct ConduitTransfer {\n    ConduitItemType itemType;\n    address token;\n    address from;\n    address to;\n    uint256 identifier;\n    uint256 amount;\n}\n\nstruct ConduitBatch1155Transfer {\n    address token;\n    address from;\n    address to;\n    uint256[] ids;\n    uint256[] amounts;\n}\n"
      },
      "contracts/conduit/lib/ConduitConstants.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n// error ChannelClosed(address channel)\nuint256 constant ChannelClosed_error_signature = (\n    0x93daadf200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ChannelClosed_error_ptr = 0x00;\nuint256 constant ChannelClosed_channel_ptr = 0x4;\nuint256 constant ChannelClosed_error_length = 0x24;\n\n// For the mapping:\n// mapping(address => bool) channels\n// The position in storage for a particular account is:\n// keccak256(abi.encode(account, channels.slot))\nuint256 constant ChannelKey_channel_ptr = 0x00;\nuint256 constant ChannelKey_slot_ptr = 0x20;\nuint256 constant ChannelKey_length = 0x40;\n"
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n/*\n * -------------------------- Disambiguation & Other Notes ---------------------\n *    - The term \"head\" is used as it is in the documentation for ABI encoding,\n *      but only in reference to dynamic types, i.e. it always refers to the\n *      offset or pointer to the body of a dynamic type. In calldata, the head\n *      is always an offset (relative to the parent object), while in memory,\n *      the head is always the pointer to the body. More information found here:\n *      https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#argument-encoding\n *        - Note that the length of an array is separate from and precedes the\n *          head of the array.\n *\n *    - The term \"body\" is used in place of the term \"head\" used in the ABI\n *      documentation. It refers to the start of the data for a dynamic type,\n *      e.g. the first word of a struct or the first word of the first element\n *      in an array.\n *\n *    - The term \"pointer\" is used to describe the absolute position of a value\n *      and never an offset relative to another value.\n *        - The suffix \"_ptr\" refers to a memory pointer.\n *        - The suffix \"_cdPtr\" refers to a calldata pointer.\n *\n *    - The term \"offset\" is used to describe the position of a value relative\n *      to some parent value. For example, OrderParameters_conduit_offset is the\n *      offset to the \"conduit\" value in the OrderParameters struct relative to\n *      the start of the body.\n *        - Note: Offsets are used to derive pointers.\n *\n *    - Some structs have pointers defined for all of their fields in this file.\n *      Lines which are commented out are fields that are not used in the\n *      codebase but have been left in for readability.\n */\n\nuint256 constant AlmostOneWord = 0x1f;\nuint256 constant OneWord = 0x20;\nuint256 constant TwoWords = 0x40;\nuint256 constant ThreeWords = 0x60;\n\nuint256 constant FreeMemoryPointerSlot = 0x40;\nuint256 constant ZeroSlot = 0x60;\nuint256 constant DefaultFreeMemoryPointer = 0x80;\n\nuint256 constant Slot0x80 = 0x80;\nuint256 constant Slot0xA0 = 0xa0;\nuint256 constant Slot0xC0 = 0xc0;\n\n// abi.encodeWithSignature(\"transferFrom(address,address,uint256)\")\nuint256 constant ERC20_transferFrom_signature = (\n    0x23b872dd00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC20_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC20_transferFrom_from_ptr = 0x04;\nuint256 constant ERC20_transferFrom_to_ptr = 0x24;\nuint256 constant ERC20_transferFrom_amount_ptr = 0x44;\nuint256 constant ERC20_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\n//     \"safeTransferFrom(address,address,uint256,uint256,bytes)\"\n// )\nuint256 constant ERC1155_safeTransferFrom_signature = (\n    0xf242432a00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155_safeTransferFrom_sig_ptr = 0x0;\nuint256 constant ERC1155_safeTransferFrom_from_ptr = 0x04;\nuint256 constant ERC1155_safeTransferFrom_to_ptr = 0x24;\nuint256 constant ERC1155_safeTransferFrom_id_ptr = 0x44;\nuint256 constant ERC1155_safeTransferFrom_amount_ptr = 0x64;\nuint256 constant ERC1155_safeTransferFrom_data_offset_ptr = 0x84;\nuint256 constant ERC1155_safeTransferFrom_data_length_ptr = 0xa4;\nuint256 constant ERC1155_safeTransferFrom_length = 0xc4; // 4 + 32 * 6 == 196\nuint256 constant ERC1155_safeTransferFrom_data_length_offset = 0xa0;\n\n// abi.encodeWithSignature(\n//     \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\"\n// )\nuint256 constant ERC1155_safeBatchTransferFrom_signature = (\n    0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n);\n\nbytes4 constant ERC1155_safeBatchTransferFrom_selector = bytes4(\n    bytes32(ERC1155_safeBatchTransferFrom_signature)\n);\n\nuint256 constant ERC721_transferFrom_signature = ERC20_transferFrom_signature;\nuint256 constant ERC721_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC721_transferFrom_from_ptr = 0x04;\nuint256 constant ERC721_transferFrom_to_ptr = 0x24;\nuint256 constant ERC721_transferFrom_id_ptr = 0x44;\nuint256 constant ERC721_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\"NoContract(address)\")\nuint256 constant NoContract_error_signature = (\n    0x5f15d67200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant NoContract_error_sig_ptr = 0x0;\nuint256 constant NoContract_error_token_ptr = 0x4;\nuint256 constant NoContract_error_length = 0x24; // 4 + 32 == 36\n\n// abi.encodeWithSignature(\n//     \"TokenTransferGenericFailure(address,address,address,uint256,uint256)\"\n// )\nuint256 constant TokenTransferGenericFailure_error_signature = (\n    0xf486bc8700000000000000000000000000000000000000000000000000000000\n);\nuint256 constant TokenTransferGenericFailure_error_sig_ptr = 0x0;\nuint256 constant TokenTransferGenericFailure_error_token_ptr = 0x4;\nuint256 constant TokenTransferGenericFailure_error_from_ptr = 0x24;\nuint256 constant TokenTransferGenericFailure_error_to_ptr = 0x44;\nuint256 constant TokenTransferGenericFailure_error_id_ptr = 0x64;\nuint256 constant TokenTransferGenericFailure_error_amount_ptr = 0x84;\n\n// 4 + 32 * 5 == 164\nuint256 constant TokenTransferGenericFailure_error_length = 0xa4;\n\n// abi.encodeWithSignature(\n//     \"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\"\n// )\nuint256 constant BadReturnValueFromERC20OnTransfer_error_signature = (\n    0x9889192300000000000000000000000000000000000000000000000000000000\n);\nuint256 constant BadReturnValueFromERC20OnTransfer_error_sig_ptr = 0x0;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_token_ptr = 0x4;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_from_ptr = 0x24;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_to_ptr = 0x44;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_amount_ptr = 0x64;\n\n// 4 + 32 * 4 == 132\nuint256 constant BadReturnValueFromERC20OnTransfer_error_length = 0x84;\n\nuint256 constant ExtraGasBuffer = 0x20;\nuint256 constant CostPerWord = 3;\nuint256 constant MemoryExpansionCoefficient = 0x200;\n\n// Values are offset by 32 bytes in order to write the token to the beginning\n// in the event of a revert\nuint256 constant BatchTransfer1155Params_ptr = 0x24;\nuint256 constant BatchTransfer1155Params_ids_head_ptr = 0x64;\nuint256 constant BatchTransfer1155Params_amounts_head_ptr = 0x84;\nuint256 constant BatchTransfer1155Params_data_head_ptr = 0xa4;\nuint256 constant BatchTransfer1155Params_data_length_basePtr = 0xc4;\nuint256 constant BatchTransfer1155Params_calldata_baseSize = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_ptr = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_offset = 0xa0;\nuint256 constant BatchTransfer1155Params_amounts_length_baseOffset = 0xc0;\nuint256 constant BatchTransfer1155Params_data_length_baseOffset = 0xe0;\n\nuint256 constant ConduitBatch1155Transfer_usable_head_size = 0x80;\n\nuint256 constant ConduitBatch1155Transfer_from_offset = 0x20;\nuint256 constant ConduitBatch1155Transfer_ids_head_offset = 0x60;\nuint256 constant ConduitBatch1155Transfer_amounts_head_offset = 0x80;\nuint256 constant ConduitBatch1155Transfer_ids_length_offset = 0xa0;\nuint256 constant ConduitBatch1155Transfer_amounts_length_baseOffset = 0xc0;\nuint256 constant ConduitBatch1155Transfer_calldata_baseSize = 0xc0;\n\n// Note: abbreviated version of above constant to adhere to line length limit.\nuint256 constant ConduitBatchTransfer_amounts_head_offset = 0x80;\n\nuint256 constant Invalid1155BatchTransferEncoding_ptr = 0x00;\nuint256 constant Invalid1155BatchTransferEncoding_length = 0x04;\nuint256 constant Invalid1155BatchTransferEncoding_selector = (\n    0xeba2084c00000000000000000000000000000000000000000000000000000000\n);\n\nuint256 constant ERC1155BatchTransferGenericFailure_error_signature = (\n    0xafc445e200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155BatchTransferGenericFailure_token_ptr = 0x04;\nuint256 constant ERC1155BatchTransferGenericFailure_ids_offset = 0xc0;\n"
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n/**\n * @title TokenTransferrerErrors\n */\ninterface TokenTransferrerErrors {\n    /**\n     * @dev Revert with an error when an ERC721 transfer with amount other than\n     *      one is attempted.\n     */\n    error InvalidERC721TransferAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has an amount of zero.\n     */\n    error MissingItemAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has unused parameters. This includes both the token and the\n     *      identifier parameters for native transfers as well as the identifier\n     *      parameter for ERC20 transfers. Note that the conduit does not\n     *      perform this check, leaving it up to the calling channel to enforce\n     *      when desired.\n     */\n    error UnusedItemParameters();\n\n    /**\n     * @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n     *      transfer reverts.\n     *\n     * @param token      The token for which the transfer was attempted.\n     * @param from       The source of the attempted transfer.\n     * @param to         The recipient of the attempted transfer.\n     * @param identifier The identifier for the attempted transfer.\n     * @param amount     The amount for the attempted transfer.\n     */\n    error TokenTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when a batch ERC1155 token transfer reverts.\n     *\n     * @param token       The token for which the transfer was attempted.\n     * @param from        The source of the attempted transfer.\n     * @param to          The recipient of the attempted transfer.\n     * @param identifiers The identifiers for the attempted transfer.\n     * @param amounts     The amounts for the attempted transfer.\n     */\n    error ERC1155BatchTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256[] identifiers,\n        uint256[] amounts\n    );\n\n    /**\n     * @dev Revert with an error when an ERC20 token transfer returns a falsey\n     *      value.\n     *\n     * @param token      The token for which the ERC20 transfer was attempted.\n     * @param from       The source of the attempted ERC20 transfer.\n     * @param to         The recipient of the attempted ERC20 transfer.\n     * @param amount     The amount for the attempted ERC20 transfer.\n     */\n    error BadReturnValueFromERC20OnTransfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when an account being called as an assumed\n     *      contract does not have code and returns no data.\n     *\n     * @param account The account that should contain code.\n     */\n    error NoContract(address account);\n\n    /**\n     * @dev Revert with an error when attempting to execute an 1155 batch\n     *      transfer using calldata not produced by default ABI encoding or with\n     *      different lengths for ids and amounts arrays.\n     */\n    error Invalid1155BatchTransferEncoding();\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/conduit/Conduit.sol": {
        "Conduit": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "ChannelStatusAlreadySet",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a080604052346100235733608052610c7690816100298239608051816103c50152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610362565b5061000e61027f565b5061000e6101ab565b346101465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101465760043567ffffffffffffffff8111610142576100b5903690600401610149565b9133815280602052604081205415610116575b8281106100fa576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011061010b6001938686610532565b6105c4565b016100c8565b807f93daadf2000000000000000000000000000000000000000000000000000000006024925233600452fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101fc903690600401610149565b9160243590811161000e5761021590369060040161017a565b919092600033815280602052604081205415610116575b8181106102685761023d8486610acb565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b8061027961010b6001938587610532565b0161022c565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576102cf90369060040161017a565b33600052600060205260406000205415610316576102ec91610acb565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b7f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561039e81610344565b6024359081151580830361000e5773ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001633036105085761041f6104188473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5460ff1690565b1515146104b657816104a6846104767fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405193151584521691602090a2005b506040517f924e341e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9190911660048201529015156024820152604490fd5b60046040517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156105425760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004111561057b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105c181610344565b90565b60016105cf826105aa565b6105d881610571565b0361061357806105ed602061061193016105b7565b906105fa604082016105b7565b60a0610608606084016105b7565b92013592610712565b565b600261061e826105aa565b61062781610571565b0361069657600160a08201350361066c5780610648602061061193016105b7565b90610655604082016105b7565b6080610663606084016105b7565b92013592610882565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b60036106a1826105aa565b6106aa81610571565b036106e857806106bf602061061193016105b7565b6106cb604083016105b7565b6106d7606084016105b7565b90608060a085013594013592610990565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d151581161561077c575b505050505050604052606052565b80863b15151661076e579087959691156107bc57602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b156107f657506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d610835575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b601f3d0160051c9060051c908060030291808211610869575b505060205a91011061086057856107fc565b833d81803e3d90fd5b8080600392028380020360091c9203020101868061084e565b9092813b1561096257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af1156108db5750505050604052606052565b8593943d61091e575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b601f3d0160051c9060051c908060030291808211610949575b505060205a91011061086057856108e4565b8080600392028380020360091c92030201018680610937565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b15610a9d57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af115610a0d57505050505060805260a05260c052604052606052565b89949550883d610a50575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b601f3d0160051c9060051c908060030291808211610a84575b505060205a910110610a7b5786610a18565b843d81803e3d90fd5b8080600392028380020360091c92030201018780610a69565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b90816020907f2eb2c2d600000000000000000000000000000000000000000000000000000000825260005b838110610b095750505050506080604052565b8435820194853590813b156109625760a09182880192833560059181831b948b60c08097608094818301868501351490606085013514169201013584141615610c165789019a890160243760061b9360e0850160a452610104850194600086526040019060c437600080858982865af115610b8a5750505050600101610af6565b869394503d610bcb575b507fafc445e20000000000000000000000000000000000000000000000000000000060005260045260645260849081510190526000fd5b84601f3d01821c911c90600381810292808311610bff575b505050835a910110610bf55784610b94565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610be3565b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220c7520662ec46582d1826b0f9b16ed2fdfd73bda954387d326ff5d976f050259964736f6c634300080e0033",
              "opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC76 SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3C5 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x362 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x142 JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0xFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x110 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST ADD PUSH2 0xC8 JUMP JUMPDEST DUP1 PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE CALLER PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x1FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x215 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x23D DUP5 DUP7 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x279 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x532 JUMP JUMPDEST ADD PUSH2 0x22C JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x2CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x316 JUMPI PUSH2 0x2EC SWAP2 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x39E DUP2 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 DUP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x508 JUMPI PUSH2 0x41F PUSH2 0x418 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4A6 DUP5 PUSH2 0x476 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE AND SWAP2 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x5C1 DUP2 PUSH2 0x344 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x5CF DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x613 JUMPI DUP1 PUSH2 0x5ED PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x5FA PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x608 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x712 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x61E DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x696 JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x66C JUMPI DUP1 PUSH2 0x648 PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x655 PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x663 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x6A1 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x6E8 JUMPI DUP1 PUSH2 0x6BF PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x40 DUP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6D7 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x77C JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x76E JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x835 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x869 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x7FC JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x84E JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x8DB JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x91E JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x949 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x8E4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x937 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0xA0D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0xA50 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0xA84 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0xA7B JUMPI DUP7 PUSH2 0xA18 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB09 JUMPI POP POP POP POP POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP5 CALLDATALOAD DUP3 ADD SWAP5 DUP6 CALLDATALOAD SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0xA0 SWAP2 DUP3 DUP9 ADD SWAP3 DUP4 CALLDATALOAD PUSH1 0x5 SWAP2 DUP2 DUP4 SHL SWAP5 DUP12 PUSH1 0xC0 DUP1 SWAP8 PUSH1 0x80 SWAP5 DUP2 DUP4 ADD DUP7 DUP6 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD EQ AND SWAP3 ADD ADD CALLDATALOAD DUP5 EQ AND ISZERO PUSH2 0xC16 JUMPI DUP10 ADD SWAP11 DUP10 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x6 SHL SWAP4 PUSH1 0xE0 DUP6 ADD PUSH1 0xA4 MSTORE PUSH2 0x104 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP6 DUP10 DUP3 DUP7 GAS CALL ISZERO PUSH2 0xB8A JUMPI POP POP POP POP PUSH1 0x1 ADD PUSH2 0xAF6 JUMP JUMPDEST DUP7 SWAP4 SWAP5 POP RETURNDATASIZE PUSH2 0xBCB JUMPI JUMPDEST POP PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0x1F RETURNDATASIZE ADD DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xBFF JUMPI JUMPDEST POP POP POP DUP4 GAS SWAP2 ADD LT PUSH2 0xBF5 JUMPI DUP5 PUSH2 0xB94 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 MSTORE MOD PUSH3 0xEC4658 0x2D XOR 0x26 0xB0 0xF9 0xB1 PUSH15 0xD2FDFD73BDA954387D326FF5D976F0 POP 0x25 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "1077:9135:0:-:0;;;;;;;2835:10;2821:24;;1077:9135;;;;;;2821:24;1077:9135;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_struct_ConduitBatch1155Transfer_calldata_dyn_calldata": {
                  "entryPoint": 378,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_array_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 1330,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "external_fun_executeBatch1155": {
                  "entryPoint": 639,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_executeWithBatch1155": {
                  "entryPoint": 427,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_updateChannel": {
                  "entryPoint": 866,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_performERC1155BatchTransfers": {
                  "entryPoint": 2763,
                  "id": 538,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_performERC1155Transfer": {
                  "entryPoint": 2448,
                  "id": 528,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_performERC20Transfer": {
                  "entryPoint": 1810,
                  "id": 498,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_performERC721Transfer": {
                  "entryPoint": 2178,
                  "id": 512,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1476,
                  "id": 277,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "mapping_index_access_mapping_address_bool_of_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 1463,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_enum_ConduitItemType": {
                  "entryPoint": 1450,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_assert_enum_ConduitItemType": {
                  "entryPoint": 1393,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 836,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "18": [
                  {
                    "length": 32,
                    "start": 965
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610362565b5061000e61027f565b5061000e6101ab565b346101465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101465760043567ffffffffffffffff8111610142576100b5903690600401610149565b9133815280602052604081205415610116575b8281106100fa576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011061010b6001938686610532565b6105c4565b016100c8565b807f93daadf2000000000000000000000000000000000000000000000000000000006024925233600452fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101fc903690600401610149565b9160243590811161000e5761021590369060040161017a565b919092600033815280602052604081205415610116575b8181106102685761023d8486610acb565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b8061027961010b6001938587610532565b0161022c565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576102cf90369060040161017a565b33600052600060205260406000205415610316576102ec91610acb565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b7f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561039e81610344565b6024359081151580830361000e5773ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001633036105085761041f6104188473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5460ff1690565b1515146104b657816104a6846104767fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405193151584521691602090a2005b506040517f924e341e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9190911660048201529015156024820152604490fd5b60046040517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156105425760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004111561057b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105c181610344565b90565b60016105cf826105aa565b6105d881610571565b0361061357806105ed602061061193016105b7565b906105fa604082016105b7565b60a0610608606084016105b7565b92013592610712565b565b600261061e826105aa565b61062781610571565b0361069657600160a08201350361066c5780610648602061061193016105b7565b90610655604082016105b7565b6080610663606084016105b7565b92013592610882565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b60036106a1826105aa565b6106aa81610571565b036106e857806106bf602061061193016105b7565b6106cb604083016105b7565b6106d7606084016105b7565b90608060a085013594013592610990565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d151581161561077c575b505050505050604052606052565b80863b15151661076e579087959691156107bc57602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b156107f657506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d610835575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b601f3d0160051c9060051c908060030291808211610869575b505060205a91011061086057856107fc565b833d81803e3d90fd5b8080600392028380020360091c9203020101868061084e565b9092813b1561096257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af1156108db5750505050604052606052565b8593943d61091e575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b601f3d0160051c9060051c908060030291808211610949575b505060205a91011061086057856108e4565b8080600392028380020360091c92030201018680610937565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b15610a9d57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af115610a0d57505050505060805260a05260c052604052606052565b89949550883d610a50575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b601f3d0160051c9060051c908060030291808211610a84575b505060205a910110610a7b5786610a18565b843d81803e3d90fd5b8080600392028380020360091c92030201018780610a69565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b90816020907f2eb2c2d600000000000000000000000000000000000000000000000000000000825260005b838110610b095750505050506080604052565b8435820194853590813b156109625760a09182880192833560059181831b948b60c08097608094818301868501351490606085013514169201013584141615610c165789019a890160243760061b9360e0850160a452610104850194600086526040019060c437600080858982865af115610b8a5750505050600101610af6565b869394503d610bcb575b507fafc445e20000000000000000000000000000000000000000000000000000000060005260045260645260849081510190526000fd5b84601f3d01821c911c90600381810292808311610bff575b505050835a910110610bf55784610b94565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610be3565b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220c7520662ec46582d1826b0f9b16ed2fdfd73bda954387d326ff5d976f050259964736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x362 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x142 JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0xFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x110 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST ADD PUSH2 0xC8 JUMP JUMPDEST DUP1 PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE CALLER PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x1FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x215 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x23D DUP5 DUP7 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x279 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x532 JUMP JUMPDEST ADD PUSH2 0x22C JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x2CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x316 JUMPI PUSH2 0x2EC SWAP2 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x39E DUP2 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 DUP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x508 JUMPI PUSH2 0x41F PUSH2 0x418 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4A6 DUP5 PUSH2 0x476 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE AND SWAP2 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x5C1 DUP2 PUSH2 0x344 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x5CF DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x613 JUMPI DUP1 PUSH2 0x5ED PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x5FA PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x608 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x712 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x61E DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x696 JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x66C JUMPI DUP1 PUSH2 0x648 PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x655 PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x663 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x6A1 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x6E8 JUMPI DUP1 PUSH2 0x6BF PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x40 DUP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6D7 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x77C JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x76E JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x835 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x869 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x7FC JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x84E JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x8DB JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x91E JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x949 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x8E4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x937 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0xA0D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0xA50 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0xA84 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0xA7B JUMPI DUP7 PUSH2 0xA18 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB09 JUMPI POP POP POP POP POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP5 CALLDATALOAD DUP3 ADD SWAP5 DUP6 CALLDATALOAD SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0xA0 SWAP2 DUP3 DUP9 ADD SWAP3 DUP4 CALLDATALOAD PUSH1 0x5 SWAP2 DUP2 DUP4 SHL SWAP5 DUP12 PUSH1 0xC0 DUP1 SWAP8 PUSH1 0x80 SWAP5 DUP2 DUP4 ADD DUP7 DUP6 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD EQ AND SWAP3 ADD ADD CALLDATALOAD DUP5 EQ AND ISZERO PUSH2 0xC16 JUMPI DUP10 ADD SWAP11 DUP10 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x6 SHL SWAP4 PUSH1 0xE0 DUP6 ADD PUSH1 0xA4 MSTORE PUSH2 0x104 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP6 DUP10 DUP3 DUP7 GAS CALL ISZERO PUSH2 0xB8A JUMPI POP POP POP POP PUSH1 0x1 ADD PUSH2 0xAF6 JUMP JUMPDEST DUP7 SWAP4 SWAP5 POP RETURNDATASIZE PUSH2 0xBCB JUMPI JUMPDEST POP PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0x1F RETURNDATASIZE ADD DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xBFF JUMPI JUMPDEST POP POP POP DUP4 GAS SWAP2 ADD LT PUSH2 0xBF5 JUMPI DUP5 PUSH2 0xB94 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 MSTORE MOD PUSH3 0xEC4658 0x2D XOR 0x26 0xB0 0xF9 0xB1 PUSH15 0xD2FDFD73BDA954387D326FF5D976F0 POP 0x25 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "1077:9135:0:-:0;;;;;;;;;-1:-1:-1;1077:9135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:1004;;;;;1077:9135;1590:1004;1077:9135;1590:1004;;;;;;3957:26;;;;;;1077:9135;;;;;;;;3942:13;4086:12;;;1077:9135;4086:12;;;;:::i;:::-;;:::i;:::-;1077:9135;3942:13;;1590:1004;;;;;;;1077:9135;1590:1004;;1077:9135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;1590:1004:0;;;;1077:9135;1590:1004;1077:9135;1590:1004;;;;;;6971:26;;;;;;7513:14;;;;:::i;:::-;1077:9135;;;;;;;;6956:13;7100:20;;;1077:9135;7100:20;;;;:::i;:::-;1077:9135;6956:13;;1077:9135;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:1004;-1:-1:-1;1590:1004:0;-1:-1:-1;1077:9135:0;1590:1004;;-1:-1:-1;1590:1004:0;;;;;5464:14;;;:::i;:::-;1077:9135;1590:1004;1077:9135;;;;;1590:1004;;-1:-1:-1;1590:1004:0;;1077:9135;1590:1004;;-1:-1:-1;1590:1004:0;1077:9135;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8073:11;;;1077:9135;8059:10;:25;8055:82;;8230:18;;;1077:9135;;8230:9;1077:9135;8230:9;1077:9135;;;8230:9;1077:9135;;;8230:18;1077:9135;;;;;8230:18;1077:9135;;8230:28;8226:106;;8387:18;:27;:18;;8469:31;8387:18;1077:9135;;8230:9;1077:9135;8230:9;1077:9135;;;8230:9;1077:9135;;;8387:18;1077:9135;;;;;;;;;;;;;;8387:27;1077:9135;;;;;;;;;;;8469:31;1077:9135;8226:106;-1:-1:-1;1077:9135:0;;8281:40;;;1077:9135;;;;;;8281:40;;1077:9135;;;;;;;;;;8281:40;8055:82;1077:9135;;;8107:19;;;;1077:9135;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;1077:9135:0;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;8813:1397::-;8979:21;8962:13;;;:::i;:::-;1077:9135;;;:::i;:::-;8962:38;8979:21;;9325:10;;;9357:11;9325:10;;;:::i;:::-;9337:9;;;;;;:::i;:::-;9357:11;9348:7;;;;;:::i;:::-;9357:11;;1077:9135;9357:11;;:::i;:::-;8813:1397::o;8958:1246::-;9407:22;9390:13;;;:::i;:::-;1077:9135;;;:::i;:::-;9390:39;9407:22;;8979:21;9519:11;;;1077:9135;9519:16;9515:91;;9698:10;;;9778:15;9698:10;;;:::i;:::-;9726:9;;;;;;:::i;:::-;9778:15;9753:7;;;;;:::i;:::-;9778:15;;1077:9135;9778:15;;:::i;9515:91::-;9562:29;1077:9135;;9562:29;;;;9386:818;9845:23;9828:13;;;:::i;:::-;1077:9135;;;:::i;:::-;9828:40;9845:23;;9964:10;;;10077:11;9964:10;;;:::i;:::-;9992:9;;;;;:::i;:::-;10019:7;;;;;:::i;:::-;10077:11;10044:15;10077:11;;;1077:9135;10044:15;;1077:9135;10077:11;;:::i;9824:380::-;10176:17;1077:9135;;10176:17;;;;1344:9615:6;;;1563:9390;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:9615;1563:9390;;;;;;;;;;1344:9615::o;1563:9390::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11563:4914;;;11788:4683;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11563:4914::o;11788:4683::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:5620;;;;17376:5363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:5620::o;17376:5363::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23696:11483;;23891:11282;;;;;;;;;;;;;;;;;;;;;23696:11483::o;23891:11282::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"Conduit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"In the constructor, set the deployer as the controller.\"},\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"This contract serves as an originator for \\\"proxied\\\" transfers. Each         conduit is deployed and controlled by a \\\"conduit controller\\\" that can         add and remove \\\"channels\\\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately \\u2014 be extremely         cautious with what conduits you give token approvals to!*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conduit/Conduit.sol\":\"Conduit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/Conduit.sol\":{\"keccak256\":\"0x17e293f09a6325b6e472dde037673607156fc74cb39dccc307f0e61f4272150c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3937f6519a5445536cbd11de6258887610a9d8bd66e0c384a6078d6a1dfeb347\",\"dweb:/ipfs/QmZMDwBmuK2TuB4ukM17NWMWaSLkh2jf9yHPBzJPoz6w5q\"]},\"contracts/conduit/lib/ConduitConstants.sol\":{\"keccak256\":\"0x16760358c7ae3cb1604e2ed4bd45ecb083b7b150ee914bc6d6204aefcb8c8d9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8397316a18dc2cba2a260c592aaa205d9123ef5992433b4f4f0d3fd2f13cc24e\",\"dweb:/ipfs/QmbK4ETFzo1KdFx2jHPe6PT7muiEdUBMRZBhFBw1drWWk4\"]},\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1a84850bbff4b820573334c70ee0797462f20fd8c9b86fdebeacc85ecb1963a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://322f8198eefa578cbb9e3a116d484903d1dc38ddcdc6cce66ae386739a4bbb3e\",\"dweb:/ipfs/QmRrCMFNSuzUHtEE4tuJWwXrT1UpLTpkauuQ7CTZ7zA8RH\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe3e87c74dd79c59293e49b7236cc7befdc19886bb79af5fe53208b1772fd24f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4721002090245fcf5066229a1af02797405e31f05c7174340e06b50474c076\",\"dweb:/ipfs/QmT8XtMhRfvFNsDeEmoqrwGkCYbuxp4wHk3VhiVkuFUJnD\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x3f3224e8455ccd73027671e44be8c5a2338c8cd4c0f1dca3fa0f15a44ef14f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b88b02bc7be9bb776e8c90015e64ed64bc744e48f64c82be13d5b68c4040b8e\",\"dweb:/ipfs/QmXaS2qpYmL9CeV8ehV4tJBchPXRuUUnRMcB49zMzknoRc\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x0a89101400c263654f920aad668249ce67eaebd1af7d5582d38456c8384fc962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5368eff6e44d333bdd50fb135720a232975e775423f19113b1316414fb20bfa9\",\"dweb:/ipfs/QmYQsYqdfX5JXqRkF5RdiSDJErwyY5GZU1txRMx4taBcZE\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x9dd7add814595c3e416dafb8678a33bb037f15fcb0c1f9249472867ec3b5b952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4563686b23480f3bc797a0c6849e7625bf4bf64ddc5065196e05bf157be5f1d\",\"dweb:/ipfs/QmczZ3CeKtcrm2fqiV73fJSY36ug6PHXd6GoMk1twQffEb\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xa27ce8b77d5386e95f9b9b4897f1585b78e016c8d1e4c6531fe3b1963cdba08a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f15e002308f4f7b28d673d5c40c12b230039ec9c871dbc50607ce567bf7bd3\",\"dweb:/ipfs/QmPjc46Qdnw8ekiaNxZ5Q8nsecTL5pr1QF6hdBPkaUkWuq\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ConduitInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "ChannelStatusAlreadySet",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"ConduitInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ConduitInterface.sol\":\"ConduitInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1a84850bbff4b820573334c70ee0797462f20fd8c9b86fdebeacc85ecb1963a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://322f8198eefa578cbb9e3a116d484903d1dc38ddcdc6cce66ae386739a4bbb3e\",\"dweb:/ipfs/QmRrCMFNSuzUHtEE4tuJWwXrT1UpLTpkauuQ7CTZ7zA8RH\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe3e87c74dd79c59293e49b7236cc7befdc19886bb79af5fe53208b1772fd24f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4721002090245fcf5066229a1af02797405e31f05c7174340e06b50474c076\",\"dweb:/ipfs/QmT8XtMhRfvFNsDeEmoqrwGkCYbuxp4wHk3VhiVkuFUJnD\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x3f3224e8455ccd73027671e44be8c5a2338c8cd4c0f1dca3fa0f15a44ef14f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b88b02bc7be9bb776e8c90015e64ed64bc744e48f64c82be13d5b68c4040b8e\",\"dweb:/ipfs/QmXaS2qpYmL9CeV8ehV4tJBchPXRuUUnRMcB49zMzknoRc\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "TokenTransferrerErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrerErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":\"TokenTransferrerErrors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x0a89101400c263654f920aad668249ce67eaebd1af7d5582d38456c8384fc962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5368eff6e44d333bdd50fb135720a232975e775423f19113b1316414fb20bfa9\",\"dweb:/ipfs/QmYQsYqdfX5JXqRkF5RdiSDJErwyY5GZU1txRMx4taBcZE\"]}},\"version\":1}"
        }
      },
      "contracts/lib/TokenTransferrer.sol": {
        "TokenTransferrer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220a8a94b9c604466effdf26df8550f550d5de94abe664452208f450bf48ab7618464736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xA9 0x4B SWAP13 PUSH1 0x44 PUSH7 0xEFFDF26DF8550F SSTORE 0xD 0x5D 0xE9 0x4A 0xBE PUSH7 0x4452208F450BF4 DUP11 0xB7 PUSH2 0x8464 PUSH20 0x6F6C634300080E00330000000000000000000000 ",
              "sourceMap": "848:34333:6:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220a8a94b9c604466effdf26df8550f550d5de94abe664452208f450bf48ab7618464736f6c634300080e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xA9 0x4B SWAP13 PUSH1 0x44 PUSH7 0xEFFDF26DF8550F SSTORE 0xD 0x5D 0xE9 0x4A 0xBE PUSH7 0x4452208F450BF4 DUP11 0xB7 PUSH2 0x8464 PUSH20 0x6F6C634300080E00330000000000000000000000 ",
              "sourceMap": "848:34333:6:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"0age\",\"custom:coauthor\":\"d1ll0ntransmissions11\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"TokenTransferrer is a library for performing optimized ERC20, ERC721,         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as         by conduits deployed by the ConduitController. Use great caution when         considering these functions for use in other codebases, as there are         significant side effects and edge cases that need to be thoroughly         understood and carefully addressed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/TokenTransferrer.sol\":\"TokenTransferrer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1a84850bbff4b820573334c70ee0797462f20fd8c9b86fdebeacc85ecb1963a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://322f8198eefa578cbb9e3a116d484903d1dc38ddcdc6cce66ae386739a4bbb3e\",\"dweb:/ipfs/QmRrCMFNSuzUHtEE4tuJWwXrT1UpLTpkauuQ7CTZ7zA8RH\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe3e87c74dd79c59293e49b7236cc7befdc19886bb79af5fe53208b1772fd24f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4721002090245fcf5066229a1af02797405e31f05c7174340e06b50474c076\",\"dweb:/ipfs/QmT8XtMhRfvFNsDeEmoqrwGkCYbuxp4wHk3VhiVkuFUJnD\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x0a89101400c263654f920aad668249ce67eaebd1af7d5582d38456c8384fc962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5368eff6e44d333bdd50fb135720a232975e775423f19113b1316414fb20bfa9\",\"dweb:/ipfs/QmYQsYqdfX5JXqRkF5RdiSDJErwyY5GZU1txRMx4taBcZE\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x9dd7add814595c3e416dafb8678a33bb037f15fcb0c1f9249472867ec3b5b952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4563686b23480f3bc797a0c6849e7625bf4bf64ddc5065196e05bf157be5f1d\",\"dweb:/ipfs/QmczZ3CeKtcrm2fqiV73fJSY36ug6PHXd6GoMk1twQffEb\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xa27ce8b77d5386e95f9b9b4897f1585b78e016c8d1e4c6531fe3b1963cdba08a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f15e002308f4f7b28d673d5c40c12b230039ec9c871dbc50607ce567bf7bd3\",\"dweb:/ipfs/QmPjc46Qdnw8ekiaNxZ5Q8nsecTL5pr1QF6hdBPkaUkWuq\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/conduit/Conduit.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/Conduit.sol",
          "exportedSymbols": {
            "ChannelClosed_channel_ptr": [
              290
            ],
            "ChannelClosed_error_length": [
              293
            ],
            "ChannelClosed_error_ptr": [
              287
            ],
            "ChannelClosed_error_signature": [
              284
            ],
            "ChannelKey_channel_ptr": [
              296
            ],
            "ChannelKey_length": [
              302
            ],
            "ChannelKey_slot_ptr": [
              299
            ],
            "Conduit": [
              278
            ],
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitInterface": [
              414
            ],
            "ConduitItemType": [
              309
            ],
            "ConduitTransfer": [
              327
            ],
            "TokenTransferrer": [
              539
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "contracts/interfaces/ConduitInterface.sol",
              "file": "../interfaces/ConduitInterface.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 415,
              "src": "57:70:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ConduitInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 414,
                    "src": "66:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./lib/ConduitEnums.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 310,
              "src": "129:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 309,
                    "src": "138:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrer.sol",
              "file": "../lib/TokenTransferrer.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 540,
              "src": "188:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "TokenTransferrer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "197:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "./lib/ConduitStructs.sol",
              "id": 10,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 341,
              "src": "272:93:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 8,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "285:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 9,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "306:24:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitConstants.sol",
              "file": "./lib/ConduitConstants.sol",
              "id": 11,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 303,
              "src": "367:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 13,
                    "name": "ConduitInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 414,
                    "src": "1097:16:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1097:16:0"
                },
                {
                  "baseName": {
                    "id": 15,
                    "name": "TokenTransferrer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 539,
                    "src": "1115:16:0"
                  },
                  "id": 16,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1115:16:0"
                }
              ],
              "canonicalName": "Conduit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 12,
                "nodeType": "StructuredDocumentation",
                "src": "405:671:0",
                "text": " @title Conduit\n @author 0age\n @notice This contract serves as an originator for \"proxied\" transfers. Each\n         conduit is deployed and controlled by a \"conduit controller\" that can\n         add and remove \"channels\" or contracts that can instruct the conduit\n         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n         conduit has an owner that can arbitrarily add or remove channels, and\n         a malicious or negligent owner can add a channel that allows for any\n         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n         cautious with what conduits you give token approvals to!*"
              },
              "fullyImplemented": true,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                539,
                474,
                414
              ],
              "name": "Conduit",
              "nameLocation": "1086:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "immutable",
                  "name": "_controller",
                  "nameLocation": "1245:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1219:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_channels",
                  "nameLocation": "1337:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1304:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 21,
                    "keyType": {
                      "id": 19,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1304:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 20,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1323:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "1508:1149:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1599:995:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ChannelKey_channel_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1670:22:0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "caller",
                                      "nodeType": "YulIdentifier",
                                      "src": "1694:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1694:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1663:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1663:40:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1663:40:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ChannelKey_slot_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1794:19:0"
                                  },
                                  {
                                    "name": "_channels.slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "1815:14:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1787:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1787:43:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1787:43:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2070:514:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_error_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2241:23:0"
                                        },
                                        {
                                          "name": "ChannelClosed_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "2266:29:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2234:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2234:62:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2234:62:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_channel_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2378:25:0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "caller",
                                            "nodeType": "YulIdentifier",
                                            "src": "2405:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2405:8:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2371:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2371:43:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2371:43:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_error_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2518:23:0"
                                        },
                                        {
                                          "name": "ChannelClosed_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "2543:26:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2511:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2511:59:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2511:59:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "ChannelKey_channel_ptr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2012:22:0"
                                          },
                                          {
                                            "name": "ChannelKey_length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2036:17:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "keccak256",
                                          "nodeType": "YulIdentifier",
                                          "src": "2002:9:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2002:52:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1996:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1996:59:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1972:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1972:97:0"
                              },
                              "nodeType": "YulIf",
                              "src": "1969:615:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 290,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2378:25:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 293,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2543:26:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 287,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2241:23:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 287,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2518:23:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 284,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2266:29:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1670:22:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2012:22:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 302,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2036:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 299,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1794:19:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1815:14:0",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 25,
                        "nodeType": "InlineAssembly",
                        "src": "1590:1004:0"
                      },
                      {
                        "id": 26,
                        "nodeType": "PlaceholderStatement",
                        "src": "2649:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "1353:123:0",
                    "text": " @notice Ensure that the caller is currently registered as an open channel\n         on the conduit."
                  },
                  "id": 28,
                  "name": "onlyOpenChannel",
                  "nameLocation": "1490:15:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1505:2:0"
                  },
                  "src": "1481:1176:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "2764:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2821:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 33,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2835:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2835:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2821:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 36,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "2663:82:0",
                    "text": " @notice In the constructor, set the deployer as the controller."
                  },
                  "id": 38,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2761:2:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:0"
                  },
                  "scope": 278,
                  "src": "2750:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    381
                  ],
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "3754:621:0",
                    "statements": [
                      {
                        "assignments": [
                          52
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 52,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "3846:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "3838:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3838:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 55,
                        "initialValue": {
                          "expression": {
                            "id": 53,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3871:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3871:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3838:49:0"
                      },
                      {
                        "body": {
                          "id": 73,
                          "nodeType": "Block",
                          "src": "3987:259:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 64,
                                      "name": "transfers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 43,
                                      "src": "4086:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata[] calldata"
                                      }
                                    },
                                    "id": 66,
                                    "indexExpression": {
                                      "id": 65,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "4096:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4086:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 63,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "4076:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$327_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4076:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 68,
                              "nodeType": "ExpressionStatement",
                              "src": "4076:23:0"
                            },
                            {
                              "id": 72,
                              "nodeType": "UncheckedBlock",
                              "src": "4190:46:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 70,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "4218:3:0",
                                    "subExpression": {
                                      "id": 69,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "4220:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 71,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4218:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "3957:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 61,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3961:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3957:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74,
                        "initializationExpression": {
                          "assignments": [
                            57
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 57,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3950:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 74,
                              "src": "3942:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 56,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3942:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 59,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3954:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3942:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "3937:309:0"
                      },
                      {
                        "expression": {
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "4334:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 76,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4347:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "execute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82,
                              "src": "4347:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$327_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4347:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4334:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "4334:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 39,
                    "nodeType": "StructuredDocumentation",
                    "src": "2858:738:0",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 47,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 46,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "3698:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3698:15:0"
                    }
                  ],
                  "name": "execute",
                  "nameLocation": "3610:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3681:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "3645:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "3618:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 41,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 40,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "3618:15:0"
                            },
                            "referencedDeclaration": 327,
                            "src": "3618:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 42,
                          "nodeType": "ArrayTypeName",
                          "src": "3618:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3617:38:0"
                  },
                  "returnParameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3738:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "3731:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3730:19:0"
                  },
                  "scope": 278,
                  "src": "3601:774:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    391
                  ],
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "5290:328:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 96,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "5464:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 95,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "5434:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5434:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "5434:45:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "5568:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 100,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5581:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106,
                              "src": "5581:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5581:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5568:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "5568:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 83,
                    "nodeType": "StructuredDocumentation",
                    "src": "4381:750:0",
                    "text": " @notice Execute a sequence of batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param batchTransfers The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 91,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 90,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "5246:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5246:15:0"
                    }
                  ],
                  "name": "executeBatch1155",
                  "nameLocation": "5145:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 89,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5237:8:0"
                  },
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "5207:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5171:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 85,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 84,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "5171:24:0"
                            },
                            "referencedDeclaration": 340,
                            "src": "5171:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 86,
                          "nodeType": "ArrayTypeName",
                          "src": "5171:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5161:66:0"
                  },
                  "returnParameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "5278:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5271:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "5271:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5270:19:0"
                  },
                  "scope": 278,
                  "src": "5136:482:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    405
                  ],
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "6751:920:0",
                    "statements": [
                      {
                        "assignments": [
                          124
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 124,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "6843:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "6835:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6835:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 127,
                        "initialValue": {
                          "expression": {
                            "id": 125,
                            "name": "standardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "6868:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6868:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6835:57:0"
                      },
                      {
                        "body": {
                          "id": 145,
                          "nodeType": "Block",
                          "src": "7001:267:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 136,
                                      "name": "standardTransfers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "7100:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata[] calldata"
                                      }
                                    },
                                    "id": 138,
                                    "indexExpression": {
                                      "id": 137,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 129,
                                      "src": "7118:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7100:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 135,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "7090:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$327_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7090:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 140,
                              "nodeType": "ExpressionStatement",
                              "src": "7090:31:0"
                            },
                            {
                              "id": 144,
                              "nodeType": "UncheckedBlock",
                              "src": "7212:46:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7240:3:0",
                                    "subExpression": {
                                      "id": 141,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 129,
                                      "src": "7242:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 143,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7240:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 132,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "6971:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 133,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "6975:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6971:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "initializationExpression": {
                          "assignments": [
                            129
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 129,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6964:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 146,
                              "src": "6956:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 128,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6956:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 131,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6968:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6956:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "6951:317:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "7513:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 147,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "7483:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7483:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "7483:45:0"
                      },
                      {
                        "expression": {
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 151,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "7617:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 152,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7630:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeWithBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 158,
                              "src": "7630:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$327_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7630:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "7617:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "7617:47:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5624:910:0",
                    "text": " @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n         transfers as well as batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param standardTransfers The ERC20/721/1155 item transfers to perform.\n @param batchTransfers    The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 158,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 119,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 118,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "6707:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6707:15:0"
                    }
                  ],
                  "name": "executeWithBatch1155",
                  "nameLocation": "6548:20:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 117,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6698:8:0"
                  },
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "6605:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6578:44:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 109,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 108,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "6578:15:0"
                            },
                            "referencedDeclaration": 327,
                            "src": "6578:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 110,
                          "nodeType": "ArrayTypeName",
                          "src": "6578:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "6668:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6632:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 113,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 112,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "6632:24:0"
                            },
                            "referencedDeclaration": 340,
                            "src": "6632:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 114,
                          "nodeType": "ArrayTypeName",
                          "src": "6632:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6568:120:0"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "6739:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6732:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6732:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6731:19:0"
                  },
                  "scope": 278,
                  "src": "6539:1132:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    413
                  ],
                  "body": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "7975:532:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 167,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8059:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8059:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 169,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "8073:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8059:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 175,
                        "nodeType": "IfStatement",
                        "src": "8055:82:0",
                        "trueBody": {
                          "id": 174,
                          "nodeType": "Block",
                          "src": "8086:51:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 171,
                                  "name": "InvalidController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 364,
                                  "src": "8107:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8107:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 173,
                              "nodeType": "RevertStatement",
                              "src": "8100:26:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 176,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "8230:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 178,
                            "indexExpression": {
                              "id": 177,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8240:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8230:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 179,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "8252:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8230:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "IfStatement",
                        "src": "8226:106:0",
                        "trueBody": {
                          "id": 186,
                          "nodeType": "Block",
                          "src": "8260:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 182,
                                    "name": "channel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "8305:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 183,
                                    "name": "isOpen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "8314:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 181,
                                  "name": "ChannelStatusAlreadySet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 358,
                                  "src": "8281:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool) pure"
                                  }
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8281:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 185,
                              "nodeType": "RevertStatement",
                              "src": "8274:47:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 188,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "8387:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "id": 189,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8397:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8387:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 191,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "8408:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8387:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "8387:27:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8484:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 196,
                              "name": "isOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "8493:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 194,
                            "name": "ChannelUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "8469:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8469:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "EmitStatement",
                        "src": "8464:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "7677:222:0",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 200,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "7913:13:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 165,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7966:8:0"
                  },
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "7935:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "7927:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7927:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "7949:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "7944:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7944:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7926:30:0"
                  },
                  "returnParameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7975:0:0"
                  },
                  "scope": 278,
                  "src": "7904:603:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 276,
                    "nodeType": "Block",
                    "src": "8872:1338:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ConduitItemType_$309",
                            "typeString": "enum ConduitItemType"
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 207,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "8962:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                "typeString": "struct ConduitTransfer calldata"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "itemType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 316,
                            "src": "8962:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 209,
                              "name": "ConduitItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "8979:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                "typeString": "type(enum ConduitItemType)"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "8979:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "src": "8962:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 224,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "9390:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                  "typeString": "struct ConduitTransfer calldata"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "itemType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 316,
                              "src": "9390:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 226,
                                "name": "ConduitItemType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "9407:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                  "typeString": "type(enum ConduitItemType)"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 307,
                              "src": "9407:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "src": "9390:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 250,
                                  "name": "item",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "9828:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                    "typeString": "struct ConduitTransfer calldata"
                                  }
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "itemType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 316,
                                "src": "9828:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 252,
                                  "name": "ConduitItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "9845:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                    "typeString": "type(enum ConduitItemType)"
                                  }
                                },
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC1155",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 308,
                                "src": "9845:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "src": "9828:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 272,
                              "nodeType": "Block",
                              "src": "10119:85:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 269,
                                      "name": "InvalidItemType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 361,
                                      "src": "10176:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10176:17:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 271,
                                  "nodeType": "RevertStatement",
                                  "src": "10169:24:0"
                                }
                              ]
                            },
                            "id": 273,
                            "nodeType": "IfStatement",
                            "src": "9824:380:0",
                            "trueBody": {
                              "id": 268,
                              "nodeType": "Block",
                              "src": "9870:243:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 256,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "9964:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 257,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 318,
                                        "src": "9964:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 258,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "9992:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "from",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 320,
                                        "src": "9992:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 260,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10019:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 261,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 322,
                                        "src": "10019:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 262,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10044:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "identifier",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 324,
                                        "src": "10044:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 264,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10077:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 326,
                                        "src": "10077:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 255,
                                      "name": "_performERC1155Transfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 528,
                                      "src": "9923:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,address,uint256,uint256)"
                                      }
                                    },
                                    "id": 266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9923:179:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 267,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9923:179:0"
                                }
                              ]
                            }
                          },
                          "id": 274,
                          "nodeType": "IfStatement",
                          "src": "9386:818:0",
                          "trueBody": {
                            "id": 249,
                            "nodeType": "Block",
                            "src": "9431:387:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 229,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9519:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 326,
                                    "src": "9519:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9534:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "9519:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 237,
                                "nodeType": "IfStatement",
                                "src": "9515:91:0",
                                "trueBody": {
                                  "id": 236,
                                  "nodeType": "Block",
                                  "src": "9537:69:0",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 233,
                                          "name": "InvalidERC721TransferAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 420,
                                          "src": "9562:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9562:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 235,
                                      "nodeType": "RevertStatement",
                                      "src": "9555:36:0"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 239,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9698:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 318,
                                      "src": "9698:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 241,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9726:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "from",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 320,
                                      "src": "9726:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 243,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9753:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "to",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 322,
                                      "src": "9753:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 245,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9778:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 246,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "identifier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 324,
                                      "src": "9778:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 238,
                                    "name": "_performERC721Transfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 512,
                                    "src": "9658:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,address,uint256)"
                                    }
                                  },
                                  "id": 247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9658:149:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 248,
                                "nodeType": "ExpressionStatement",
                                "src": "9658:149:0"
                              }
                            ]
                          }
                        },
                        "id": 275,
                        "nodeType": "IfStatement",
                        "src": "8958:1246:0",
                        "trueBody": {
                          "id": 223,
                          "nodeType": "Block",
                          "src": "9002:378:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 213,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9325:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 214,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 318,
                                    "src": "9325:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 215,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9337:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 320,
                                    "src": "9337:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 217,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9348:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 322,
                                    "src": "9348:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 219,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9357:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 326,
                                    "src": "9357:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 212,
                                  "name": "_performERC20Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "9303:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9303:66:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 222,
                              "nodeType": "ExpressionStatement",
                              "src": "9303:66:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "8513:295:0",
                    "text": " @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n      channels are expected to implement checks against transferring any\n      zero-amount items if that constraint is desired.\n @param item The ERC20/721/1155 item to transfer."
                  },
                  "id": 277,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "8822:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "item",
                        "nameLocation": "8857:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "8832:29:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                          "typeString": "struct ConduitTransfer"
                        },
                        "typeName": {
                          "id": 203,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 202,
                            "name": "ConduitTransfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 327,
                            "src": "8832:15:0"
                          },
                          "referencedDeclaration": 327,
                          "src": "8832:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                            "typeString": "struct ConduitTransfer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8831:31:0"
                  },
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8872:0:0"
                  },
                  "scope": 278,
                  "src": "8813:1397:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 279,
              "src": "1077:9135:0",
              "usedErrors": [
                351,
                358,
                361,
                364,
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:10181:0"
        },
        "id": 0
      },
      "contracts/conduit/lib/ConduitConstants.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitConstants.sol",
          "exportedSymbols": {
            "ChannelClosed_channel_ptr": [
              290
            ],
            "ChannelClosed_error_length": [
              293
            ],
            "ChannelClosed_error_ptr": [
              287
            ],
            "ChannelClosed_error_signature": [
              284
            ],
            "ChannelKey_channel_ptr": [
              296
            ],
            "ChannelKey_length": [
              302
            ],
            "ChannelKey_slot_ptr": [
              299
            ]
          },
          "id": 303,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "constant": true,
              "id": 284,
              "mutability": "constant",
              "name": "ChannelClosed_error_signature",
              "nameLocation": "114:29:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "97:123:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 281,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "97:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307839336461616466323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "152:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
                      "typeString": "int_const 6687...(69 digits omitted)...0080"
                    },
                    "value": "0x93daadf200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 283,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "146:74:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
                  "typeString": "int_const 6687...(69 digits omitted)...0080"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 287,
              "mutability": "constant",
              "name": "ChannelClosed_error_ptr",
              "nameLocation": "239:23:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "222:47:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 285,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 286,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "265:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 290,
              "mutability": "constant",
              "name": "ChannelClosed_channel_ptr",
              "nameLocation": "288:25:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "271:48:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 288,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "271:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 289,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "316:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 293,
              "mutability": "constant",
              "name": "ChannelClosed_error_length",
              "nameLocation": "338:26:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "321:50:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 291,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 292,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "367:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 296,
              "mutability": "constant",
              "name": "ChannelKey_channel_ptr",
              "nameLocation": "553:22:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "536:46:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 294,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "536:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 295,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "578:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 299,
              "mutability": "constant",
              "name": "ChannelKey_slot_ptr",
              "nameLocation": "601:19:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "584:43:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 297,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 298,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "623:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 302,
              "mutability": "constant",
              "name": "ChannelKey_length",
              "nameLocation": "646:17:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "629:41:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 300,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 301,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "666:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            }
          ],
          "src": "32:640:1"
        },
        "id": 1
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
          "exportedSymbols": {
            "ConduitItemType": [
              309
            ]
          },
          "id": 310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 304,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "canonicalName": "ConduitItemType",
              "id": 309,
              "members": [
                {
                  "id": 305,
                  "name": "NATIVE",
                  "nameLocation": "84:6:2",
                  "nodeType": "EnumValue",
                  "src": "84:6:2"
                },
                {
                  "id": 306,
                  "name": "ERC20",
                  "nameLocation": "106:5:2",
                  "nodeType": "EnumValue",
                  "src": "106:5:2"
                },
                {
                  "id": 307,
                  "name": "ERC721",
                  "nameLocation": "117:6:2",
                  "nodeType": "EnumValue",
                  "src": "117:6:2"
                },
                {
                  "id": 308,
                  "name": "ERC1155",
                  "nameLocation": "129:7:2",
                  "nodeType": "EnumValue",
                  "src": "129:7:2"
                }
              ],
              "name": "ConduitItemType",
              "nameLocation": "62:15:2",
              "nodeType": "EnumDefinition",
              "src": "57:81:2"
            }
          ],
          "src": "32:107:2"
        },
        "id": 2
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitItemType": [
              309
            ],
            "ConduitTransfer": [
              327
            ]
          },
          "id": 341,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 311,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./ConduitEnums.sol",
              "id": 313,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 341,
              "sourceUnit": 310,
              "src": "57:53:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 312,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 309,
                    "src": "66:15:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "ConduitTransfer",
              "id": 327,
              "members": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "157:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "141:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ConduitItemType_$309",
                    "typeString": "enum ConduitItemType"
                  },
                  "typeName": {
                    "id": 315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 314,
                      "name": "ConduitItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 309,
                      "src": "141:15:3"
                    },
                    "referencedDeclaration": 309,
                    "src": "141:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ConduitItemType_$309",
                      "typeString": "enum ConduitItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "179:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "171:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "198:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "190:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "216:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "208:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "232:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "224:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "256:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "248:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitTransfer",
              "nameLocation": "119:15:3",
              "nodeType": "StructDefinition",
              "scope": 341,
              "src": "112:153:3",
              "visibility": "public"
            },
            {
              "canonicalName": "ConduitBatch1155Transfer",
              "id": 340,
              "members": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "313:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "305:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "332:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "324:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "350:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "342:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "368:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "358:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 334,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "358:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 335,
                    "nodeType": "ArrayTypeName",
                    "src": "358:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "387:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "377:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "377:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 338,
                    "nodeType": "ArrayTypeName",
                    "src": "377:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitBatch1155Transfer",
              "nameLocation": "274:24:3",
              "nodeType": "StructDefinition",
              "scope": 341,
              "src": "267:130:3",
              "visibility": "public"
            }
          ],
          "src": "32:366:3"
        },
        "id": 3
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ConduitInterface.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitInterface": [
              414
            ],
            "ConduitTransfer": [
              327
            ]
          },
          "id": 415,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 342,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:4"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 345,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 415,
              "sourceUnit": 341,
              "src": "76:102:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 343,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "89:15:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 344,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "110:24:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ConduitInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 346,
                "nodeType": "StructuredDocumentation",
                "src": "180:174:4",
                "text": " @title ConduitInterface\n @author 0age\n @notice ConduitInterface contains all external function interfaces, events,\n         and errors for conduit contracts."
              },
              "fullyImplemented": false,
              "id": 414,
              "linearizedBaseContracts": [
                414
              ],
              "name": "ConduitInterface",
              "nameLocation": "365:16:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "388:144:4",
                    "text": " @dev Revert with an error when attempting to execute transfers using a\n      caller that does not have an open channel."
                  },
                  "errorSelector": "93daadf2",
                  "id": 351,
                  "name": "ChannelClosed",
                  "nameLocation": "543:13:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "565:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "557:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:17:4"
                  },
                  "src": "537:37:4"
                },
                {
                  "documentation": {
                    "id": 352,
                    "nodeType": "StructuredDocumentation",
                    "src": "580:131:4",
                    "text": " @dev Revert with an error when attempting to update a channel to the\n      current status of that channel."
                  },
                  "errorSelector": "924e341e",
                  "id": 358,
                  "name": "ChannelStatusAlreadySet",
                  "nameLocation": "722:23:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "754:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "746:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "746:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "768:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "763:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "763:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "745:30:4"
                  },
                  "src": "716:60:4"
                },
                {
                  "documentation": {
                    "id": 359,
                    "nodeType": "StructuredDocumentation",
                    "src": "782:154:4",
                    "text": " @dev Revert with an error when attempting to execute a transfer for an\n      item that does not have an ERC20/721/1155 item type."
                  },
                  "errorSelector": "7932f1fc",
                  "id": 361,
                  "name": "InvalidItemType",
                  "nameLocation": "947:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "962:2:4"
                  },
                  "src": "941:24:4"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:156:4",
                    "text": " @dev Revert with an error when attempting to update the status of a\n      channel from a caller that is not the conduit controller."
                  },
                  "errorSelector": "6d5769be",
                  "id": 364,
                  "name": "InvalidController",
                  "nameLocation": "1138:17:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1155:2:4"
                  },
                  "src": "1132:26:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 365,
                    "nodeType": "StructuredDocumentation",
                    "src": "1164:220:4",
                    "text": " @dev Emit an event whenever a channel is opened or closed.\n @param channel The channel that has been updated.\n @param open    A boolean indicating whether the conduit is open or not."
                  },
                  "eventSelector": "ae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2",
                  "id": 371,
                  "name": "ChannelUpdated",
                  "nameLocation": "1395:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "1426:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1410:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1410:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "open",
                        "nameLocation": "1440:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1435:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1409:36:4"
                  },
                  "src": "1389:57:4"
                },
                {
                  "documentation": {
                    "id": 372,
                    "nodeType": "StructuredDocumentation",
                    "src": "1452:352:4",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1818:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "1853:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "1826:36:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 374,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 373,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "1826:15:4"
                            },
                            "referencedDeclaration": 327,
                            "src": "1826:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 375,
                          "nodeType": "ArrayTypeName",
                          "src": "1826:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1825:38:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "1905:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "1898:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1897:19:4"
                  },
                  "scope": 414,
                  "src": "1809:108:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "1923:353:4",
                    "text": " @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n         open channel can call this function.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 391,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeBatch1155",
                  "nameLocation": "2290:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "2352:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "2316:54:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 384,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 383,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "2316:24:4"
                            },
                            "referencedDeclaration": 340,
                            "src": "2316:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 385,
                          "nodeType": "ArrayTypeName",
                          "src": "2316:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2306:70:4"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "2402:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "2395:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2395:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2394:19:4"
                  },
                  "scope": 414,
                  "src": "2281:133:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 392,
                    "nodeType": "StructuredDocumentation",
                    "src": "2420:444:4",
                    "text": " @notice Execute a sequence of transfers, both single and batch 1155. Only\n         a caller with an open channel can call this function.\n @param standardTransfers  The ERC20/721/1155 transfers to perform.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeWithBatch1155",
                  "nameLocation": "2878:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "2935:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "2908:44:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 394,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 393,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "2908:15:4"
                            },
                            "referencedDeclaration": 327,
                            "src": "2908:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 395,
                          "nodeType": "ArrayTypeName",
                          "src": "2908:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "2998:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "2962:54:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 398,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 397,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "2962:24:4"
                            },
                            "referencedDeclaration": 340,
                            "src": "2962:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 399,
                          "nodeType": "ArrayTypeName",
                          "src": "2962:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2898:124:4"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3048:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "3041:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3041:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3040:19:4"
                  },
                  "scope": 414,
                  "src": "2869:191:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 406,
                    "nodeType": "StructuredDocumentation",
                    "src": "3066:222:4",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 413,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "3302:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "3324:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3316:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3316:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "3338:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3333:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3315:30:4"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3354:0:4"
                  },
                  "scope": 414,
                  "src": "3293:62:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 415,
              "src": "355:3002:4",
              "usedErrors": [
                351,
                358,
                361,
                364
              ]
            }
          ],
          "src": "32:3326:4"
        },
        "id": 4
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
          "exportedSymbols": {
            "TokenTransferrerErrors": [
              474
            ]
          },
          "id": 475,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 416,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TokenTransferrerErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 417,
                "nodeType": "StructuredDocumentation",
                "src": "57:40:5",
                "text": " @title TokenTransferrerErrors"
              },
              "fullyImplemented": true,
              "id": 474,
              "linearizedBaseContracts": [
                474
              ],
              "name": "TokenTransferrerErrors",
              "nameLocation": "108:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 418,
                    "nodeType": "StructuredDocumentation",
                    "src": "137:121:5",
                    "text": " @dev Revert with an error when an ERC721 transfer with amount other than\n      one is attempted."
                  },
                  "errorSelector": "efcc00b1",
                  "id": 420,
                  "name": "InvalidERC721TransferAmount",
                  "nameLocation": "269:27:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "296:2:5"
                  },
                  "src": "263:36:5"
                },
                {
                  "documentation": {
                    "id": 421,
                    "nodeType": "StructuredDocumentation",
                    "src": "305:129:5",
                    "text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has an amount of zero."
                  },
                  "errorSelector": "91b3e514",
                  "id": 423,
                  "name": "MissingItemAmount",
                  "nameLocation": "445:17:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "462:2:5"
                  },
                  "src": "439:26:5"
                },
                {
                  "documentation": {
                    "id": 424,
                    "nodeType": "StructuredDocumentation",
                    "src": "471:427:5",
                    "text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has unused parameters. This includes both the token and the\n      identifier parameters for native transfers as well as the identifier\n      parameter for ERC20 transfers. Note that the conduit does not\n      perform this check, leaving it up to the calling channel to enforce\n      when desired."
                  },
                  "errorSelector": "6ab37ce7",
                  "id": 426,
                  "name": "UnusedItemParameters",
                  "nameLocation": "909:20:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "929:2:5"
                  },
                  "src": "903:29:5"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "938:455:5",
                    "text": " @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n      transfer reverts.\n @param token      The token for which the transfer was attempted.\n @param from       The source of the attempted transfer.\n @param to         The recipient of the attempted transfer.\n @param identifier The identifier for the attempted transfer.\n @param amount     The amount for the attempted transfer."
                  },
                  "errorSelector": "f486bc87",
                  "id": 439,
                  "name": "TokenTransferGenericFailure",
                  "nameLocation": "1404:27:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1449:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1441:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1441:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1472:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1464:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1464:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1494:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1486:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1486:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "1514:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1506:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1506:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1542:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1534:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1534:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1431:123:5"
                  },
                  "src": "1398:157:5"
                },
                {
                  "documentation": {
                    "id": 440,
                    "nodeType": "StructuredDocumentation",
                    "src": "1561:437:5",
                    "text": " @dev Revert with an error when a batch ERC1155 token transfer reverts.\n @param token       The token for which the transfer was attempted.\n @param from        The source of the attempted transfer.\n @param to          The recipient of the attempted transfer.\n @param identifiers The identifiers for the attempted transfer.\n @param amounts     The amounts for the attempted transfer."
                  },
                  "errorSelector": "afc445e2",
                  "id": 454,
                  "name": "ERC1155BatchTransferGenericFailure",
                  "nameLocation": "2009:34:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2061:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2053:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2084:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2076:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2106:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2098:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2098:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "identifiers",
                        "nameLocation": "2128:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2118:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 447,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2118:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 448,
                          "nodeType": "ArrayTypeName",
                          "src": "2118:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2159:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2149:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 450,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2149:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 451,
                          "nodeType": "ArrayTypeName",
                          "src": "2149:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:129:5"
                  },
                  "src": "2003:170:5"
                },
                {
                  "documentation": {
                    "id": 455,
                    "nodeType": "StructuredDocumentation",
                    "src": "2179:406:5",
                    "text": " @dev Revert with an error when an ERC20 token transfer returns a falsey\n      value.\n @param token      The token for which the ERC20 transfer was attempted.\n @param from       The source of the attempted ERC20 transfer.\n @param to         The recipient of the attempted ERC20 transfer.\n @param amount     The amount for the attempted ERC20 transfer."
                  },
                  "errorSelector": "98891923",
                  "id": 465,
                  "name": "BadReturnValueFromERC20OnTransfer",
                  "nameLocation": "2596:33:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2647:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2639:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2639:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2670:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2662:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2662:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2692:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2684:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2684:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2712:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2704:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2629:95:5"
                  },
                  "src": "2590:135:5"
                },
                {
                  "documentation": {
                    "id": 466,
                    "nodeType": "StructuredDocumentation",
                    "src": "2731:215:5",
                    "text": " @dev Revert with an error when an account being called as an assumed\n      contract does not have code and returns no data.\n @param account The account that should contain code."
                  },
                  "errorSelector": "5f15d672",
                  "id": 470,
                  "name": "NoContract",
                  "nameLocation": "2957:10:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2976:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "2968:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2968:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2967:17:5"
                  },
                  "src": "2951:34:5"
                },
                {
                  "documentation": {
                    "id": 471,
                    "nodeType": "StructuredDocumentation",
                    "src": "2991:224:5",
                    "text": " @dev Revert with an error when attempting to execute an 1155 batch\n      transfer using calldata not produced by default ABI encoding or with\n      different lengths for ids and amounts arrays."
                  },
                  "errorSelector": "eba2084c",
                  "id": 473,
                  "name": "Invalid1155BatchTransferEncoding",
                  "nameLocation": "3226:32:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3258:2:5"
                  },
                  "src": "3220:41:5"
                }
              ],
              "scope": 475,
              "src": "98:3165:5",
              "usedErrors": [
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:3232:5"
        },
        "id": 5
      },
      "contracts/lib/TokenTransferrer.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrer.sol",
          "exportedSymbols": {
            "AlmostOneWord": [
              544
            ],
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              709
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              703
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              712
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              697
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              694
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              706
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              700
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              730
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              748
            ],
            "BatchTransfer1155Params_calldata_baseSize": [
              739
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              733
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              751
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              736
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              727
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              745
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              742
            ],
            "BatchTransfer1155Params_ptr": [
              724
            ],
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              763
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              769
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              772
            ],
            "ConduitBatch1155Transfer_from_offset": [
              757
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              760
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              766
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              754
            ],
            "ConduitBatchTransfer_amounts_head_offset": [
              775
            ],
            "CostPerWord": [
              718
            ],
            "DefaultFreeMemoryPointer": [
              562
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              789
            ],
            "ERC1155BatchTransferGenericFailure_ids_offset": [
              795
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              792
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              634
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              625
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              609
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              621
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              615
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              612
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              600
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              606
            ],
            "ERC1155_safeTransferFrom_length": [
              618
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              597
            ],
            "ERC1155_safeTransferFrom_signature": [
              594
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              603
            ],
            "ERC20_transferFrom_amount_ptr": [
              587
            ],
            "ERC20_transferFrom_from_ptr": [
              581
            ],
            "ERC20_transferFrom_length": [
              590
            ],
            "ERC20_transferFrom_sig_ptr": [
              578
            ],
            "ERC20_transferFrom_signature": [
              575
            ],
            "ERC20_transferFrom_to_ptr": [
              584
            ],
            "ERC721_transferFrom_from_ptr": [
              643
            ],
            "ERC721_transferFrom_id_ptr": [
              649
            ],
            "ERC721_transferFrom_length": [
              652
            ],
            "ERC721_transferFrom_sig_ptr": [
              640
            ],
            "ERC721_transferFrom_signature": [
              637
            ],
            "ERC721_transferFrom_to_ptr": [
              646
            ],
            "ExtraGasBuffer": [
              715
            ],
            "FreeMemoryPointerSlot": [
              556
            ],
            "Invalid1155BatchTransferEncoding_length": [
              781
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              778
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              785
            ],
            "MemoryExpansionCoefficient": [
              721
            ],
            "NoContract_error_length": [
              665
            ],
            "NoContract_error_sig_ptr": [
              659
            ],
            "NoContract_error_signature": [
              656
            ],
            "NoContract_error_token_ptr": [
              662
            ],
            "OneWord": [
              547
            ],
            "Slot0x80": [
              565
            ],
            "Slot0xA0": [
              568
            ],
            "Slot0xC0": [
              571
            ],
            "ThreeWords": [
              553
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              687
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              678
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              684
            ],
            "TokenTransferGenericFailure_error_length": [
              690
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              672
            ],
            "TokenTransferGenericFailure_error_signature": [
              669
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              681
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              675
            ],
            "TokenTransferrer": [
              539
            ],
            "TokenTransferrerErrors": [
              474
            ],
            "TwoWords": [
              550
            ],
            "ZeroSlot": [
              559
            ]
          },
          "id": 540,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 476,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:6"
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
              "file": "./TokenTransferrerConstants.sol",
              "id": 477,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 796,
              "src": "57:41:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
              "file": "../interfaces/TokenTransferrerErrors.sol",
              "id": 479,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 475,
              "src": "119:86:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 478,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 474,
                    "src": "132:22:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 481,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 341,
              "src": "207:77:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 480,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "216:24:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 483,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 474,
                    "src": "877:22:6"
                  },
                  "id": 484,
                  "nodeType": "InheritanceSpecifier",
                  "src": "877:22:6"
                }
              ],
              "canonicalName": "TokenTransferrer",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 482,
                "nodeType": "StructuredDocumentation",
                "src": "286:561:6",
                "text": " @title TokenTransferrer\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n         by conduits deployed by the ConduitController. Use great caution when\n         considering these functions for use in other codebases, as there are\n         significant side effects and edge cases that need to be thoroughly\n         understood and carefully addressed."
              },
              "fullyImplemented": true,
              "id": 539,
              "linearizedBaseContracts": [
                539,
                474
              ],
              "name": "TokenTransferrer",
              "nameLocation": "857:16:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "1479:9480:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1572:9381:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1746:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "1770:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1764:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1764:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "1750:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1890:26:6"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "1918:28:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1883:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1883:64:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1883:64:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1967:27:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "1996:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1960:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1960:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2021:25:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "2048:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2014:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2014:37:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2014:37:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2071:29:6"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "2102:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2064:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2064:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2064:45:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2585:232:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "2625:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2625:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "2648:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2671:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2690:26:6"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2734:25:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2777:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "OneWord",
                                    "nodeType": "YulIdentifier",
                                    "src": "2796:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "2603:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2603:214:6"
                              },
                              "variables": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulTypedName",
                                  "src": "2589:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2911:407:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3179:1:6",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3173:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3173:8:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3183:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "eq",
                                              "nodeType": "YulIdentifier",
                                              "src": "3170:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3170:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3190:14:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3190:16:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3208:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "3187:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3187:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3166:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3166:46:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "3241:14:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3241:16:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3234:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3234:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nodeType": "YulIdentifier",
                                      "src": "3142:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3142:134:6"
                                  },
                                  {
                                    "name": "callStatus",
                                    "nodeType": "YulIdentifier",
                                    "src": "3294:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2926:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2926:392:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "2915:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3700:7052:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4010:6522:6",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "4098:6113:6",
                                            "statements": [
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "4200:4737:6",
                                                  "statements": [
                                                    {
                                                      "body": {
                                                        "nodeType": "YulBlock",
                                                        "src": "4395:3302:6",
                                                        "statements": [
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "4807:179:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "arguments": [],
                                                                      "functionName": {
                                                                        "name": "returndatasize",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4875:14:6"
                                                                      },
                                                                      "nodeType": "YulFunctionCall",
                                                                      "src": "4875:16:6"
                                                                    },
                                                                    {
                                                                      "name": "AlmostOneWord",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4893:13:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "add",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4871:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "4871:36:6"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4945:7:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4830:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4830:156:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "returnDataWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "4811:15:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "5317:42:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "memPointer",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5339:10:6"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5351:7:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5335:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5335:24:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "msizeWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5321:10:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "5474:45:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "CostPerWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5490:11:6"
                                                                },
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5503:15:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "mul",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5486:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5486:33:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "cost",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5478:4:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "5668:1258:6",
                                                              "statements": [
                                                                {
                                                                  "nodeType": "YulAssignment",
                                                                  "src": "5706:1186:6",
                                                                  "value": {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "cost",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5759:4:6"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "name": "returnDataWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5964:15:6"
                                                                                  },
                                                                                  {
                                                                                    "name": "msizeWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6033:10:6"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "5907:3:6"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "5907:186:6"
                                                                              },
                                                                              {
                                                                                "name": "CostPerWord",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6143:11:6"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "mul",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "5854:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5854:346:6"
                                                                          },
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6417:15:6"
                                                                                      },
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6490:15:6"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "6356:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "6356:203:6"
                                                                                  },
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6617:10:6"
                                                                                      },
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6629:10:6"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "6613:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "6613:27:6"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "6299:3:6"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "6299:391:6"
                                                                              },
                                                                              {
                                                                                "name": "MemoryExpansionCoefficient",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6740:26:6"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "div",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "6246:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6246:566:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "add",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "5805:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "5805:1049:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "add",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "5714:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5714:1178:6"
                                                                  },
                                                                  "variableNames": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "5706:4:6"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5639:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5656:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "gt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5636:2:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5636:31:6"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "5633:1293:6"
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "7225:442:6",
                                                              "statements": [
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7410:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7413:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "7416:14:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "7416:16:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "returndatacopy",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7395:14:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7395:38:6"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "7395:38:6"
                                                                },
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7613:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "7616:14:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "7616:16:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "revert",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7606:6:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7606:27:6"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "7606:27:6"
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7195:4:6"
                                                                    },
                                                                    {
                                                                      "name": "ExtraGasBuffer",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7201:14:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "add",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7191:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "7191:25:6"
                                                                },
                                                                {
                                                                  "arguments": [],
                                                                  "functionName": {
                                                                    "name": "gas",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7218:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "7218:5:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "lt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7188:2:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "7188:36:6"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "7185:482:6"
                                                          }
                                                        ]
                                                      },
                                                      "condition": {
                                                        "arguments": [],
                                                        "functionName": {
                                                          "name": "returndatasize",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "4378:14:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "4378:16:6"
                                                      },
                                                      "nodeType": "YulIf",
                                                      "src": "4375:3322:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7845:41:6"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_signature",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7920:43:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7805:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7805:188:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7805:188:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_token_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8062:43:6"
                                                          },
                                                          {
                                                            "name": "token",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8139:5:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8022:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8022:152:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8022:152:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_from_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8243:42:6"
                                                          },
                                                          {
                                                            "name": "from",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8319:4:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8203:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8203:150:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8203:150:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_to_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8389:40:6"
                                                          },
                                                          {
                                                            "name": "to",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8431:2:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8382:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8382:52:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8382:52:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_id_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8470:40:6"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "8512:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8463:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8463:51:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8463:51:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_amount_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8583:44:6"
                                                          },
                                                          {
                                                            "name": "amount",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8661:6:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8543:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8543:154:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8543:154:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8766:41:6"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_length",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8841:40:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8726:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8726:185:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8726:185:6"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "callStatus",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4188:10:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4181:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4181:18:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "4178:4759:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9149:47:6"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_signature",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9226:49:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9113:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9113:188:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9113:188:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9362:49:6"
                                                    },
                                                    {
                                                      "name": "token",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9441:5:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9326:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9326:146:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9326:146:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9533:48:6"
                                                    },
                                                    {
                                                      "name": "from",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9611:4:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9497:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9497:144:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9497:144:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9702:46:6"
                                                    },
                                                    {
                                                      "name": "to",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9778:2:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9666:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9666:140:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9666:140:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9867:50:6"
                                                    },
                                                    {
                                                      "name": "amount",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9947:6:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9831:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9831:148:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9831:148:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10040:47:6"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_length",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10117:46:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10004:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "10004:185:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "10004:185:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "success",
                                                "nodeType": "YulIdentifier",
                                                "src": "4089:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "4082:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4082:15:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "4079:6132:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10321:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "10347:26:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "10314:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10314:60:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10314:60:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10402:26:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "10430:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "10395:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10395:41:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10395:41:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10464:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "10490:23:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "10457:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10457:57:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10457:57:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "token",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3990:5:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "extcodesize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3978:11:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "3978:18:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3971:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3971:26:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "3964:6:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3964:34:6"
                                            },
                                            {
                                              "name": "success",
                                              "nodeType": "YulIdentifier",
                                              "src": "4000:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3960:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3960:48:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "3953:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3953:56:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3950:6582:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulIdentifier",
                                        "src": "3656:7:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3679:14:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3679:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "3672:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3672:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3665:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3665:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3652:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3652:46:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3645:54:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3642:7110:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "10830:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "10853:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10823:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10823:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10823:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "10931:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10941:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10924:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10924:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10924:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4893:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 709,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9867:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 703,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9533:48:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 712,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10117:46:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 697,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10040:47:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 697,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9149:47:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9226:49:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 706,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9702:46:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 700,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9362:49:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5490:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6143:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 587,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2071:29:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 581,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1967:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 590,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2734:25:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 578,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1890:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 578,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2690:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 575,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1918:28:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 584,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2021:25:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7201:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10830:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1770:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6740:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10490:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10321:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10464:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10347:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10402:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2796:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4945:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5351:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8583:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8243:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8470:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8841:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7845:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8766:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7920:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8389:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8062:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10931:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2102:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8661:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9947:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1996:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8319:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9611:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2048:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8431:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9778:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10430:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2648:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3990:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8139:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9441:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 496,
                        "nodeType": "InlineAssembly",
                        "src": "1563:9390:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 485,
                    "nodeType": "StructuredDocumentation",
                    "src": "906:433:6",
                    "text": " @dev Internal function to transfer ERC20 tokens from a given originator\n      to a given recipient. Sufficient approvals must be set on the\n      contract performing the transfer.\n @param token      The ERC20 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC20Transfer",
                  "nameLocation": "1353:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1392:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1384:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1415:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1407:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1407:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1437:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1429:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1429:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1457:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1449:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1374:95:6"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1479:0:6"
                  },
                  "scope": 539,
                  "src": "1344:9615:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 511,
                    "nodeType": "Block",
                    "src": "11703:4774:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11797:4674:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11890:224:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "11915:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "11941:26:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11908:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11908:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11908:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "11992:26:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "12020:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11985:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11985:41:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11985:41:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12050:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "12076:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12043:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12043:57:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12043:57:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "11882:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "11870:11:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11870:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11863:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11863:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11860:254:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12288:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "12312:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12306:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12306:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "12292:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12429:27:6"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "12458:29:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12422:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12422:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12422:66:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12508:28:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "12538:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12501:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12501:42:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12501:42:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12563:26:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "12591:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12556:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12556:38:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12556:38:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12614:26:6"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "12642:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12607:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12607:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12607:46:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12722:225:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "12759:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12759:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "12782:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12805:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12824:27:6"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12869:26:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12913:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12932:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "12737:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12737:210:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "12726:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13021:3249:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "13180:2308:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "13491:143:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13547:14:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13547:16:6"
                                                  },
                                                  {
                                                    "name": "AlmostOneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13565:13:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13543:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13543:36:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "13605:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "13514:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13514:120:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "13495:15:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "13882:42:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "13904:10:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "13916:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "13900:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13900:24:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "13886:10:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "14015:45:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "14031:11:6"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14044:15:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "14027:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14027:33:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "14019:4:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "14185:734:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "14211:686:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14252:4:6"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14368:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14385:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "14364:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "14364:32:6"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "14434:11:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14323:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "14323:156:6"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14603:15:6"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14620:15:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "14599:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "14599:37:6"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14682:10:6"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14694:10:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "14678:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "14678:27:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "14554:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "14554:189:6"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "14781:26:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14513:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "14513:328:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14286:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "14286:585:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14219:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "14219:678:6"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14211:4:6"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14156:15:6"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14173:10:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "14153:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14153:31:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "14150:769:6"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "15170:300:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15292:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15295:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15298:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "15298:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15277:14:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15277:38:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "15277:38:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15428:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15431:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "15431:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15421:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15421:27:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "15421:27:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15140:4:6"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15146:14:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15136:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15136:25:6"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15163:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15163:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "15133:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15133:36:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "15130:340:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "13163:14:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13163:16:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "13160:2328:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15600:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "15663:43:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15572:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15572:152:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15572:152:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15748:43:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "15793:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15741:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15741:58:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15741:58:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15823:42:6"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "15867:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15816:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15816:56:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15816:56:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15896:40:6"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "15938:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15889:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15889:52:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15889:52:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15965:40:6"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "16007:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15958:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15958:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15958:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16042:44:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16088:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16035:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16035:55:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16035:55:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16135:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "16198:40:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16107:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16107:149:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16107:149:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "13012:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13005:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13005:15:6"
                              },
                              "nodeType": "YulIf",
                              "src": "13002:3268:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "16348:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "16371:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16341:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16341:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16341:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "16449:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16459:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16442:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16442:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16442:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13565:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14031:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14434:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 643,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12508:28:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 649,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12614:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 652,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12869:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 640,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12429:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 640,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12824:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 637,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12458:29:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 646,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12563:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15146:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12312:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16348:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14781:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12076:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11915:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12050:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11941:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11992:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13605:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13916:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16042:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15823:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15965:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16198:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15600:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16135:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15663:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15896:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15748:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16449:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 503,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12538:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 503,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15867:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 507,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12642:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 507,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16007:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 505,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12591:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 505,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15938:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11882:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12020:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12782:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15793:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 510,
                        "nodeType": "InlineAssembly",
                        "src": "11788:4683:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "10965:593:6",
                    "text": " @dev Internal function to transfer an ERC721 token from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer. Note that this function does\n      not check whether the receiver can accept the ERC721 token (i.e. it\n      does not use `safeTransferFrom`).\n @param token      The ERC721 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The tokenId to transfer."
                  },
                  "id": 512,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC721Transfer",
                  "nameLocation": "11572:22:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "11612:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11604:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11604:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "11635:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11627:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11627:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "11657:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11649:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11649:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "11677:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11669:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11669:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11594:99:6"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11703:0:6"
                  },
                  "scope": 539,
                  "src": "11563:4914:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "17290:5455:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "17385:5354:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17478:224:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17503:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "17529:26:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17496:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17496:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17496:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17580:26:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "17608:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17573:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17573:41:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17573:41:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17638:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "17664:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "17631:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17631:57:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17631:57:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "17470:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "17458:11:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17458:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17451:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17451:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "17448:254:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17870:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "17894:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17888:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17888:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "17874:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17929:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "17951:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17945:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17945:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0x80",
                                  "nodeType": "YulTypedName",
                                  "src": "17933:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17973:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17995:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17989:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17989:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0xA0",
                                  "nodeType": "YulTypedName",
                                  "src": "17977:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18017:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18039:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "18033:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18033:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0xC0",
                                  "nodeType": "YulTypedName",
                                  "src": "18021:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18164:32:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "18214:34:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18140:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18140:122:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18140:122:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18282:33:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "18317:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18275:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18275:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18275:47:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18342:31:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "18375:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18335:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18335:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18335:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18398:31:6"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "18431:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18391:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18391:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18391:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18462:35:6"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "18499:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18455:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18455:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18455:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_offset_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18543:40:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "18601:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18519:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18519:139:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18519:139:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18678:40:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18720:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18671:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18671:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18671:51:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18791:235:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "18828:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18828:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "18851:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18874:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18893:32:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18943:31:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18992:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19011:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "18806:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18806:220:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "18795:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19100:3254:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "19259:2308:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "19570:143:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19626:14:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19626:16:6"
                                                  },
                                                  {
                                                    "name": "AlmostOneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19644:13:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19622:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19622:36:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "19684:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "19593:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "19593:120:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "19574:15:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "19961:42:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "19983:10:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "19995:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "19979:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "19979:24:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "19965:10:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "20094:45:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "20110:11:6"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20123:15:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "20106:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20106:33:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "20098:4:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "20264:734:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "20290:686:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "20331:4:6"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "20447:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "20464:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "20443:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "20443:32:6"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "20513:11:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "20402:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "20402:156:6"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20682:15:6"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20699:15:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "20678:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "20678:37:6"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20761:10:6"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20773:10:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "20757:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "20757:27:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "20633:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "20633:189:6"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "20860:26:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "20592:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "20592:328:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20365:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "20365:585:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20298:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "20298:678:6"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20290:4:6"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20235:15:6"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20252:10:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "20232:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20232:31:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "20229:769:6"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "21249:300:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21371:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21374:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "21377:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "21377:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21356:14:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "21356:38:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "21356:38:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21507:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "21510:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "21510:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21500:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "21500:27:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "21500:27:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21219:4:6"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21225:14:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21215:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "21215:25:6"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21242:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "21242:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "21212:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "21212:36:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "21209:340:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "19242:14:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19242:16:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "19239:2328:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21679:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "21742:43:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21651:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21651:152:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21651:152:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21827:43:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "21872:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21820:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21820:58:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21820:58:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21902:42:6"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "21946:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21895:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21895:56:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21895:56:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21975:40:6"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "22017:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21968:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21968:52:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21968:52:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22044:40:6"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "22086:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22037:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22037:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22037:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22121:44:6"
                                        },
                                        {
                                          "name": "amount",
                                          "nodeType": "YulIdentifier",
                                          "src": "22167:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22114:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22114:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22114:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22219:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "22282:40:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "22191:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22191:149:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22191:149:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "19091:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "19084:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19084:15:6"
                              },
                              "nodeType": "YulIf",
                              "src": "19081:3273:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "22375:8:6"
                                  },
                                  {
                                    "name": "slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "22385:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22368:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22368:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22368:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22436:8:6"
                                  },
                                  {
                                    "name": "slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22446:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22429:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22429:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22429:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22497:8:6"
                                  },
                                  {
                                    "name": "slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22507:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22490:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22490:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22490:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "22616:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "22639:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22609:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22609:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22609:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "22717:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22727:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22710:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22710:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22710:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19644:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20110:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20513:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 609,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18462:35:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 621,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18601:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 615,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18678:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18543:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 600,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18282:33:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 606,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18398:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 618,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18943:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 597,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18164:32:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 597,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18893:32:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 594,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18214:34:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 603,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18342:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21225:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17894:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22616:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20860:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17664:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17503:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17638:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17529:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17580:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19684:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19995:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 565,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17951:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 565,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22375:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 568,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17995:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 568,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22436:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 571,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18039:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 571,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22497:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22121:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21902:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22044:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22282:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21679:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22219:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21742:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21975:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21827:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22717:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18499:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22167:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 517,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18317:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 517,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21946:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 521,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18431:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 521,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22086:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18375:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22017:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17470:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17608:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18851:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21872:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 526,
                        "nodeType": "InlineAssembly",
                        "src": "17376:5363:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 513,
                    "nodeType": "StructuredDocumentation",
                    "src": "16483:637:6",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer.\n @param token      The ERC1155 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The id to transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155Transfer",
                  "nameLocation": "17134:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 515,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "17175:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17167:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17167:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "17198:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17190:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17190:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "17220:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17212:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17212:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "17240:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17232:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17232:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "17268:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17260:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17260:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17157:123:6"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17290:0:6"
                  },
                  "scope": 539,
                  "src": "17125:5620:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 537,
                    "nodeType": "Block",
                    "src": "23810:11369:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "23900:11273:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23914:32:6",
                              "value": {
                                "name": "batchTransfers.length",
                                "nodeType": "YulIdentifier",
                                "src": "23925:21:6"
                              },
                              "variables": [
                                {
                                  "name": "len",
                                  "nodeType": "YulTypedName",
                                  "src": "23918:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "24186:47:6",
                              "value": {
                                "name": "batchTransfers.offset",
                                "nodeType": "YulIdentifier",
                                "src": "24212:21:6"
                              },
                              "variables": [
                                {
                                  "name": "nextElementHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "24190:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "24472:38:6",
                              "value": {
                                "name": "nextElementHeadPtr",
                                "nodeType": "YulIdentifier",
                                "src": "24492:18:6"
                              },
                              "variables": [
                                {
                                  "name": "arrayHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "24476:12:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ConduitBatch1155Transfer_from_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "24708:36:6"
                                  },
                                  {
                                    "name": "ERC1155_safeBatchTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "24762:39:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24684:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24684:131:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24684:131:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24983:9791:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25220:127:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "arrayHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25263:12:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "nextElementHeadPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "25310:18:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "25297:12:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25297:32:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "25238:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25238:109:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "25224:10:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25418:37:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25444:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "25431:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25431:24:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulTypedName",
                                        "src": "25422:5:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "25556:240:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25585:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "25611:26:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "25578:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25578:60:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25578:60:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25666:26:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "25694:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "25659:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25659:41:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25659:41:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25728:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "25754:23:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "25721:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25721:57:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25721:57:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "token",
                                              "nodeType": "YulIdentifier",
                                              "src": "25548:5:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extcodesize",
                                            "nodeType": "YulIdentifier",
                                            "src": "25536:11:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25536:18:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "25529:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25529:26:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "25526:270:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25871:128:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "25926:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "25938:42:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "25922:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25922:59:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "25888:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25888:111:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsLength",
                                        "nodeType": "YulTypedName",
                                        "src": "25875:9:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "26089:167:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "26143:50:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "26219:9:6"
                                            },
                                            {
                                              "name": "OneWord",
                                              "nodeType": "YulIdentifier",
                                              "src": "26230:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "26215:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26215:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "26118:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26118:138:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "expectedAmountsOffset",
                                        "nodeType": "YulTypedName",
                                        "src": "26093:21:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "26319:1341:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "idsLength",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26487:9:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "elementPtr",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26543:10:6"
                                                        },
                                                        {
                                                          "name": "expectedAmountsOffset",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26555:21:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26539:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26539:38:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "calldataload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26526:12:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26526:52:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "eq",
                                                "nodeType": "YulIdentifier",
                                                "src": "26455:2:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26455:149:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26844:10:6"
                                                            },
                                                            {
                                                              "name": "ConduitBatch1155Transfer_ids_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26896:40:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26799:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "26799:175:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26749:12:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26749:259:6"
                                                    },
                                                    {
                                                      "name": "ConduitBatch1155Transfer_ids_length_offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "27042:42:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26713:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26713:401:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "27345:10:6"
                                                            },
                                                            {
                                                              "name": "ConduitBatchTransfer_amounts_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "27397:40:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "27300:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "27300:175:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "27250:12:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "27250:259:6"
                                                    },
                                                    {
                                                      "name": "expectedAmountsOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "27543:21:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "27214:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "27214:380:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "26630:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26630:990:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "26370:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26370:1272:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "26342:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26342:1318:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "invalidEncoding",
                                        "nodeType": "YulTypedName",
                                        "src": "26323:15:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "27767:373:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "27821:36:6"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_selector",
                                                "nodeType": "YulIdentifier",
                                                "src": "27883:41:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "27789:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27789:157:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27789:157:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "27999:36:6"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "28061:39:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "27967:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27967:155:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27967:155:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "invalidEncoding",
                                      "nodeType": "YulIdentifier",
                                      "src": "27751:15:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "27748:392:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "28222:54:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "nextElementHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28248:18:6"
                                        },
                                        {
                                          "name": "OneWord",
                                          "nodeType": "YulIdentifier",
                                          "src": "28268:7:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "28244:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28244:32:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "nextElementHeadPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "28222:18:6"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28407:27:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "28460:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_from_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "28472:36:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "28456:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "28456:53:6"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_usable_head_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "28531:41:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "28373:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28373:217:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28373:217:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "28765:64:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "TwoWords",
                                          "nodeType": "YulIdentifier",
                                          "src": "28794:8:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "28808:9:6"
                                            },
                                            {
                                              "name": "TwoWords",
                                              "nodeType": "YulIdentifier",
                                              "src": "28819:8:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "28804:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "28804:24:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "28790:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28790:39:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsAndAmountsSize",
                                        "nodeType": "YulTypedName",
                                        "src": "28769:17:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_data_head_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28942:37:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "29030:41:6"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "29097:17:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29001:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29001:135:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "28914:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28914:240:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28914:240:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_data_length_basePtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "29300:43:6"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "29369:17:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29271:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29271:137:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29430:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "29243:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29243:206:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29243:206:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "29546:147:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_calldata_baseSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29595:41:6"
                                        },
                                        {
                                          "name": "idsAndAmountsSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29658:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "29570:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29570:123:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "transferDataSize",
                                        "nodeType": "YulTypedName",
                                        "src": "29550:16:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ids_length_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "29824:38:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "29888:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "29900:42:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29884:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29884:59:6"
                                        },
                                        {
                                          "name": "idsAndAmountsSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29965:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "29790:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29790:210:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29790:210:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "30079:318:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "30120:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "30120:5:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "30147:5:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30174:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_from_offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "30197:36:6"
                                        },
                                        {
                                          "name": "transferDataSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "30278:16:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30355:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30378:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "call",
                                        "nodeType": "YulIdentifier",
                                        "src": "30094:4:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30094:303:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulTypedName",
                                        "src": "30083:7:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "30479:4281:6",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "30650:2976:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "30983:155:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [],
                                                          "functionName": {
                                                            "name": "returndatasize",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "31043:14:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "31043:16:6"
                                                        },
                                                        {
                                                          "name": "AlmostOneWord",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31061:13:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31039:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31039:36:6"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31105:7:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31006:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31006:132:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "returnDataWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "30987:15:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "31759:48:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "transferDataSize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31781:16:6"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31799:7:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31777:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31777:30:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "msizeWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "31763:10:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "31906:45:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "CostPerWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31922:11:6"
                                                    },
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31935:15:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31918:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31918:33:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulTypedName",
                                                    "src": "31910:4:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "32084:944:6",
                                                  "statements": [
                                                    {
                                                      "nodeType": "YulAssignment",
                                                      "src": "32114:888:6",
                                                      "value": {
                                                        "arguments": [
                                                          {
                                                            "name": "cost",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "32159:4:6"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "returnDataWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "32287:15:6"
                                                                      },
                                                                      {
                                                                        "name": "msizeWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "32304:10:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "32283:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "32283:32:6"
                                                                  },
                                                                  {
                                                                    "name": "CostPerWord",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "32357:11:6"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "mul",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "32238:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "32238:168:6"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32591:15:6"
                                                                          },
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32656:15:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "32538:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "32538:179:6"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32767:10:6"
                                                                          },
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32779:10:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "32763:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "32763:27:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "32489:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "32489:343:6"
                                                                  },
                                                                  {
                                                                    "name": "MemoryExpansionCoefficient",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "32874:26:6"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "div",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "32444:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "32444:494:6"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "add",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "32197:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "32197:775:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "32122:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "32122:880:6"
                                                      },
                                                      "variableNames": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "32114:4:6"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32055:15:6"
                                                    },
                                                    {
                                                      "name": "msizeWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32072:10:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "gt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32052:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "32052:31:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "32049:979:6"
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "33295:309:6",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33418:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33421:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "33424:14:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "33424:16:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "returndatacopy",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33403:14:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "33403:38:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "33403:38:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33558:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "33561:14:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "33561:16:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33551:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "33551:27:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "33551:27:6"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33265:4:6"
                                                        },
                                                        {
                                                          "name": "ExtraGasBuffer",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33271:14:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "33261:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "33261:25:6"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "gas",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "33288:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "33288:5:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "lt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "33258:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "33258:36:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "33255:349:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "30633:14:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "30633:16:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "30630:2996:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "33728:1:6",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "33755:50:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "33696:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "33696:131:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "33696:131:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "33896:44:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "33942:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "33889:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "33889:59:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "33889:59:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_ids_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "34059:36:6"
                                              },
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_ids_offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "34121:45:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "34027:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34027:161:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34027:161:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "34303:40:6"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "OneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "34402:7:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "34445:40:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "34439:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "34439:47:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "34369:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "34369:143:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "34271:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34271:263:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34271:263:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "34722:1:6",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "transferDataSize",
                                                "nodeType": "YulIdentifier",
                                                "src": "34725:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "34715:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34715:27:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34715:27:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "success",
                                          "nodeType": "YulIdentifier",
                                          "src": "30470:7:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "30463:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30463:15:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "30460:4300:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "24928:1:6"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "24931:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24925:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24925:10:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "24936:46:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "24954:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "24963:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "24966:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "24959:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24959:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "24954:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "24882:42:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "24900:10:6",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "24909:1:6",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "24904:1:6",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "24878:9896:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "35115:21:6"
                                  },
                                  {
                                    "name": "DefaultFreeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "35138:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35108:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35108:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35108:55:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31061:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 730,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34303:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 730,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34445:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 739,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29595:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 733,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28942:37:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 736,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29300:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 727,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34059:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 745,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29030:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 742,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29824:38:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 724,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28407:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 769,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26143:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24708:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28472:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "30197:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 760,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26896:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25938:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27042:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29900:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 754,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28531:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 775,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27397:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31922:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32357:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 562,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "35138:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 789,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33755:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 795,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34121:45:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 792,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33896:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 625,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24762:39:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33271:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "35115:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 781,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28061:39:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 778,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27821:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 778,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27999:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 785,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27883:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32874:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25754:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25585:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25728:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25611:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25666:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26230:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28268:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31105:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31799:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34402:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 550,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28794:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 550,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28819:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23925:21:6",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 533,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "24212:21:6",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 536,
                        "nodeType": "InlineAssembly",
                        "src": "23891:11282:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 529,
                    "nodeType": "StructuredDocumentation",
                    "src": "22751:940:6",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer. NOTE: this function is not\n      memory-safe; it will overwrite existing memory, restore the free\n      memory pointer to the default value, and overwrite the zero slot.\n      This function should only be called once memory is no longer\n      required and when uninitialized arrays are not utilized, and memory\n      should be considered fully corrupted (aside from the existence of a\n      default-value free memory pointer) after calling this function.\n @param batchTransfers The group of 1155 batch transfers to perform."
                  },
                  "id": 538,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155BatchTransfers",
                  "nameLocation": "23705:29:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "23780:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "23744:50:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 531,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 530,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "23744:24:6"
                            },
                            "referencedDeclaration": 340,
                            "src": "23744:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 532,
                          "nodeType": "ArrayTypeName",
                          "src": "23744:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23734:66:6"
                  },
                  "returnParameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23810:0:6"
                  },
                  "scope": 539,
                  "src": "23696:11483:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 540,
              "src": "848:34333:6",
              "usedErrors": [
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:35150:6"
        },
        "id": 6
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
          "exportedSymbols": {
            "AlmostOneWord": [
              544
            ],
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              709
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              703
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              712
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              697
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              694
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              706
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              700
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              730
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              748
            ],
            "BatchTransfer1155Params_calldata_baseSize": [
              739
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              733
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              751
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              736
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              727
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              745
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              742
            ],
            "BatchTransfer1155Params_ptr": [
              724
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              763
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              769
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              772
            ],
            "ConduitBatch1155Transfer_from_offset": [
              757
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              760
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              766
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              754
            ],
            "ConduitBatchTransfer_amounts_head_offset": [
              775
            ],
            "CostPerWord": [
              718
            ],
            "DefaultFreeMemoryPointer": [
              562
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              789
            ],
            "ERC1155BatchTransferGenericFailure_ids_offset": [
              795
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              792
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              634
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              625
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              609
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              621
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              615
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              612
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              600
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              606
            ],
            "ERC1155_safeTransferFrom_length": [
              618
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              597
            ],
            "ERC1155_safeTransferFrom_signature": [
              594
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              603
            ],
            "ERC20_transferFrom_amount_ptr": [
              587
            ],
            "ERC20_transferFrom_from_ptr": [
              581
            ],
            "ERC20_transferFrom_length": [
              590
            ],
            "ERC20_transferFrom_sig_ptr": [
              578
            ],
            "ERC20_transferFrom_signature": [
              575
            ],
            "ERC20_transferFrom_to_ptr": [
              584
            ],
            "ERC721_transferFrom_from_ptr": [
              643
            ],
            "ERC721_transferFrom_id_ptr": [
              649
            ],
            "ERC721_transferFrom_length": [
              652
            ],
            "ERC721_transferFrom_sig_ptr": [
              640
            ],
            "ERC721_transferFrom_signature": [
              637
            ],
            "ERC721_transferFrom_to_ptr": [
              646
            ],
            "ExtraGasBuffer": [
              715
            ],
            "FreeMemoryPointerSlot": [
              556
            ],
            "Invalid1155BatchTransferEncoding_length": [
              781
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              778
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              785
            ],
            "MemoryExpansionCoefficient": [
              721
            ],
            "NoContract_error_length": [
              665
            ],
            "NoContract_error_sig_ptr": [
              659
            ],
            "NoContract_error_signature": [
              656
            ],
            "NoContract_error_token_ptr": [
              662
            ],
            "OneWord": [
              547
            ],
            "Slot0x80": [
              565
            ],
            "Slot0xA0": [
              568
            ],
            "Slot0xC0": [
              571
            ],
            "ThreeWords": [
              553
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              687
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              678
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              684
            ],
            "TokenTransferGenericFailure_error_length": [
              690
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              672
            ],
            "TokenTransferGenericFailure_error_signature": [
              669
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              681
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              675
            ],
            "TwoWords": [
              550
            ],
            "ZeroSlot": [
              559
            ]
          },
          "id": 796,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 541,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:7"
            },
            {
              "constant": true,
              "id": 544,
              "mutability": "constant",
              "name": "AlmostOneWord",
              "nameLocation": "1807:13:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1790:37:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 542,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1790:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783166",
                "id": 543,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1823:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_31_by_1",
                  "typeString": "int_const 31"
                },
                "value": "0x1f"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 547,
              "mutability": "constant",
              "name": "OneWord",
              "nameLocation": "1846:7:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1829:31:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 545,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1829:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 546,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1856:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 550,
              "mutability": "constant",
              "name": "TwoWords",
              "nameLocation": "1879:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1862:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 548,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1862:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 549,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1890:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 553,
              "mutability": "constant",
              "name": "ThreeWords",
              "nameLocation": "1913:10:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1896:34:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 551,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1896:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 552,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1926:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 556,
              "mutability": "constant",
              "name": "FreeMemoryPointerSlot",
              "nameLocation": "1950:21:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1933:45:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 554,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1933:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 555,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1974:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 559,
              "mutability": "constant",
              "name": "ZeroSlot",
              "nameLocation": "1997:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1980:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 557,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1980:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 558,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2008:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 562,
              "mutability": "constant",
              "name": "DefaultFreeMemoryPointer",
              "nameLocation": "2031:24:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2014:48:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 560,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2014:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 561,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2058:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 565,
              "mutability": "constant",
              "name": "Slot0x80",
              "nameLocation": "2082:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2065:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 563,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2065:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 564,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2093:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 568,
              "mutability": "constant",
              "name": "Slot0xA0",
              "nameLocation": "2116:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2099:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 566,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2099:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 567,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2127:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 571,
              "mutability": "constant",
              "name": "Slot0xC0",
              "nameLocation": "2150:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2133:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 569,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2133:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 570,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2161:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 575,
              "mutability": "constant",
              "name": "ERC20_transferFrom_signature",
              "nameLocation": "2253:28:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2236:122:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 572,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2236:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2290:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                      "typeString": "int_const 1615...(69 digits omitted)...8224"
                    },
                    "value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 574,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2284:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                  "typeString": "int_const 1615...(69 digits omitted)...8224"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 578,
              "mutability": "constant",
              "name": "ERC20_transferFrom_sig_ptr",
              "nameLocation": "2377:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2360:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 576,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2360:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 577,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2406:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 581,
              "mutability": "constant",
              "name": "ERC20_transferFrom_from_ptr",
              "nameLocation": "2428:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2411:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2411:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2458:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 584,
              "mutability": "constant",
              "name": "ERC20_transferFrom_to_ptr",
              "nameLocation": "2481:25:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2464:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 582,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2464:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 583,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2509:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 587,
              "mutability": "constant",
              "name": "ERC20_transferFrom_amount_ptr",
              "nameLocation": "2532:29:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2515:53:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 585,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2515:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 586,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2564:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 590,
              "mutability": "constant",
              "name": "ERC20_transferFrom_length",
              "nameLocation": "2587:25:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2570:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 588,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2570:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2615:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 594,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_signature",
              "nameLocation": "2758:34:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2741:128:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 591,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2741:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866323432343332613030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2801:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                      "typeString": "int_const 1095...(70 digits omitted)...7872"
                    },
                    "value": "0xf242432a00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 593,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2795:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                  "typeString": "int_const 1095...(70 digits omitted)...7872"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 597,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_sig_ptr",
              "nameLocation": "2888:32:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2871:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 595,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2871:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 596,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2923:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 600,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_from_ptr",
              "nameLocation": "2945:33:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2928:57:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 598,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2928:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 599,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2981:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 603,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_to_ptr",
              "nameLocation": "3004:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2987:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 601,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2987:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 602,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3038:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 606,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_id_ptr",
              "nameLocation": "3061:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3044:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 604,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3044:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 605,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3095:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 609,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_amount_ptr",
              "nameLocation": "3118:35:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3101:59:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 607,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3101:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 608,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3156:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 612,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_offset_ptr",
              "nameLocation": "3179:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3162:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 610,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3162:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 611,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3222:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 615,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_ptr",
              "nameLocation": "3245:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3228:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 613,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3228:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 614,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3288:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 618,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_length",
              "nameLocation": "3311:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3294:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 616,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3294:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 617,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3345:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 621,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_offset",
              "nameLocation": "3389:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3372:67:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 619,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3372:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 620,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3435:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 625,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_signature",
              "nameLocation": "3566:39:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3549:133:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 622,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3549:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832656232633264363030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3614:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                      "typeString": "int_const 2112...(69 digits omitted)...7952"
                    },
                    "value": "0x2eb2c2d600000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 624,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "3608:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                  "typeString": "int_const 2112...(69 digits omitted)...7952"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 634,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_selector",
              "nameLocation": "3701:38:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3685:119:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "typeName": {
                "id": 626,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "3685:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "value": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "ERC1155_safeBatchTransferFrom_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3762:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3754:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 629,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3754:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 628,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "3742:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_bytes4_$",
                    "typeString": "type(bytes4)"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:6:7",
                    "typeDescriptions": {}
                  }
                },
                "id": 633,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "3742:62:7",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 637,
              "mutability": "constant",
              "name": "ERC721_transferFrom_signature",
              "nameLocation": "3824:29:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3807:77:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 635,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3807:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "id": 636,
                "name": "ERC20_transferFrom_signature",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 575,
                "src": "3856:28:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 640,
              "mutability": "constant",
              "name": "ERC721_transferFrom_sig_ptr",
              "nameLocation": "3903:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3886:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 638,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3886:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 639,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3933:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 643,
              "mutability": "constant",
              "name": "ERC721_transferFrom_from_ptr",
              "nameLocation": "3955:28:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3938:52:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 641,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3938:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 642,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3986:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 646,
              "mutability": "constant",
              "name": "ERC721_transferFrom_to_ptr",
              "nameLocation": "4009:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3992:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 644,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3992:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 645,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4038:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 649,
              "mutability": "constant",
              "name": "ERC721_transferFrom_id_ptr",
              "nameLocation": "4061:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4044:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 647,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4044:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 648,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4090:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 652,
              "mutability": "constant",
              "name": "ERC721_transferFrom_length",
              "nameLocation": "4113:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4096:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 650,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4096:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 651,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4142:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 656,
              "mutability": "constant",
              "name": "NoContract_error_signature",
              "nameLocation": "4237:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4220:120:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 653,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4220:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307835663135643637323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4272:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                      "typeString": "int_const 4300...(69 digits omitted)...7584"
                    },
                    "value": "0x5f15d67200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 655,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4266:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                  "typeString": "int_const 4300...(69 digits omitted)...7584"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 659,
              "mutability": "constant",
              "name": "NoContract_error_sig_ptr",
              "nameLocation": "4359:24:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4342:47:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 657,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4342:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 658,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4386:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 662,
              "mutability": "constant",
              "name": "NoContract_error_token_ptr",
              "nameLocation": "4408:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4391:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 660,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4391:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 661,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4437:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 665,
              "mutability": "constant",
              "name": "NoContract_error_length",
              "nameLocation": "4459:23:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4442:47:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 663,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4442:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 664,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4485:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 669,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_signature",
              "nameLocation": "4636:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4619:137:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 666,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4619:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866343836626338373030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4688:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                      "typeString": "int_const 1106...(70 digits omitted)...9856"
                    },
                    "value": "0xf486bc8700000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 668,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4682:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                  "typeString": "int_const 1106...(70 digits omitted)...9856"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 672,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_sig_ptr",
              "nameLocation": "4775:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4758:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 670,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4758:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 671,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4819:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 675,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_token_ptr",
              "nameLocation": "4841:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4824:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 673,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4824:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 674,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4887:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 678,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_from_ptr",
              "nameLocation": "4909:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4892:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 676,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4892:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 677,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4954:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 681,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_to_ptr",
              "nameLocation": "4977:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4960:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 679,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4960:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 680,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5020:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 684,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_id_ptr",
              "nameLocation": "5043:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5026:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 682,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5026:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 683,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5086:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 687,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_amount_ptr",
              "nameLocation": "5109:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5092:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 685,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5092:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 686,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5156:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 690,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_length",
              "nameLocation": "5201:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5184:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 688,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5184:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 689,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5244:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 694,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_signature",
              "nameLocation": "5377:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5360:143:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 691,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5360:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307839383839313932333030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5435:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                      "typeString": "int_const 6899...(69 digits omitted)...7984"
                    },
                    "value": "0x9889192300000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 693,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "5429:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                  "typeString": "int_const 6899...(69 digits omitted)...7984"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 697,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
              "nameLocation": "5522:47:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5505:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 695,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5505:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 696,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5572:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 700,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
              "nameLocation": "5594:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5577:72:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 698,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5577:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 699,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5646:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 703,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
              "nameLocation": "5668:48:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5651:72:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 701,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5651:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 702,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5719:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 706,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
              "nameLocation": "5742:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5725:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 704,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5725:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 705,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5791:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 709,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
              "nameLocation": "5814:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5797:74:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 707,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5797:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 708,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5867:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 712,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_length",
              "nameLocation": "5912:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5895:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 710,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5895:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 711,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5961:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 715,
              "mutability": "constant",
              "name": "ExtraGasBuffer",
              "nameLocation": "5985:14:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5968:38:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 713,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5968:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 714,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6002:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 718,
              "mutability": "constant",
              "name": "CostPerWord",
              "nameLocation": "6025:11:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6008:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 716,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6008:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "33",
                "id": 717,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6039:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 721,
              "mutability": "constant",
              "name": "MemoryExpansionCoefficient",
              "nameLocation": "6059:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6042:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 719,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6042:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3078323030",
                "id": 720,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6088:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_512_by_1",
                  "typeString": "int_const 512"
                },
                "value": "0x200"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 724,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ptr",
              "nameLocation": "6219:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6202:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 722,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6202:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6249:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 727,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_head_ptr",
              "nameLocation": "6272:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6255:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6255:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 726,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6311:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 730,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_head_ptr",
              "nameLocation": "6334:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6317:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 728,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6317:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 729,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6377:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 733,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_head_ptr",
              "nameLocation": "6400:37:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6383:61:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 731,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6383:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 732,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6440:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 736,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_basePtr",
              "nameLocation": "6463:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6446:67:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 734,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6446:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 735,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6509:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 739,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_calldata_baseSize",
              "nameLocation": "6532:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6515:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 737,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6515:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 738,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6576:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 742,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_ptr",
              "nameLocation": "6600:38:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6583:62:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 740,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6583:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 741,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6641:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 745,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_offset",
              "nameLocation": "6665:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6648:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 743,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6648:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 744,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6709:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 748,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_length_baseOffset",
              "nameLocation": "6732:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6715:73:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 746,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6715:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 747,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6784:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 751,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_baseOffset",
              "nameLocation": "6807:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6790:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 749,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6790:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786530",
                "id": 750,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6856:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_224_by_1",
                  "typeString": "int_const 224"
                },
                "value": "0xe0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 754,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_usable_head_size",
              "nameLocation": "6880:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6863:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 752,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6863:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 753,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6924:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 757,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_from_offset",
              "nameLocation": "6948:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6931:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 755,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6931:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 756,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6987:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 760,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_head_offset",
              "nameLocation": "7010:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6993:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 758,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6993:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 759,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7053:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 763,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_head_offset",
              "nameLocation": "7076:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7059:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 761,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7059:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 762,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7123:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 766,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_length_offset",
              "nameLocation": "7146:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7129:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 764,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7129:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 765,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7191:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 769,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
              "nameLocation": "7214:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7197:74:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 767,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7197:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 768,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7267:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 772,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_calldata_baseSize",
              "nameLocation": "7290:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7273:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 770,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7273:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 771,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7335:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 775,
              "mutability": "constant",
              "name": "ConduitBatchTransfer_amounts_head_offset",
              "nameLocation": "7438:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7421:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 773,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7421:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 774,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7481:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 778,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_ptr",
              "nameLocation": "7505:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7488:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 776,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7488:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 777,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7544:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 781,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_length",
              "nameLocation": "7567:39:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7550:63:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 779,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7550:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 780,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7609:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 785,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_selector",
              "nameLocation": "7632:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7615:135:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 782,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7615:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307865626132303834633030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7682:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                      "typeString": "int_const 1065...(70 digits omitted)...2656"
                    },
                    "value": "0xeba2084c00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 784,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7676:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                  "typeString": "int_const 1065...(70 digits omitted)...2656"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 789,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_error_signature",
              "nameLocation": "7770:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7753:144:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 786,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7753:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307861666334343565323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7829:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                      "typeString": "int_const 7950...(69 digits omitted)...5136"
                    },
                    "value": "0xafc445e200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 788,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7823:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                  "typeString": "int_const 7950...(69 digits omitted)...5136"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 792,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_token_ptr",
              "nameLocation": "7916:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7899:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 790,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7899:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 791,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7963:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 795,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_ids_offset",
              "nameLocation": "7986:45:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7969:69:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 793,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7969:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 794,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "8034:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            }
          ],
          "src": "32:8008:7"
        },
        "id": 7
      }
    }
  }
}
