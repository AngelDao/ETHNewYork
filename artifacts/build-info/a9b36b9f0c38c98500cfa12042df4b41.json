{
  "id": "a9b36b9f0c38c98500cfa12042df4b41",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.14",
  "solcLongVersion": "0.8.14+commit.80d49f37",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/StoreFront.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.14;\n\nimport { ERC1155 } from \"@rari-capital/solmate/src/tokens/ERC1155.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { Strings } from \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract StoreFront is ERC1155, Ownable {\n    bytes32 constant DOMAIN_TYPEHASH =\n        keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n\n    bytes32 constant PERMIT_ALL_TYPEHASH =\n        keccak256(\n            \"PermitAll(address owner,address operator,bool approved,uint256 nonce,uint256 deadline)\"\n        );\n\n    string public constant NAME = \"STOREFRONT\";\n    string public constant VERSION = \"1\";\n    /// nonces for permit signature validation\n    mapping(address => uint256) public nonces;\n\n    mapping(uint256 => uint256) public totalSupply;\n    string baseURI;\n    address minter;\n    uint256 nextId;\n\n    constructor(address _minter, string memory _baseURI) {\n        minter = _minter;\n        baseURI = _baseURI;\n    }\n\n    modifier onlyMinter() {\n        require(msg.sender == minter);\n        _;\n    }\n\n    function mint(address _to, uint256 _amount) external onlyMinter {\n        _mint(_to, nextId, _amount, \"\");\n        totalSupply[nextId++] += _amount;\n    }\n\n    function _computeDomainSeparator() internal view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    DOMAIN_TYPEHASH,\n                    keccak256(bytes(NAME)),\n                    keccak256(bytes(VERSION)),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    function updateBaseUri(string calldata base) external onlyOwner {\n        baseURI = base;\n    }\n\n    function uri(uint256 id) public view override returns (string memory) {\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, Strings.toString(id)))\n                : baseURI;\n    }\n\n    function permitAll(\n        address _owner,\n        address _operator,\n        bool _approved,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external {\n        if (block.timestamp > _deadline) revert(\"SIG EXPIRED\");\n\n        bytes32 structHash = _computePermitAllStructHash(\n            _owner,\n            _operator,\n            _approved,\n            _deadline\n        );\n\n        bytes32 digest = _computeDigest(_computeDomainSeparator(), structHash);\n\n        address signer = ecrecover(digest, _v, _r, _s);\n\n        if (signer == address(0) || signer != _owner) revert(\"INVALIDSIG\");\n\n        isApprovedForAll[_owner][_operator] = _approved;\n\n        emit ApprovalForAll(_owner, _operator, _approved);\n    }\n\n    function _computeDigest(bytes32 _domainSeparator, bytes32 _structHash)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encodePacked(\"\\x19\\x01\", _domainSeparator, _structHash)\n            );\n    }\n\n    function _computePermitAllStructHash(\n        address _owner,\n        address _operator,\n        bool _approved,\n        uint256 _deadline\n    ) internal returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    PERMIT_ALL_TYPEHASH,\n                    _owner,\n                    _operator,\n                    _approved,\n                    nonces[_owner]++,\n                    _deadline\n                )\n            );\n    }\n}\n"
      },
      "@rari-capital/solmate/src/tokens/ERC1155.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Minimalist and gas efficient standard ERC1155 implementation.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\nabstract contract ERC1155 {\n    /*///////////////////////////////////////////////////////////////\n                                EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 amount\n    );\n\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] amounts\n    );\n\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    event URI(string value, uint256 indexed id);\n\n    /*///////////////////////////////////////////////////////////////\n                            ERC1155 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(address => mapping(uint256 => uint256)) public balanceOf;\n\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\n\n    /*///////////////////////////////////////////////////////////////\n                             METADATA LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function uri(uint256 id) public view virtual returns (string memory);\n\n    /*///////////////////////////////////////////////////////////////\n                             ERC1155 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        isApprovedForAll[msg.sender][operator] = approved;\n\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual {\n        require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\");\n\n        balanceOf[from][id] -= amount;\n        balanceOf[to][id] += amount;\n\n        emit TransferSingle(msg.sender, from, to, id, amount);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155Received(msg.sender, from, id, amount, data) ==\n                    ERC1155TokenReceiver.onERC1155Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual {\n        uint256 idsLength = ids.length; // Saves MLOADs.\n\n        require(idsLength == amounts.length, \"LENGTH_MISMATCH\");\n\n        require(msg.sender == from || isApprovedForAll[from][msg.sender], \"NOT_AUTHORIZED\");\n\n        for (uint256 i = 0; i < idsLength; ) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            balanceOf[from][id] -= amount;\n            balanceOf[to][id] += amount;\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                i++;\n            }\n        }\n\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, from, ids, amounts, data) ==\n                    ERC1155TokenReceiver.onERC1155BatchReceived.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function balanceOfBatch(address[] memory owners, uint256[] memory ids)\n        public\n        view\n        virtual\n        returns (uint256[] memory balances)\n    {\n        uint256 ownersLength = owners.length; // Saves MLOADs.\n\n        require(ownersLength == ids.length, \"LENGTH_MISMATCH\");\n\n        balances = new uint256[](owners.length);\n\n        // Unchecked because the only math done is incrementing\n        // the array index counter which cannot possibly overflow.\n        unchecked {\n            for (uint256 i = 0; i < ownersLength; i++) {\n                balances[i] = balanceOf[owners[i]][ids[i]];\n            }\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                              ERC165 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\n            interfaceId == 0xd9b67a26 || // ERC165 Interface ID for ERC1155\n            interfaceId == 0x0e89341c; // ERC165 Interface ID for ERC1155MetadataURI\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal {\n        balanceOf[to][id] += amount;\n\n        emit TransferSingle(msg.sender, address(0), to, id, amount);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155Received(msg.sender, address(0), id, amount, data) ==\n                    ERC1155TokenReceiver.onERC1155Received.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function _batchMint(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal {\n        uint256 idsLength = ids.length; // Saves MLOADs.\n\n        require(idsLength == amounts.length, \"LENGTH_MISMATCH\");\n\n        for (uint256 i = 0; i < idsLength; ) {\n            balanceOf[to][ids[i]] += amounts[i];\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                i++;\n            }\n        }\n\n        emit TransferBatch(msg.sender, address(0), to, ids, amounts);\n\n        require(\n            to.code.length == 0\n                ? to != address(0)\n                : ERC1155TokenReceiver(to).onERC1155BatchReceived(msg.sender, address(0), ids, amounts, data) ==\n                    ERC1155TokenReceiver.onERC1155BatchReceived.selector,\n            \"UNSAFE_RECIPIENT\"\n        );\n    }\n\n    function _batchBurn(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal {\n        uint256 idsLength = ids.length; // Saves MLOADs.\n\n        require(idsLength == amounts.length, \"LENGTH_MISMATCH\");\n\n        for (uint256 i = 0; i < idsLength; ) {\n            balanceOf[from][ids[i]] -= amounts[i];\n\n            // An array can't have a total length\n            // larger than the max uint256 value.\n            unchecked {\n                i++;\n            }\n        }\n\n        emit TransferBatch(msg.sender, from, address(0), ids, amounts);\n    }\n\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal {\n        balanceOf[from][id] -= amount;\n\n        emit TransferSingle(msg.sender, from, address(0), id, amount);\n    }\n}\n\n/// @notice A generic interface for a contract which properly accepts ERC1155 tokens.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\ninterface ERC1155TokenReceiver {\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        // Check the signature length\n        // - case 65: r,s,v signature (standard)\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else if (signature.length == 64) {\n            bytes32 r;\n            bytes32 vs;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                vs := mload(add(signature, 0x40))\n            }\n            return tryRecover(hash, r, vs);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
      },
      "contracts/zones/order-check/OrderCheckZone.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\nimport { ZoneInterface } from \"./interfaces/ZoneInterface.sol\";\nimport { ZoneInteractionErrors } from \"./interfaces/ZoneInteractionErrors.sol\";\nimport { SeaportInterface } from \"./interfaces/SeaportInterface.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n// prettier-ignore\nimport {\n    AdvancedOrder,\n    CriteriaResolver,\n    Order,\n    OrderComponents,\n    Fulfillment,\n    Execution\n} from \"./lib/ConsiderationStructs.sol\";\n\ncontract OrderCheckZone is ZoneInterface {\n    /**\n    * @notice No checks required \n    * @dev This function is called by Seaport whenever extraData is not\n    *      provided by the caller.\n\n    * @param orderHash The hash of the order.\n    * @param caller    The caller in question.\n    * @param offerer   The offerer in question.\n    * @param zoneHash  The hash to provide upon calling the zone.\n    *\n    * @return validOrderMagicValue A magic value indicating if the order is\n    *                              currently valid.\n    */\n    function isValidOrder(\n        bytes32 orderHash,\n        address caller,\n        address offerer,\n        bytes32 zoneHash\n    ) external pure override returns (bytes4 validOrderMagicValue) {\n        orderHash;\n        caller;\n        offerer;\n        zoneHash;\n\n        // Return the selector of isValidOrder as the magic value.\n        validOrderMagicValue = ZoneInterface.isValidOrder.selector;\n    }\n\n    /**\n     * @notice Check if a given order including hash in extraData is signed by the same addresss\n     *         that created the order, and fits the Merkle root.\n     *\n     * @dev This function is called by Seaport whenever any extraData is\n     *      provided by the caller.\n     *\n     * @param orderHash         The hash of the order.\n     * @param caller            The caller in question.\n     * @param order             The order in question.\n     * @param priorOrderHashes  The order hashes of each order supplied prior to\n     *                          the current order as part of a \"match\" variety\n     *                          of order fulfillment.\n     * @param criteriaResolvers The criteria resolvers corresponding to\n     *                          the order.\n     *\n     * @return validOrderMagicValue A magic value indicating if the order is\n     *                              currently valid.\n     */\n    function isValidOrderIncludingExtraData(\n        bytes32 orderHash,\n        address caller,\n        AdvancedOrder calldata order,\n        bytes32[] calldata priorOrderHashes,\n        CriteriaResolver[] calldata criteriaResolvers\n    ) external pure override returns (bytes4 validOrderMagicValue) {\n        orderHash;\n        caller;\n        order;\n        priorOrderHashes;\n        criteriaResolvers;\n\n        // orderhash.extraData is an abi encoded bytes object containing\n        // (voucherHash, bytes32), (voucherSignature, bytes),\n        // (merkleProof, bytes32), (merkleRoot, bytes32)\n        (\n            bytes32 _voucherHash,\n            bytes memory _voucherSignature,\n            bytes32[] memory _merkleProof,\n            bytes32 _merkleRoot\n        ) = abi.decode(order.extraData, (bytes32, bytes, bytes32[], bytes32));\n\n        // Check that voucher is signed by caller (called fulfill function)\n        // Voucher signature is stored in order.extraData\n        address signer = ECDSA.recover(_voucherHash, _voucherSignature);\n        require(\n            signer == order.parameters.offerer,\n            \"extraData not signed by offerer\"\n        );\n\n        // Check that the caller is in the merkle root\n        bytes32 leaf = keccak256(abi.encodePacked(caller));\n        require(\n            MerkleProof.verify(_merkleProof, _merkleRoot, leaf),\n            \"Invalid proof\"\n        );\n\n        // Return the selector of isValidOrder as the magic value.\n        validOrderMagicValue = ZoneInterface.isValidOrder.selector;\n    }\n}\n"
      },
      "contracts/zones/order-check/interfaces/ZoneInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n    AdvancedOrder,\n    CriteriaResolver\n} from \"../lib/ConsiderationStructs.sol\";\n\ninterface ZoneInterface {\n    /**\n     * @dev Emit an event whenever a zone is successfully paused.\n     */\n    event Paused();\n\n    /**\n     * @dev Emit an event whenever a zone is successfully unpaused (created).\n     */\n    event Unpaused();\n\n    // Called by Consideration whenever extraData is not provided by the caller.\n    function isValidOrder(\n        bytes32 orderHash,\n        address caller,\n        address offerer,\n        bytes32 zoneHash\n    ) external view returns (bytes4 validOrderMagicValue);\n\n    // Called by Consideration whenever any extraData is provided by the caller.\n    function isValidOrderIncludingExtraData(\n        bytes32 orderHash,\n        address caller,\n        AdvancedOrder calldata order,\n        bytes32[] calldata priorOrderHashes,\n        CriteriaResolver[] calldata criteriaResolvers\n    ) external view returns (bytes4 validOrderMagicValue);\n}"
      },
      "contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/**\n * @title ZoneInteractionErrors\n * @author 0age\n * @notice ZoneInteractionErrors contains errors related to zone interaction.\n */\ninterface ZoneInteractionErrors {\n    /**\n     * @dev Revert with an error when attempting to fill an order that specifies\n     *      a restricted submitter as its order type when not submitted by\n     *      either the offerer or the order's zone or approved as valid by the\n     *      zone in question via a staticcall to `isValidOrder`.\n     *\n     * @param orderHash The order hash for the invalid restricted order.\n     */\n    error InvalidRestrictedOrder(bytes32 orderHash);\n}"
      },
      "contracts/zones/order-check/interfaces/SeaportInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n    BasicOrderParameters,\n    OrderComponents,\n    Fulfillment,\n    FulfillmentComponent,\n    Execution,\n    Order,\n    AdvancedOrder,\n    OrderStatus,\n    CriteriaResolver\n} from \"../lib/ConsiderationStructs.sol\";\n\n/**\n * @title SeaportInterface\n * @author 0age\n * @custom:version 1.1\n * @notice Seaport is a generalized ETH/ERC20/ERC721/ERC1155 marketplace. It\n *         minimizes external calls to the greatest extent possible and provides\n *         lightweight methods for common routes as well as more flexible\n *         methods for composing advanced orders.\n *\n * @dev SeaportInterface contains all external function interfaces for Seaport.\n */\ninterface SeaportInterface {\n    /**\n     * @notice Fulfill an order offering an ERC721 token by supplying Ether (or\n     *         the native token for the given chain) as consideration for the\n     *         order. An arbitrary number of \"additional recipients\" may also be\n     *         supplied which will each receive native tokens from the fulfiller\n     *         as consideration.\n     *\n     * @param parameters Additional information on the fulfilled order. Note\n     *                   that the offerer must first approve this contract (or\n     *                   their preferred conduit if indicated by the order) for\n     *                   their offered ERC721 token to be transferred.\n     *\n     * @return fulfilled A boolean indicating whether the order has been\n     *                   successfully fulfilled.\n     */\n    function fulfillBasicOrder(BasicOrderParameters calldata parameters)\n        external\n        payable\n        returns (bool fulfilled);\n\n    /**\n     * @notice Fulfill an order with an arbitrary number of items for offer and\n     *         consideration. Note that this function does not support\n     *         criteria-based orders or partial filling of orders (though\n     *         filling the remainder of a partially-filled order is supported).\n     *\n     * @param order               The order to fulfill. Note that both the\n     *                            offerer and the fulfiller must first approve\n     *                            this contract (or the corresponding conduit if\n     *                            indicated) to transfer any relevant tokens on\n     *                            their behalf and that contracts must implement\n     *                            `onERC1155Received` to receive ERC1155 tokens\n     *                            as consideration.\n     * @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n     *                            any, to source the fulfiller's token approvals\n     *                            from. The zero hash signifies that no conduit\n     *                            should be used, with direct approvals set on\n     *                            Seaport.\n     *\n     * @return fulfilled A boolean indicating whether the order has been\n     *                   successfully fulfilled.\n     */\n    function fulfillOrder(Order calldata order, bytes32 fulfillerConduitKey)\n        external\n        payable\n        returns (bool fulfilled);\n\n    /**\n     * @notice Fill an order, fully or partially, with an arbitrary number of\n     *         items for offer and consideration alongside criteria resolvers\n     *         containing specific token identifiers and associated proofs.\n     *\n     * @param advancedOrder       The order to fulfill along with the fraction\n     *                            of the order to attempt to fill. Note that\n     *                            both the offerer and the fulfiller must first\n     *                            approve this contract (or their preferred\n     *                            conduit if indicated by the order) to transfer\n     *                            any relevant tokens on their behalf and that\n     *                            contracts must implement `onERC1155Received`\n     *                            to receive ERC1155 tokens as consideration.\n     *                            Also note that all offer and consideration\n     *                            components must have no remainder after\n     *                            multiplication of the respective amount with\n     *                            the supplied fraction for the partial fill to\n     *                            be considered valid.\n     * @param criteriaResolvers   An array where each element contains a\n     *                            reference to a specific offer or\n     *                            consideration, a token identifier, and a proof\n     *                            that the supplied token identifier is\n     *                            contained in the merkle root held by the item\n     *                            in question's criteria element. Note that an\n     *                            empty criteria indicates that any\n     *                            (transferable) token identifier on the token\n     *                            in question is valid and that no associated\n     *                            proof needs to be supplied.\n     * @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n     *                            any, to source the fulfiller's token approvals\n     *                            from. The zero hash signifies that no conduit\n     *                            should be used, with direct approvals set on\n     *                            Seaport.\n     * @param recipient           The intended recipient for all received items,\n     *                            with `address(0)` indicating that the caller\n     *                            should receive the items.\n     *\n     * @return fulfilled A boolean indicating whether the order has been\n     *                   successfully fulfilled.\n     */\n    function fulfillAdvancedOrder(\n        AdvancedOrder calldata advancedOrder,\n        CriteriaResolver[] calldata criteriaResolvers,\n        bytes32 fulfillerConduitKey,\n        address recipient\n    ) external payable returns (bool fulfilled);\n\n    /**\n     * @notice Attempt to fill a group of orders, each with an arbitrary number\n     *         of items for offer and consideration. Any order that is not\n     *         currently active, has already been fully filled, or has been\n     *         cancelled will be omitted. Remaining offer and consideration\n     *         items will then be aggregated where possible as indicated by the\n     *         supplied offer and consideration component arrays and aggregated\n     *         items will be transferred to the fulfiller or to each intended\n     *         recipient, respectively. Note that a failing item transfer or an\n     *         issue with order formatting will cause the entire batch to fail.\n     *         Note that this function does not support criteria-based orders or\n     *         partial filling of orders (though filling the remainder of a\n     *         partially-filled order is supported).\n     *\n     * @param orders                    The orders to fulfill. Note that both\n     *                                  the offerer and the fulfiller must first\n     *                                  approve this contract (or the\n     *                                  corresponding conduit if indicated) to\n     *                                  transfer any relevant tokens on their\n     *                                  behalf and that contracts must implement\n     *                                  `onERC1155Received` to receive ERC1155\n     *                                  tokens as consideration.\n     * @param offerFulfillments         An array of FulfillmentComponent arrays\n     *                                  indicating which offer items to attempt\n     *                                  to aggregate when preparing executions.\n     * @param considerationFulfillments An array of FulfillmentComponent arrays\n     *                                  indicating which consideration items to\n     *                                  attempt to aggregate when preparing\n     *                                  executions.\n     * @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n     *                                  if any, to source the fulfiller's token\n     *                                  approvals from. The zero hash signifies\n     *                                  that no conduit should be used, with\n     *                                  direct approvals set on this contract.\n     * @param maximumFulfilled          The maximum number of orders to fulfill.\n     *\n     * @return availableOrders An array of booleans indicating if each order\n     *                         with an index corresponding to the index of the\n     *                         returned boolean was fulfillable or not.\n     * @return executions      An array of elements indicating the sequence of\n     *                         transfers performed as part of matching the given\n     *                         orders.\n     */\n    function fulfillAvailableOrders(\n        Order[] calldata orders,\n        FulfillmentComponent[][] calldata offerFulfillments,\n        FulfillmentComponent[][] calldata considerationFulfillments,\n        bytes32 fulfillerConduitKey,\n        uint256 maximumFulfilled\n    )\n        external\n        payable\n        returns (bool[] memory availableOrders, Execution[] memory executions);\n\n    /**\n     * @notice Attempt to fill a group of orders, fully or partially, with an\n     *         arbitrary number of items for offer and consideration per order\n     *         alongside criteria resolvers containing specific token\n     *         identifiers and associated proofs. Any order that is not\n     *         currently active, has already been fully filled, or has been\n     *         cancelled will be omitted. Remaining offer and consideration\n     *         items will then be aggregated where possible as indicated by the\n     *         supplied offer and consideration component arrays and aggregated\n     *         items will be transferred to the fulfiller or to each intended\n     *         recipient, respectively. Note that a failing item transfer or an\n     *         issue with order formatting will cause the entire batch to fail.\n     *\n     * @param advancedOrders            The orders to fulfill along with the\n     *                                  fraction of those orders to attempt to\n     *                                  fill. Note that both the offerer and the\n     *                                  fulfiller must first approve this\n     *                                  contract (or their preferred conduit if\n     *                                  indicated by the order) to transfer any\n     *                                  relevant tokens on their behalf and that\n     *                                  contracts must implement\n     *                                  `onERC1155Received` to enable receipt of\n     *                                  ERC1155 tokens as consideration. Also\n     *                                  note that all offer and consideration\n     *                                  components must have no remainder after\n     *                                  multiplication of the respective amount\n     *                                  with the supplied fraction for an\n     *                                  order's partial fill amount to be\n     *                                  considered valid.\n     * @param criteriaResolvers         An array where each element contains a\n     *                                  reference to a specific offer or\n     *                                  consideration, a token identifier, and a\n     *                                  proof that the supplied token identifier\n     *                                  is contained in the merkle root held by\n     *                                  the item in question's criteria element.\n     *                                  Note that an empty criteria indicates\n     *                                  that any (transferable) token\n     *                                  identifier on the token in question is\n     *                                  valid and that no associated proof needs\n     *                                  to be supplied.\n     * @param offerFulfillments         An array of FulfillmentComponent arrays\n     *                                  indicating which offer items to attempt\n     *                                  to aggregate when preparing executions.\n     * @param considerationFulfillments An array of FulfillmentComponent arrays\n     *                                  indicating which consideration items to\n     *                                  attempt to aggregate when preparing\n     *                                  executions.\n     * @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n     *                                  if any, to source the fulfiller's token\n     *                                  approvals from. The zero hash signifies\n     *                                  that no conduit should be used, with\n     *                                  direct approvals set on this contract.\n     * @param recipient                 The intended recipient for all received\n     *                                  items, with `address(0)` indicating that\n     *                                  the caller should receive the items.\n     * @param maximumFulfilled          The maximum number of orders to fulfill.\n     *\n     * @return availableOrders An array of booleans indicating if each order\n     *                         with an index corresponding to the index of the\n     *                         returned boolean was fulfillable or not.\n     * @return executions      An array of elements indicating the sequence of\n     *                         transfers performed as part of matching the given\n     *                         orders.\n     */\n    function fulfillAvailableAdvancedOrders(\n        AdvancedOrder[] calldata advancedOrders,\n        CriteriaResolver[] calldata criteriaResolvers,\n        FulfillmentComponent[][] calldata offerFulfillments,\n        FulfillmentComponent[][] calldata considerationFulfillments,\n        bytes32 fulfillerConduitKey,\n        address recipient,\n        uint256 maximumFulfilled\n    )\n        external\n        payable\n        returns (bool[] memory availableOrders, Execution[] memory executions);\n\n    /**\n     * @notice Match an arbitrary number of orders, each with an arbitrary\n     *         number of items for offer and consideration along with as set of\n     *         fulfillments allocating offer components to consideration\n     *         components. Note that this function does not support\n     *         criteria-based or partial filling of orders (though filling the\n     *         remainder of a partially-filled order is supported).\n     *\n     * @param orders       The orders to match. Note that both the offerer and\n     *                     fulfiller on each order must first approve this\n     *                     contract (or their conduit if indicated by the order)\n     *                     to transfer any relevant tokens on their behalf and\n     *                     each consideration recipient must implement\n     *                     `onERC1155Received` to enable ERC1155 token receipt.\n     * @param fulfillments An array of elements allocating offer components to\n     *                     consideration components. Note that each\n     *                     consideration component must be fully met for the\n     *                     match operation to be valid.\n     *\n     * @return executions An array of elements indicating the sequence of\n     *                    transfers performed as part of matching the given\n     *                    orders.\n     */\n    function matchOrders(\n        Order[] calldata orders,\n        Fulfillment[] calldata fulfillments\n    ) external payable returns (Execution[] memory executions);\n\n    /**\n     * @notice Match an arbitrary number of full or partial orders, each with an\n     *         arbitrary number of items for offer and consideration, supplying\n     *         criteria resolvers containing specific token identifiers and\n     *         associated proofs as well as fulfillments allocating offer\n     *         components to consideration components.\n     *\n     * @param orders            The advanced orders to match. Note that both the\n     *                          offerer and fulfiller on each order must first\n     *                          approve this contract (or a preferred conduit if\n     *                          indicated by the order) to transfer any relevant\n     *                          tokens on their behalf and each consideration\n     *                          recipient must implement `onERC1155Received` in\n     *                          order to receive ERC1155 tokens. Also note that\n     *                          the offer and consideration components for each\n     *                          order must have no remainder after multiplying\n     *                          the respective amount with the supplied fraction\n     *                          in order for the group of partial fills to be\n     *                          considered valid.\n     * @param criteriaResolvers An array where each element contains a reference\n     *                          to a specific order as well as that order's\n     *                          offer or consideration, a token identifier, and\n     *                          a proof that the supplied token identifier is\n     *                          contained in the order's merkle root. Note that\n     *                          an empty root indicates that any (transferable)\n     *                          token identifier is valid and that no associated\n     *                          proof needs to be supplied.\n     * @param fulfillments      An array of elements allocating offer components\n     *                          to consideration components. Note that each\n     *                          consideration component must be fully met in\n     *                          order for the match operation to be valid.\n     *\n     * @return executions An array of elements indicating the sequence of\n     *                    transfers performed as part of matching the given\n     *                    orders.\n     */\n    function matchAdvancedOrders(\n        AdvancedOrder[] calldata orders,\n        CriteriaResolver[] calldata criteriaResolvers,\n        Fulfillment[] calldata fulfillments\n    ) external payable returns (Execution[] memory executions);\n\n    /**\n     * @notice Cancel an arbitrary number of orders. Note that only the offerer\n     *         or the zone of a given order may cancel it. Callers should ensure\n     *         that the intended order was cancelled by calling `getOrderStatus`\n     *         and confirming that `isCancelled` returns `true`.\n     *\n     * @param orders The orders to cancel.\n     *\n     * @return cancelled A boolean indicating whether the supplied orders have\n     *                   been successfully cancelled.\n     */\n    function cancel(OrderComponents[] calldata orders)\n        external\n        returns (bool cancelled);\n\n    /**\n     * @notice Validate an arbitrary number of orders, thereby registering their\n     *         signatures as valid and allowing the fulfiller to skip signature\n     *         verification on fulfillment. Note that validated orders may still\n     *         be unfulfillable due to invalid item amounts or other factors;\n     *         callers should determine whether validated orders are fulfillable\n     *         by simulating the fulfillment call prior to execution. Also note\n     *         that anyone can validate a signed order, but only the offerer can\n     *         validate an order without supplying a signature.\n     *\n     * @param orders The orders to validate.\n     *\n     * @return validated A boolean indicating whether the supplied orders have\n     *                   been successfully validated.\n     */\n    function validate(Order[] calldata orders)\n        external\n        returns (bool validated);\n\n    /**\n     * @notice Cancel all orders from a given offerer with a given zone in bulk\n     *         by incrementing a counter. Note that only the offerer may\n     *         increment the counter.\n     *\n     * @return newCounter The new counter.\n     */\n    function incrementCounter() external returns (uint256 newCounter);\n\n    /**\n     * @notice Retrieve the order hash for a given order.\n     *\n     * @param order The components of the order.\n     *\n     * @return orderHash The order hash.\n     */\n    function getOrderHash(OrderComponents calldata order)\n        external\n        view\n        returns (bytes32 orderHash);\n\n    /**\n     * @notice Retrieve the status of a given order by hash, including whether\n     *         the order has been cancelled or validated and the fraction of the\n     *         order that has been filled.\n     *\n     * @param orderHash The order hash in question.\n     *\n     * @return isValidated A boolean indicating whether the order in question\n     *                     has been validated (i.e. previously approved or\n     *                     partially filled).\n     * @return isCancelled A boolean indicating whether the order in question\n     *                     has been cancelled.\n     * @return totalFilled The total portion of the order that has been filled\n     *                     (i.e. the \"numerator\").\n     * @return totalSize   The total size of the order that is either filled or\n     *                     unfilled (i.e. the \"denominator\").\n     */\n    function getOrderStatus(bytes32 orderHash)\n        external\n        view\n        returns (\n            bool isValidated,\n            bool isCancelled,\n            uint256 totalFilled,\n            uint256 totalSize\n        );\n\n    /**\n     * @notice Retrieve the current counter for a given offerer.\n     *\n     * @param offerer The offerer in question.\n     *\n     * @return counter The current counter.\n     */\n    function getCounter(address offerer)\n        external\n        view\n        returns (uint256 counter);\n\n    /**\n     * @notice Retrieve configuration information for this contract.\n     *\n     * @return version           The contract version.\n     * @return domainSeparator   The domain separator for this contract.\n     * @return conduitController The conduit Controller set for this contract.\n     */\n    function information()\n        external\n        view\n        returns (\n            string memory version,\n            bytes32 domainSeparator,\n            address conduitController\n        );\n\n    /**\n     * @notice Retrieve the name of this contract.\n     *\n     * @return contractName The name of this contract.\n     */\n    function name() external view returns (string memory contractName);\n}"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
      },
      "contracts/zones/order-check/lib/ConsiderationStructs.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n    OrderType,\n    BasicOrderType,\n    ItemType,\n    Side\n} from \"./ConsiderationEnums.sol\";\n\n/**\n * @dev An order contains eleven components: an offerer, a zone (or account that\n *      can cancel the order or restrict who can fulfill the order depending on\n *      the type), the order type (specifying partial fill support as well as\n *      restricted order status), the start and end time, a hash that will be\n *      provided to the zone when validating restricted orders, a salt, a key\n *      corresponding to a given conduit, a counter, and an arbitrary number of\n *      offer items that can be spent along with consideration items that must\n *      be received by their respective recipient.\n */\nstruct OrderComponents {\n    address offerer;\n    address zone;\n    OfferItem[] offer;\n    ConsiderationItem[] consideration;\n    OrderType orderType;\n    uint256 startTime;\n    uint256 endTime;\n    bytes32 zoneHash;\n    uint256 salt;\n    bytes32 conduitKey;\n    uint256 counter;\n}\n\n/**\n * @dev An offer item has five components: an item type (ETH or other native\n *      tokens, ERC20, ERC721, and ERC1155, as well as criteria-based ERC721 and\n *      ERC1155), a token address, a dual-purpose \"identifierOrCriteria\"\n *      component that will either represent a tokenId or a merkle root\n *      depending on the item type, and a start and end amount that support\n *      increasing or decreasing amounts over the duration of the respective\n *      order.\n */\nstruct OfferItem {\n    ItemType itemType;\n    address token;\n    uint256 identifierOrCriteria;\n    uint256 startAmount;\n    uint256 endAmount;\n}\n\n/**\n * @dev A consideration item has the same five components as an offer item and\n *      an additional sixth component designating the required recipient of the\n *      item.\n */\nstruct ConsiderationItem {\n    ItemType itemType;\n    address token;\n    uint256 identifierOrCriteria;\n    uint256 startAmount;\n    uint256 endAmount;\n    address payable recipient;\n}\n\n/**\n * @dev A spent item is translated from a utilized offer item and has four\n *      components: an item type (ETH or other native tokens, ERC20, ERC721, and\n *      ERC1155), a token address, a tokenId, and an amount.\n */\nstruct SpentItem {\n    ItemType itemType;\n    address token;\n    uint256 identifier;\n    uint256 amount;\n}\n\n/**\n * @dev A received item is translated from a utilized consideration item and has\n *      the same four components as a spent item, as well as an additional fifth\n *      component designating the required recipient of the item.\n */\nstruct ReceivedItem {\n    ItemType itemType;\n    address token;\n    uint256 identifier;\n    uint256 amount;\n    address payable recipient;\n}\n\n/**\n * @dev For basic orders involving ETH / native / ERC20 <=> ERC721 / ERC1155\n *      matching, a group of six functions may be called that only requires a\n *      subset of the usual order arguments. Note the use of a \"basicOrderType\"\n *      enum; this represents both the usual order type as well as the \"route\"\n *      of the basic order (a simple derivation function for the basic order\n *      type is `basicOrderType = orderType + (4 * basicOrderRoute)`.)\n */\nstruct BasicOrderParameters {\n    // calldata offset\n    address considerationToken; // 0x24\n    uint256 considerationIdentifier; // 0x44\n    uint256 considerationAmount; // 0x64\n    address payable offerer; // 0x84\n    address zone; // 0xa4\n    address offerToken; // 0xc4\n    uint256 offerIdentifier; // 0xe4\n    uint256 offerAmount; // 0x104\n    BasicOrderType basicOrderType; // 0x124\n    uint256 startTime; // 0x144\n    uint256 endTime; // 0x164\n    bytes32 zoneHash; // 0x184\n    uint256 salt; // 0x1a4\n    bytes32 offererConduitKey; // 0x1c4\n    bytes32 fulfillerConduitKey; // 0x1e4\n    uint256 totalOriginalAdditionalRecipients; // 0x204\n    AdditionalRecipient[] additionalRecipients; // 0x224\n    bytes signature; // 0x244\n    // Total length, excluding dynamic array data: 0x264 (580)\n}\n\n/**\n * @dev Basic orders can supply any number of additional recipients, with the\n *      implied assumption that they are supplied from the offered ETH (or other\n *      native token) or ERC20 token for the order.\n */\nstruct AdditionalRecipient {\n    uint256 amount;\n    address payable recipient;\n}\n\n/**\n * @dev The full set of order components, with the exception of the counter,\n *      must be supplied when fulfilling more sophisticated orders or groups of\n *      orders. The total number of original consideration items must also be\n *      supplied, as the caller may specify additional consideration items.\n */\nstruct OrderParameters {\n    address offerer; // 0x00\n    address zone; // 0x20\n    OfferItem[] offer; // 0x40\n    ConsiderationItem[] consideration; // 0x60\n    OrderType orderType; // 0x80\n    uint256 startTime; // 0xa0\n    uint256 endTime; // 0xc0\n    bytes32 zoneHash; // 0xe0\n    uint256 salt; // 0x100\n    bytes32 conduitKey; // 0x120\n    uint256 totalOriginalConsiderationItems; // 0x140\n    // offer.length                          // 0x160\n}\n\n/**\n * @dev Orders require a signature in addition to the other order parameters.\n */\nstruct Order {\n    OrderParameters parameters;\n    bytes signature;\n}\n\n/**\n * @dev Advanced orders include a numerator (i.e. a fraction to attempt to fill)\n *      and a denominator (the total size of the order) in addition to the\n *      signature and other order parameters. It also supports an optional field\n *      for supplying extra data; this data will be included in a staticcall to\n *      `isValidOrderIncludingExtraData` on the zone for the order if the order\n *      type is restricted and the offerer or zone are not the caller.\n */\nstruct AdvancedOrder {\n    OrderParameters parameters;\n    uint120 numerator;\n    uint120 denominator;\n    bytes signature;\n    bytes extraData;\n}\n\n/**\n * @dev Orders can be validated (either explicitly via `validate`, or as a\n *      consequence of a full or partial fill), specifically cancelled (they can\n *      also be cancelled in bulk via incrementing a per-zone counter), and\n *      partially or fully filled (with the fraction filled represented by a\n *      numerator and denominator).\n */\nstruct OrderStatus {\n    bool isValidated;\n    bool isCancelled;\n    uint120 numerator;\n    uint120 denominator;\n}\n\n/**\n * @dev A criteria resolver specifies an order, side (offer vs. consideration),\n *      and item index. It then provides a chosen identifier (i.e. tokenId)\n *      alongside a merkle proof demonstrating the identifier meets the required\n *      criteria.\n */\nstruct CriteriaResolver {\n    uint256 orderIndex;\n    Side side;\n    uint256 index;\n    uint256 identifier;\n    bytes32[] criteriaProof;\n}\n\n/**\n * @dev A fulfillment is applied to a group of orders. It decrements a series of\n *      offer and consideration items, then generates a single execution\n *      element. A given fulfillment can be applied to as many offer and\n *      consideration items as desired, but must contain at least one offer and\n *      at least one consideration that match. The fulfillment must also remain\n *      consistent on all key parameters across all offer items (same offerer,\n *      token, type, tokenId, and conduit preference) as well as across all\n *      consideration items (token, type, tokenId, and recipient).\n */\nstruct Fulfillment {\n    FulfillmentComponent[] offerComponents;\n    FulfillmentComponent[] considerationComponents;\n}\n\n/**\n * @dev Each fulfillment component contains one index referencing a specific\n *      order and another referencing a specific offer or consideration item.\n */\nstruct FulfillmentComponent {\n    uint256 orderIndex;\n    uint256 itemIndex;\n}\n\n/**\n * @dev An execution is triggered once all consideration items have been zeroed\n *      out. It sends the item in question from the offerer to the item's\n *      recipient, optionally sourcing approvals from either this contract\n *      directly or from the offerer's chosen conduit if one is specified. An\n *      execution is not provided as an argument, but rather is derived via\n *      orders, criteria resolvers, and fulfillments (where the total number of\n *      executions will be less than or equal to the total number of indicated\n *      fulfillments) and returned as part of `matchOrders`.\n */\nstruct Execution {\n    ReceivedItem item;\n    address offerer;\n    bytes32 conduitKey;\n}"
      },
      "contracts/zones/order-check/lib/ConsiderationEnums.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nenum OrderType {\n    // 0: no partial fills, anyone can execute\n    FULL_OPEN,\n\n    // 1: partial fills supported, anyone can execute\n    PARTIAL_OPEN,\n\n    // 2: no partial fills, only offerer or zone can execute\n    FULL_RESTRICTED,\n\n    // 3: partial fills supported, only offerer or zone can execute\n    PARTIAL_RESTRICTED\n}\n\n// prettier-ignore\nenum BasicOrderType {\n    // 0: no partial fills, anyone can execute\n    ETH_TO_ERC721_FULL_OPEN,\n\n    // 1: partial fills supported, anyone can execute\n    ETH_TO_ERC721_PARTIAL_OPEN,\n\n    // 2: no partial fills, only offerer or zone can execute\n    ETH_TO_ERC721_FULL_RESTRICTED,\n\n    // 3: partial fills supported, only offerer or zone can execute\n    ETH_TO_ERC721_PARTIAL_RESTRICTED,\n\n    // 4: no partial fills, anyone can execute\n    ETH_TO_ERC1155_FULL_OPEN,\n\n    // 5: partial fills supported, anyone can execute\n    ETH_TO_ERC1155_PARTIAL_OPEN,\n\n    // 6: no partial fills, only offerer or zone can execute\n    ETH_TO_ERC1155_FULL_RESTRICTED,\n\n    // 7: partial fills supported, only offerer or zone can execute\n    ETH_TO_ERC1155_PARTIAL_RESTRICTED,\n\n    // 8: no partial fills, anyone can execute\n    ERC20_TO_ERC721_FULL_OPEN,\n\n    // 9: partial fills supported, anyone can execute\n    ERC20_TO_ERC721_PARTIAL_OPEN,\n\n    // 10: no partial fills, only offerer or zone can execute\n    ERC20_TO_ERC721_FULL_RESTRICTED,\n\n    // 11: partial fills supported, only offerer or zone can execute\n    ERC20_TO_ERC721_PARTIAL_RESTRICTED,\n\n    // 12: no partial fills, anyone can execute\n    ERC20_TO_ERC1155_FULL_OPEN,\n\n    // 13: partial fills supported, anyone can execute\n    ERC20_TO_ERC1155_PARTIAL_OPEN,\n\n    // 14: no partial fills, only offerer or zone can execute\n    ERC20_TO_ERC1155_FULL_RESTRICTED,\n\n    // 15: partial fills supported, only offerer or zone can execute\n    ERC20_TO_ERC1155_PARTIAL_RESTRICTED,\n\n    // 16: no partial fills, anyone can execute\n    ERC721_TO_ERC20_FULL_OPEN,\n\n    // 17: partial fills supported, anyone can execute\n    ERC721_TO_ERC20_PARTIAL_OPEN,\n\n    // 18: no partial fills, only offerer or zone can execute\n    ERC721_TO_ERC20_FULL_RESTRICTED,\n\n    // 19: partial fills supported, only offerer or zone can execute\n    ERC721_TO_ERC20_PARTIAL_RESTRICTED,\n\n    // 20: no partial fills, anyone can execute\n    ERC1155_TO_ERC20_FULL_OPEN,\n\n    // 21: partial fills supported, anyone can execute\n    ERC1155_TO_ERC20_PARTIAL_OPEN,\n\n    // 22: no partial fills, only offerer or zone can execute\n    ERC1155_TO_ERC20_FULL_RESTRICTED,\n\n    // 23: partial fills supported, only offerer or zone can execute\n    ERC1155_TO_ERC20_PARTIAL_RESTRICTED\n}\n\n// prettier-ignore\nenum BasicOrderRouteType {\n    // 0: provide Ether (or other native token) to receive offered ERC721 item.\n    ETH_TO_ERC721,\n\n    // 1: provide Ether (or other native token) to receive offered ERC1155 item.\n    ETH_TO_ERC1155,\n\n    // 2: provide ERC20 item to receive offered ERC721 item.\n    ERC20_TO_ERC721,\n\n    // 3: provide ERC20 item to receive offered ERC1155 item.\n    ERC20_TO_ERC1155,\n\n    // 4: provide ERC721 item to receive offered ERC20 item.\n    ERC721_TO_ERC20,\n\n    // 5: provide ERC1155 item to receive offered ERC20 item.\n    ERC1155_TO_ERC20\n}\n\n// prettier-ignore\nenum ItemType {\n    // 0: ETH on mainnet, MATIC on polygon, etc.\n    NATIVE,\n\n    // 1: ERC20 items (ERC777 and ERC20 analogues could also technically work)\n    ERC20,\n\n    // 2: ERC721 items\n    ERC721,\n\n    // 3: ERC1155 items\n    ERC1155,\n\n    // 4: ERC721 items where a number of tokenIds are supported\n    ERC721_WITH_CRITERIA,\n\n    // 5: ERC1155 items where a number of ids are supported\n    ERC1155_WITH_CRITERIA\n}\n\n// prettier-ignore\nenum Side {\n    // 0: Items that can be spent\n    OFFER,\n\n    // 1: Items that must be received\n    CONSIDERATION\n}"
      },
      "contracts/test/TestERC1155.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.7;\n\nimport \"@rari-capital/solmate/src/tokens/ERC1155.sol\";\n\n// Used for minting test ERC1155s in our tests\ncontract TestERC1155 is ERC1155 {\n    function mint(\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) public returns (bool) {\n        _mint(to, tokenId, amount, \"\");\n        return true;\n    }\n\n    function uri(uint256) public pure override returns (string memory) {\n        return \"uri\";\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 19066
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "Strings": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be7d3483f897a309c28a0020b1d30bac0134ab427cc4e3d8193c565940eafd6d64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH30 0x3483F897A309C28A0020B1D30BAC0134AB427CC4E3D8193C565940EAFD6D PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "146:1885:2:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220be7d3483f897a309c28a0020b1d30bac0134ab427cc4e3d8193c565940eafd6d64736f6c634300080e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH30 0x3483F897A309C28A0020B1D30BAC0134AB427CC4E3D8193C565940EAFD6D PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "146:1885:2:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208ae9aeb01cd9fabfae2cffeb39232d53ffc4809b279b2269d4e5cc642fc9373d64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xE9 0xAE 0xB0 SHR 0xD9 STATICCALL 0xBF 0xAE 0x2C SELFDESTRUCT 0xEB CODECOPY 0x23 0x2D MSTORE8 SELFDESTRUCT 0xC4 DUP1 SWAP12 0x27 SWAP12 0x22 PUSH10 0xD4E5CC642FC9373D6473 PUSH16 0x6C634300080E00330000000000000000 ",
              "sourceMap": "369:8924:3:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212208ae9aeb01cd9fabfae2cffeb39232d53ffc4809b279b2269d4e5cc642fc9373d64736f6c634300080e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xE9 0xAE 0xB0 SHR 0xD9 STATICCALL 0xBF 0xAE 0x2C SELFDESTRUCT 0xEB CODECOPY 0x23 0x2D MSTORE8 SELFDESTRUCT 0xC4 DUP1 SWAP12 0x27 SWAP12 0x22 PUSH10 0xD4E5CC642FC9373D6473 PUSH16 0x6C634300080E00330000000000000000 ",
              "sourceMap": "369:8924:3:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x3c07f43e60e099b3b157243b3152722e73b80eeb7985c2cd73712828d7f7da29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466ffb5a6e3bd65fffd996f9287ffd240ea21588a338c6efe143d94eaed014a7\",\"dweb:/ipfs/Qmans3vvPJZcvxe9KLAPc9Xwe4TFVTJdzaQGpi62Vrhoe2\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "MerkleProof": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220353ef624c42a2138043e0731abb3e2b9ccaa49bfe6da8e44dc21e7d75cddcfde64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD RETURNDATACOPY 0xF6 0x24 0xC4 0x2A 0x21 CODESIZE DIV RETURNDATACOPY SMOD BALANCE 0xAB 0xB3 0xE2 0xB9 0xCC 0xAA 0x49 0xBF 0xE6 0xDA DUP15 DIFFICULTY 0xDC 0x21 0xE7 0xD7 0x5C 0xDD 0xCF 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "800:1777:4:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220353ef624c42a2138043e0731abb3e2b9ccaa49bfe6da8e44dc21e7d75cddcfde64736f6c634300080e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD RETURNDATACOPY 0xF6 0x24 0xC4 0x2A 0x21 CODESIZE DIV RETURNDATACOPY SMOD BALANCE 0xAB 0xB3 0xE2 0xB9 0xCC 0xAA 0x49 0xBF 0xE6 0xDA DUP15 DIFFICULTY 0xDC 0x21 0xE7 0xD7 0x5C 0xDD 0xCF 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "800:1777:4:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}"
        }
      },
      "@rari-capital/solmate/src/tokens/ERC1155.sol": {
        "ERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "uri(uint256)": "0e89341c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimalist and gas efficient standard ERC1155 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@rari-capital/solmate/src/tokens/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0xd361476aafb22c810c82668395d38506e297d6e1fdc246eaa4ba947d19ba740c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f4bdc39404ddc9636a543b645db8e94f50721cea99ca94f95f29bf230d6130dc\",\"dweb:/ipfs/QmWy1eH7r7oZ7MDUiRaSmEZqSDQxULHFytsjSy7yyBvAk4\"]}},\"version\":1}"
        },
        "ERC1155TokenReceiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
              "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A generic interface for a contract which properly accepts ERC1155 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@rari-capital/solmate/src/tokens/ERC1155.sol\":\"ERC1155TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0xd361476aafb22c810c82668395d38506e297d6e1fdc246eaa4ba947d19ba740c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f4bdc39404ddc9636a543b645db8e94f50721cea99ca94f95f29bf230d6130dc\",\"dweb:/ipfs/QmWy1eH7r7oZ7MDUiRaSmEZqSDQxULHFytsjSy7yyBvAk4\"]}},\"version\":1}"
        }
      },
      "contracts/StoreFront.sol": {
        "StoreFront": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_baseURI",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "NAME",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "_v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "_r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_s",
                  "type": "bytes32"
                }
              ],
              "name": "permitAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "base",
                  "type": "string"
                }
              ],
              "name": "updateBaseUri",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 281,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 395,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_StoreFront": {
                  "entryPoint": 484,
                  "id": 1557,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 334,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 258,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234620000ed5762002319803803806200001d8162000119565b9283398101604082820312620000ed5781516001600160a01b0381168103620000ed5760208381015190936001600160401b039190828211620000ed570183601f82011215620000ed578051918211620000f2575b62000086601f8301601f1916860162000119565b93828552858383010111620000ed57936000945b828610620000d7575081620000b89511620000c8575b5050620001e4565b604051611fdd90816200033c8239f35b600091840101523880620000b0565b858101820151858701830152948101946200009a565b600080fd5b620000fc62000102565b62000072565b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200013f57604052565b6200014962000102565b604052565b90600182811c9216801562000180575b60208310146200016a57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200015e565b601f811162000198575050565b6000906005825260208220906020601f850160051c83019410620001d9575b601f0160051c01915b828110620001cd57505050565b818155600101620001c0565b9092508290620001b7565b91909160025460018060a01b031991338383161760025560018060a01b0391823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a360068054909316911617905581516001600160401b0381116200032b575b62000264816200025e6005546200014e565b6200018b565b602080601f8311600114620002a3575081929360009262000297575b50508160011b916000199060031b1c191617600555565b01519050388062000280565b6005600052601f198316949091907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0926000905b87821062000312575050836001959610620002f8575b505050811b01600555565b015160001960f88460031b161c19169055388080620002ed565b80600185968294968601518155019501930190620002d7565b6200033562000102565b6200024c56fe60806040526004361015610013575b600080fd5b60003560e01c8062fdd58e1461017a57806301ffc9a7146101715780630e89341c146101685780632eb2c2d61461015f57806339f7e37f1461015657806340c10f191461014d5780634e1273f414610144578063715018a61461013b5780637ecebe00146101325780638da5cb5b14610129578063a22cb46514610120578063a3f4df7e14610117578063bd85b0391461010e578063cfa8fb4214610105578063e985e9c5146100fc578063f242432a146100f3578063f2fde38b146100ea5763ffa1ad74146100e257600080fd5b61000e611620565b5061000e611515565b5061000e611329565b5061000e6112ac565b5061000e6110ad565b5061000e611080565b5061000e61104f565b5061000e610f3e565b5061000e610efa565b5061000e610eb2565b5061000e610e26565b5061000e610d6b565b5061000e610b81565b5061000e6109db565b5061000e610700565b5061000e6103c9565b5061000e61026a565b5061000e6101ea565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610219610183565b16600052600060205260406000206024356000526020526020604060002054604051908152f35b7fffffffff0000000000000000000000000000000000000000000000000000000081160361000e57565b503461000e57602060031936011261000e5760207fffffffff000000000000000000000000000000000000000000000000000000006004356102ab81610240565b167f01ffc9a7000000000000000000000000000000000000000000000000000000008114908115610313575b81156102e9575b506040519015158152f35b7f0e89341c00000000000000000000000000000000000000000000000000000000915014386102de565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506102d7565b918091926000905b82821061035d575011610356575050565b6000910152565b91508060209183015181860152018291610345565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936103ae8151809281875287808801910161033d565b0116010190565b9060206103c6928181520190610372565b90565b503461000e5760208060031936011261000e576005546103e881611b2d565b600090156104595750506104176104496104559261041d61040a600435611cca565b6040519485938401611bf1565b90611c98565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826105aa565b604051918291826103b5565b0390f35b909160405191809361046a81611b2d565b808552916001918083169081156104f5575060011461049c575b50505050610497816104559303826105aa565b610449565b929450600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106104e2575050508161045593610497928201019338610484565b80548585018701529285019281016104c5565b9250505061045594507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150169082015261049781604081019338610484565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761058157604052565b610589610535565b604052565b6040810190811067ffffffffffffffff82111761058157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761058157604052565b60209067ffffffffffffffff8111610605575b60051b0190565b61060d610535565b6105fe565b81601f8201121561000e57803591610629836105eb565b9261063760405194856105aa565b808452602092838086019260051b82010192831161000e578301905b828210610661575050505090565b81358152908301908301610653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116106ac575b01160190565b6106b4610535565b6106a6565b81601f8201121561000e578035906106d082610670565b926106de60405194856105aa565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e5760a060031936011261000e5761071a610183565b6107226101a6565b9067ffffffffffffffff9060443582811161000e57610745903690600401610612565b60643583811161000e5761075d903690600401610612565b9260843590811161000e576107769036906004016106b9565b815193610785815186146118fb565b73ffffffffffffffffffffffffffffffffffffffff808516958633148015610973575b6107b190611711565b60005b8181106108cc5750509561081096811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806107f8888b836119b2565b0390a4600093903b6108125750505050501515611896565b005b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e865233600487016119d7565b03925af19182156108bf575b91610891575b501614611896565b6108b2915060203d81116108b8575b6108aa81836105aa565b8101906117f2565b38610889565b503d6108a0565b6108c7611889565b610883565b808761096b610963836109218e6109308b6109218f6108f060019c6108f992611990565b51968793611990565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b61093b8782546117a6565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9182546117da565b9055016107b4565b506107b16109d46109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b90506107a8565b503461000e5760208060031936011261000e5767ffffffffffffffff60043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e57610a4973ffffffffffffffffffffffffffffffffffffffff60025416331461163d565b610a5d83610a58600554611b2d565b611b80565b600093601f8411600114610ab95750928293600093610aac575b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600555005b0101359050388080610a77565b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841694610b0a60056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090565b9381905b878210610b675750508460019610610b2d575b50505050811b01600555005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c199201013516905538808080610b21565b806001849786839596890101358155019601920190610b0e565b503461000e57604060031936011261000e57610b9b610183565b60243573ffffffffffffffffffffffffffffffffffffffff918260065416330361000e57610c6c9060075460405194610bd386610565565b6000958691828252610c09846109218773ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610c148882546117da565b905584169384836040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180610c5a8d8b8360209093929193604081019481520152565b0390a43b610c9d575050501515611896565b610c96610963600754610c86610c8182611aff565b600755565b6000526004602052604060002090565b9055604051f35b610cff7fffffffff0000000000000000000000000000000000000000000000000000000093946020926040519485809481938c7ff23a6e61000000000000000000000000000000000000000000000000000000009b8c85523360048601611807565b03925af1908115610d19575b869161089157501614611896565b610d21611889565b610d0b565b90815180825260208080930193019160005b828110610d46575050505090565b835185529381019392810192600101610d38565b9060206103c6928181520190610d26565b503461000e57604060031936011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e578160040135610da9816105eb565b92610db760405194856105aa565b81845260209160248386019160051b8301019136831161000e57602401905b828210610e0f578560243586811161000e5761045591610dfd610e03923690600401610612565b90611a33565b60405191829182610d5a565b838091610e1b846101c9565b815201910190610dd6565b503461000e57600080600319360112610eaf576002547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff821691610e8033841461163d565b1660025581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610ee1610183565b1660005260036020526020604060002054604051908152f35b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b60443590811515820361000e57565b503461000e57604060031936011261000e57610f58610183565b6024358015159182820361000e57610fe673ffffffffffffffffffffffffffffffffffffffff92336000526001602052610fb68360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051906110238261058e565b600a82527f53544f524546524f4e54000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c611016565b604051918291602083526020830190610372565b503461000e57602060031936011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5760e060031936011261000e576110c7610183565b6110cf6101a6565b6110d7610f2f565b9060843560643560ff8216820361000e5780421161124d5760209161111061110360009387878a611f01565b61110b611e14565b611ea6565b6040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15611240575b73ffffffffffffffffffffffffffffffffffffffff80600051168015908115611233575b506111d457816111c184610fb67f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31956109a88973ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b60405193151584528116931691602090a3005b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f494e56414c4944534947000000000000000000000000000000000000000000006044820152606490fd5b9050818516141538611168565b611248611889565b611144565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f53494720455850495245440000000000000000000000000000000000000000006044820152606490fd5b503461000e57604060031936011261000e57602060ff61131d6112cd610183565b73ffffffffffffffffffffffffffffffffffffffff6112ea6101a6565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461000e5760a060031936011261000e57611343610183565b61134b6101a6565b6084359160443560643567ffffffffffffffff851161000e576113756108109536906004016106b9565b9073ffffffffffffffffffffffffffffffffffffffff948585169586331480156114d9575b6113a390611711565b6113d1856109218873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6113dc8482546117a6565b905561140c856109218473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6114178482546117da565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6233918061145c888b8360209093929193604081019481520152565b0390a4600093903b6114745750505050501515611896565b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e86523360048701611847565b506113a361150e6109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b905061139a565b503461000e57602060031936011261000e5761152f610183565b73ffffffffffffffffffffffffffffffffffffffff6115538160025416331461163d565b81161561156357610810906116a2565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b604051906115f48261058e565b600182527f31000000000000000000000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c6115e7565b1561164457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561171857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181106117b1570390565b6117b9611776565b0390565b80196030116117cd575b60300190565b6117d5611776565b6117c7565b811981116117e6570190565b6117ee611776565b0190565b9081602091031261000e57516103c681610240565b909260a09273ffffffffffffffffffffffffffffffffffffffff6103c6969516835260006020840152604083015260608201528160808201520190610372565b91926103c695949160a09473ffffffffffffffffffffffffffffffffffffffff8092168552166020840152604083015260608201528160808201520190610372565b506040513d6000823e3d90fd5b1561189d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561190257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209181518110156119a5575b60051b010190565b6119ad611960565b61199d565b90916119c96103c693604084526040840190610d26565b916020818403910152610d26565b93906103c69593611a1791611a259473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a0860190610d26565b908482036060860152610d26565b916080818403910152610372565b918251611a42835182146118fb565b8351611a4d816105eb565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a89604092611a81845195866105aa565b8085526105eb565b01946020953687850137829560005b858110611aaa57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff611acc6001938c611990565b51166000526000835284600020611ae38286611990565b5160005283528460002054611af88288611990565b5201611a98565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117e6570190565b90600182811c92168015611b76575b6020831014611b4757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611b3c565b601f8111611b8c575050565b600090600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906020601f850160051c83019410611be7575b601f0160051c01915b828110611bdc57505050565b818155600101611bd0565b9092508290611bc7565b60055460009291611c0182611b2d565b91600190818116908115611c6d5750600114611c1c57505050565b909192935060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b848310611c5a575050500190565b8181602092548587015201920191611c4c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050019150565b906117ee6020928281519485920161033d565b906020918051821015611cbd57010190565b611cc5611960565b010190565b8015611dda57806000908282935b611dc65750611ce683610670565b92611cf460405194856105aa565b808452817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611d2283610670565b013660208701375b611d345750505090565b8060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9210611db9575b018091600a91611db0611da7611d7f611d798686066117bd565b60ff1690565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001690565b861a9187611cab565b53049081611d2a565b611dc1611776565b611d5f565b92611dd2600a91611aff565b930480611cd8565b50604051611de78161058e565b600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b611e1c611016565b60208151910120611e2b6115e7565b602081519101206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117611e99575b60405251902090565b611ea1610535565b611e90565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff821117611e995760405251902090565b9290919273ffffffffffffffffffffffffffffffffffffffff80911693846000526003602052604060002091825492611f3984611aff565b90556040519460208601967f200d2483757e19728fc8a3511298158c1b74dd131c7be00c4904e11665b42cd1885260408701521660608501521515608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117611e99576040525190209056fea2646970667358221220816f6fcbd8773af062bbf61161f04cc5d3dc5cfbe4e57a400b6a21336c62d8ed64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xED JUMPI PUSH3 0x2319 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x119 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH3 0xED JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0xED JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP3 GT PUSH3 0xED JUMPI ADD DUP4 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xED JUMPI DUP1 MLOAD SWAP2 DUP3 GT PUSH3 0xF2 JUMPI JUMPDEST PUSH3 0x86 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP7 ADD PUSH3 0x119 JUMP JUMPDEST SWAP4 DUP3 DUP6 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH3 0xED JUMPI SWAP4 PUSH1 0x0 SWAP5 JUMPDEST DUP3 DUP7 LT PUSH3 0xD7 JUMPI POP DUP2 PUSH3 0xB8 SWAP6 GT PUSH3 0xC8 JUMPI JUMPDEST POP POP PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FDD SWAP1 DUP2 PUSH3 0x33C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 SWAP2 DUP5 ADD ADD MSTORE CODESIZE DUP1 PUSH3 0xB0 JUMP JUMPDEST DUP6 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 DUP2 ADD SWAP5 PUSH3 0x9A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xFC PUSH3 0x102 JUMP JUMPDEST PUSH3 0x72 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x13F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x149 PUSH3 0x102 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x180 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x16A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x15E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x198 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x1D9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x1CD JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1C0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x1B7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x2 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 CALLER DUP4 DUP4 AND OR PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 PUSH1 0x40 MLOAD LOG3 PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x32B JUMPI JUMPDEST PUSH3 0x264 DUP2 PUSH3 0x25E PUSH1 0x5 SLOAD PUSH3 0x14E JUMP JUMPDEST PUSH3 0x18B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x2A3 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x297 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x280 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x312 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x2F8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2ED JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x2D7 JUMP JUMPDEST PUSH3 0x335 PUSH3 0x102 JUMP JUMPDEST PUSH3 0x24C JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x39F7E37F EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xCFA8FB42 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x1620 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1515 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1329 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x12AC JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x10AD JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1080 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x104F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xF3E JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xEFA JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xEB2 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xE26 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xD6B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x9DB JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x700 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x3C9 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x26A JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x219 PUSH2 0x183 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x2AB DUP2 PUSH2 0x240 JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x313 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2E9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2DE JUMP JUMPDEST PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2D7 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x35D JUMPI POP GT PUSH2 0x356 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x3AE DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x33D JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3C6 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x5 SLOAD PUSH2 0x3E8 DUP2 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x0 SWAP1 ISZERO PUSH2 0x459 JUMPI POP POP PUSH2 0x417 PUSH2 0x449 PUSH2 0x455 SWAP3 PUSH2 0x41D PUSH2 0x40A PUSH1 0x4 CALLDATALOAD PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 PUSH2 0x1C98 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3B5 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP1 SWAP4 PUSH2 0x46A DUP2 PUSH2 0x1B2D JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4F5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x49C JUMPI JUMPDEST POP POP POP POP PUSH2 0x497 DUP2 PUSH2 0x455 SWAP4 SUB DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP5 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x4E2 JUMPI POP POP POP DUP2 PUSH2 0x455 SWAP4 PUSH2 0x497 SWAP3 DUP3 ADD ADD SWAP4 CODESIZE PUSH2 0x484 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x455 SWAP5 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND SWAP1 DUP3 ADD MSTORE PUSH2 0x497 DUP2 PUSH1 0x40 DUP2 ADD SWAP4 CODESIZE PUSH2 0x484 JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x589 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x605 JUMPI JUMPDEST PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x629 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 PUSH2 0x637 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xE JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x661 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6AC JUMPI JUMPDEST ADD AND ADD SWAP1 JUMP JUMPDEST PUSH2 0x6B4 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x6D0 DUP3 PUSH2 0x670 JUMP JUMPDEST SWAP3 PUSH2 0x6DE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xE JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x71A PUSH2 0x183 JUMP JUMPDEST PUSH2 0x722 PUSH2 0x1A6 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x745 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x75D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x776 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B9 JUMP JUMPDEST DUP2 MLOAD SWAP4 PUSH2 0x785 DUP2 MLOAD DUP7 EQ PUSH2 0x18FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x973 JUMPI JUMPDEST PUSH2 0x7B1 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8CC JUMPI POP POP SWAP6 PUSH2 0x810 SWAP7 DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x7F8 DUP9 DUP12 DUP4 PUSH2 0x19B2 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x812 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST STOP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x877 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x8BF JUMPI JUMPDEST SWAP2 PUSH2 0x891 JUMPI JUMPDEST POP AND EQ PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x8B2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x8B8 JUMPI JUMPDEST PUSH2 0x8AA DUP2 DUP4 PUSH2 0x5AA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17F2 JUMP JUMPDEST CODESIZE PUSH2 0x889 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST DUP1 DUP8 PUSH2 0x96B PUSH2 0x963 DUP4 PUSH2 0x921 DUP15 PUSH2 0x930 DUP12 PUSH2 0x921 DUP16 PUSH2 0x8F0 PUSH1 0x1 SWAP13 PUSH2 0x8F9 SWAP3 PUSH2 0x1990 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP4 PUSH2 0x1990 JUMP JUMPDEST MLOAD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP8 DUP3 SLOAD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x7B4 JUMP JUMPDEST POP PUSH2 0x7B1 PUSH2 0x9D4 PUSH2 0x9CD CALLER PUSH2 0x9A8 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE DUP3 DUP5 DUP4 ADD ADD GT PUSH2 0xE JUMPI PUSH2 0xA49 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x163D JUMP JUMPDEST PUSH2 0xA5D DUP4 PUSH2 0xA58 PUSH1 0x5 SLOAD PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xAB9 JUMPI POP SWAP3 DUP3 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0xAAC JUMPI JUMPDEST POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE STOP JUMPDEST ADD ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0xA77 JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 AND SWAP5 PUSH2 0xB0A PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 JUMP JUMPDEST SWAP4 DUP2 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0xB67 JUMPI POP POP DUP5 PUSH1 0x1 SWAP7 LT PUSH2 0xB2D JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP7 PUSH1 0x3 SHL AND SHR NOT SWAP3 ADD ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0xB21 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP8 DUP7 DUP4 SWAP6 SWAP7 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0xB9B PUSH2 0x183 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x6 SLOAD AND CALLER SUB PUSH2 0xE JUMPI PUSH2 0xC6C SWAP1 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP5 PUSH2 0xBD3 DUP7 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 SWAP6 DUP7 SWAP2 DUP3 DUP3 MSTORE PUSH2 0xC09 DUP5 PUSH2 0x921 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC14 DUP9 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE DUP5 AND SWAP4 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0xC5A DUP14 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0xC9D JUMPI POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0x963 PUSH1 0x7 SLOAD PUSH2 0xC86 PUSH2 0xC81 DUP3 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH2 0xCFF PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 DUP13 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x1807 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD19 JUMPI JUMPDEST DUP7 SWAP2 PUSH2 0x891 JUMPI POP AND EQ PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xD21 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xD0B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD46 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD38 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3C6 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0xE JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xE JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xDA9 DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP3 PUSH2 0xDB7 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xE JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE0F JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x455 SWAP2 PUSH2 0xDFD PUSH2 0xE03 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD5A JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xE1B DUP5 PUSH2 0x1C9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xDD6 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEAF JUMPI PUSH1 0x2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 PUSH2 0xE80 CALLER DUP5 EQ PUSH2 0x163D JUMP JUMPDEST AND PUSH1 0x2 SSTORE DUP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP5 LOG3 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEE1 PUSH2 0x183 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0xF58 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP2 DUP3 DUP3 SUB PUSH2 0xE JUMPI PUSH2 0xFE6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xFB6 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1023 DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0xA DUP3 MSTORE PUSH32 0x53544F524546524F4E5400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x455 PUSH2 0x106C PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x10C7 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x10CF PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x10D7 PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI DUP1 TIMESTAMP GT PUSH2 0x124D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1110 PUSH2 0x1103 PUSH1 0x0 SWAP4 DUP8 DUP8 DUP11 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 DUP1 MSTORE PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1240 JUMPI JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x0 MLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1233 JUMPI JUMPDEST POP PUSH2 0x11D4 JUMPI DUP2 PUSH2 0x11C1 DUP5 PUSH2 0xFB6 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP6 PUSH2 0x9A8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE DUP2 AND SWAP4 AND SWAP2 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C494453494700000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 DUP6 AND EQ ISZERO CODESIZE PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5349472045585049524544000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x131D PUSH2 0x12CD PUSH2 0x183 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x12EA PUSH2 0x1A6 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1343 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x134B PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0xE JUMPI PUSH2 0x1375 PUSH2 0x810 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B9 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x14D9 JUMPI JUMPDEST PUSH2 0x13A3 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x13D1 DUP6 PUSH2 0x921 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13DC DUP5 DUP3 SLOAD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x140C DUP6 PUSH2 0x921 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1417 DUP5 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0x145C DUP9 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x1474 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x877 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x1847 JUMP JUMPDEST POP PUSH2 0x13A3 PUSH2 0x150E PUSH2 0x9CD CALLER PUSH2 0x9A8 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x139A JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x152F PUSH2 0x183 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1553 DUP2 PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x163D JUMP JUMPDEST DUP2 AND ISZERO PUSH2 0x1563 JUMPI PUSH2 0x810 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x15F4 DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x455 PUSH2 0x106C PUSH2 0x15E7 JUMP JUMPDEST ISZERO PUSH2 0x1644 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 PUSH1 0x40 MLOAD LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1718 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x17B9 PUSH2 0x1776 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP1 NOT PUSH1 0x30 GT PUSH2 0x17CD JUMPI JUMPDEST PUSH1 0x30 ADD SWAP1 JUMP JUMPDEST PUSH2 0x17D5 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x17C7 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x17E6 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x17EE PUSH2 0x1776 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE JUMPI MLOAD PUSH2 0x3C6 DUP2 PUSH2 0x240 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3C6 SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x3C6 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x189D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E534146455F524543495049454E5400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1902 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C454E4754485F4D49534D415443480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x19A5 JUMPI JUMPDEST PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x19AD PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x199D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x19C9 PUSH2 0x3C6 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xD26 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x3C6 SWAP6 SWAP4 PUSH2 0x1A17 SWAP2 PUSH2 0x1A25 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD26 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x372 JUMP JUMPDEST SWAP2 DUP3 MLOAD PUSH2 0x1A42 DUP4 MLOAD DUP3 EQ PUSH2 0x18FB JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1A4D DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A89 PUSH1 0x40 SWAP3 PUSH2 0x1A81 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x5EB JUMP JUMPDEST ADD SWAP5 PUSH1 0x20 SWAP6 CALLDATASIZE DUP8 DUP6 ADD CALLDATACOPY DUP3 SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x1AAA JUMPI POP POP POP POP POP POP SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1ACC PUSH1 0x1 SWAP4 DUP13 PUSH2 0x1990 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x1AE3 DUP3 DUP7 PUSH2 0x1990 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1AF8 DUP3 DUP9 PUSH2 0x1990 JUMP JUMPDEST MSTORE ADD PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x17E6 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B76 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B47 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B8C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1BE7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BDC JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1C01 DUP3 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1C6D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C1C JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C5A JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x1C4C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 MSTORE POP POP ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x17EE PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x33D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1CBD JUMPI ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x1CC5 PUSH2 0x1960 JUMP JUMPDEST ADD ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DDA JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x1DC6 JUMPI POP PUSH2 0x1CE6 DUP4 PUSH2 0x670 JUMP JUMPDEST SWAP3 PUSH2 0x1CF4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1D22 DUP4 PUSH2 0x670 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY JUMPDEST PUSH2 0x1D34 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 LT PUSH2 0x1DB9 JUMPI JUMPDEST ADD DUP1 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x1DB0 PUSH2 0x1DA7 PUSH2 0x1D7F PUSH2 0x1D79 DUP7 DUP7 MOD PUSH2 0x17BD JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 JUMP JUMPDEST DUP7 BYTE SWAP2 DUP8 PUSH2 0x1CAB JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x1D2A JUMP JUMPDEST PUSH2 0x1DC1 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x1D5F JUMP JUMPDEST SWAP3 PUSH2 0x1DD2 PUSH1 0xA SWAP2 PUSH2 0x1AFF JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x1CD8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DE7 DUP2 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1E2B PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI JUMPDEST PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x1E90 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x1F39 DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 PUSH32 0x200D2483757E19728FC8A3511298158C1B74DD131C7BE00C4904E11665B42CD1 DUP9 MSTORE PUSH1 0x40 DUP8 ADD MSTORE AND PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH16 0x6FCBD8773AF062BBF61161F04CC5D3DC 0x5C 0xFB 0xE4 0xE5 PUSH27 0x400B6A21336C62D8ED64736F6C634300080E003300000000000000 ",
              "sourceMap": "270:3279:6:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;270:3279:6;;;;;;;;;;;;;-1:-1:-1;;;;;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;-1:-1:-1;;270:3279:6;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;-1:-1:-1;;;;;270:3279:6;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;270:3279:6;1045:18;270:3279;;;;;;;;;;1045:18;270:3279;;;;;;;;;;1045:18;270:3279;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;956:114;;;;2362:6:0;270:3279:6;;;;;;;719:10:1;;270:3279:6;;;;2362:6:0;270:3279:6;;;;;;719:10:1;;;270:3279:6;;2410:40:0;-1:-1:-1;270:3279:6;;2410:40:0;1019:16:6;270:3279;;;;;;;;;;;;-1:-1:-1;;;;;270:3279:6;;;;956:114;270:3279;;;1045:18;270:3279;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;;1045:18;270:3279;956:114::o;270:3279::-;;;;-1:-1:-1;270:3279:6;;;;;1045:18;270:3279;;-1:-1:-1;;270:3279:6;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;1045:18;270:3279;956:114::o;270:3279::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 457,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address_8331": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_8336": {
                  "entryPoint": 422,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 1554,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 3887,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 1721,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes4_fromMemory": {
                  "entryPoint": 6130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes": {
                  "entryPoint": 6615,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256_uint256_bytes": {
                  "entryPoint": 6215,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256_uint256_bytes_8341": {
                  "entryPoint": 6151,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 3418,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_array_uint256_dyn": {
                  "entryPoint": 6578,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_memory_ptr": {
                  "entryPoint": 3366,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes32_uint8_bytes32_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 949,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 7320,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 7153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_string_to_string": {
                  "entryPoint": 882,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_ba01": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 1515,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 1648,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 6106,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256_8406": {
                  "entryPoint": 6077,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 6054,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 7040,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_uint8_to_bytes1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6": {
                  "entryPoint": 5607,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_ffdffc95429c0c2eeeb6ee29e9250e1d29f7737dde1a2d5c5b649295221a4252": {
                  "entryPoint": 4118,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 829,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_NAME": {
                  "entryPoint": 4175,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_VERSION": {
                  "entryPoint": 5664,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 490,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOfBatch": {
                  "entryPoint": 3435,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isApprovedForAll": {
                  "entryPoint": 4780,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 2945,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_nonces": {
                  "entryPoint": 3762,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 3834,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_permitAll": {
                  "entryPoint": 4269,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 3622,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_safeBatchTransferFrom": {
                  "entryPoint": 1792,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_safeTransferFrom": {
                  "entryPoint": 4905,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setApprovalForAll": {
                  "entryPoint": 3902,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_supportsInterface": {
                  "entryPoint": 618,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 4224,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 5397,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_updateBaseUri": {
                  "entryPoint": 2523,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_uri": {
                  "entryPoint": 969,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 6957,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1450,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_13192": {
                  "entryPoint": 1381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_13193": {
                  "entryPoint": 1422,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_balanceOfBatch": {
                  "entryPoint": 6707,
                  "id": 1187,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_computeDigest": {
                  "entryPoint": 7846,
                  "id": 1766,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_computeDomainSeparator": {
                  "entryPoint": 7700,
                  "id": 1623,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_computePermitAllStructHash": {
                  "entryPoint": 7937,
                  "id": 1795,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_toString": {
                  "entryPoint": 7370,
                  "id": 211,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_transferOwnership": {
                  "entryPoint": 5794,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 6911,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_8340": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_8356": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_8363": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_8364": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_uint256_of_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_uint256_of_uint256_8343": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_bytes": {
                  "entryPoint": 7339,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 6544,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 6006,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 6496,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1333,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 5693,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_91ac": {
                  "entryPoint": 6294,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c58d": {
                  "entryPoint": 6395,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e7e2": {
                  "entryPoint": 5905,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 6281,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bytes4": {
                  "entryPoint": 576,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b60003560e01c8062fdd58e1461017a57806301ffc9a7146101715780630e89341c146101685780632eb2c2d61461015f57806339f7e37f1461015657806340c10f191461014d5780634e1273f414610144578063715018a61461013b5780637ecebe00146101325780638da5cb5b14610129578063a22cb46514610120578063a3f4df7e14610117578063bd85b0391461010e578063cfa8fb4214610105578063e985e9c5146100fc578063f242432a146100f3578063f2fde38b146100ea5763ffa1ad74146100e257600080fd5b61000e611620565b5061000e611515565b5061000e611329565b5061000e6112ac565b5061000e6110ad565b5061000e611080565b5061000e61104f565b5061000e610f3e565b5061000e610efa565b5061000e610eb2565b5061000e610e26565b5061000e610d6b565b5061000e610b81565b5061000e6109db565b5061000e610700565b5061000e6103c9565b5061000e61026a565b5061000e6101ea565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610219610183565b16600052600060205260406000206024356000526020526020604060002054604051908152f35b7fffffffff0000000000000000000000000000000000000000000000000000000081160361000e57565b503461000e57602060031936011261000e5760207fffffffff000000000000000000000000000000000000000000000000000000006004356102ab81610240565b167f01ffc9a7000000000000000000000000000000000000000000000000000000008114908115610313575b81156102e9575b506040519015158152f35b7f0e89341c00000000000000000000000000000000000000000000000000000000915014386102de565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506102d7565b918091926000905b82821061035d575011610356575050565b6000910152565b91508060209183015181860152018291610345565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936103ae8151809281875287808801910161033d565b0116010190565b9060206103c6928181520190610372565b90565b503461000e5760208060031936011261000e576005546103e881611b2d565b600090156104595750506104176104496104559261041d61040a600435611cca565b6040519485938401611bf1565b90611c98565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826105aa565b604051918291826103b5565b0390f35b909160405191809361046a81611b2d565b808552916001918083169081156104f5575060011461049c575b50505050610497816104559303826105aa565b610449565b929450600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106104e2575050508161045593610497928201019338610484565b80548585018701529285019281016104c5565b9250505061045594507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150169082015261049781604081019338610484565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761058157604052565b610589610535565b604052565b6040810190811067ffffffffffffffff82111761058157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761058157604052565b60209067ffffffffffffffff8111610605575b60051b0190565b61060d610535565b6105fe565b81601f8201121561000e57803591610629836105eb565b9261063760405194856105aa565b808452602092838086019260051b82010192831161000e578301905b828210610661575050505090565b81358152908301908301610653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116106ac575b01160190565b6106b4610535565b6106a6565b81601f8201121561000e578035906106d082610670565b926106de60405194856105aa565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e5760a060031936011261000e5761071a610183565b6107226101a6565b9067ffffffffffffffff9060443582811161000e57610745903690600401610612565b60643583811161000e5761075d903690600401610612565b9260843590811161000e576107769036906004016106b9565b815193610785815186146118fb565b73ffffffffffffffffffffffffffffffffffffffff808516958633148015610973575b6107b190611711565b60005b8181106108cc5750509561081096811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806107f8888b836119b2565b0390a4600093903b6108125750505050501515611896565b005b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e865233600487016119d7565b03925af19182156108bf575b91610891575b501614611896565b6108b2915060203d81116108b8575b6108aa81836105aa565b8101906117f2565b38610889565b503d6108a0565b6108c7611889565b610883565b808761096b610963836109218e6109308b6109218f6108f060019c6108f992611990565b51968793611990565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b61093b8782546117a6565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9182546117da565b9055016107b4565b506107b16109d46109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b90506107a8565b503461000e5760208060031936011261000e5767ffffffffffffffff60043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e57610a4973ffffffffffffffffffffffffffffffffffffffff60025416331461163d565b610a5d83610a58600554611b2d565b611b80565b600093601f8411600114610ab95750928293600093610aac575b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600555005b0101359050388080610a77565b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841694610b0a60056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090565b9381905b878210610b675750508460019610610b2d575b50505050811b01600555005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c199201013516905538808080610b21565b806001849786839596890101358155019601920190610b0e565b503461000e57604060031936011261000e57610b9b610183565b60243573ffffffffffffffffffffffffffffffffffffffff918260065416330361000e57610c6c9060075460405194610bd386610565565b6000958691828252610c09846109218773ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610c148882546117da565b905584169384836040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180610c5a8d8b8360209093929193604081019481520152565b0390a43b610c9d575050501515611896565b610c96610963600754610c86610c8182611aff565b600755565b6000526004602052604060002090565b9055604051f35b610cff7fffffffff0000000000000000000000000000000000000000000000000000000093946020926040519485809481938c7ff23a6e61000000000000000000000000000000000000000000000000000000009b8c85523360048601611807565b03925af1908115610d19575b869161089157501614611896565b610d21611889565b610d0b565b90815180825260208080930193019160005b828110610d46575050505090565b835185529381019392810192600101610d38565b9060206103c6928181520190610d26565b503461000e57604060031936011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e578160040135610da9816105eb565b92610db760405194856105aa565b81845260209160248386019160051b8301019136831161000e57602401905b828210610e0f578560243586811161000e5761045591610dfd610e03923690600401610612565b90611a33565b60405191829182610d5a565b838091610e1b846101c9565b815201910190610dd6565b503461000e57600080600319360112610eaf576002547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff821691610e8033841461163d565b1660025581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff610ee1610183565b1660005260036020526020604060002054604051908152f35b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b60443590811515820361000e57565b503461000e57604060031936011261000e57610f58610183565b6024358015159182820361000e57610fe673ffffffffffffffffffffffffffffffffffffffff92336000526001602052610fb68360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051906110238261058e565b600a82527f53544f524546524f4e54000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c611016565b604051918291602083526020830190610372565b503461000e57602060031936011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5760e060031936011261000e576110c7610183565b6110cf6101a6565b6110d7610f2f565b9060843560643560ff8216820361000e5780421161124d5760209161111061110360009387878a611f01565b61110b611e14565b611ea6565b6040805191825260ff92909216602082015260a4359181019190915260c435606082015281805260809060015afa15611240575b73ffffffffffffffffffffffffffffffffffffffff80600051168015908115611233575b506111d457816111c184610fb67f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31956109a88973ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b60405193151584528116931691602090a3005b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f494e56414c4944534947000000000000000000000000000000000000000000006044820152606490fd5b9050818516141538611168565b611248611889565b611144565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f53494720455850495245440000000000000000000000000000000000000000006044820152606490fd5b503461000e57604060031936011261000e57602060ff61131d6112cd610183565b73ffffffffffffffffffffffffffffffffffffffff6112ea6101a6565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461000e5760a060031936011261000e57611343610183565b61134b6101a6565b6084359160443560643567ffffffffffffffff851161000e576113756108109536906004016106b9565b9073ffffffffffffffffffffffffffffffffffffffff948585169586331480156114d9575b6113a390611711565b6113d1856109218873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6113dc8482546117a6565b905561140c856109218473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6114178482546117da565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6233918061145c888b8360209093929193604081019481520152565b0390a4600093903b6114745750505050501515611896565b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561087795604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e86523360048701611847565b506113a361150e6109cd336109a88a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b905061139a565b503461000e57602060031936011261000e5761152f610183565b73ffffffffffffffffffffffffffffffffffffffff6115538160025416331461163d565b81161561156357610810906116a2565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b604051906115f48261058e565b600182527f31000000000000000000000000000000000000000000000000000000000000006020830152565b503461000e57600060031936011261000e5761045561106c6115e7565b1561164457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561171857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181106117b1570390565b6117b9611776565b0390565b80196030116117cd575b60300190565b6117d5611776565b6117c7565b811981116117e6570190565b6117ee611776565b0190565b9081602091031261000e57516103c681610240565b909260a09273ffffffffffffffffffffffffffffffffffffffff6103c6969516835260006020840152604083015260608201528160808201520190610372565b91926103c695949160a09473ffffffffffffffffffffffffffffffffffffffff8092168552166020840152604083015260608201528160808201520190610372565b506040513d6000823e3d90fd5b1561189d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561190257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209181518110156119a5575b60051b010190565b6119ad611960565b61199d565b90916119c96103c693604084526040840190610d26565b916020818403910152610d26565b93906103c69593611a1791611a259473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a0860190610d26565b908482036060860152610d26565b916080818403910152610372565b918251611a42835182146118fb565b8351611a4d816105eb565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a89604092611a81845195866105aa565b8085526105eb565b01946020953687850137829560005b858110611aaa57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff611acc6001938c611990565b51166000526000835284600020611ae38286611990565b5160005283528460002054611af88288611990565b5201611a98565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117e6570190565b90600182811c92168015611b76575b6020831014611b4757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611b3c565b601f8111611b8c575050565b600090600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906020601f850160051c83019410611be7575b601f0160051c01915b828110611bdc57505050565b818155600101611bd0565b9092508290611bc7565b60055460009291611c0182611b2d565b91600190818116908115611c6d5750600114611c1c57505050565b909192935060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b848310611c5a575050500190565b8181602092548587015201920191611c4c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050019150565b906117ee6020928281519485920161033d565b906020918051821015611cbd57010190565b611cc5611960565b010190565b8015611dda57806000908282935b611dc65750611ce683610670565b92611cf460405194856105aa565b808452817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611d2283610670565b013660208701375b611d345750505090565b8060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9210611db9575b018091600a91611db0611da7611d7f611d798686066117bd565b60ff1690565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001690565b861a9187611cab565b53049081611d2a565b611dc1611776565b611d5f565b92611dd2600a91611aff565b930480611cd8565b50604051611de78161058e565b600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b611e1c611016565b60208151910120611e2b6115e7565b602081519101206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117611e99575b60405251902090565b611ea1610535565b611e90565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff821117611e995760405251902090565b9290919273ffffffffffffffffffffffffffffffffffffffff80911693846000526003602052604060002091825492611f3984611aff565b90556040519460208601967f200d2483757e19728fc8a3511298158c1b74dd131c7be00c4904e11665b42cd1885260408701521660608501521515608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117611e99576040525190209056fea2646970667358221220816f6fcbd8773af062bbf61161f04cc5d3dc5cfbe4e57a400b6a21336c62d8ed64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x39F7E37F EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xCFA8FB42 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x1620 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1515 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1329 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x12AC JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x10AD JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1080 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x104F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xF3E JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xEFA JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xEB2 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xE26 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xD6B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x9DB JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x700 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x3C9 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x26A JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x219 PUSH2 0x183 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x2AB DUP2 PUSH2 0x240 JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x313 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2E9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2DE JUMP JUMPDEST PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2D7 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x35D JUMPI POP GT PUSH2 0x356 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x3AE DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x33D JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3C6 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x5 SLOAD PUSH2 0x3E8 DUP2 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x0 SWAP1 ISZERO PUSH2 0x459 JUMPI POP POP PUSH2 0x417 PUSH2 0x449 PUSH2 0x455 SWAP3 PUSH2 0x41D PUSH2 0x40A PUSH1 0x4 CALLDATALOAD PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 PUSH2 0x1C98 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3B5 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP1 SWAP4 PUSH2 0x46A DUP2 PUSH2 0x1B2D JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x4F5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x49C JUMPI JUMPDEST POP POP POP POP PUSH2 0x497 DUP2 PUSH2 0x455 SWAP4 SUB DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP5 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x4E2 JUMPI POP POP POP DUP2 PUSH2 0x455 SWAP4 PUSH2 0x497 SWAP3 DUP3 ADD ADD SWAP4 CODESIZE PUSH2 0x484 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x455 SWAP5 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND SWAP1 DUP3 ADD MSTORE PUSH2 0x497 DUP2 PUSH1 0x40 DUP2 ADD SWAP4 CODESIZE PUSH2 0x484 JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x589 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x581 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x605 JUMPI JUMPDEST PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x629 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 PUSH2 0x637 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xE JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x661 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6AC JUMPI JUMPDEST ADD AND ADD SWAP1 JUMP JUMPDEST PUSH2 0x6B4 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x6D0 DUP3 PUSH2 0x670 JUMP JUMPDEST SWAP3 PUSH2 0x6DE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xE JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x71A PUSH2 0x183 JUMP JUMPDEST PUSH2 0x722 PUSH2 0x1A6 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x745 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x75D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x776 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B9 JUMP JUMPDEST DUP2 MLOAD SWAP4 PUSH2 0x785 DUP2 MLOAD DUP7 EQ PUSH2 0x18FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x973 JUMPI JUMPDEST PUSH2 0x7B1 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8CC JUMPI POP POP SWAP6 PUSH2 0x810 SWAP7 DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x7F8 DUP9 DUP12 DUP4 PUSH2 0x19B2 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x812 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST STOP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x877 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x8BF JUMPI JUMPDEST SWAP2 PUSH2 0x891 JUMPI JUMPDEST POP AND EQ PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x8B2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x8B8 JUMPI JUMPDEST PUSH2 0x8AA DUP2 DUP4 PUSH2 0x5AA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17F2 JUMP JUMPDEST CODESIZE PUSH2 0x889 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST DUP1 DUP8 PUSH2 0x96B PUSH2 0x963 DUP4 PUSH2 0x921 DUP15 PUSH2 0x930 DUP12 PUSH2 0x921 DUP16 PUSH2 0x8F0 PUSH1 0x1 SWAP13 PUSH2 0x8F9 SWAP3 PUSH2 0x1990 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP4 PUSH2 0x1990 JUMP JUMPDEST MLOAD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP8 DUP3 SLOAD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x7B4 JUMP JUMPDEST POP PUSH2 0x7B1 PUSH2 0x9D4 PUSH2 0x9CD CALLER PUSH2 0x9A8 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE DUP3 DUP5 DUP4 ADD ADD GT PUSH2 0xE JUMPI PUSH2 0xA49 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x163D JUMP JUMPDEST PUSH2 0xA5D DUP4 PUSH2 0xA58 PUSH1 0x5 SLOAD PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xAB9 JUMPI POP SWAP3 DUP3 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0xAAC JUMPI JUMPDEST POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE STOP JUMPDEST ADD ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0xA77 JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 AND SWAP5 PUSH2 0xB0A PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 JUMP JUMPDEST SWAP4 DUP2 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0xB67 JUMPI POP POP DUP5 PUSH1 0x1 SWAP7 LT PUSH2 0xB2D JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP7 PUSH1 0x3 SHL AND SHR NOT SWAP3 ADD ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0xB21 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP8 DUP7 DUP4 SWAP6 SWAP7 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0xB9B PUSH2 0x183 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x6 SLOAD AND CALLER SUB PUSH2 0xE JUMPI PUSH2 0xC6C SWAP1 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP5 PUSH2 0xBD3 DUP7 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 SWAP6 DUP7 SWAP2 DUP3 DUP3 MSTORE PUSH2 0xC09 DUP5 PUSH2 0x921 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC14 DUP9 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE DUP5 AND SWAP4 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0xC5A DUP14 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0xC9D JUMPI POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0x963 PUSH1 0x7 SLOAD PUSH2 0xC86 PUSH2 0xC81 DUP3 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD RETURN JUMPDEST PUSH2 0xCFF PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 DUP13 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x1807 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD19 JUMPI JUMPDEST DUP7 SWAP2 PUSH2 0x891 JUMPI POP AND EQ PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xD21 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0xD0B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD46 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD38 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3C6 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0xE JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xE JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xDA9 DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP3 PUSH2 0xDB7 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xE JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE0F JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x455 SWAP2 PUSH2 0xDFD PUSH2 0xE03 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD5A JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xE1B DUP5 PUSH2 0x1C9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xDD6 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEAF JUMPI PUSH1 0x2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 PUSH2 0xE80 CALLER DUP5 EQ PUSH2 0x163D JUMP JUMPDEST AND PUSH1 0x2 SSTORE DUP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP5 LOG3 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEE1 PUSH2 0x183 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0xF58 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP2 DUP3 DUP3 SUB PUSH2 0xE JUMPI PUSH2 0xFE6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xFB6 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1023 DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0xA DUP3 MSTORE PUSH32 0x53544F524546524F4E5400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x455 PUSH2 0x106C PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x10C7 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x10CF PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x10D7 PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI DUP1 TIMESTAMP GT PUSH2 0x124D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1110 PUSH2 0x1103 PUSH1 0x0 SWAP4 DUP8 DUP8 DUP11 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 DUP1 MSTORE PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1240 JUMPI JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x0 MLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1233 JUMPI JUMPDEST POP PUSH2 0x11D4 JUMPI DUP2 PUSH2 0x11C1 DUP5 PUSH2 0xFB6 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP6 PUSH2 0x9A8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE DUP2 AND SWAP4 AND SWAP2 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C494453494700000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 DUP6 AND EQ ISZERO CODESIZE PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5349472045585049524544000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x131D PUSH2 0x12CD PUSH2 0x183 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x12EA PUSH2 0x1A6 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1343 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x134B PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0xE JUMPI PUSH2 0x1375 PUSH2 0x810 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B9 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x14D9 JUMPI JUMPDEST PUSH2 0x13A3 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x13D1 DUP6 PUSH2 0x921 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13DC DUP5 DUP3 SLOAD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x140C DUP6 PUSH2 0x921 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1417 DUP5 DUP3 SLOAD PUSH2 0x17DA JUMP JUMPDEST SWAP1 SSTORE DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0x145C DUP9 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x1474 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0x1896 JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x877 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x1847 JUMP JUMPDEST POP PUSH2 0x13A3 PUSH2 0x150E PUSH2 0x9CD CALLER PUSH2 0x9A8 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x139A JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x152F PUSH2 0x183 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1553 DUP2 PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x163D JUMP JUMPDEST DUP2 AND ISZERO PUSH2 0x1563 JUMPI PUSH2 0x810 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x15F4 DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x455 PUSH2 0x106C PUSH2 0x15E7 JUMP JUMPDEST ISZERO PUSH2 0x1644 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 PUSH1 0x40 MLOAD LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1718 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x17B9 PUSH2 0x1776 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP1 NOT PUSH1 0x30 GT PUSH2 0x17CD JUMPI JUMPDEST PUSH1 0x30 ADD SWAP1 JUMP JUMPDEST PUSH2 0x17D5 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x17C7 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x17E6 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x17EE PUSH2 0x1776 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE JUMPI MLOAD PUSH2 0x3C6 DUP2 PUSH2 0x240 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3C6 SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x3C6 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x189D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E534146455F524543495049454E5400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1902 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C454E4754485F4D49534D415443480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x19A5 JUMPI JUMPDEST PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x19AD PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x199D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x19C9 PUSH2 0x3C6 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xD26 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x3C6 SWAP6 SWAP4 PUSH2 0x1A17 SWAP2 PUSH2 0x1A25 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD26 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x372 JUMP JUMPDEST SWAP2 DUP3 MLOAD PUSH2 0x1A42 DUP4 MLOAD DUP3 EQ PUSH2 0x18FB JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1A4D DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A89 PUSH1 0x40 SWAP3 PUSH2 0x1A81 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x5EB JUMP JUMPDEST ADD SWAP5 PUSH1 0x20 SWAP6 CALLDATASIZE DUP8 DUP6 ADD CALLDATACOPY DUP3 SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x1AAA JUMPI POP POP POP POP POP POP SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1ACC PUSH1 0x1 SWAP4 DUP13 PUSH2 0x1990 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x1AE3 DUP3 DUP7 PUSH2 0x1990 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1AF8 DUP3 DUP9 PUSH2 0x1990 JUMP JUMPDEST MSTORE ADD PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x17E6 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B76 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B47 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B8C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1BE7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BDC JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1C01 DUP3 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1C6D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C1C JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C5A JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x1C4C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 MSTORE POP POP ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x17EE PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x33D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1CBD JUMPI ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x1CC5 PUSH2 0x1960 JUMP JUMPDEST ADD ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DDA JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x1DC6 JUMPI POP PUSH2 0x1CE6 DUP4 PUSH2 0x670 JUMP JUMPDEST SWAP3 PUSH2 0x1CF4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5AA JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1D22 DUP4 PUSH2 0x670 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY JUMPDEST PUSH2 0x1D34 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 LT PUSH2 0x1DB9 JUMPI JUMPDEST ADD DUP1 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x1DB0 PUSH2 0x1DA7 PUSH2 0x1D7F PUSH2 0x1D79 DUP7 DUP7 MOD PUSH2 0x17BD JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 JUMP JUMPDEST DUP7 BYTE SWAP2 DUP8 PUSH2 0x1CAB JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x1D2A JUMP JUMPDEST PUSH2 0x1DC1 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x1D5F JUMP JUMPDEST SWAP3 PUSH2 0x1DD2 PUSH1 0xA SWAP2 PUSH2 0x1AFF JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x1CD8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DE7 DUP2 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1E2B PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI JUMPDEST PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x1E90 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x1F39 DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 PUSH32 0x200D2483757E19728FC8A3511298158C1B74DD131C7BE00C4904E11665B42CD1 DUP9 MSTORE PUSH1 0x40 DUP8 ADD MSTORE AND PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E99 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH16 0x6FCBD8773AF062BBF61161F04CC5D3DC 0x5C 0xFB 0xE4 0xE5 PUSH27 0x400B6A21336C62D8ED64736F6C634300080E003300000000000000 ",
              "sourceMap": "270:3279:6:-:0;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;:::i;:::-;;-1:-1:-1;270:3279:6;-1:-1:-1;270:3279:6;;;-1:-1:-1;270:3279:6;;;-1:-1:-1;270:3279:6;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;;;;;:::i;:::-;;;4722:25:5;;:100;;;;;270:3279:6;4722:176:5;;;;270:3279:6;;;;;;;;;;4722:176:5;270:3279:6;4873:25:5;;;4722:176;;;:100;270:3279:6;4797:25:5;;;-1:-1:-1;4722:100:5;;270:3279:6;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;-1:-1:-1;;270:3279:6;;;;;1903:7;270:3279;;;;:::i;:::-;-1:-1:-1;;1897:25:6;:125;;270:3279;;;1948:47;270:3279;;;1974:20;270:3279;;1974:20;:::i;:::-;270:3279;;1948:47;;;;;270:3279;:::i;:::-;;;:::i;:::-;1948:47;;;;;;;;:::i;:::-;270:3279;;;;;;;:::i;:::-;;;;1897:125;270:3279;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1897:125;;270:3279;;;;1903:7;270:3279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;2869:55:5;270:3279:6;;2877:27:5;;2869:55;:::i;:::-;270:3279:6;;;;2943:10:5;;;:18;:56;;;;270:3279:6;2935:83:5;;;:::i;:::-;-1:-1:-1;3049:13:5;;;;;;270:3279:6;;;3471:297:5;270:3279:6;;;;;;;3411:49:5;2943:10;3411:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;3492:234:5;:14;:234;;3530:16;;;;;;;3471:297;:::i;:::-;270:3279:6;3492:234:5;270:3279:6;;;;3565:85:5;270:3279:6;;3565:85:5;270:3279:6;;;;;;;;;;;3565:85:5;;;;2943:10;270:3279:6;3565:85:5;;;:::i;:::-;;;;;;;;;;3492:234;3565:85;;;3492:234;270:3279:6;;3565:161:5;3471:297;:::i;3565:85::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;3034:13;3093:6;;3198:27;:17;3093:6;3198:13;3093:6;3155:19;3093:6;3155:15;3093:6;;270:3279:6;3093:6:5;3130:10;3093:6;;:::i;:::-;270:3279:6;3130:10:5;;;;:::i;:::-;270:3279:6;3155:15:5;270:3279:6;;2177:9:5;270:3279:6;2177:9:5;270:3279:6;;;2177:9:5;270:3279:6;;;3155:15:5;270:3279:6;;;;;;;;;;3155:19:5;:29;270:3279:6;;;3155:29:5;:::i;:::-;270:3279:6;;;;2177:9:5;270:3279:6;2177:9:5;270:3279:6;;;2177:9:5;270:3279:6;;;3198:17:5;270:3279:6;;;3198:27:5;:::i;:::-;270:3279:6;;;3034:13:5;;2943:56;:10;2935:83;2965:34;;2943:10;2965:22;;270:3279:6;;;;2113:16:5;270:3279:6;;;;;;;2965:22:5;270:3279:6;;;;;;;;;;;;2965:34:5;270:3279:6;;;;;2965:34:5;2943:56;;;;270:3279:6;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:68:0;270:3279:6;1108:6:0;270:3279:6;;719:10:1;1248:23:0;1240:68;:::i;:::-;270:3279:6;;;1771:14;270:3279;;:::i;:::-;;:::i;:::-;-1:-1:-1;270:3279:6;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;;;;;1771:14;270:3279;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;1771:14;270:3279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:14;270:3279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;;;;;1130:6;270:3279;;1116:10;:20;270:3279;;5385:291:5;270:3279:6;1246:6;270:3279;;;;;;;:::i;:::-;-1:-1:-1;270:3279:6;;;;;;5277:17:5;:13;;;270:3279:6;;;;;;;;;;;;5277:17:5;:27;270:3279:6;;;5277:27:5;:::i;:::-;270:3279:6;;;;;;;;;5320:54:5;1116:10:6;5320:54:5;;;;;;270:3279:6;;;;;;;;;;;;;;;5320:54:5;;;;5406:14;:228;;5444:16;;;;;5385:291;:::i;:::-;1276:32:6;:21;1246:6;270:3279;1288:8;;;;:::i;:::-;1246:6;270:3279;;1288:8;270:3279;;;;;;;;;;1276:32;270:3279;;;;;5406:228:5;5479:84;270:3279:6;;;;;;;;;;;;;;;5479:84:5;;;;1116:10:6;270:3279;5479:84:5;;;:::i;:::-;;;;;;;;;;5406:228;5479:84;;;;270:3279:6;;5479:155:5;5385:291;:::i;5479:84::-;;;:::i;:::-;;;270:3279:6;;;;;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;1108:6:0;270:3279:6;;;;;719:10:1;1240:68:0;719:10:1;1248:23:0;;1240:68;:::i;:::-;270:3279:6;1108:6:0;270:3279:6;;;;2410:40:0;;;;;270:3279:6;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;:::i;:::-;;-1:-1:-1;270:3279:6;795:41;270:3279;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;1108:6:0;270:3279:6;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;;;;;;;;;;;1789:49:5;270:3279:6;1806:10:5;;-1:-1:-1;270:3279:6;1789:16:5;270:3279:6;;1789:38:5;270:3279:6;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;1789:38:5;270:3279:6;;;;;;;;;;;;;;1789:49:5;270:3279:6;;;;;;1806:10:5;1854:46;270:3279:6;1806:10:5;1854:46;;270:3279:6;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;-1:-1:-1;270:3279:6;;;;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;2243:15;;:27;2239:54;;270:3279;2325:126;2479:53;2325:126;-1:-1:-1;2325:126:6;;;;;:::i;:::-;2494:25;;:::i;:::-;2479:53;:::i;:::-;270:3279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:29;;;270:3279;;2560:29;;;;;;270:3279;;2560:29;-1:-1:-1;2560:29:6;270:3279;2604:20;;:40;;;;;270:3279;2600:66;;;2677:24;:47;:24;:35;2740:44;2677:24;;;270:3279;;;;2560:29;270:3279;;;;;;;2677:47;270:3279;;;;;;;;;;;;;;2740:44;270:3279;2600:66;270:3279;;2646:20;;;270:3279;;2646:20;;270:3279;;;;;;;;;;;;;2646:20;2604:40;270:3279;;;;;2628:16;;2604:40;;;2560:29;;;:::i;:::-;;;2239:54;270:3279;;2272:21;;;270:3279;;2272:21;;270:3279;;;;;;;;;;;;;2646:20;270:3279;;;;;;-1:-1:-1;;270:3279:6;;;;;;;1187:68:5;270:3279:6;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;270:3279:6;1187:68:5;270:3279:6;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;;1187:68:5;270:3279:6;;;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;2318:285:5;270:3279:6;;;;;;:::i;:::-;;;;;;;2091:10:5;;;:18;:56;;;;270:3279:6;2083:83:5;;;:::i;:::-;2177:19;:15;;;270:3279:6;;2177:9:5;270:3279:6;2177:9:5;270:3279:6;;;2177:9:5;270:3279:6;;;2177:19:5;:29;270:3279:6;;;2177:29:5;:::i;:::-;270:3279:6;;2216:17:5;:13;;;270:3279:6;;2177:9:5;270:3279:6;2177:9:5;270:3279:6;;;2177:9:5;270:3279:6;;;2216:17:5;:27;270:3279:6;;;2216:27:5;:::i;:::-;270:3279:6;;;;;;;;2259:48:5;2091:10;2259:48;;;;;;270:3279:6;;;;;;;;;;;;;;;2259:48:5;;;;-1:-1:-1;;2339:222:5;:14;:222;;2377:16;;;;;;;2318:285;:::i;2339:222::-;270:3279:6;;;;;;;2412:78:5;270:3279:6;;;;;;;;;;;2412:78:5;;;;2091:10;270:3279:6;2412:78:5;;;:::i;2091:56::-;:10;2083:83;2113:34;;2091:10;2113:22;;270:3279:6;;;;2113:16:5;270:3279:6;;;;;;;2113:34:5;2091:56;;;;270:3279:6;;;;;;-1:-1:-1;;270:3279:6;;;;;;;:::i;:::-;;1240:68:0;270:3279:6;1108:6:0;270:3279:6;;719:10:1;1248:23:0;1240:68;:::i;:::-;270:3279:6;;2006:22:0;270:3279:6;;2100:8:0;;;:::i;270:3279:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;270:3279:6;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;2270:187:0;2362:6;270:3279:6;;;;;;;;;;;;2362:6:0;270:3279:6;;2410:40:0;-1:-1:-1;270:3279:6;;2410:40:0;2270:187::o;270:3279:6:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;932:2:2;270:3279:6;;;;932:2:2;270:3279:6;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3781:641:5:-;;270:3279:6;;4018:54:5;270:3279:6;;4026:26:5;;4018:54;:::i;:::-;270:3279:6;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;4083:39:5;4293:13;-1:-1:-1;4308:16:5;;;;;;3781:641;;;;;;;;;:::o;4326:3::-;4373:9;270:3279:6;4373:9:5;270:3279:6;4373:9:5;;;:::i;:::-;270:3279:6;;-1:-1:-1;270:3279:6;-1:-1:-1;270:3279:6;;;-1:-1:-1;270:3279:6;4384:6:5;;;;:::i;:::-;270:3279:6;-1:-1:-1;270:3279:6;;;;-1:-1:-1;270:3279:6;;4349:42:5;;;;:::i;:::-;270:3279:6;;4293:13:5;;270:3279:6;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;270:3279:6;1771:14;270:3279;;;;;;;;1771:14;270:3279;;;;;;;;;;1771:14;270:3279;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;270:3279:6;;;;;1903:7;270:3279;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;1903:7;-1:-1:-1;270:3279:6;;;-1:-1:-1;270:3279:6;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;270:3279:6;;-1:-1:-1;270:3279:6:o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;328:703:2:-;601:10;;597:51;;657:20;610:1;687:14;;;711:75;718:9;;;270:3279:6;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;851:10:2;;;1003:21;;;328:703;:::o;844:150::-;270:3279:6;887:1:2;270:3279:6;;;;;844:150:2;270:3279:6;877:11:2;773:2;;270:3279:6;902:56:2;919:39;926:31;932:24;270:3279:6;;;932:24:2;:::i;:::-;270:3279:6;;;;926:31:2;270:3279:6;;;;;;919:39:2;902:56;;;;;:::i;:::-;;270:3279:6;844:150:2;;;;270:3279:6;;;:::i;:::-;;;711:75:2;743:8;;773:2;743:8;;:::i;:::-;270:3279:6;;711:75:2;;;597:51;270:3279:6;;;;;;:::i;:::-;;;;;;;;;627:10:2;:::o;1321:370:6:-;270:3279;;:::i;:::-;;;;;;1513:22;270:3279;;:::i;:::-;;;;;;1557:25;270:3279;;1444:226;270:3279;1444:226;;270:3279;359:117;270:3279;;;359:117;;270:3279;359:117;;;270:3279;1604:13;359:117;;;270:3279;1647:4;359:117;;;270:3279;359:117;1444:226;;359:117;270:3279;;;;;;;;;;;1321:370;270:3279;;;1417:267;;1321:370;:::o;270:3279::-;;;:::i;:::-;;;2797:267;;270:3279;;2984:59;;;;270:3279;;;;;;;;;;;;;2984:59;;270:3279;;;;;;;;;;;;;;;2957:100;;2797:267;:::o;3070:477::-;;;;;270:3279;;;;;;-1:-1:-1;270:3279:6;3461:6;270:3279;;;-1:-1:-1;270:3279:6;;;;3461:16;;;;:::i;:::-;270:3279;;;;3298:228;270:3279;3298:228;;270:3279;530:121;270:3279;;;530:121;;270:3279;;530:121;;;270:3279;;;530:121;;;270:3279;530:121;;;270:3279;530:121;;;270:3279;530:121;3298:228;;530:121;270:3279;;;;;;;;;;;;;;3271:269;;3070:477;:::o"
            },
            "methodIdentifiers": {
              "NAME()": "a3f4df7e",
              "VERSION()": "ffa1ad74",
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "mint(address,uint256)": "40c10f19",
              "nonces(address)": "7ecebe00",
              "owner()": "8da5cb5b",
              "permitAll(address,address,bool,uint256,uint8,bytes32,bytes32)": "cfa8fb42",
              "renounceOwnership()": "715018a6",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply(uint256)": "bd85b039",
              "transferOwnership(address)": "f2fde38b",
              "updateBaseUri(string)": "39f7e37f",
              "uri(uint256)": "0e89341c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permitAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"base\",\"type\":\"string\"}],\"name\":\"updateBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"nonces(address)\":{\"notice\":\"nonces for permit signature validation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StoreFront.sol\":\"StoreFront\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@rari-capital/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0xd361476aafb22c810c82668395d38506e297d6e1fdc246eaa4ba947d19ba740c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f4bdc39404ddc9636a543b645db8e94f50721cea99ca94f95f29bf230d6130dc\",\"dweb:/ipfs/QmWy1eH7r7oZ7MDUiRaSmEZqSDQxULHFytsjSy7yyBvAk4\"]},\"contracts/StoreFront.sol\":{\"keccak256\":\"0x660fd7664d4addd85c5c23bccd9487c07a40bddfc7db481fbd9b8dcbe8b44721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f29ca911cdd2c66ce2fec76fb1ceec2158ddf528255e2be335a959c686ceec96\",\"dweb:/ipfs/QmW6oPsGVkecB1dreDGRrNeLodBufWvqYvCB84ppizNmHm\"]}},\"version\":1}"
        }
      },
      "contracts/test/TestERC1155.sol": {
        "TestERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100165761127a908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c918262fdd58e146100cb575050806301ffc9a7146100c25780630e89341c146100b9578063156e29f6146100b05780632eb2c2d6146100a75780634e1273f41461009e578063a22cb46514610095578063e985e9c51461008c5763f242432a14610084575b600080fd5b61007f610c78565b5061007f610bdd565b5061007f610aef565b5061007f610a16565b5061007f610739565b5061007f6103c7565b5061007f610327565b5061007f6101c7565b346101325760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013257604060209273ffffffffffffffffffffffffffffffffffffffff61011c610136565b1681528084528181206024358252845220548152f35b5080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361007f57565b503461007f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f5760207fffffffff000000000000000000000000000000000000000000000000000000006004356102268161019d565b167f01ffc9a700000000000000000000000000000000000000000000000000000000811490811561028e575b8115610264575b506040519015158152f35b7f0e89341c0000000000000000000000000000000000000000000000000000000091501438610259565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149150610252565b91908251928382526000905b84821061030f5750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09311610302575b0116010190565b60008582860101526102fb565b906020908180828501015190828601015201906102c4565b503461007f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f576103b66040516040810181811067ffffffffffffffff8211176103ba575b604052600381527f757269000000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906102b8565b0390f35b6103c2610597565b610375565b503461007f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f576104d3610402610136565b602435604435604051610414816105c7565b60008152610455836104468673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b610460838254610f2e565b905573ffffffffffffffffffffffffffffffffffffffff8416938460006040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f623391806104bc898b8360209093929193604081019481520152565b0390a4600092903b6104df57505050501515610fea565b60405160018152602090f35b610542917fffffffff000000000000000000000000000000000000000000000000000000009495602092856040518096819582947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d85523360048601610f5b565b03925af191821561058a575b9161055c575b501614610fea565b61057d915060203d8111610583575b61057581836105f0565b810190610f46565b38610554565b503d61056b565b610592610fdd565b61054e565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176105e357604052565b6105eb610597565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105e357604052565b60209067ffffffffffffffff811161064b575b60051b0190565b610653610597565b610644565b81601f8201121561007f5780359161066f83610631565b9261067d60405194856105f0565b808452602092838086019260051b82010192831161007f578301905b8282106106a7575050505090565b81358152908301908301610699565b81601f8201121561007f5780359067ffffffffffffffff821161072c575b6040519261070a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601856105f0565b8284526020838301011161007f57816000926020809301838601378301015290565b610734610597565b6106d4565b503461007f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610771610136565b610779610159565b9067ffffffffffffffff9060443582811161007f5761079c903690600401610658565b60643583811161007f576107b4903690600401610658565b9260843590811161007f576107cd9036906004016106b6565b8151936107dc8151861461104f565b73ffffffffffffffffffffffffffffffffffffffff808516958633148015610966575b61080890610e82565b60005b8181106108ce5750509561086796811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061084f888b836110f7565b0390a4600093903b6108695750505050501515610fea565b005b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561054295604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e8652336004870161111c565b808761095e610956836104468e6109238b6104468f6108f260019c6108fb926110b4565b519687936110b4565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61092e878254610f17565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b918254610f2e565b90550161080b565b506108086109c76109c03361099b8a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b90506107ff565b90815180825260208080930193019160005b8281106109ee575050505090565b8351855293810193928101926001016109e0565b906020610a139281815201906109ce565b90565b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f5760043567ffffffffffffffff80821161007f573660238301121561007f578160040135610a7281610631565b92610a8060405194856105f0565b81845260209160248386019160051b8301019136831161007f57602401905b828210610ad8578560243586811161007f576103b691610ac6610acc923690600401610658565b90611178565b60405191829182610a02565b838091610ae48461017c565b815201910190610a9f565b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610b27610136565b6024359081151580920361007f5773ffffffffffffffffffffffffffffffffffffffff90336000526001602052610b828160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57602060ff610c6c610c1c610136565b73ffffffffffffffffffffffffffffffffffffffff610c39610159565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461007f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610cb0610136565b610cb8610159565b6084359160443560643567ffffffffffffffff851161007f57610ce26108679536906004016106b6565b9073ffffffffffffffffffffffffffffffffffffffff94858516958633148015610e46575b610d1090610e82565b610d3e856104468873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610d49848254610f17565b9055610d79856104468473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610d84848254610f2e565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180610dc9888b8360209093929193604081019481520152565b0390a4600093903b610de15750505050501515610fea565b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561054295604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e86523360048701610f9b565b50610d10610e7b6109c03361099b8a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9050610d07565b15610e8957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818110610f22570390565b610f2a610ee7565b0390565b81198111610f3a570190565b610f42610ee7565b0190565b9081602091031261007f5751610a138161019d565b909260a09273ffffffffffffffffffffffffffffffffffffffff610a139695168352600060208401526040830152606082015281608082015201906102b8565b9192610a1395949160a09473ffffffffffffffffffffffffffffffffffffffff80921685521660208401526040830152606082015281608082015201906102b8565b506040513d6000823e3d90fd5b15610ff157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561105657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b80518210156110c85760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b909161110e610a13936040845260408401906109ce565b9160208184039101526109ce565b9390610a13959361115c9161116a9473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a08601906109ce565b9084820360608601526109ce565b9160808184039101526102b8565b9182516111878351821461104f565b835161119281610631565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06111ce6040926111c6845195866105f0565b808552610631565b01946020953687850137829560005b8581106111ef57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff6112116001938c6110b4565b5116600052600083528460002061122882866110b4565b516000528352846000205461123d82886110b4565b52016111dd56fea2646970667358221220c847a5a99217e3399b362725ed29bfbb61e94623df71650536918fa887d0f98864736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x127A SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xFDD58E EQ PUSH2 0xCB JUMPI POP POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8C JUMPI PUSH4 0xF242432A EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0xC78 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xBDD JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xAEF JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xA16 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x739 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x3C7 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x327 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x1C7 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x11C PUSH2 0x136 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x7F JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x226 DUP2 PUSH2 0x19D JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x28E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x264 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x259 JUMP JUMPDEST PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x252 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 SWAP1 JUMPDEST DUP5 DUP3 LT PUSH2 0x30F JUMPI POP PUSH1 0x1F DUP5 PUSH1 0x20 SWAP5 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 GT PUSH2 0x302 JUMPI JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE PUSH2 0x2FB JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP1 DUP3 DUP6 ADD ADD MLOAD SWAP1 DUP3 DUP7 ADD ADD MSTORE ADD SWAP1 PUSH2 0x2C4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x3B6 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BA JUMPI JUMPDEST PUSH1 0x40 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x7572690000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x4D3 PUSH2 0x402 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x414 DUP2 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x455 DUP4 PUSH2 0x446 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x460 DUP4 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP4 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0x4BC DUP10 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP3 SWAP1 EXTCODESIZE PUSH2 0x4DF JUMPI POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x542 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 DUP14 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x58A JUMPI JUMPDEST SWAP2 PUSH2 0x55C JUMPI JUMPDEST POP AND EQ PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x57D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x583 JUMPI JUMPDEST PUSH2 0x575 DUP2 DUP4 PUSH2 0x5F0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF46 JUMP JUMPDEST CODESIZE PUSH2 0x554 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x56B JUMP JUMPDEST PUSH2 0x592 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x64B JUMPI JUMPDEST PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x653 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x66F DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 PUSH2 0x67D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x7F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6A7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x699 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x72C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x70A PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x7F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x771 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x779 PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x79C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x7B4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x7CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B6 JUMP JUMPDEST DUP2 MLOAD SWAP4 PUSH2 0x7DC DUP2 MLOAD DUP7 EQ PUSH2 0x104F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x966 JUMPI JUMPDEST PUSH2 0x808 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8CE JUMPI POP POP SWAP6 PUSH2 0x867 SWAP7 DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x84F DUP9 DUP12 DUP4 PUSH2 0x10F7 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x869 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST STOP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x542 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x111C JUMP JUMPDEST DUP1 DUP8 PUSH2 0x95E PUSH2 0x956 DUP4 PUSH2 0x446 DUP15 PUSH2 0x923 DUP12 PUSH2 0x446 DUP16 PUSH2 0x8F2 PUSH1 0x1 SWAP13 PUSH2 0x8FB SWAP3 PUSH2 0x10B4 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP4 PUSH2 0x10B4 JUMP JUMPDEST MLOAD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x92E DUP8 DUP3 SLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x80B JUMP JUMPDEST POP PUSH2 0x808 PUSH2 0x9C7 PUSH2 0x9C0 CALLER PUSH2 0x99B DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9EE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xA13 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x7F JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA72 DUP2 PUSH2 0x631 JUMP JUMPDEST SWAP3 PUSH2 0xA80 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x7F JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAD8 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x3B6 SWAP2 PUSH2 0xAC6 PUSH2 0xACC SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA02 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xAE4 DUP5 PUSH2 0x17C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0xB27 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x7F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB82 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC6C PUSH2 0xC1C PUSH2 0x136 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC39 PUSH2 0x159 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0xCB0 PUSH2 0x136 JUMP JUMPDEST PUSH2 0xCB8 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x7F JUMPI PUSH2 0xCE2 PUSH2 0x867 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0xE46 JUMPI JUMPDEST PUSH2 0xD10 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0x446 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD49 DUP5 DUP3 SLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD79 DUP6 PUSH2 0x446 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD84 DUP5 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0xDC9 DUP9 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0xDE1 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x542 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xD10 PUSH2 0xE7B PUSH2 0x9C0 CALLER PUSH2 0x99B DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD07 JUMP JUMPDEST ISZERO PUSH2 0xE89 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xF22 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xEE7 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xF3A JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xF42 PUSH2 0xEE7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x7F JUMPI MLOAD PUSH2 0xA13 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA13 SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0xA13 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xFF1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E534146455F524543495049454E5400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1056 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C454E4754485F4D49534D415443480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x110E PUSH2 0xA13 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9CE JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0xA13 SWAP6 SWAP4 PUSH2 0x115C SWAP2 PUSH2 0x116A SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9CE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B8 JUMP JUMPDEST SWAP2 DUP3 MLOAD PUSH2 0x1187 DUP4 MLOAD DUP3 EQ PUSH2 0x104F JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1192 DUP2 PUSH2 0x631 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x11CE PUSH1 0x40 SWAP3 PUSH2 0x11C6 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x631 JUMP JUMPDEST ADD SWAP5 PUSH1 0x20 SWAP6 CALLDATASIZE DUP8 DUP6 ADD CALLDATACOPY DUP3 SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x11EF JUMPI POP POP POP POP POP POP SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1211 PUSH1 0x1 SWAP4 DUP13 PUSH2 0x10B4 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x1228 DUP3 DUP7 PUSH2 0x10B4 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x123D DUP3 DUP9 PUSH2 0x10B4 JUMP JUMPDEST MSTORE ADD PUSH2 0x11DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SELFBALANCE 0xA5 0xA9 SWAP3 OR 0xE3 CODECOPY SWAP12 CALLDATASIZE 0x27 0x25 0xED 0x29 0xBF 0xBB PUSH2 0xE946 0x23 0xDF PUSH18 0x650536918FA887D0F98864736F6C63430008 0xE STOP CALLER ",
              "sourceMap": "165:321:7:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 380,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address_4262": {
                  "entryPoint": 310,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_4276": {
                  "entryPoint": 345,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 1624,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 1718,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes4_fromMemory": {
                  "entryPoint": 3910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes": {
                  "entryPoint": 4380,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256_uint256_bytes": {
                  "entryPoint": 3995,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256_uint256_bytes_4273": {
                  "entryPoint": 3931,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 2562,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_array_uint256_dyn": {
                  "entryPoint": 4343,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_memory_ptr": {
                  "entryPoint": 2510,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 696,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 1585,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3886,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3863,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "external_fun_balanceOfBatch": {
                  "entryPoint": 2582,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isApprovedForAll": {
                  "entryPoint": 3037,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 967,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_safeBatchTransferFrom": {
                  "entryPoint": 1849,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_safeTransferFrom": {
                  "entryPoint": 3192,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setApprovalForAll": {
                  "entryPoint": 2799,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_supportsInterface": {
                  "entryPoint": 455,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_uri": {
                  "entryPoint": 807,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 1520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_6627": {
                  "entryPoint": 1479,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_balanceOfBatch": {
                  "entryPoint": 4472,
                  "id": 1187,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_4272": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_4284": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_4285": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_uint256_of_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 4276,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3815,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1431,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_91ac": {
                  "entryPoint": 4074,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c58d": {
                  "entryPoint": 4175,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e7e2": {
                  "entryPoint": 3714,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 4061,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_bytes4": {
                  "entryPoint": 413,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b6000803560e01c918262fdd58e146100cb575050806301ffc9a7146100c25780630e89341c146100b9578063156e29f6146100b05780632eb2c2d6146100a75780634e1273f41461009e578063a22cb46514610095578063e985e9c51461008c5763f242432a14610084575b600080fd5b61007f610c78565b5061007f610bdd565b5061007f610aef565b5061007f610a16565b5061007f610739565b5061007f6103c7565b5061007f610327565b5061007f6101c7565b346101325760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013257604060209273ffffffffffffffffffffffffffffffffffffffff61011c610136565b1681528084528181206024358252845220548152f35b5080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361007f57565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361007f57565b503461007f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f5760207fffffffff000000000000000000000000000000000000000000000000000000006004356102268161019d565b167f01ffc9a700000000000000000000000000000000000000000000000000000000811490811561028e575b8115610264575b506040519015158152f35b7f0e89341c0000000000000000000000000000000000000000000000000000000091501438610259565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149150610252565b91908251928382526000905b84821061030f5750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09311610302575b0116010190565b60008582860101526102fb565b906020908180828501015190828601015201906102c4565b503461007f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f576103b66040516040810181811067ffffffffffffffff8211176103ba575b604052600381527f757269000000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906102b8565b0390f35b6103c2610597565b610375565b503461007f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f576104d3610402610136565b602435604435604051610414816105c7565b60008152610455836104468673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b610460838254610f2e565b905573ffffffffffffffffffffffffffffffffffffffff8416938460006040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f623391806104bc898b8360209093929193604081019481520152565b0390a4600092903b6104df57505050501515610fea565b60405160018152602090f35b610542917fffffffff000000000000000000000000000000000000000000000000000000009495602092856040518096819582947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d85523360048601610f5b565b03925af191821561058a575b9161055c575b501614610fea565b61057d915060203d8111610583575b61057581836105f0565b810190610f46565b38610554565b503d61056b565b610592610fdd565b61054e565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176105e357604052565b6105eb610597565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105e357604052565b60209067ffffffffffffffff811161064b575b60051b0190565b610653610597565b610644565b81601f8201121561007f5780359161066f83610631565b9261067d60405194856105f0565b808452602092838086019260051b82010192831161007f578301905b8282106106a7575050505090565b81358152908301908301610699565b81601f8201121561007f5780359067ffffffffffffffff821161072c575b6040519261070a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601856105f0565b8284526020838301011161007f57816000926020809301838601378301015290565b610734610597565b6106d4565b503461007f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610771610136565b610779610159565b9067ffffffffffffffff9060443582811161007f5761079c903690600401610658565b60643583811161007f576107b4903690600401610658565b9260843590811161007f576107cd9036906004016106b6565b8151936107dc8151861461104f565b73ffffffffffffffffffffffffffffffffffffffff808516958633148015610966575b61080890610e82565b60005b8181106108ce5750509561086796811680966040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061084f888b836110f7565b0390a4600093903b6108695750505050501515610fea565b005b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561054295604051968795869485937fbc197c81000000000000000000000000000000000000000000000000000000009d8e8652336004870161111c565b808761095e610956836104468e6109238b6104468f6108f260019c6108fb926110b4565b519687936110b4565b519873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61092e878254610f17565b905573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b918254610f2e565b90550161080b565b506108086109c76109c03361099b8a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b90506107ff565b90815180825260208080930193019160005b8281106109ee575050505090565b8351855293810193928101926001016109e0565b906020610a139281815201906109ce565b90565b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f5760043567ffffffffffffffff80821161007f573660238301121561007f578160040135610a7281610631565b92610a8060405194856105f0565b81845260209160248386019160051b8301019136831161007f57602401905b828210610ad8578560243586811161007f576103b691610ac6610acc923690600401610658565b90611178565b60405191829182610a02565b838091610ae48461017c565b815201910190610a9f565b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610b27610136565b6024359081151580920361007f5773ffffffffffffffffffffffffffffffffffffffff90336000526001602052610b828160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461007f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57602060ff610c6c610c1c610136565b73ffffffffffffffffffffffffffffffffffffffff610c39610159565b91166000526001845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b503461007f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007f57610cb0610136565b610cb8610159565b6084359160443560643567ffffffffffffffff851161007f57610ce26108679536906004016106b6565b9073ffffffffffffffffffffffffffffffffffffffff94858516958633148015610e46575b610d1090610e82565b610d3e856104468873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610d49848254610f17565b9055610d79856104468473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b610d84848254610f2e565b9055811680966040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180610dc9888b8360209093929193604081019481520152565b0390a4600093903b610de15750505050501515610fea565b917fffffffff0000000000000000000000000000000000000000000000000000000094956020928561054295604051968795869485937ff23a6e61000000000000000000000000000000000000000000000000000000009d8e86523360048701610f9b565b50610d10610e7b6109c03361099b8a73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9050610d07565b15610e8957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818110610f22570390565b610f2a610ee7565b0390565b81198111610f3a570190565b610f42610ee7565b0190565b9081602091031261007f5751610a138161019d565b909260a09273ffffffffffffffffffffffffffffffffffffffff610a139695168352600060208401526040830152606082015281608082015201906102b8565b9192610a1395949160a09473ffffffffffffffffffffffffffffffffffffffff80921685521660208401526040830152606082015281608082015201906102b8565b506040513d6000823e3d90fd5b15610ff157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561105657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b80518210156110c85760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b909161110e610a13936040845260408401906109ce565b9160208184039101526109ce565b9390610a13959361115c9161116a9473ffffffffffffffffffffffffffffffffffffffff809216885216602087015260a0604087015260a08601906109ce565b9084820360608601526109ce565b9160808184039101526102b8565b9182516111878351821461104f565b835161119281610631565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06111ce6040926111c6845195866105f0565b808552610631565b01946020953687850137829560005b8581106111ef57505050505050909150565b8073ffffffffffffffffffffffffffffffffffffffff6112116001938c6110b4565b5116600052600083528460002061122882866110b4565b516000528352846000205461123d82886110b4565b52016111dd56fea2646970667358221220c847a5a99217e3399b362725ed29bfbb61e94623df71650536918fa887d0f98864736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xFDD58E EQ PUSH2 0xCB JUMPI POP POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8C JUMPI PUSH4 0xF242432A EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0xC78 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xBDD JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xAEF JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0xA16 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x739 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x3C7 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x327 JUMP JUMPDEST POP PUSH2 0x7F PUSH2 0x1C7 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x11C PUSH2 0x136 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7F JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x7F JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x226 DUP2 PUSH2 0x19D JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x28E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x264 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x259 JUMP JUMPDEST PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x252 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 SWAP1 JUMPDEST DUP5 DUP3 LT PUSH2 0x30F JUMPI POP PUSH1 0x1F DUP5 PUSH1 0x20 SWAP5 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 GT PUSH2 0x302 JUMPI JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE PUSH2 0x2FB JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP1 DUP3 DUP6 ADD ADD MLOAD SWAP1 DUP3 DUP7 ADD ADD MSTORE ADD SWAP1 PUSH2 0x2C4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x3B6 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3BA JUMPI JUMPDEST PUSH1 0x40 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x7572690000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x4D3 PUSH2 0x402 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x414 DUP2 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x455 DUP4 PUSH2 0x446 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x460 DUP4 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP4 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0x4BC DUP10 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP3 SWAP1 EXTCODESIZE PUSH2 0x4DF JUMPI POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x542 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 DUP14 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x58A JUMPI JUMPDEST SWAP2 PUSH2 0x55C JUMPI JUMPDEST POP AND EQ PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x57D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x583 JUMPI JUMPDEST PUSH2 0x575 DUP2 DUP4 PUSH2 0x5F0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF46 JUMP JUMPDEST CODESIZE PUSH2 0x554 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x56B JUMP JUMPDEST PUSH2 0x592 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x64B JUMPI JUMPDEST PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x653 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x66F DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 PUSH2 0x67D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x7F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6A7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x699 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x72C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x70A PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x7F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x771 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x779 PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x79C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x7B4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x7CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B6 JUMP JUMPDEST DUP2 MLOAD SWAP4 PUSH2 0x7DC DUP2 MLOAD DUP7 EQ PUSH2 0x104F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0x966 JUMPI JUMPDEST PUSH2 0x808 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8CE JUMPI POP POP SWAP6 PUSH2 0x867 SWAP7 DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x84F DUP9 DUP12 DUP4 PUSH2 0x10F7 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0x869 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST STOP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x542 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x111C JUMP JUMPDEST DUP1 DUP8 PUSH2 0x95E PUSH2 0x956 DUP4 PUSH2 0x446 DUP15 PUSH2 0x923 DUP12 PUSH2 0x446 DUP16 PUSH2 0x8F2 PUSH1 0x1 SWAP13 PUSH2 0x8FB SWAP3 PUSH2 0x10B4 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP4 PUSH2 0x10B4 JUMP JUMPDEST MLOAD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x92E DUP8 DUP3 SLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x80B JUMP JUMPDEST POP PUSH2 0x808 PUSH2 0x9C7 PUSH2 0x9C0 CALLER PUSH2 0x99B DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9EE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xA13 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x7F JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x7F JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA72 DUP2 PUSH2 0x631 JUMP JUMPDEST SWAP3 PUSH2 0xA80 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5F0 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x7F JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAD8 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x7F JUMPI PUSH2 0x3B6 SWAP2 PUSH2 0xAC6 PUSH2 0xACC SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA02 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xAE4 DUP5 PUSH2 0x17C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0xB27 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x7F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB82 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC6C PUSH2 0xC1C PUSH2 0x136 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC39 PUSH2 0x159 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0xCB0 PUSH2 0x136 JUMP JUMPDEST PUSH2 0xCB8 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x7F JUMPI PUSH2 0xCE2 PUSH2 0x867 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6B6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP6 AND SWAP6 DUP7 CALLER EQ DUP1 ISZERO PUSH2 0xE46 JUMPI JUMPDEST PUSH2 0xD10 SWAP1 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0x446 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD49 DUP5 DUP3 SLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD79 DUP6 PUSH2 0x446 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD84 DUP5 DUP3 SLOAD PUSH2 0xF2E JUMP JUMPDEST SWAP1 SSTORE DUP2 AND DUP1 SWAP7 PUSH1 0x40 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 CALLER SWAP2 DUP1 PUSH2 0xDC9 DUP9 DUP12 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP4 SWAP1 EXTCODESIZE PUSH2 0xDE1 JUMPI POP POP POP POP POP ISZERO ISZERO PUSH2 0xFEA JUMP JUMPDEST SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP6 PUSH1 0x20 SWAP3 DUP6 PUSH2 0x542 SWAP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP14 DUP15 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xD10 PUSH2 0xE7B PUSH2 0x9C0 CALLER PUSH2 0x99B DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD07 JUMP JUMPDEST ISZERO PUSH2 0xE89 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xF22 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xEE7 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xF3A JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xF42 PUSH2 0xEE7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x7F JUMPI MLOAD PUSH2 0xA13 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA13 SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0xA13 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xFF1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E534146455F524543495049454E5400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1056 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C454E4754485F4D49534D415443480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x110E PUSH2 0xA13 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9CE JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0xA13 SWAP6 SWAP4 PUSH2 0x115C SWAP2 PUSH2 0x116A SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9CE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B8 JUMP JUMPDEST SWAP2 DUP3 MLOAD PUSH2 0x1187 DUP4 MLOAD DUP3 EQ PUSH2 0x104F JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1192 DUP2 PUSH2 0x631 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x11CE PUSH1 0x40 SWAP3 PUSH2 0x11C6 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x631 JUMP JUMPDEST ADD SWAP5 PUSH1 0x20 SWAP6 CALLDATASIZE DUP8 DUP6 ADD CALLDATACOPY DUP3 SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x11EF JUMPI POP POP POP POP POP POP SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1211 PUSH1 0x1 SWAP4 DUP13 PUSH2 0x10B4 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x1228 DUP3 DUP7 PUSH2 0x10B4 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x123D DUP3 DUP9 PUSH2 0x10B4 JUMP JUMPDEST MSTORE ADD PUSH2 0x11DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SELFBALANCE 0xA5 0xA9 SWAP3 OR 0xE3 CODECOPY SWAP12 CALLDATASIZE 0x27 0x25 0xED 0x29 0xBF 0xBB PUSH2 0xE946 0x23 0xDF PUSH18 0x650536918FA887D0F98864736F6C63430008 0xE STOP CALLER ",
              "sourceMap": "165:321:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4722:25:5;;:100;;;;;165:321:7;4722:176:5;;;;165:321:7;;;;;;;;;;4722:176:5;165:321:7;4873:25:5;;;4722:176;;;:100;165:321:7;4797:25:5;;;-1:-1:-1;4722:100:5;;165:321:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;5385:291:5;165:321:7;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;165:321:7;;5277:17:5;:13;;;165:321:7;;-1:-1:-1;165:321:7;-1:-1:-1;165:321:7;;;-1:-1:-1;165:321:7;;;5277:13:5;165:321:7;;;;;;;;;;5277:17:5;:27;165:321:7;;;5277:27:5;:::i;:::-;165:321:7;;;;;;;-1:-1:-1;165:321:7;;5320:54:5;5335:10;5320:54;;;;;;165:321:7;;;;;;;;;;;;;;;5320:54:5;;;;-1:-1:-1;;5406:228:5;:14;:228;;5444:16;;;;;;5385:291;:::i;:::-;165:321:7;;371:4;165:321;;;;;5406:228:5;5479:84;165:321:7;;;;;;;;;;;;;;;;5479:84:5;;;;5335:10;165:321:7;5479:84:5;;;:::i;:::-;;;;;;;;;;5406:228;5479:84;;;5406:228;165:321:7;;5479:155:5;5385:291;:::i;5479:84::-;;;;165:321:7;5479:84:5;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;165:321:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;165:321:7;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;2869:55:5;165:321:7;;2877:27:5;;2869:55;:::i;:::-;165:321:7;;;;2943:10:5;;;:18;:56;;;;165:321:7;2935:83:5;;;:::i;:::-;-1:-1:-1;3049:13:5;;;;;;165:321:7;;;3471:297:5;165:321:7;;;;;;;3411:49:5;2943:10;3411:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;3492:234:5;:14;:234;;3530:16;;;;;;;3471:297;:::i;:::-;165:321:7;3492:234:5;165:321:7;;;;3565:85:5;165:321:7;;3565:85:5;165:321:7;;;;;;;;;;;3565:85:5;;;;2943:10;165:321:7;3565:85:5;;;:::i;3034:13::-;3093:6;;3198:27;:17;3093:6;3198:13;3093:6;3155:19;3093:6;3155:15;3093:6;;165:321:7;3093:6:5;3130:10;3093:6;;:::i;:::-;165:321:7;3130:10:5;;;;:::i;:::-;165:321:7;3155:15:5;165:321:7;;2177:9:5;165:321:7;2177:9:5;165:321:7;;;2177:9:5;165:321:7;;;3155:19:5;:29;165:321:7;;;3155:29:5;:::i;:::-;165:321:7;;;;2177:9:5;165:321:7;2177:9:5;165:321:7;;;2177:9:5;165:321:7;;;3198:17:5;165:321:7;;;3198:27:5;:::i;:::-;165:321:7;;;3034:13:5;;2943:56;:10;2935:83;2965:34;;2943:10;2965:22;;165:321:7;;;;2113:16:5;165:321:7;;;;;;;2965:22:5;165:321:7;;;;;;;;;;;;2965:34:5;165:321:7;;;;;2965:34:5;2943:56;;;;165:321:7;;;;;;;;;;;;;;;-1:-1:-1;165:321:7;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1806:10:5;;-1:-1:-1;165:321:7;1789:16:5;165:321:7;;1789:38:5;165:321:7;;-1:-1:-1;165:321:7;;;;;;;;;;;;;1789:38:5;165:321:7;;;;;;;;;;;;;;;;1806:10:5;1854:46;165:321:7;1806:10:5;1854:46;;165:321:7;;;;;;;;;;;;;;;1187:68:5;165:321:7;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;165:321:7;1187:68:5;165:321:7;;;-1:-1:-1;165:321:7;;;;;;;;;;;;;1187:68:5;165:321:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;2318:285:5;165:321:7;;;;;;:::i;:::-;;;;;;;2091:10:5;;;:18;:56;;;;165:321:7;2083:83:5;;;:::i;:::-;2177:19;:15;;;165:321:7;;2177:9:5;165:321:7;2177:9:5;165:321:7;;;2177:9:5;165:321:7;;;2177:19:5;:29;165:321:7;;;2177:29:5;:::i;:::-;165:321:7;;2216:17:5;:13;;;165:321:7;;2177:9:5;165:321:7;2177:9:5;165:321:7;;;2177:9:5;165:321:7;;;2216:17:5;:27;165:321:7;;;2216:27:5;:::i;:::-;165:321:7;;;;;;;;2259:48:5;2091:10;2259:48;;;;;;165:321:7;;;;;;;;;;;;;;;2259:48:5;;;;-1:-1:-1;;2339:222:5;:14;:222;;2377:16;;;;;;;2318:285;:::i;2339:222::-;165:321:7;;;;;;;2412:78:5;165:321:7;;;;;;;;;;;2412:78:5;;;;2091:10;165:321:7;2412:78:5;;;:::i;2091:56::-;:10;2083:83;2113:34;;2091:10;2113:22;;165:321:7;;;;2113:16:5;165:321:7;;;;;;;2113:34:5;2091:56;;;;165:321:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3781:641:5:-;;165:321:7;;4018:54:5;165:321:7;;4026:26:5;;4018:54;:::i;:::-;165:321:7;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;4083:39:5;4293:13;-1:-1:-1;4308:16:5;;;;;;3781:641;;;;;;;;;:::o;4326:3::-;4373:9;165:321:7;4373:9:5;165:321:7;4373:9:5;;;:::i;:::-;165:321:7;;-1:-1:-1;165:321:7;-1:-1:-1;165:321:7;;;-1:-1:-1;165:321:7;4384:6:5;;;;:::i;:::-;165:321:7;-1:-1:-1;165:321:7;;;;-1:-1:-1;165:321:7;;4349:42:5;;;;:::i;:::-;165:321:7;;4293:13:5;"
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "mint(address,uint256,uint256)": "156e29f6",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "uri(uint256)": "0e89341c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestERC1155.sol\":\"TestERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0xd361476aafb22c810c82668395d38506e297d6e1fdc246eaa4ba947d19ba740c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f4bdc39404ddc9636a543b645db8e94f50721cea99ca94f95f29bf230d6130dc\",\"dweb:/ipfs/QmWy1eH7r7oZ7MDUiRaSmEZqSDQxULHFytsjSy7yyBvAk4\"]},\"contracts/test/TestERC1155.sol\":{\"keccak256\":\"0x6e17ab5b7ef74966be7ef9cf6e2370e2bb707b4ff25b89b196617a2a5b7be9b2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b801f90d48d6d53e36f22b55dc9107b2aca99b3789500d784223b0a1939b8c63\",\"dweb:/ipfs/QmR3ARvWZE1gCNLmf1yLgMqXzGNaroWjkemde7jN7HcWRk\"]}},\"version\":1}"
        }
      },
      "contracts/zones/order-check/OrderCheckZone.sol": {
        "OrderCheckZone": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                }
              ],
              "name": "isValidOrder",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "validOrderMagicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint120",
                      "name": "numerator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "uint120",
                      "name": "denominator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct AdvancedOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "priorOrderHashes",
                  "type": "bytes32[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "criteriaProof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct CriteriaResolver[]",
                  "name": "criteriaResolvers",
                  "type": "tuple[]"
                }
              ],
              "name": "isValidOrderIncludingExtraData",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "validOrderMagicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523461001657610ad2908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80630e1d31dc146101145763331315701461003357600080fd5b3461010d577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060a08236011261010d576024359161007183610184565b6044359167ffffffffffffffff918284116101105760a090843603011261010d57606435828111610110576100aa9036906004016101a7565b505060843591821161010d576101096100d685856100cb36600488016101a7565b505060040190610490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b0390f35b80fd5b5080fd5b503461010d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010d5761014f602435610184565b61015a604435610184565b7f0e1d31dc0000000000000000000000000000000000000000000000000000000060805260206080f35b73ffffffffffffffffffffffffffffffffffffffff8116036101a257565b600080fd5b9181601f840112156101a25782359167ffffffffffffffff83116101a2576020808501948460051b0101116101a257565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761024957604052565b6102516101d8565b604052565b9080601f830112156101a25781359067ffffffffffffffff82116102be575b8160051b6040519360209361028c85840187610208565b855283808601928201019283116101a2578301905b8282106102af575050505090565b813581529083019083016102a1565b6102c66101d8565b610275565b6080818303126101a25780359267ffffffffffffffff926020808401358581116101a257840182601f820112156101a257803591868311610379575b6040519261033c827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185610208565b808452848282850101116101a25780826000940183860137830101529360408401359081116101a257606091610373918501610256565b92013590565b6103816101d8565b610307565b9035907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1813603018212156101a2570190565b356103c381610184565b90565b156103cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f657874726144617461206e6f74207369676e6564206279206f666665726572006044820152fd5b1561043257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152fd5b9060808101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101a25781019182359067ffffffffffffffff82116101a257602084019082360382136101a2576105586105cb9473ffffffffffffffffffffffffffffffffffffffff61055061053761052061053297602061052b9a6105d09d0101906102cb565b99929a91909a6105f4565b9480610386565b6103b9565b73ffffffffffffffffffffffffffffffffffffffff1690565b9116146103c6565b6040516105c2816105966020820194857fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060149260601b1681520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610208565b51902091610a16565b61042b565b7f0e1d31dc0000000000000000000000000000000000000000000000000000000090565b6103c39161060191610861565b919091610642565b6005111561061357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61064b81610609565b806106535750565b61065c81610609565b600181036106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6106cc81610609565b60028103610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b61073c81610609565b600381036107c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b806107d5600492610609565b146107dc57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b81516041810361088e57509061088a916020820151906060604084015193015160001a90610953565b9091565b60400361090c57816040602061088a9401519101519160ff601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85831c957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe487116108ff575b1694011690610953565b610907610916565b6108f5565b5050600090600290565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506040513d6000823e3d90fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610a0a5760ff16601b811415806109ff575b6109f3579160809493916020936040519384528484015260408301526060820152600093849182805260015afa156109e6575b815173ffffffffffffffffffffffffffffffffffffffff8116156109e0579190565b50600190565b6109ee610946565b6109be565b50505050600090600490565b50601c81141561098b565b50505050600090600390565b9091906000915b8151831015610a95576020600584901b830181015191828111610a83576000525260016040600020925b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a76575b0191610a1d565b610a7e610916565b610a6f565b91600052526001604060002092610a47565b915050149056fea2646970667358221220d00a38bfad2b5ada729d7cc76b30349ff1b9e03774eefa834d40aa1dfd2b27ad64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xAD2 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1D31DC EQ PUSH2 0x114 JUMPI PUSH4 0x33131570 EQ PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP1 PUSH1 0xA0 DUP3 CALLDATASIZE ADD SLT PUSH2 0x10D JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x71 DUP4 PUSH2 0x184 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0x110 JUMPI PUSH1 0xA0 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x10D JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x110 JUMPI PUSH2 0xAA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A7 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x10D JUMPI PUSH2 0x109 PUSH2 0xD6 DUP6 DUP6 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 DUP9 ADD PUSH2 0x1A7 JUMP JUMPDEST POP POP PUSH1 0x4 ADD SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x10D JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x10D JUMPI PUSH2 0x14F PUSH1 0x24 CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x44 CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH32 0xE1D31DC00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A2 JUMPI JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x249 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x251 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2BE JUMPI JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x28C DUP6 DUP5 ADD DUP8 PUSH2 0x208 JUMP JUMPDEST DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2AF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x1A2 JUMPI DUP5 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP2 DUP7 DUP4 GT PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x33C DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP6 PUSH2 0x208 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP3 DUP3 DUP6 ADD ADD GT PUSH2 0x1A2 JUMPI DUP1 DUP3 PUSH1 0x0 SWAP5 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP4 PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1A2 JUMPI PUSH1 0x60 SWAP2 PUSH2 0x373 SWAP2 DUP6 ADD PUSH2 0x256 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A2 JUMPI ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3C3 DUP2 PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x657874726144617461206E6F74207369676E6564206279206F66666572657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x432 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 ADD SWAP2 DUP3 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP5 ADD SWAP1 DUP3 CALLDATASIZE SUB DUP3 SGT PUSH2 0x1A2 JUMPI PUSH2 0x558 PUSH2 0x5CB SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x550 PUSH2 0x537 PUSH2 0x520 PUSH2 0x532 SWAP8 PUSH1 0x20 PUSH2 0x52B SWAP11 PUSH2 0x5D0 SWAP14 ADD ADD SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP10 SWAP3 SWAP11 SWAP2 SWAP1 SWAP11 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 DUP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 AND EQ PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 DUP2 PUSH2 0x596 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x14 SWAP3 PUSH1 0x60 SHL AND DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x208 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH32 0xE1D31DC00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH2 0x3C3 SWAP2 PUSH2 0x601 SWAP2 PUSH2 0x861 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x613 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x64B DUP2 PUSH2 0x609 JUMP JUMPDEST DUP1 PUSH2 0x653 JUMPI POP JUMP JUMPDEST PUSH2 0x65C DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7D5 PUSH1 0x4 SWAP3 PUSH2 0x609 JUMP JUMPDEST EQ PUSH2 0x7DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x41 DUP2 SUB PUSH2 0x88E JUMPI POP SWAP1 PUSH2 0x88A SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x953 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 SUB PUSH2 0x90C JUMPI DUP2 PUSH1 0x40 PUSH1 0x20 PUSH2 0x88A SWAP5 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0xFF PUSH1 0x1B PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP4 SHR SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE4 DUP8 GT PUSH2 0x8FF JUMPI JUMPDEST AND SWAP5 ADD AND SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0xA0A JUMPI PUSH1 0xFF AND PUSH1 0x1B DUP2 EQ ISZERO DUP1 PUSH2 0x9FF JUMPI JUMPDEST PUSH2 0x9F3 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x9E6 JUMPI JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x9E0 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x946 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x1C DUP2 EQ ISZERO PUSH2 0x98B JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x20 PUSH1 0x5 DUP5 SWAP1 SHL DUP4 ADD DUP2 ADD MLOAD SWAP2 DUP3 DUP2 GT PUSH2 0xA83 JUMPI PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA76 JUMPI JUMPDEST ADD SWAP2 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x916 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 EXP CODESIZE 0xBF 0xAD 0x2B GAS 0xDA PUSH19 0x9D7CC76B30349FF1B9E03774EEFA834D40AA1D REVERT 0x2B 0x27 0xAD PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "587:3434:8:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_bytes32_dyn": {
                  "entryPoint": 598,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_bytes32_dyn_calldata": {
                  "entryPoint": 423,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bytes32t_bytest_array_bytes32_dynt_bytes32": {
                  "entryPoint": 715,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encode_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_packed_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_520d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_8522": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "access_calldata_tail_struct_OrderParameters_calldata": {
                  "entryPoint": 902,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_isValidOrderIncludingExtraData": {
                  "entryPoint": 1168,
                  "id": 1982,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_recover": {
                  "entryPoint": 1524,
                  "id": 485,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_throwError": {
                  "entryPoint": 1602,
                  "id": 393,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_tryRecover": {
                  "entryPoint": 2387,
                  "id": 643,
                  "parameterSlots": 4,
                  "returnSlots": 2
                },
                "fun_tryRecover_458": {
                  "entryPoint": 2145,
                  "id": 458,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_verify": {
                  "entryPoint": 2582,
                  "id": 760,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2326,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 472,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_calldatat_address": {
                  "entryPoint": 953,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_baa7": {
                  "entryPoint": 966,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_dbb8": {
                  "entryPoint": 1067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 2374,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_assert_enum_RecoverError": {
                  "entryPoint": 1545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 388,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c80630e1d31dc146101145763331315701461003357600080fd5b3461010d577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060a08236011261010d576024359161007183610184565b6044359167ffffffffffffffff918284116101105760a090843603011261010d57606435828111610110576100aa9036906004016101a7565b505060843591821161010d576101096100d685856100cb36600488016101a7565b505060040190610490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b0390f35b80fd5b5080fd5b503461010d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010d5761014f602435610184565b61015a604435610184565b7f0e1d31dc0000000000000000000000000000000000000000000000000000000060805260206080f35b73ffffffffffffffffffffffffffffffffffffffff8116036101a257565b600080fd5b9181601f840112156101a25782359167ffffffffffffffff83116101a2576020808501948460051b0101116101a257565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761024957604052565b6102516101d8565b604052565b9080601f830112156101a25781359067ffffffffffffffff82116102be575b8160051b6040519360209361028c85840187610208565b855283808601928201019283116101a2578301905b8282106102af575050505090565b813581529083019083016102a1565b6102c66101d8565b610275565b6080818303126101a25780359267ffffffffffffffff926020808401358581116101a257840182601f820112156101a257803591868311610379575b6040519261033c827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185610208565b808452848282850101116101a25780826000940183860137830101529360408401359081116101a257606091610373918501610256565b92013590565b6103816101d8565b610307565b9035907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1813603018212156101a2570190565b356103c381610184565b90565b156103cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f657874726144617461206e6f74207369676e6564206279206f666665726572006044820152fd5b1561043257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152fd5b9060808101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101a25781019182359067ffffffffffffffff82116101a257602084019082360382136101a2576105586105cb9473ffffffffffffffffffffffffffffffffffffffff61055061053761052061053297602061052b9a6105d09d0101906102cb565b99929a91909a6105f4565b9480610386565b6103b9565b73ffffffffffffffffffffffffffffffffffffffff1690565b9116146103c6565b6040516105c2816105966020820194857fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060149260601b1681520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610208565b51902091610a16565b61042b565b7f0e1d31dc0000000000000000000000000000000000000000000000000000000090565b6103c39161060191610861565b919091610642565b6005111561061357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61064b81610609565b806106535750565b61065c81610609565b600181036106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6106cc81610609565b60028103610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b61073c81610609565b600381036107c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b806107d5600492610609565b146107dc57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b81516041810361088e57509061088a916020820151906060604084015193015160001a90610953565b9091565b60400361090c57816040602061088a9401519101519160ff601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85831c957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe487116108ff575b1694011690610953565b610907610916565b6108f5565b5050600090600290565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506040513d6000823e3d90fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610a0a5760ff16601b811415806109ff575b6109f3579160809493916020936040519384528484015260408301526060820152600093849182805260015afa156109e6575b815173ffffffffffffffffffffffffffffffffffffffff8116156109e0579190565b50600190565b6109ee610946565b6109be565b50505050600090600490565b50601c81141561098b565b50505050600090600390565b9091906000915b8151831015610a95576020600584901b830181015191828111610a83576000525260016040600020925b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a76575b0191610a1d565b610a7e610916565b610a6f565b91600052526001604060002092610a47565b915050149056fea2646970667358221220d00a38bfad2b5ada729d7cc76b30349ff1b9e03774eefa834d40aa1dfd2b27ad64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1D31DC EQ PUSH2 0x114 JUMPI PUSH4 0x33131570 EQ PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP1 PUSH1 0xA0 DUP3 CALLDATASIZE ADD SLT PUSH2 0x10D JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x71 DUP4 PUSH2 0x184 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0x110 JUMPI PUSH1 0xA0 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x10D JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x110 JUMPI PUSH2 0xAA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1A7 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x10D JUMPI PUSH2 0x109 PUSH2 0xD6 DUP6 DUP6 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 DUP9 ADD PUSH2 0x1A7 JUMP JUMPDEST POP POP PUSH1 0x4 ADD SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x10D JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x10D JUMPI PUSH2 0x14F PUSH1 0x24 CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x44 CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH32 0xE1D31DC00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A2 JUMPI JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x249 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x251 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2BE JUMPI JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x28C DUP6 DUP5 ADD DUP8 PUSH2 0x208 JUMP JUMPDEST DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2AF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x1A2 JUMPI DUP5 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP2 DUP7 DUP4 GT PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x33C DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP6 PUSH2 0x208 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP3 DUP3 DUP6 ADD ADD GT PUSH2 0x1A2 JUMPI DUP1 DUP3 PUSH1 0x0 SWAP5 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP4 PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1A2 JUMPI PUSH1 0x60 SWAP2 PUSH2 0x373 SWAP2 DUP6 ADD PUSH2 0x256 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A2 JUMPI ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3C3 DUP2 PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x657874726144617461206E6F74207369676E6564206279206F66666572657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x432 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 ADD SWAP2 DUP3 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP5 ADD SWAP1 DUP3 CALLDATASIZE SUB DUP3 SGT PUSH2 0x1A2 JUMPI PUSH2 0x558 PUSH2 0x5CB SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x550 PUSH2 0x537 PUSH2 0x520 PUSH2 0x532 SWAP8 PUSH1 0x20 PUSH2 0x52B SWAP11 PUSH2 0x5D0 SWAP14 ADD ADD SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP10 SWAP3 SWAP11 SWAP2 SWAP1 SWAP11 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 DUP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 AND EQ PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 DUP2 PUSH2 0x596 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x14 SWAP3 PUSH1 0x60 SHL AND DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x208 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH32 0xE1D31DC00000000000000000000000000000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH2 0x3C3 SWAP2 PUSH2 0x601 SWAP2 PUSH2 0x861 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x613 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x64B DUP2 PUSH2 0x609 JUMP JUMPDEST DUP1 PUSH2 0x653 JUMPI POP JUMP JUMPDEST PUSH2 0x65C DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7D5 PUSH1 0x4 SWAP3 PUSH2 0x609 JUMP JUMPDEST EQ PUSH2 0x7DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x41 DUP2 SUB PUSH2 0x88E JUMPI POP SWAP1 PUSH2 0x88A SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x953 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 SUB PUSH2 0x90C JUMPI DUP2 PUSH1 0x40 PUSH1 0x20 PUSH2 0x88A SWAP5 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0xFF PUSH1 0x1B PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP4 SHR SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE4 DUP8 GT PUSH2 0x8FF JUMPI JUMPDEST AND SWAP5 ADD AND SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0xA0A JUMPI PUSH1 0xFF AND PUSH1 0x1B DUP2 EQ ISZERO DUP1 PUSH2 0x9FF JUMPI JUMPDEST PUSH2 0x9F3 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x9E6 JUMPI JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x9E0 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x946 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x1C DUP2 EQ ISZERO PUSH2 0x98B JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x20 PUSH1 0x5 DUP5 SWAP1 SHL DUP4 ADD DUP2 ADD MLOAD SWAP2 DUP3 DUP2 GT PUSH2 0xA83 JUMPI PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA76 JUMPI JUMPDEST ADD SWAP2 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x916 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 EXP CODESIZE 0xBF 0xAD 0x2B GAS 0xDA PUSH19 0x9D7CC76B30349FF1B9E03774EEFA834D40AA1D REVERT 0x2B 0x27 0xAD PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "587:3434:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;1494:35;587:3434;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;587:3434:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;2475:1544;;3255:15;;;587:3434;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3527:112;3786:51;3244:65;587:3434;3548:34;3558:24;3244:65;3558:16;3244:65;587:3434;3471:46;3244:65;3765:111;3244:65;;;;;:::i;:::-;3471:46;;;;;;;:::i;:::-;3558:16;;;:::i;:::-;:24;:::i;:::-;587:3434;;;;3548:34;587:3434;;3548:34;3527:112;:::i;:::-;587:3434;;3730:24;;;587:3434;3730:24;;;;587:3434;;;;;;;;;;;3730:24;;;;;;;;;:::i;:::-;587:3434;3720:35;;3786:51;;:::i;:::-;3765:111;:::i;:::-;3977:35;2475:1544;:::o;4308:227:3:-;4496:5;4308:227;4447:27;4308:227;4447:27;:::i;:::-;4496:5;;;;:::i;587:3434:8:-;;-1:-1:-1;587:3434:8;;;:::o;:::-;;;;;;;;;;548:631:3;587:3434:8;;;:::i;:::-;616:29:3;;;661:7;:::o;612:561::-;587:3434:8;;;:::i;:::-;721:29:3;712:38;;721:29;;587:3434:8;;766:34:3;;;587:3434:8;766:34:3;;;587:3434:8;;;;;;;;;;;;;766:34:3;708:465;587:3434:8;;;:::i;:::-;830:35:3;821:44;;830:35;;587:3434:8;;881:41:3;;;587:3434:8;881:41:3;;;587:3434:8;;;;;;;;;;;;;766:34:3;817:356;587:3434:8;;;:::i;:::-;952:30:3;943:39;;952:30;;587:3434:8;;998:44:3;;;587:3434:8;998:44:3;;;587:3434:8;;;;;;;;;;;;;;;;;;766:34:3;939:234;587:3434:8;;1072:30:3;587:3434:8;;:::i;:::-;1063:39:3;1059:114;;548:631::o;1059:114::-;587:3434:8;;1118:44:3;;;587:3434:8;1072:30:3;1118:44;;587:3434:8;;;;;;;;;;;;;;;;;;766:34:3;2243:1279;587:3434:8;;2574:2:3;2554:22;;2574:2;;2790:180;;2990:25;2790:180;;;;;;;;;;;;;;-1:-1:-1;2790:180:3;2990:25;;:::i;:::-;2983:32;;:::o;2550:966::-;3056:2;3036:22;3056:2;;3252:123;3056:2;3252:123;5093:25;3252:123;;;;;;587:3434:8;;5073:2:3;4957:66;587:3434:8;;;;;;;;;3032:484:3;4944:80;587:3434:8;;;5093:25:3;;:::i;587:3434:8:-;;;:::i;:::-;;;3032:484:3;3449:56;;3465:1;3449:56;3469:35;3449:56;:::o;587:3434:8:-;;;;;;;;;;;;;;;;;;;;;;5716:1603:3;;;;6766:66;6753:79;;6749:161;;587:3434:8;;6928:2:3;6923:7;;;:18;;;5716:1603;6919:100;;587:3434:8;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7130:24:3;;;;;;;;;;;;5716:1603;7130:24;;587:3434:8;;;7168:20:3;7164:101;;7275:37;5716:1603;:::o;7164:101::-;7204:50;7130:24;7204:50;:::o;7130:24::-;;;:::i;:::-;;;6919:100;6957:51;;;;6973:1;6957:51;6977:30;6957:51;:::o;6923:18::-;6934:7;6939:2;6934:7;;;6923:18;;6749:161;6848:51;;;;6864:1;6848:51;6868:30;6848:51;:::o;1154:184:4:-;;;1833:13;-1:-1:-1;1828:488:4;1866:3;587:3434:8;;1848:16:4;;;;;587:3434:8;;;;;;;;;;;1934:28:4;;;;;-1:-1:-1;2450:119:4;;587:3434:8;2450:119:4;-1:-1:-1;2450:119:4;1930:376;;587:3434:8;;;;;1833:13:4;587:3434:8;1833:13:4;;;587:3434:8;;;:::i;:::-;;;1930:376:4;2450:119;-1:-1:-1;2450:119:4;;587:3434:8;2450:119:4;-1:-1:-1;2450:119:4;1930:376;;;1848:16;;;;1298:33;1154:184;:::o"
            },
            "methodIdentifiers": {
              "isValidOrder(bytes32,address,address,bytes32)": "0e1d31dc",
              "isValidOrderIncludingExtraData(bytes32,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),bytes32[],(uint256,uint8,uint256,uint256,bytes32[])[])": "33131570"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"}],\"name\":\"isValidOrder\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"validOrderMagicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"priorOrderHashes\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"}],\"name\":\"isValidOrderIncludingExtraData\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"validOrderMagicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidOrder(bytes32,address,address,bytes32)\":{\"details\":\"This function is called by Seaport whenever extraData is not      provided by the caller.\",\"params\":{\"caller\":\"The caller in question.\",\"offerer\":\"The offerer in question.\",\"orderHash\":\"The hash of the order.\",\"zoneHash\":\"The hash to provide upon calling the zone.\"},\"returns\":{\"validOrderMagicValue\":\"A magic value indicating if the order is                              currently valid.\"}},\"isValidOrderIncludingExtraData(bytes32,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),bytes32[],(uint256,uint8,uint256,uint256,bytes32[])[])\":{\"details\":\"This function is called by Seaport whenever any extraData is      provided by the caller.\",\"params\":{\"caller\":\"The caller in question.\",\"criteriaResolvers\":\"The criteria resolvers corresponding to                          the order.\",\"order\":\"The order in question.\",\"orderHash\":\"The hash of the order.\",\"priorOrderHashes\":\"The order hashes of each order supplied prior to                          the current order as part of a \\\"match\\\" variety                          of order fulfillment.\"},\"returns\":{\"validOrderMagicValue\":\"A magic value indicating if the order is                              currently valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidOrder(bytes32,address,address,bytes32)\":{\"notice\":\"No checks required \"},\"isValidOrderIncludingExtraData(bytes32,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),bytes32[],(uint256,uint8,uint256,uint256,bytes32[])[])\":{\"notice\":\"Check if a given order including hash in extraData is signed by the same addresss         that created the order, and fits the Merkle root.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zones/order-check/OrderCheckZone.sol\":\"OrderCheckZone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x3c07f43e60e099b3b157243b3152722e73b80eeb7985c2cd73712828d7f7da29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466ffb5a6e3bd65fffd996f9287ffd240ea21588a338c6efe143d94eaed014a7\",\"dweb:/ipfs/Qmans3vvPJZcvxe9KLAPc9Xwe4TFVTJdzaQGpi62Vrhoe2\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"contracts/zones/order-check/OrderCheckZone.sol\":{\"keccak256\":\"0x96050e3194144e535fd14b87c293b3f3257a00b1544bce34b803c6a3d1b44bfe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://99a1693caaf127299932e2596783dd5acd6fc0c8e06d6ecadcf68e66ffcc6c86\",\"dweb:/ipfs/QmPrVKoCSkJEE9HTLemvTAcs6DETyLziacgX87LDb7944C\"]},\"contracts/zones/order-check/interfaces/SeaportInterface.sol\":{\"keccak256\":\"0xf55b622c127d71231b2cb7cf920d0354d95ef2cb856f50b716a0cdd85bd09859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70c7a35e3d2e300f7fdb83f3ff030b150099c4ffd22cae0bfe0d5b09c4304ea6\",\"dweb:/ipfs/Qmdfpdr6anKohDqxrtwcbTgJqZDjwhsDDvvYk8zoBo92Ld\"]},\"contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol\":{\"keccak256\":\"0x8cf95a4b943e3c44ff6dd5897e0b25fbfc15f4ccb0c2aa04a848bb1590ae14fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbeb5273ecd0a072910865dec8c6b57029a58c1b27b102b554b5d620b4f0ce13\",\"dweb:/ipfs/QmbdjwrbR8TjgPkVdgQVtg9MZiNsfJQiAz2vrr9YcfNn1q\"]},\"contracts/zones/order-check/interfaces/ZoneInterface.sol\":{\"keccak256\":\"0x5659c1f0acdf75651afe409952582d7e3794fa2b11b08ee48d63ae481f14bd1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3367fa056388a6e7d561832c8f92fdbf32a7316e057384f7d4a7e2b22d6877ba\",\"dweb:/ipfs/QmPU1RFM6yJrhCLPZRdnPPmaApGMvZn6ef7eBZqRXqfB3H\"]},\"contracts/zones/order-check/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0x94319c4fdb521259e88a8d21f60b57efdbbff7e1ca14d3c8e61860b1370d407a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcd4e6287387df0b107f75791e3444ab6e8f9ccd6e18a13093aa51696af9d2a8\",\"dweb:/ipfs/QmQ46tNGtuh9ebLG1GY4szhFA87gub6ggsdeaJuat8ghvj\"]},\"contracts/zones/order-check/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0xb3f9fc939172d441ea440cb7b80faf02a64a6241a61ddd4843e9c54a3cdcd3f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e2613d9b76639ec91ba2fb5d06fa2a4773145272ba73df2e471dea0b0d8bc03\",\"dweb:/ipfs/QmdMECugexXXAWczYPFYxeka9TJZ1rqJpdvLBqSwfrrHiy\"]}},\"version\":1}"
        }
      },
      "contracts/zones/order-check/interfaces/SeaportInterface.sol": {
        "SeaportInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OrderComponents[]",
                  "name": "orders",
                  "type": "tuple[]"
                }
              ],
              "name": "cancel",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "cancelled",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint120",
                      "name": "numerator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "uint120",
                      "name": "denominator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct AdvancedOrder",
                  "name": "advancedOrder",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "criteriaProof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct CriteriaResolver[]",
                  "name": "criteriaResolvers",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "fulfillerConduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "fulfillAdvancedOrder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fulfilled",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint120",
                      "name": "numerator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "uint120",
                      "name": "denominator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct AdvancedOrder[]",
                  "name": "advancedOrders",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "criteriaProof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct CriteriaResolver[]",
                  "name": "criteriaResolvers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct FulfillmentComponent[][]",
                  "name": "offerFulfillments",
                  "type": "tuple[][]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct FulfillmentComponent[][]",
                  "name": "considerationFulfillments",
                  "type": "tuple[][]"
                },
                {
                  "internalType": "bytes32",
                  "name": "fulfillerConduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumFulfilled",
                  "type": "uint256"
                }
              ],
              "name": "fulfillAvailableAdvancedOrders",
              "outputs": [
                {
                  "internalType": "bool[]",
                  "name": "availableOrders",
                  "type": "bool[]"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ReceivedItem",
                      "name": "item",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Execution[]",
                  "name": "executions",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Order[]",
                  "name": "orders",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct FulfillmentComponent[][]",
                  "name": "offerFulfillments",
                  "type": "tuple[][]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "itemIndex",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct FulfillmentComponent[][]",
                  "name": "considerationFulfillments",
                  "type": "tuple[][]"
                },
                {
                  "internalType": "bytes32",
                  "name": "fulfillerConduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumFulfilled",
                  "type": "uint256"
                }
              ],
              "name": "fulfillAvailableOrders",
              "outputs": [
                {
                  "internalType": "bool[]",
                  "name": "availableOrders",
                  "type": "bool[]"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ReceivedItem",
                      "name": "item",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Execution[]",
                  "name": "executions",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "considerationToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "considerationIdentifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "considerationAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "offerToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "offerIdentifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "offerAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum BasicOrderType",
                      "name": "basicOrderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "offererConduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "fulfillerConduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalOriginalAdditionalRecipients",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct AdditionalRecipient[]",
                      "name": "additionalRecipients",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct BasicOrderParameters",
                  "name": "parameters",
                  "type": "tuple"
                }
              ],
              "name": "fulfillBasicOrder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fulfilled",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Order",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "fulfillerConduitKey",
                  "type": "bytes32"
                }
              ],
              "name": "fulfillOrder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fulfilled",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                }
              ],
              "name": "getCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "zone",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OfferItem[]",
                      "name": "offer",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifierOrCriteria",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ConsiderationItem[]",
                      "name": "consideration",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "enum OrderType",
                      "name": "orderType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "zoneHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OrderComponents",
                  "name": "order",
                  "type": "tuple"
                }
              ],
              "name": "getOrderHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                }
              ],
              "name": "getOrderStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isValidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isCancelled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalFilled",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSize",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "incrementCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "newCounter",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "information",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "version",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainSeparator",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "conduitController",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint120",
                      "name": "numerator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "uint120",
                      "name": "denominator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct AdvancedOrder[]",
                  "name": "orders",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "criteriaProof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct CriteriaResolver[]",
                  "name": "criteriaResolvers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "orderIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "itemIndex",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FulfillmentComponent[]",
                      "name": "offerComponents",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "orderIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "itemIndex",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FulfillmentComponent[]",
                      "name": "considerationComponents",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Fulfillment[]",
                  "name": "fulfillments",
                  "type": "tuple[]"
                }
              ],
              "name": "matchAdvancedOrders",
              "outputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ReceivedItem",
                      "name": "item",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Execution[]",
                  "name": "executions",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Order[]",
                  "name": "orders",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "orderIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "itemIndex",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FulfillmentComponent[]",
                      "name": "offerComponents",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "orderIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "itemIndex",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FulfillmentComponent[]",
                      "name": "considerationComponents",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Fulfillment[]",
                  "name": "fulfillments",
                  "type": "tuple[]"
                }
              ],
              "name": "matchOrders",
              "outputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "enum ItemType",
                          "name": "itemType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct ReceivedItem",
                      "name": "item",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "conduitKey",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Execution[]",
                  "name": "executions",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "contractName",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Order[]",
                  "name": "orders",
                  "type": "tuple[]"
                }
              ],
              "name": "validate",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "validated",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])": "fd9f1e10",
              "fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)": "e7acab24",
              "fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)": "87201b41",
              "fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)": "ed98a574",
              "fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))": "fb0f3ee1",
              "fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)": "b3a34c4c",
              "getCounter(address)": "f07ec373",
              "getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))": "79df72bd",
              "getOrderStatus(bytes32)": "46423aa7",
              "incrementCounter()": "5b34b966",
              "information()": "f47b7740",
              "matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])": "55944a42",
              "matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])": "a8174404",
              "name()": "06fdde03",
              "validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])": "88147732"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderComponents[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder\",\"name\":\"advancedOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"fulfillAdvancedOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder[]\",\"name\":\"advancedOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"offerFulfillments\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"considerationFulfillments\",\"type\":\"tuple[][]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maximumFulfilled\",\"type\":\"uint256\"}],\"name\":\"fulfillAvailableAdvancedOrders\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"availableOrders\",\"type\":\"bool[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"offerFulfillments\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[][]\",\"name\":\"considerationFulfillments\",\"type\":\"tuple[][]\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maximumFulfilled\",\"type\":\"uint256\"}],\"name\":\"fulfillAvailableOrders\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"availableOrders\",\"type\":\"bool[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"considerationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"considerationIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"considerationAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offerIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum BasicOrderType\",\"name\":\"basicOrderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"offererConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalAdditionalRecipients\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct AdditionalRecipient[]\",\"name\":\"additionalRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct BasicOrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"}],\"name\":\"fulfillBasicOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"fulfillerConduitKey\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderComponents\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"getOrderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newCounter\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"conduitController\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"offerComponents\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"considerationComponents\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Fulfillment[]\",\"name\":\"fulfillments\",\"type\":\"tuple[]\"}],\"name\":\"matchAdvancedOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"offerComponents\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"itemIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct FulfillmentComponent[]\",\"name\":\"considerationComponents\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Fulfillment[]\",\"name\":\"fulfillments\",\"type\":\"tuple[]\"}],\"name\":\"matchOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"internalType\":\"struct Execution[]\",\"name\":\"executions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"custom:version\":\"1.1\",\"details\":\"SeaportInterface contains all external function interfaces for Seaport.\",\"kind\":\"dev\",\"methods\":{\"cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])\":{\"params\":{\"orders\":\"The orders to cancel.\"},\"returns\":{\"cancelled\":\"A boolean indicating whether the supplied orders have                   been successfully cancelled.\"}},\"fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)\":{\"params\":{\"advancedOrder\":\"The order to fulfill along with the fraction                            of the order to attempt to fill. Note that                            both the offerer and the fulfiller must first                            approve this contract (or their preferred                            conduit if indicated by the order) to transfer                            any relevant tokens on their behalf and that                            contracts must implement `onERC1155Received`                            to receive ERC1155 tokens as consideration.                            Also note that all offer and consideration                            components must have no remainder after                            multiplication of the respective amount with                            the supplied fraction for the partial fill to                            be considered valid.\",\"criteriaResolvers\":\"An array where each element contains a                            reference to a specific offer or                            consideration, a token identifier, and a proof                            that the supplied token identifier is                            contained in the merkle root held by the item                            in question's criteria element. Note that an                            empty criteria indicates that any                            (transferable) token identifier on the token                            in question is valid and that no associated                            proof needs to be supplied.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used, with direct approvals set on                            Seaport.\",\"recipient\":\"The intended recipient for all received items,                            with `address(0)` indicating that the caller                            should receive the items.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   successfully fulfilled.\"}},\"fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)\":{\"params\":{\"advancedOrders\":\"The orders to fulfill along with the                                  fraction of those orders to attempt to                                  fill. Note that both the offerer and the                                  fulfiller must first approve this                                  contract (or their preferred conduit if                                  indicated by the order) to transfer any                                  relevant tokens on their behalf and that                                  contracts must implement                                  `onERC1155Received` to enable receipt of                                  ERC1155 tokens as consideration. Also                                  note that all offer and consideration                                  components must have no remainder after                                  multiplication of the respective amount                                  with the supplied fraction for an                                  order's partial fill amount to be                                  considered valid.\",\"considerationFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.\",\"criteriaResolvers\":\"An array where each element contains a                                  reference to a specific offer or                                  consideration, a token identifier, and a                                  proof that the supplied token identifier                                  is contained in the merkle root held by                                  the item in question's criteria element.                                  Note that an empty criteria indicates                                  that any (transferable) token                                  identifier on the token in question is                                  valid and that no associated proof needs                                  to be supplied.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used, with                                  direct approvals set on this contract.\",\"maximumFulfilled\":\"The maximum number of orders to fulfill.\",\"offerFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions.\",\"recipient\":\"The intended recipient for all received                                  items, with `address(0)` indicating that                                  the caller should receive the items.\"},\"returns\":{\"availableOrders\":\"An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.\",\"executions\":\"     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders.\"}},\"fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)\":{\"params\":{\"considerationFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which consideration items to                                  attempt to aggregate when preparing                                  executions.\",\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit,                                  if any, to source the fulfiller's token                                  approvals from. The zero hash signifies                                  that no conduit should be used, with                                  direct approvals set on this contract.\",\"maximumFulfilled\":\"The maximum number of orders to fulfill.\",\"offerFulfillments\":\"An array of FulfillmentComponent arrays                                  indicating which offer items to attempt                                  to aggregate when preparing executions.\",\"orders\":\"The orders to fulfill. Note that both                                  the offerer and the fulfiller must first                                  approve this contract (or the                                  corresponding conduit if indicated) to                                  transfer any relevant tokens on their                                  behalf and that contracts must implement                                  `onERC1155Received` to receive ERC1155                                  tokens as consideration.\"},\"returns\":{\"availableOrders\":\"An array of booleans indicating if each order                         with an index corresponding to the index of the                         returned boolean was fulfillable or not.\",\"executions\":\"     An array of elements indicating the sequence of                         transfers performed as part of matching the given                         orders.\"}},\"fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))\":{\"params\":{\"parameters\":\"Additional information on the fulfilled order. Note                   that the offerer must first approve this contract (or                   their preferred conduit if indicated by the order) for                   their offered ERC721 token to be transferred.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   successfully fulfilled.\"}},\"fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)\":{\"params\":{\"fulfillerConduitKey\":\"A bytes32 value indicating what conduit, if                            any, to source the fulfiller's token approvals                            from. The zero hash signifies that no conduit                            should be used, with direct approvals set on                            Seaport.\",\"order\":\"The order to fulfill. Note that both the                            offerer and the fulfiller must first approve                            this contract (or the corresponding conduit if                            indicated) to transfer any relevant tokens on                            their behalf and that contracts must implement                            `onERC1155Received` to receive ERC1155 tokens                            as consideration.\"},\"returns\":{\"fulfilled\":\"A boolean indicating whether the order has been                   successfully fulfilled.\"}},\"getCounter(address)\":{\"params\":{\"offerer\":\"The offerer in question.\"},\"returns\":{\"counter\":\"The current counter.\"}},\"getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))\":{\"params\":{\"order\":\"The components of the order.\"},\"returns\":{\"orderHash\":\"The order hash.\"}},\"getOrderStatus(bytes32)\":{\"params\":{\"orderHash\":\"The order hash in question.\"},\"returns\":{\"isCancelled\":\"A boolean indicating whether the order in question                     has been cancelled.\",\"isValidated\":\"A boolean indicating whether the order in question                     has been validated (i.e. previously approved or                     partially filled).\",\"totalFilled\":\"The total portion of the order that has been filled                     (i.e. the \\\"numerator\\\").\",\"totalSize\":\"  The total size of the order that is either filled or                     unfilled (i.e. the \\\"denominator\\\").\"}},\"incrementCounter()\":{\"returns\":{\"newCounter\":\"The new counter.\"}},\"information()\":{\"returns\":{\"conduitController\":\"The conduit Controller set for this contract.\",\"domainSeparator\":\"  The domain separator for this contract.\",\"version\":\"          The contract version.\"}},\"matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"params\":{\"criteriaResolvers\":\"An array where each element contains a reference                          to a specific order as well as that order's                          offer or consideration, a token identifier, and                          a proof that the supplied token identifier is                          contained in the order's merkle root. Note that                          an empty root indicates that any (transferable)                          token identifier is valid and that no associated                          proof needs to be supplied.\",\"fulfillments\":\"An array of elements allocating offer components                          to consideration components. Note that each                          consideration component must be fully met in                          order for the match operation to be valid.\",\"orders\":\"The advanced orders to match. Note that both the                          offerer and fulfiller on each order must first                          approve this contract (or a preferred conduit if                          indicated by the order) to transfer any relevant                          tokens on their behalf and each consideration                          recipient must implement `onERC1155Received` in                          order to receive ERC1155 tokens. Also note that                          the offer and consideration components for each                          order must have no remainder after multiplying                          the respective amount with the supplied fraction                          in order for the group of partial fills to be                          considered valid.\"},\"returns\":{\"executions\":\"An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders.\"}},\"matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"params\":{\"fulfillments\":\"An array of elements allocating offer components to                     consideration components. Note that each                     consideration component must be fully met for the                     match operation to be valid.\",\"orders\":\"The orders to match. Note that both the offerer and                     fulfiller on each order must first approve this                     contract (or their conduit if indicated by the order)                     to transfer any relevant tokens on their behalf and                     each consideration recipient must implement                     `onERC1155Received` to enable ERC1155 token receipt.\"},\"returns\":{\"executions\":\"An array of elements indicating the sequence of                    transfers performed as part of matching the given                    orders.\"}},\"name()\":{\"returns\":{\"contractName\":\"The name of this contract.\"}},\"validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])\":{\"params\":{\"orders\":\"The orders to validate.\"},\"returns\":{\"validated\":\"A boolean indicating whether the supplied orders have                   been successfully validated.\"}}},\"title\":\"SeaportInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256)[])\":{\"notice\":\"Cancel an arbitrary number of orders. Note that only the offerer         or the zone of a given order may cancel it. Callers should ensure         that the intended order was cancelled by calling `getOrderStatus`         and confirming that `isCancelled` returns `true`.\"},\"fulfillAdvancedOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),(uint256,uint8,uint256,uint256,bytes32[])[],bytes32,address)\":{\"notice\":\"Fill an order, fully or partially, with an arbitrary number of         items for offer and consideration alongside criteria resolvers         containing specific token identifiers and associated proofs.\"},\"fulfillAvailableAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,address,uint256)\":{\"notice\":\"Attempt to fill a group of orders, fully or partially, with an         arbitrary number of items for offer and consideration per order         alongside criteria resolvers containing specific token         identifiers and associated proofs. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail.\"},\"fulfillAvailableOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],(uint256,uint256)[][],(uint256,uint256)[][],bytes32,uint256)\":{\"notice\":\"Attempt to fill a group of orders, each with an arbitrary number         of items for offer and consideration. Any order that is not         currently active, has already been fully filled, or has been         cancelled will be omitted. Remaining offer and consideration         items will then be aggregated where possible as indicated by the         supplied offer and consideration component arrays and aggregated         items will be transferred to the fulfiller or to each intended         recipient, respectively. Note that a failing item transfer or an         issue with order formatting will cause the entire batch to fail.         Note that this function does not support criteria-based orders or         partial filling of orders (though filling the remainder of a         partially-filled order is supported).\"},\"fulfillBasicOrder((address,uint256,uint256,address,address,address,uint256,uint256,uint8,uint256,uint256,bytes32,uint256,bytes32,bytes32,uint256,(uint256,address)[],bytes))\":{\"notice\":\"Fulfill an order offering an ERC721 token by supplying Ether (or         the native token for the given chain) as consideration for the         order. An arbitrary number of \\\"additional recipients\\\" may also be         supplied which will each receive native tokens from the fulfiller         as consideration.\"},\"fulfillOrder(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes),bytes32)\":{\"notice\":\"Fulfill an order with an arbitrary number of items for offer and         consideration. Note that this function does not support         criteria-based orders or partial filling of orders (though         filling the remainder of a partially-filled order is supported).\"},\"getCounter(address)\":{\"notice\":\"Retrieve the current counter for a given offerer.\"},\"getOrderHash((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256))\":{\"notice\":\"Retrieve the order hash for a given order.\"},\"getOrderStatus(bytes32)\":{\"notice\":\"Retrieve the status of a given order by hash, including whether         the order has been cancelled or validated and the fraction of the         order that has been filled.\"},\"incrementCounter()\":{\"notice\":\"Cancel all orders from a given offerer with a given zone in bulk         by incrementing a counter. Note that only the offerer may         increment the counter.\"},\"information()\":{\"notice\":\"Retrieve configuration information for this contract.\"},\"matchAdvancedOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes)[],(uint256,uint8,uint256,uint256,bytes32[])[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"notice\":\"Match an arbitrary number of full or partial orders, each with an         arbitrary number of items for offer and consideration, supplying         criteria resolvers containing specific token identifiers and         associated proofs as well as fulfillments allocating offer         components to consideration components.\"},\"matchOrders(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[],((uint256,uint256)[],(uint256,uint256)[])[])\":{\"notice\":\"Match an arbitrary number of orders, each with an arbitrary         number of items for offer and consideration along with as set of         fulfillments allocating offer components to consideration         components. Note that this function does not support         criteria-based or partial filling of orders (though filling the         remainder of a partially-filled order is supported).\"},\"name()\":{\"notice\":\"Retrieve the name of this contract.\"},\"validate(((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),bytes)[])\":{\"notice\":\"Validate an arbitrary number of orders, thereby registering their         signatures as valid and allowing the fulfiller to skip signature         verification on fulfillment. Note that validated orders may still         be unfulfillable due to invalid item amounts or other factors;         callers should determine whether validated orders are fulfillable         by simulating the fulfillment call prior to execution. Also note         that anyone can validate a signed order, but only the offerer can         validate an order without supplying a signature.\"}},\"notice\":\"Seaport is a generalized ETH/ERC20/ERC721/ERC1155 marketplace. It         minimizes external calls to the greatest extent possible and provides         lightweight methods for common routes as well as more flexible         methods for composing advanced orders.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zones/order-check/interfaces/SeaportInterface.sol\":\"SeaportInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/zones/order-check/interfaces/SeaportInterface.sol\":{\"keccak256\":\"0xf55b622c127d71231b2cb7cf920d0354d95ef2cb856f50b716a0cdd85bd09859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70c7a35e3d2e300f7fdb83f3ff030b150099c4ffd22cae0bfe0d5b09c4304ea6\",\"dweb:/ipfs/Qmdfpdr6anKohDqxrtwcbTgJqZDjwhsDDvvYk8zoBo92Ld\"]},\"contracts/zones/order-check/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0x94319c4fdb521259e88a8d21f60b57efdbbff7e1ca14d3c8e61860b1370d407a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcd4e6287387df0b107f75791e3444ab6e8f9ccd6e18a13093aa51696af9d2a8\",\"dweb:/ipfs/QmQ46tNGtuh9ebLG1GY4szhFA87gub6ggsdeaJuat8ghvj\"]},\"contracts/zones/order-check/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0xb3f9fc939172d441ea440cb7b80faf02a64a6241a61ddd4843e9c54a3cdcd3f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e2613d9b76639ec91ba2fb5d06fa2a4773145272ba73df2e471dea0b0d8bc03\",\"dweb:/ipfs/QmdMECugexXXAWczYPFYxeka9TJZ1rqJpdvLBqSwfrrHiy\"]}},\"version\":1}"
        }
      },
      "contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol": {
        "ZoneInteractionErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                }
              ],
              "name": "InvalidRestrictedOrder",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"InvalidRestrictedOrder\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"InvalidRestrictedOrder(bytes32)\":[{\"details\":\"Revert with an error when attempting to fill an order that specifies      a restricted submitter as its order type when not submitted by      either the offerer or the order's zone or approved as valid by the      zone in question via a staticcall to `isValidOrder`.\",\"params\":{\"orderHash\":\"The order hash for the invalid restricted order.\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"ZoneInteractionErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ZoneInteractionErrors contains errors related to zone interaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol\":\"ZoneInteractionErrors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol\":{\"keccak256\":\"0x8cf95a4b943e3c44ff6dd5897e0b25fbfc15f4ccb0c2aa04a848bb1590ae14fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbeb5273ecd0a072910865dec8c6b57029a58c1b27b102b554b5d620b4f0ce13\",\"dweb:/ipfs/QmbdjwrbR8TjgPkVdgQVtg9MZiNsfJQiAz2vrr9YcfNn1q\"]}},\"version\":1}"
        }
      },
      "contracts/zones/order-check/interfaces/ZoneInterface.sol": {
        "ZoneInterface": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                }
              ],
              "name": "isValidOrder",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "validOrderMagicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "orderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "offerer",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "zone",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct OfferItem[]",
                          "name": "offer",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "enum ItemType",
                              "name": "itemType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "identifierOrCriteria",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "endAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "recipient",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct ConsiderationItem[]",
                          "name": "consideration",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "enum OrderType",
                          "name": "orderType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "startTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "endTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "zoneHash",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "salt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "conduitKey",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalOriginalConsiderationItems",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct OrderParameters",
                      "name": "parameters",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint120",
                      "name": "numerator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "uint120",
                      "name": "denominator",
                      "type": "uint120"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct AdvancedOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "priorOrderHashes",
                  "type": "bytes32[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "orderIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "criteriaProof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct CriteriaResolver[]",
                  "name": "criteriaResolvers",
                  "type": "tuple[]"
                }
              ],
              "name": "isValidOrderIncludingExtraData",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "validOrderMagicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isValidOrder(bytes32,address,address,bytes32)": "0e1d31dc",
              "isValidOrderIncludingExtraData(bytes32,address,((address,address,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[],uint8,uint256,uint256,bytes32,uint256,bytes32,uint256),uint120,uint120,bytes,bytes),bytes32[],(uint256,uint8,uint256,uint256,bytes32[])[])": "33131570"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"}],\"name\":\"isValidOrder\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"validOrderMagicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zone\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct OfferItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ConsiderationItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalOriginalConsiderationItems\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderParameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint120\",\"name\":\"numerator\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"denominator\",\"type\":\"uint120\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"priorOrderHashes\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"criteriaProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct CriteriaResolver[]\",\"name\":\"criteriaResolvers\",\"type\":\"tuple[]\"}],\"name\":\"isValidOrderIncludingExtraData\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"validOrderMagicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused()\":{\"details\":\"Emit an event whenever a zone is successfully paused.\"},\"Unpaused()\":{\"details\":\"Emit an event whenever a zone is successfully unpaused (created).\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zones/order-check/interfaces/ZoneInterface.sol\":\"ZoneInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/zones/order-check/interfaces/ZoneInterface.sol\":{\"keccak256\":\"0x5659c1f0acdf75651afe409952582d7e3794fa2b11b08ee48d63ae481f14bd1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3367fa056388a6e7d561832c8f92fdbf32a7316e057384f7d4a7e2b22d6877ba\",\"dweb:/ipfs/QmPU1RFM6yJrhCLPZRdnPPmaApGMvZn6ef7eBZqRXqfB3H\"]},\"contracts/zones/order-check/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0x94319c4fdb521259e88a8d21f60b57efdbbff7e1ca14d3c8e61860b1370d407a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcd4e6287387df0b107f75791e3444ab6e8f9ccd6e18a13093aa51696af9d2a8\",\"dweb:/ipfs/QmQ46tNGtuh9ebLG1GY4szhFA87gub6ggsdeaJuat8ghvj\"]},\"contracts/zones/order-check/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0xb3f9fc939172d441ea440cb7b80faf02a64a6241a61ddd4843e9c54a3cdcd3f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e2613d9b76639ec91ba2fb5d06fa2a4773145272ba73df2e471dea0b0d8bc03\",\"dweb:/ipfs/QmdMECugexXXAWczYPFYxeka9TJZ1rqJpdvLBqSwfrrHiy\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              126
            ],
            "Ownable": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 127,
              "src": "112:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 126,
                    "src": "668:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "144:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104,
                126
              ],
              "name": "Ownable",
              "nameLocation": "657:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "698:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "682:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "717:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "754:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "738:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "785:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "769:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:57:0"
                  },
                  "src": "711:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "911:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "940:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "940:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "921:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "908:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:0:0"
                  },
                  "scope": 104,
                  "src": "897:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1091:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1101:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "966:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1045:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1082:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1081:9:0"
                  },
                  "scope": 104,
                  "src": "1036:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1230:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1248:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1248:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "1259:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1259:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1248:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1318:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1127:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nameLocation": "1218:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:0"
                  },
                  "src": "1209:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1759:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1751:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1751:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1332:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1712:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1712:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1677:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1694:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:0:0"
                  },
                  "scope": 104,
                  "src": "1668:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1988:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "2006:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2026:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2018:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2018:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2018:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2006:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1998:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2100:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2081:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2081:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1775:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1978:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1978:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1927:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1953:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1945:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1988:0:0"
                  },
                  "scope": 104,
                  "src": "1918:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2333:124:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2351:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2343:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2343:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2362:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2343:25:0"
                      },
                      {
                        "expression": {
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 93,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 94,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2387:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2378:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2378:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2431:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 97,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2410:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "EmitStatement",
                        "src": "2405:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "2122:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2279:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2306:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2298:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2297:18:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2333:0:0"
                  },
                  "scope": 104,
                  "src": "2270:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "639:1820:0",
              "usedErrors": []
            }
          ],
          "src": "87:2373:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              126
            ]
          },
          "id": 127,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 106,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 107,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 126,
              "linearizedBaseContracts": [
                126
              ],
              "name": "Context",
              "nameLocation": "626:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 115,
                    "nodeType": "Block",
                    "src": "702:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 111,
                        "id": 114,
                        "nodeType": "Return",
                        "src": "712:17:1"
                      }
                    ]
                  },
                  "id": 116,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:1"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "693:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:1"
                  },
                  "scope": 126,
                  "src": "640:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 124,
                    "nodeType": "Block",
                    "src": "809:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 120,
                        "id": 123,
                        "nodeType": "Return",
                        "src": "819:15:1"
                      }
                    ]
                  },
                  "id": 125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:1"
                  },
                  "returnParameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "793:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:1"
                  },
                  "scope": 126,
                  "src": "742:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 127,
              "src": "608:235:1",
              "usedErrors": []
            }
          ],
          "src": "86:758:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
          "exportedSymbols": {
            "Strings": [
              329
            ]
          },
          "id": 330,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 128,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Strings",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 129,
                "nodeType": "StructuredDocumentation",
                "src": "111:34:2",
                "text": " @dev String operations."
              },
              "fullyImplemented": true,
              "id": 329,
              "linearizedBaseContracts": [
                329
              ],
              "name": "Strings",
              "nameLocation": "154:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 132,
                  "mutability": "constant",
                  "name": "_HEX_SYMBOLS",
                  "nameLocation": "193:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "168:58:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "168:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": {
                    "hexValue": "30313233343536373839616263646566",
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "208:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                      "typeString": "literal_string \"0123456789abcdef\""
                    },
                    "value": "0123456789abcdef"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 210,
                    "nodeType": "Block",
                    "src": "399:632:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 140,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "601:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "610:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "601:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "nodeType": "IfStatement",
                        "src": "597:51:2",
                        "trueBody": {
                          "id": 145,
                          "nodeType": "Block",
                          "src": "613:35:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "634:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                  "typeString": "literal_string \"0\""
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 139,
                              "id": 144,
                              "nodeType": "Return",
                              "src": "627:10:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          148
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 148,
                            "mutability": "mutable",
                            "name": "temp",
                            "nameLocation": "665:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 210,
                            "src": "657:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 147,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "657:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 150,
                        "initialValue": {
                          "id": 149,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "672:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "657:20:2"
                      },
                      {
                        "assignments": [
                          152
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 152,
                            "mutability": "mutable",
                            "name": "digits",
                            "nameLocation": "695:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 210,
                            "src": "687:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 151,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "687:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 153,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "687:14:2"
                      },
                      {
                        "body": {
                          "id": 164,
                          "nodeType": "Block",
                          "src": "729:57:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "743:8:2",
                                "subExpression": {
                                  "id": 157,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 152,
                                  "src": "743:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 159,
                              "nodeType": "ExpressionStatement",
                              "src": "743:8:2"
                            },
                            {
                              "expression": {
                                "id": 162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 160,
                                  "name": "temp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "765:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "773:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "765:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 163,
                              "nodeType": "ExpressionStatement",
                              "src": "765:10:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 154,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "718:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "726:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "718:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 165,
                        "nodeType": "WhileStatement",
                        "src": "711:75:2"
                      },
                      {
                        "assignments": [
                          167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 167,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "808:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 210,
                            "src": "795:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 166,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "795:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 172,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 170,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "827:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "817:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 168,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "821:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "817:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "795:39:2"
                      },
                      {
                        "body": {
                          "id": 203,
                          "nodeType": "Block",
                          "src": "863:131:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 176,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 152,
                                  "src": "877:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "887:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "877:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 179,
                              "nodeType": "ExpressionStatement",
                              "src": "877:11:2"
                            },
                            {
                              "expression": {
                                "id": 197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 180,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 167,
                                    "src": "902:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 182,
                                  "indexExpression": {
                                    "id": 181,
                                    "name": "digits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 152,
                                    "src": "909:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "902:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 194,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3438",
                                            "id": 187,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "932:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_48_by_1",
                                              "typeString": "int_const 48"
                                            },
                                            "value": "48"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 190,
                                                  "name": "value",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 135,
                                                  "src": "945:5:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "%",
                                                "rightExpression": {
                                                  "hexValue": "3130",
                                                  "id": 191,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "953:2:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "src": "945:10:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 189,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "937:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 188,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "937:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 193,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "937:19:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "932:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "926:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 185,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "926:5:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "926:31:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "919:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes1_$",
                                      "typeString": "type(bytes1)"
                                    },
                                    "typeName": {
                                      "id": 183,
                                      "name": "bytes1",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "919:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "919:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "902:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 198,
                              "nodeType": "ExpressionStatement",
                              "src": "902:56:2"
                            },
                            {
                              "expression": {
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 199,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "972:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "981:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "972:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 202,
                              "nodeType": "ExpressionStatement",
                              "src": "972:11:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 173,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "851:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "860:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "851:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "WhileStatement",
                        "src": "844:150:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 207,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "1017:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1010:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 205,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1010:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 139,
                        "id": 209,
                        "nodeType": "Return",
                        "src": "1003:21:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 133,
                    "nodeType": "StructuredDocumentation",
                    "src": "233:90:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
                  },
                  "id": 211,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toString",
                  "nameLocation": "337:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "354:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "346:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:15:2"
                  },
                  "returnParameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "384:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "384:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "383:15:2"
                  },
                  "scope": 329,
                  "src": "328:703:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "1210:255:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 219,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "1224:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1233:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1224:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 225,
                        "nodeType": "IfStatement",
                        "src": "1220:54:2",
                        "trueBody": {
                          "id": 224,
                          "nodeType": "Block",
                          "src": "1236:38:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30783030",
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1257:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                                  "typeString": "literal_string \"0x00\""
                                },
                                "value": "0x00"
                              },
                              "functionReturnParameters": 218,
                              "id": 223,
                              "nodeType": "Return",
                              "src": "1250:13:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          227
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 227,
                            "mutability": "mutable",
                            "name": "temp",
                            "nameLocation": "1291:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 251,
                            "src": "1283:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 226,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1283:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 229,
                        "initialValue": {
                          "id": 228,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "1298:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1283:20:2"
                      },
                      {
                        "assignments": [
                          231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 231,
                            "mutability": "mutable",
                            "name": "length",
                            "nameLocation": "1321:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 251,
                            "src": "1313:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 230,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1313:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 233,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1330:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1313:18:2"
                      },
                      {
                        "body": {
                          "id": 244,
                          "nodeType": "Block",
                          "src": "1359:57:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1373:8:2",
                                "subExpression": {
                                  "id": 237,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "1373:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 239,
                              "nodeType": "ExpressionStatement",
                              "src": "1373:8:2"
                            },
                            {
                              "expression": {
                                "id": 242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 240,
                                  "name": "temp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 227,
                                  "src": "1395:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": ">>=",
                                "rightHandSide": {
                                  "hexValue": "38",
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1404:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "1395:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 243,
                              "nodeType": "ExpressionStatement",
                              "src": "1395:10:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 234,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1348:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1356:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1348:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 245,
                        "nodeType": "WhileStatement",
                        "src": "1341:75:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "1444:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 248,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "1451:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 246,
                            "name": "toHexString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              252,
                              328
                            ],
                            "referencedDeclaration": 328,
                            "src": "1432:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256,uint256) pure returns (string memory)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 218,
                        "id": 250,
                        "nodeType": "Return",
                        "src": "1425:33:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "1037:94:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1145:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1165:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "1157:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:15:2"
                  },
                  "returnParameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "1195:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1194:15:2"
                  },
                  "scope": 329,
                  "src": "1136:329:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "1678:351:2",
                    "statements": [
                      {
                        "assignments": [
                          263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 263,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "1701:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 327,
                            "src": "1688:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 262,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1688:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 272,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1720:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 267,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 257,
                                  "src": "1724:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1720:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1733:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1720:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1710:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 264,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1714:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1710:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1688:47:2"
                      },
                      {
                        "expression": {
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 273,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1745:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 275,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1752:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1745:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1757:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                              "typeString": "literal_string \"0\""
                            },
                            "value": "0"
                          },
                          "src": "1745:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:15:2"
                      },
                      {
                        "expression": {
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 279,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1770:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 281,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1777:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1770:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "78",
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1782:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            },
                            "value": "x"
                          },
                          "src": "1770:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "1770:15:2"
                      },
                      {
                        "body": {
                          "id": 313,
                          "nodeType": "Block",
                          "src": "1840:87:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 299,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 263,
                                    "src": "1854:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 301,
                                  "indexExpression": {
                                    "id": 300,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 286,
                                    "src": "1861:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1854:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 302,
                                    "name": "_HEX_SYMBOLS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "1866:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  "id": 306,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 303,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 255,
                                      "src": "1879:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307866",
                                      "id": 304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1887:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_15_by_1",
                                        "typeString": "int_const 15"
                                      },
                                      "value": "0xf"
                                    },
                                    "src": "1879:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1866:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "1854:37:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 308,
                              "nodeType": "ExpressionStatement",
                              "src": "1854:37:2"
                            },
                            {
                              "expression": {
                                "id": 311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 309,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 255,
                                  "src": "1905:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": ">>=",
                                "rightHandSide": {
                                  "hexValue": "34",
                                  "id": 310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1915:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "1905:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 312,
                              "nodeType": "ExpressionStatement",
                              "src": "1905:11:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 293,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "1828:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1832:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1828:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 314,
                        "initializationExpression": {
                          "assignments": [
                            286
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 286,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1808:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 314,
                              "src": "1800:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 285,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1800:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 292,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1812:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 288,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "1816:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1812:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1825:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1812:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1800:26:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": true,
                            "src": "1835:3:2",
                            "subExpression": {
                              "id": 296,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "1837:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 298,
                          "nodeType": "ExpressionStatement",
                          "src": "1835:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "1795:132:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 316,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "1944:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1953:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1944:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1956:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              },
                              "value": "Strings: hex length insufficient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              }
                            ],
                            "id": 315,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1936:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1936:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "1936:55:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 324,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "2015:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2008:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 322,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2008:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2008:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 261,
                        "id": 326,
                        "nodeType": "Return",
                        "src": "2001:21:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "1471:112:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
                  },
                  "id": 328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1597:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1617:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "1609:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1609:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "1632:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "1624:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1624:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1608:31:2"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "1663:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1663:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1662:15:2"
                  },
                  "scope": 329,
                  "src": "1588:441:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 330,
              "src": "146:1885:2",
              "usedErrors": []
            }
          ],
          "src": "86:1946:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [
              736
            ],
            "Strings": [
              329
            ]
          },
          "id": 737,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 331,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
              "file": "../Strings.sol",
              "id": 332,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 737,
              "sourceUnit": 330,
              "src": "137:24:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 333,
                "nodeType": "StructuredDocumentation",
                "src": "163:205:3",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 736,
              "linearizedBaseContracts": [
                736
              ],
              "name": "ECDSA",
              "nameLocation": "377:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ECDSA.RecoverError",
                  "id": 339,
                  "members": [
                    {
                      "id": 334,
                      "name": "NoError",
                      "nameLocation": "417:7:3",
                      "nodeType": "EnumValue",
                      "src": "417:7:3"
                    },
                    {
                      "id": 335,
                      "name": "InvalidSignature",
                      "nameLocation": "434:16:3",
                      "nodeType": "EnumValue",
                      "src": "434:16:3"
                    },
                    {
                      "id": 336,
                      "name": "InvalidSignatureLength",
                      "nameLocation": "460:22:3",
                      "nodeType": "EnumValue",
                      "src": "460:22:3"
                    },
                    {
                      "id": 337,
                      "name": "InvalidSignatureS",
                      "nameLocation": "492:17:3",
                      "nodeType": "EnumValue",
                      "src": "492:17:3"
                    },
                    {
                      "id": 338,
                      "name": "InvalidSignatureV",
                      "nameLocation": "519:17:3",
                      "nodeType": "EnumValue",
                      "src": "519:17:3"
                    }
                  ],
                  "name": "RecoverError",
                  "nameLocation": "394:12:3",
                  "nodeType": "EnumDefinition",
                  "src": "389:153:3"
                },
                {
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "602:577:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RecoverError_$339",
                            "typeString": "enum ECDSA.RecoverError"
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 345,
                            "name": "error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "616:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 346,
                              "name": "RecoverError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "625:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                "typeString": "type(enum ECDSA.RecoverError)"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NoError",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 334,
                            "src": "625:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "src": "616:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 351,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 342,
                              "src": "712:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 352,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "721:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "InvalidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 335,
                              "src": "721:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "src": "712:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 360,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 342,
                                "src": "821:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$339",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 361,
                                  "name": "RecoverError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 339,
                                  "src": "830:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                    "typeString": "type(enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "InvalidSignatureLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 336,
                                "src": "830:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$339",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "src": "821:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_RecoverError_$339",
                                  "typeString": "enum ECDSA.RecoverError"
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 369,
                                  "name": "error",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "943:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$339",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 370,
                                    "name": "RecoverError",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 339,
                                    "src": "952:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                      "typeString": "type(enum ECDSA.RecoverError)"
                                    }
                                  },
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "InvalidSignatureS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "952:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$339",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "src": "943:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_RecoverError_$339",
                                    "typeString": "enum ECDSA.RecoverError"
                                  },
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 378,
                                    "name": "error",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 342,
                                    "src": "1063:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$339",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 379,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 339,
                                      "src": "1072:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "InvalidSignatureV",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 338,
                                    "src": "1072:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$339",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  "src": "1063:39:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 387,
                                "nodeType": "IfStatement",
                                "src": "1059:114:3",
                                "trueBody": {
                                  "id": 386,
                                  "nodeType": "Block",
                                  "src": "1104:69:3",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
                                            "id": 383,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1125:36:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                              "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                                            },
                                            "value": "ECDSA: invalid signature 'v' value"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                              "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                                            }
                                          ],
                                          "id": 382,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "1118:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (string memory) pure"
                                          }
                                        },
                                        "id": 384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1118:44:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 385,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1118:44:3"
                                    }
                                  ]
                                }
                              },
                              "id": 388,
                              "nodeType": "IfStatement",
                              "src": "939:234:3",
                              "trueBody": {
                                "id": 377,
                                "nodeType": "Block",
                                "src": "984:69:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
                                          "id": 374,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1005:36:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                            "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                                          },
                                          "value": "ECDSA: invalid signature 's' value"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                            "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                                          }
                                        ],
                                        "id": 373,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "998:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 375,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "998:44:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 376,
                                    "nodeType": "ExpressionStatement",
                                    "src": "998:44:3"
                                  }
                                ]
                              }
                            },
                            "id": 389,
                            "nodeType": "IfStatement",
                            "src": "817:356:3",
                            "trueBody": {
                              "id": 368,
                              "nodeType": "Block",
                              "src": "867:66:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                                        "id": 365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "888:33:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                          "typeString": "literal_string \"ECDSA: invalid signature length\""
                                        },
                                        "value": "ECDSA: invalid signature length"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                          "typeString": "literal_string \"ECDSA: invalid signature length\""
                                        }
                                      ],
                                      "id": 364,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "881:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "881:41:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 367,
                                  "nodeType": "ExpressionStatement",
                                  "src": "881:41:3"
                                }
                              ]
                            }
                          },
                          "id": 390,
                          "nodeType": "IfStatement",
                          "src": "708:465:3",
                          "trueBody": {
                            "id": 359,
                            "nodeType": "Block",
                            "src": "752:59:3",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                                      "id": 356,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "773:26:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                        "typeString": "literal_string \"ECDSA: invalid signature\""
                                      },
                                      "value": "ECDSA: invalid signature"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                        "typeString": "literal_string \"ECDSA: invalid signature\""
                                      }
                                    ],
                                    "id": 355,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -19,
                                      -19
                                    ],
                                    "referencedDeclaration": -19,
                                    "src": "766:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory) pure"
                                    }
                                  },
                                  "id": 357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "766:34:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 358,
                                "nodeType": "ExpressionStatement",
                                "src": "766:34:3"
                              }
                            ]
                          }
                        },
                        "id": 391,
                        "nodeType": "IfStatement",
                        "src": "612:561:3",
                        "trueBody": {
                          "id": 350,
                          "nodeType": "Block",
                          "src": "647:55:3",
                          "statements": [
                            {
                              "functionReturnParameters": 344,
                              "id": 349,
                              "nodeType": "Return",
                              "src": "661:7:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_throwError",
                  "nameLocation": "557:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "error",
                        "nameLocation": "582:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "569:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$339",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 341,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 340,
                            "name": "RecoverError",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 339,
                            "src": "569:12:3"
                          },
                          "referencedDeclaration": 339,
                          "src": "569:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$339",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "568:20:3"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "602:0:3"
                  },
                  "scope": 736,
                  "src": "548:631:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "2347:1175:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 406,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "2554:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2554:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2574:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "2554:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 428,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "3036:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3036:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3634",
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3056:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_64_by_1",
                                "typeString": "int_const 64"
                              },
                              "value": "64"
                            },
                            "src": "3036:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 454,
                            "nodeType": "Block",
                            "src": "3435:81:3",
                            "statements": [
                              {
                                "expression": {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 448,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3465:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3457:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 446,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3457:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3457:10:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 450,
                                        "name": "RecoverError",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 339,
                                        "src": "3469:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                          "typeString": "type(enum ECDSA.RecoverError)"
                                        }
                                      },
                                      "id": 451,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "InvalidSignatureLength",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 336,
                                      "src": "3469:35:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_RecoverError_$339",
                                        "typeString": "enum ECDSA.RecoverError"
                                      }
                                    }
                                  ],
                                  "id": 452,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3456:49:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                    "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                  }
                                },
                                "functionReturnParameters": 405,
                                "id": 453,
                                "nodeType": "Return",
                                "src": "3449:56:3"
                              }
                            ]
                          },
                          "id": 455,
                          "nodeType": "IfStatement",
                          "src": "3032:484:3",
                          "trueBody": {
                            "id": 445,
                            "nodeType": "Block",
                            "src": "3060:369:3",
                            "statements": [
                              {
                                "assignments": [
                                  433
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 433,
                                    "mutability": "mutable",
                                    "name": "r",
                                    "nameLocation": "3082:1:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 445,
                                    "src": "3074:9:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "typeName": {
                                      "id": 432,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3074:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 434,
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3074:9:3"
                              },
                              {
                                "assignments": [
                                  436
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 436,
                                    "mutability": "mutable",
                                    "name": "vs",
                                    "nameLocation": "3105:2:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 445,
                                    "src": "3097:10:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "typeName": {
                                      "id": 435,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3097:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 437,
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3097:10:3"
                              },
                              {
                                "AST": {
                                  "nodeType": "YulBlock",
                                  "src": "3261:114:3",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "3279:32:3",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "3294:9:3"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3305:4:3",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3290:3:3"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3290:20:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3284:5:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3284:27:3"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "3279:1:3"
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "3328:33:3",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "3344:9:3"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3355:4:3",
                                                "type": "",
                                                "value": "0x40"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3340:3:3"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3340:20:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3334:5:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3334:27:3"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "vs",
                                          "nodeType": "YulIdentifier",
                                          "src": "3328:2:3"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "evmVersion": "london",
                                "externalReferences": [
                                  {
                                    "declaration": 433,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "3279:1:3",
                                    "valueSize": 1
                                  },
                                  {
                                    "declaration": 398,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "3294:9:3",
                                    "valueSize": 1
                                  },
                                  {
                                    "declaration": 398,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "3344:9:3",
                                    "valueSize": 1
                                  },
                                  {
                                    "declaration": 436,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "3328:2:3",
                                    "valueSize": 1
                                  }
                                ],
                                "id": 438,
                                "nodeType": "InlineAssembly",
                                "src": "3252:123:3"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 440,
                                      "name": "hash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "3406:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 441,
                                      "name": "r",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 433,
                                      "src": "3412:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 442,
                                      "name": "vs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 436,
                                      "src": "3415:2:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 439,
                                    "name": "tryRecover",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      458,
                                      532,
                                      643
                                    ],
                                    "referencedDeclaration": 532,
                                    "src": "3395:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                                      "typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                                    }
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3395:23:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                    "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                  }
                                },
                                "functionReturnParameters": 405,
                                "id": 444,
                                "nodeType": "Return",
                                "src": "3388:30:3"
                              }
                            ]
                          }
                        },
                        "id": 456,
                        "nodeType": "IfStatement",
                        "src": "2550:966:3",
                        "trueBody": {
                          "id": 427,
                          "nodeType": "Block",
                          "src": "2578:448:3",
                          "statements": [
                            {
                              "assignments": [
                                411
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 411,
                                  "mutability": "mutable",
                                  "name": "r",
                                  "nameLocation": "2600:1:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 427,
                                  "src": "2592:9:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 410,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2592:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 412,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2592:9:3"
                            },
                            {
                              "assignments": [
                                414
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 414,
                                  "mutability": "mutable",
                                  "name": "s",
                                  "nameLocation": "2623:1:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 427,
                                  "src": "2615:9:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 413,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2615:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 415,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2615:9:3"
                            },
                            {
                              "assignments": [
                                417
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 417,
                                  "mutability": "mutable",
                                  "name": "v",
                                  "nameLocation": "2644:1:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 427,
                                  "src": "2638:7:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "typeName": {
                                    "id": 416,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2638:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 418,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2638:7:3"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "2799:171:3",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2817:32:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2832:9:3"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2843:4:3",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2828:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2828:20:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2822:5:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2822:27:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "2817:1:3"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2866:32:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2881:9:3"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2892:4:3",
                                              "type": "",
                                              "value": "0x40"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2877:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2877:20:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2871:5:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2871:27:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s",
                                        "nodeType": "YulIdentifier",
                                        "src": "2866:1:3"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2915:41:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2925:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "signature",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2938:9:3"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2949:4:3",
                                                  "type": "",
                                                  "value": "0x60"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2934:3:3"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2934:20:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2928:5:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2928:27:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "byte",
                                        "nodeType": "YulIdentifier",
                                        "src": "2920:4:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2920:36:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "2915:1:3"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 411,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2817:1:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 414,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2866:1:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 398,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2832:9:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 398,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2881:9:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 398,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2938:9:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 417,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2915:1:3",
                                  "valueSize": 1
                                }
                              ],
                              "id": 419,
                              "nodeType": "InlineAssembly",
                              "src": "2790:180:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 421,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 396,
                                    "src": "3001:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 422,
                                    "name": "v",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 417,
                                    "src": "3007:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "id": 423,
                                    "name": "r",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 411,
                                    "src": "3010:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 424,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 414,
                                    "src": "3013:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 420,
                                  "name": "tryRecover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    458,
                                    532,
                                    643
                                  ],
                                  "referencedDeclaration": 643,
                                  "src": "2990:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                                    "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2990:25:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 405,
                              "id": 426,
                              "nodeType": "Return",
                              "src": "2983:32:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 394,
                    "nodeType": "StructuredDocumentation",
                    "src": "1185:1053:3",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
                  },
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "2252:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2271:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2263:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "2290:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2277:22:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2277:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2262:38:3"
                  },
                  "returnParameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2324:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2333:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$339",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 403,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 402,
                            "name": "RecoverError",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 339,
                            "src": "2333:12:3"
                          },
                          "referencedDeclaration": 339,
                          "src": "2333:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$339",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2323:23:3"
                  },
                  "scope": 736,
                  "src": "2243:1279:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 484,
                    "nodeType": "Block",
                    "src": "4395:140:3",
                    "statements": [
                      {
                        "assignments": [
                          469,
                          472
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 469,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "4414:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 484,
                            "src": "4406:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 468,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4406:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 472,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "4438:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 484,
                            "src": "4425:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 471,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 470,
                                "name": "RecoverError",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 339,
                                "src": "4425:12:3"
                              },
                              "referencedDeclaration": 339,
                              "src": "4425:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 477,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "4458:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 475,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4464:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 473,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              458,
                              532,
                              643
                            ],
                            "referencedDeclaration": 458,
                            "src": "4447:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4447:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4405:69:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 479,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "4496:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 478,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "4484:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$339_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4484:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "4484:18:3"
                      },
                      {
                        "expression": {
                          "id": 482,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "4519:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 467,
                        "id": 483,
                        "nodeType": "Return",
                        "src": "4512:16:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "3528:775:3",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
                  },
                  "id": 485,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "4317:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4333:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "4325:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4325:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "4352:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "4339:22:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4339:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4324:38:3"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "4386:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4386:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4385:9:3"
                  },
                  "scope": 736,
                  "src": "4308:227:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "4922:203:3",
                    "statements": [
                      {
                        "assignments": [
                          501
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 501,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "4940:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 531,
                            "src": "4932:9:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 500,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4932:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 508,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 502,
                            "name": "vs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "4944:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4957:66:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9967"
                                },
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9967"
                                }
                              ],
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4949:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 503,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "4949:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4949:75:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4944:80:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4932:92:3"
                      },
                      {
                        "assignments": [
                          510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 510,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "5040:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 531,
                            "src": "5034:7:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 509,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5034:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 523,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 515,
                                          "name": "vs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 492,
                                          "src": "5059:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5051:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 513,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5051:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 516,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5051:11:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">>",
                                    "rightExpression": {
                                      "hexValue": "323535",
                                      "id": 517,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5066:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_255_by_1",
                                        "typeString": "int_const 255"
                                      },
                                      "value": "255"
                                    },
                                    "src": "5051:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 519,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5050:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3237",
                                "id": 520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5073:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_27_by_1",
                                  "typeString": "int_const 27"
                                },
                                "value": "27"
                              },
                              "src": "5050:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5044:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 511,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5044:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5044:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5034:42:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 525,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "5104:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 526,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "5110:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 527,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "5113:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 528,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "5116:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 524,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              458,
                              532,
                              643
                            ],
                            "referencedDeclaration": 643,
                            "src": "5093:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5093:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "functionReturnParameters": 499,
                        "id": 530,
                        "nodeType": "Return",
                        "src": "5086:32:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "4541:243:3",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
                  },
                  "id": 532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "4798:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4826:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "4818:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4818:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4848:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "4840:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4840:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4867:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "4859:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4859:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4808:67:3"
                  },
                  "returnParameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "4899:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4899:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 498,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "4908:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$339",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 497,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 496,
                            "name": "RecoverError",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 339,
                            "src": "4908:12:3"
                          },
                          "referencedDeclaration": 339,
                          "src": "4908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$339",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4898:23:3"
                  },
                  "scope": 736,
                  "src": "4789:336:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "5406:136:3",
                    "statements": [
                      {
                        "assignments": [
                          545,
                          548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 545,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "5425:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 561,
                            "src": "5417:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 544,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5417:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 548,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "5449:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 561,
                            "src": "5436:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 547,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 546,
                                "name": "RecoverError",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 339,
                                "src": "5436:12:3"
                              },
                              "referencedDeclaration": 339,
                              "src": "5436:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 554,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 550,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "5469:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 551,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "5475:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 552,
                              "name": "vs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "5478:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 549,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              458,
                              532,
                              643
                            ],
                            "referencedDeclaration": 532,
                            "src": "5458:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                              "typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5458:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5416:65:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 548,
                              "src": "5503:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 555,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "5491:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$339_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5491:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 558,
                        "nodeType": "ExpressionStatement",
                        "src": "5491:18:3"
                      },
                      {
                        "expression": {
                          "id": 559,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "5526:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 543,
                        "id": 560,
                        "nodeType": "Return",
                        "src": "5519:16:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "5131:154:3",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
                  },
                  "id": 562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "5299:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "5324:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "5316:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "5346:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "5338:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5338:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "5365:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "5357:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5357:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5306:67:3"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "5397:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5397:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5396:9:3"
                  },
                  "scope": 736,
                  "src": "5290:252:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 642,
                    "nodeType": "Block",
                    "src": "5865:1454:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 581,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 571,
                                "src": "6761:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6753:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6753:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6753:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6766:66:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "6753:79:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 594,
                        "nodeType": "IfStatement",
                        "src": "6749:161:3",
                        "trueBody": {
                          "id": 593,
                          "nodeType": "Block",
                          "src": "6834:76:3",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 587,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6864:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6856:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 585,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6856:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6856:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 589,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 339,
                                      "src": "6868:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "InvalidSignatureS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 337,
                                    "src": "6868:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$339",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 591,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6855:44:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 578,
                              "id": 592,
                              "nodeType": "Return",
                              "src": "6848:51:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 595,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "6923:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "3237",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6928:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_27_by_1",
                                "typeString": "int_const 27"
                              },
                              "value": "27"
                            },
                            "src": "6923:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 598,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "6934:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "3238",
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6939:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28_by_1",
                                "typeString": "int_const 28"
                              },
                              "value": "28"
                            },
                            "src": "6934:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6923:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 611,
                        "nodeType": "IfStatement",
                        "src": "6919:100:3",
                        "trueBody": {
                          "id": 610,
                          "nodeType": "Block",
                          "src": "6943:76:3",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6973:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 603,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6965:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 602,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6965:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6965:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 606,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 339,
                                      "src": "6977:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "InvalidSignatureV",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 338,
                                    "src": "6977:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$339",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 608,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6964:44:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 578,
                              "id": 609,
                              "nodeType": "Return",
                              "src": "6957:51:3"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 613,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "7121:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 642,
                            "src": "7113:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7113:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 620,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "7140:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 616,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "7146:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 617,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 569,
                              "src": "7149:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 618,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 571,
                              "src": "7152:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 614,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "7130:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7130:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7113:41:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 621,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "7168:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7186:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7178:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7178:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7178:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7168:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 636,
                        "nodeType": "IfStatement",
                        "src": "7164:101:3",
                        "trueBody": {
                          "id": 635,
                          "nodeType": "Block",
                          "src": "7190:75:3",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 629,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7220:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7212:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 627,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7212:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7212:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 631,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 339,
                                      "src": "7224:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "InvalidSignature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 335,
                                    "src": "7224:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$339",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 633,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7211:43:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 578,
                              "id": 634,
                              "nodeType": "Return",
                              "src": "7204:50:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 637,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7283:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 638,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "7291:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$339_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NoError",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 334,
                              "src": "7291:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "id": 640,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7282:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "functionReturnParameters": 578,
                        "id": 641,
                        "nodeType": "Return",
                        "src": "7275:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "5548:163:3",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
                  },
                  "id": 643,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "5725:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "5753:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5745:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5745:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5773:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5767:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5767:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "5792:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5784:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5784:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "5811:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5803:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5803:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5735:83:3"
                  },
                  "returnParameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5842:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5842:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "5851:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$339",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 576,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 575,
                            "name": "RecoverError",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 339,
                            "src": "5851:12:3"
                          },
                          "referencedDeclaration": 339,
                          "src": "5851:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$339",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5841:23:3"
                  },
                  "scope": 736,
                  "src": "5716:1603:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 675,
                    "nodeType": "Block",
                    "src": "7584:138:3",
                    "statements": [
                      {
                        "assignments": [
                          658,
                          661
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 658,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "7603:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 675,
                            "src": "7595:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 657,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7595:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 661,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "7627:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 675,
                            "src": "7614:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$339",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 660,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 659,
                                "name": "RecoverError",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 339,
                                "src": "7614:12:3"
                              },
                              "referencedDeclaration": 339,
                              "src": "7614:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 668,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "7647:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 664,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "7653:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 665,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "7656:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 666,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "7659:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 662,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              458,
                              532,
                              643
                            ],
                            "referencedDeclaration": 643,
                            "src": "7636:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$339_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7636:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$339_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7594:67:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 670,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "7683:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$339",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 669,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "7671:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$339_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7671:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "7671:18:3"
                      },
                      {
                        "expression": {
                          "id": 673,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "7706:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 656,
                        "id": 674,
                        "nodeType": "Return",
                        "src": "7699:16:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 644,
                    "nodeType": "StructuredDocumentation",
                    "src": "7325:122:3",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 676,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "7461:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "7486:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7478:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7478:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "7506:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7500:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7500:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "7525:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7517:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7517:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "7544:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7536:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7468:83:3"
                  },
                  "returnParameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7575:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7575:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7574:9:3"
                  },
                  "scope": 736,
                  "src": "7452:270:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 692,
                    "nodeType": "Block",
                    "src": "8090:187:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8228:34:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "id": 688,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "8264:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 685,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8211:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8211:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8211:58:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 684,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8201:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8201:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 683,
                        "id": 691,
                        "nodeType": "Return",
                        "src": "8194:76:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "7728:279:3",
                    "text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
                  },
                  "id": 693,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "8021:22:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "8052:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "8044:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8044:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8043:14:3"
                  },
                  "returnParameters": {
                    "id": 683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "8081:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8081:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8080:9:3"
                  },
                  "scope": 736,
                  "src": "8012:265:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "8642:116:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                                  "id": 704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8686:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n"
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 707,
                                        "name": "s",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 696,
                                        "src": "8737:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "8737:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 705,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 329,
                                      "src": "8720:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$329_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 211,
                                    "src": "8720:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8720:26:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 710,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "8748:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 702,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8669:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8669:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8669:81:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 701,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8659:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8659:92:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 700,
                        "id": 713,
                        "nodeType": "Return",
                        "src": "8652:99:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 694,
                    "nodeType": "StructuredDocumentation",
                    "src": "8283:274:3",
                    "text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
                  },
                  "id": 715,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "8571:22:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "8607:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "8594:14:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8594:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8593:16:3"
                  },
                  "returnParameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "8633:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8633:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8632:9:3"
                  },
                  "scope": 736,
                  "src": "8562:196:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "9199:92:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9243:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "id": 729,
                                  "name": "domainSeparator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 718,
                                  "src": "9255:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 730,
                                  "name": "structHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "9272:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 726,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9226:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9226:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9226:57:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 725,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9216:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9216:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 724,
                        "id": 733,
                        "nodeType": "Return",
                        "src": "9209:75:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 716,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:328:3",
                    "text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
                  },
                  "id": 735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toTypedDataHash",
                  "nameLocation": "9106:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nameLocation": "9130:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "9122:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9122:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "structHash",
                        "nameLocation": "9155:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "9147:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9147:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9121:45:3"
                  },
                  "returnParameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "9190:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9190:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9189:9:3"
                  },
                  "scope": 736,
                  "src": "9097:194:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 737,
              "src": "369:8924:3",
              "usedErrors": []
            }
          ],
          "src": "112:9182:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
          "exportedSymbols": {
            "MerkleProof": [
              829
            ]
          },
          "id": 830,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 738,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "118:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "MerkleProof",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 739,
                "nodeType": "StructuredDocumentation",
                "src": "143:656:4",
                "text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
              },
              "fullyImplemented": true,
              "id": 829,
              "linearizedBaseContracts": [
                829
              ],
              "name": "MerkleProof",
              "nameLocation": "808:11:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "1281:57:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 753,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 743,
                                "src": "1311:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 754,
                                "name": "leaf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 747,
                                "src": "1318:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 752,
                              "name": "processProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "1298:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1298:25:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 756,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "1327:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1298:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 751,
                        "id": 758,
                        "nodeType": "Return",
                        "src": "1291:40:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 740,
                    "nodeType": "StructuredDocumentation",
                    "src": "826:323:4",
                    "text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify",
                  "nameLocation": "1163:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 748,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "proof",
                        "nameLocation": "1196:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "1179:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 741,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1179:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 742,
                          "nodeType": "ArrayTypeName",
                          "src": "1179:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "root",
                        "nameLocation": "1219:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "1211:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 747,
                        "mutability": "mutable",
                        "name": "leaf",
                        "nameLocation": "1241:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "1233:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1169:82:4"
                  },
                  "returnParameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "1275:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1274:6:4"
                  },
                  "scope": 829,
                  "src": "1154:184:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 816,
                    "nodeType": "Block",
                    "src": "1781:570:4",
                    "statements": [
                      {
                        "assignments": [
                          772
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 772,
                            "mutability": "mutable",
                            "name": "computedHash",
                            "nameLocation": "1799:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 816,
                            "src": "1791:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 771,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1791:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 774,
                        "initialValue": {
                          "id": 773,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "1814:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1791:27:4"
                      },
                      {
                        "body": {
                          "id": 812,
                          "nodeType": "Block",
                          "src": "1871:445:4",
                          "statements": [
                            {
                              "assignments": [
                                787
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 787,
                                  "mutability": "mutable",
                                  "name": "proofElement",
                                  "nameLocation": "1893:12:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 812,
                                  "src": "1885:20:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 786,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1885:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 791,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 788,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "1908:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 790,
                                "indexExpression": {
                                  "id": 789,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 776,
                                  "src": "1914:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1908:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1885:31:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 792,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 772,
                                  "src": "1934:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 793,
                                  "name": "proofElement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "1950:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1934:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 810,
                                "nodeType": "Block",
                                "src": "2138:168:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 803,
                                        "name": "computedHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 772,
                                        "src": "2234:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 805,
                                            "name": "proofElement",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 787,
                                            "src": "2264:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 806,
                                            "name": "computedHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 772,
                                            "src": "2278:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 804,
                                          "name": "_efficientHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 828,
                                          "src": "2249:14:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2249:42:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "2234:57:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 809,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2234:57:4"
                                  }
                                ]
                              },
                              "id": 811,
                              "nodeType": "IfStatement",
                              "src": "1930:376:4",
                              "trueBody": {
                                "id": 802,
                                "nodeType": "Block",
                                "src": "1964:168:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 795,
                                        "name": "computedHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 772,
                                        "src": "2060:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 797,
                                            "name": "computedHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 772,
                                            "src": "2090:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 798,
                                            "name": "proofElement",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 787,
                                            "src": "2104:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 796,
                                          "name": "_efficientHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 828,
                                          "src": "2075:14:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 799,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2075:42:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "2060:57:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 801,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2060:57:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 779,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "1848:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 780,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "1852:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1852:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1848:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 813,
                        "initializationExpression": {
                          "assignments": [
                            776
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 776,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1841:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 813,
                              "src": "1833:9:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 775,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1833:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 778,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1845:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1833:13:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1866:3:4",
                            "subExpression": {
                              "id": 783,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "1866:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 785,
                          "nodeType": "ExpressionStatement",
                          "src": "1866:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "1828:488:4"
                      },
                      {
                        "expression": {
                          "id": 814,
                          "name": "computedHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "2332:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 770,
                        "id": 815,
                        "nodeType": "Return",
                        "src": "2325:19:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "1344:340:4",
                    "text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
                  },
                  "id": 817,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "processProof",
                  "nameLocation": "1698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "proof",
                        "nameLocation": "1728:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "1711:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 762,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1711:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 763,
                          "nodeType": "ArrayTypeName",
                          "src": "1711:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 766,
                        "mutability": "mutable",
                        "name": "leaf",
                        "nameLocation": "1743:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "1735:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1735:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1710:38:4"
                  },
                  "returnParameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "1772:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1772:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1771:9:4"
                  },
                  "scope": 829,
                  "src": "1689:662:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 827,
                    "nodeType": "Block",
                    "src": "2440:135:4",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2459:110:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2480:4:4",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "name": "a",
                                    "nodeType": "YulIdentifier",
                                    "src": "2486:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2473:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2473:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2473:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2508:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  },
                                  {
                                    "name": "b",
                                    "nodeType": "YulIdentifier",
                                    "src": "2514:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2501:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2501:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2501:15:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2529:30:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2548:4:4",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2554:4:4",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2538:9:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2538:21:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2529:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 819,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2486:1:4",
                            "valueSize": 1
                          },
                          {
                            "declaration": 821,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2514:1:4",
                            "valueSize": 1
                          },
                          {
                            "declaration": 824,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2529:5:4",
                            "valueSize": 1
                          }
                        ],
                        "id": 826,
                        "nodeType": "InlineAssembly",
                        "src": "2450:119:4"
                      }
                    ]
                  },
                  "id": 828,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_efficientHash",
                  "nameLocation": "2366:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2389:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "2381:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2381:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 821,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2400:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "2392:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2392:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2380:22:4"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2433:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "2425:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2425:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2424:15:4"
                  },
                  "scope": 829,
                  "src": "2357:218:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 830,
              "src": "800:1777:4",
              "usedErrors": []
            }
          ],
          "src": "118:2460:4"
        },
        "id": 4
      },
      "@rari-capital/solmate/src/tokens/ERC1155.sol": {
        "ast": {
          "absolutePath": "@rari-capital/solmate/src/tokens/ERC1155.sol",
          "exportedSymbols": {
            "ERC1155": [
              1464
            ],
            "ERC1155TokenReceiver": [
              1498
            ]
          },
          "id": 1499,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 831,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ERC1155",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 832,
                "nodeType": "StructuredDocumentation",
                "src": "68:169:5",
                "text": "@notice Minimalist and gas efficient standard ERC1155 implementation.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)"
              },
              "fullyImplemented": false,
              "id": 1464,
              "linearizedBaseContracts": [
                1464
              ],
              "name": "ERC1155",
              "nameLocation": "255:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
                  "id": 844,
                  "name": "TransferSingle",
                  "nameLocation": "454:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "494:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "478:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "528:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "512:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "512:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 838,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "558:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "542:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 840,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "578:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "570:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "570:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "598:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "590:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "468:142:5"
                  },
                  "src": "448:163:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
                  "id": 858,
                  "name": "TransferBatch",
                  "nameLocation": "623:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "662:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "646:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 848,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "696:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "680:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 850,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "726:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "710:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "710:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "748:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "738:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 851,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "738:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 852,
                          "nodeType": "ArrayTypeName",
                          "src": "738:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 856,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "771:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "761:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 854,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 855,
                          "nodeType": "ArrayTypeName",
                          "src": "761:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:148:5"
                  },
                  "src": "617:168:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 866,
                  "name": "ApprovalForAll",
                  "nameLocation": "797:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "828:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "812:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "851:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "835:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "835:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "866:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "861:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "811:64:5"
                  },
                  "src": "791:85:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
                  "id": 872,
                  "name": "URI",
                  "nameLocation": "888:3:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 868,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "899:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "892:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "922:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "906:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "906:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "891:34:5"
                  },
                  "src": "882:44:5"
                },
                {
                  "constant": false,
                  "functionSelector": "00fdd58e",
                  "id": 878,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "1171:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1464,
                  "src": "1116:64:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(uint256 => uint256))"
                  },
                  "typeName": {
                    "id": 877,
                    "keyType": {
                      "id": 873,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1124:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1116:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(uint256 => uint256))"
                    },
                    "valueType": {
                      "id": 876,
                      "keyType": {
                        "id": 874,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1143:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1135:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      },
                      "valueType": {
                        "id": 875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1154:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e985e9c5",
                  "id": 884,
                  "mutability": "mutable",
                  "name": "isApprovedForAll",
                  "nameLocation": "1239:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1464,
                  "src": "1187:68:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(address => bool))"
                  },
                  "typeName": {
                    "id": 883,
                    "keyType": {
                      "id": 879,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1195:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1187:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                      "typeString": "mapping(address => mapping(address => bool))"
                    },
                    "valueType": {
                      "id": 882,
                      "keyType": {
                        "id": 880,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1214:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1206:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "valueType": {
                        "id": 881,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1225:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "functionSelector": "0e89341c",
                  "id": 891,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uri",
                  "nameLocation": "1455:3:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1467:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "1459:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1459:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1458:12:5"
                  },
                  "returnParameters": {
                    "id": 890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 889,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "1500:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 888,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1500:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1499:15:5"
                  },
                  "scope": 1464,
                  "src": "1446:69:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "1779:128:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 898,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 884,
                                "src": "1789:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 902,
                              "indexExpression": {
                                "expression": {
                                  "id": 899,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1806:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1806:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1789:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 903,
                            "indexExpression": {
                              "id": 901,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "1818:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1789:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 904,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "1830:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1789:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 906,
                        "nodeType": "ExpressionStatement",
                        "src": "1789:49:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 908,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1869:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1869:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 910,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "1881:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 911,
                              "name": "approved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "1891:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 907,
                            "name": "ApprovalForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "1854:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1854:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "EmitStatement",
                        "src": "1849:51:5"
                      }
                    ]
                  },
                  "functionSelector": "a22cb465",
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "1713:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1739:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "1731:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1731:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "1754:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "1749:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1730:33:5"
                  },
                  "returnParameters": {
                    "id": 897,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1779:0:5"
                  },
                  "scope": 1464,
                  "src": "1704:203:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "2073:537:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 929,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2091:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2091:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 931,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "2105:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2091:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 933,
                                    "name": "isApprovedForAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "2113:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 935,
                                  "indexExpression": {
                                    "id": 934,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 917,
                                    "src": "2130:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2113:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 938,
                                "indexExpression": {
                                  "expression": {
                                    "id": 936,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2136:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2136:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2113:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2091:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f545f415554484f52495a4544",
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2149:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                                "typeString": "literal_string \"NOT_AUTHORIZED\""
                              },
                              "value": "NOT_AUTHORIZED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                                "typeString": "literal_string \"NOT_AUTHORIZED\""
                              }
                            ],
                            "id": 928,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2083:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2083:83:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "2083:83:5"
                      },
                      {
                        "expression": {
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 943,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "2177:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 946,
                              "indexExpression": {
                                "id": 944,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "2187:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2177:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 947,
                            "indexExpression": {
                              "id": 945,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "2193:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2177:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 948,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "2200:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2177:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 950,
                        "nodeType": "ExpressionStatement",
                        "src": "2177:29:5"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 951,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "2216:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 954,
                              "indexExpression": {
                                "id": 952,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "2226:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2216:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 955,
                            "indexExpression": {
                              "id": 953,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "2230:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2216:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 956,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "2237:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2216:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "2216:27:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 960,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2274:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2274:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 962,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2286:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 963,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "2292:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 964,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "2296:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 965,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "2300:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 959,
                            "name": "TransferSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "2259:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256)"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2259:48:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 967,
                        "nodeType": "EmitStatement",
                        "src": "2254:53:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 969,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 919,
                                      "src": "2339:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 970,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "2339:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2339:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2357:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2339:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 984,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "2455:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2455:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 986,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 917,
                                      "src": "2467:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 987,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 921,
                                      "src": "2473:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 988,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 923,
                                      "src": "2477:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 989,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 925,
                                      "src": "2485:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 981,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 919,
                                          "src": "2433:2:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 980,
                                        "name": "ERC1155TokenReceiver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1498,
                                        "src": "2412:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                          "typeString": "type(contract ERC1155TokenReceiver)"
                                        }
                                      },
                                      "id": 982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2412:24:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1498",
                                        "typeString": "contract ERC1155TokenReceiver"
                                      }
                                    },
                                    "id": 983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155Received",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1480,
                                    "src": "2412:42:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                                    }
                                  },
                                  "id": 990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2412:78:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 991,
                                      "name": "ERC1155TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1498,
                                      "src": "2514:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                        "typeString": "type(contract ERC1155TokenReceiver)"
                                      }
                                    },
                                    "id": 992,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155Received",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1480,
                                    "src": "2514:38:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function ERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                    }
                                  },
                                  "id": 993,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2514:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "2412:149:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "2339:222:5",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 974,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 919,
                                  "src": "2377:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 977,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2391:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2383:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 975,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2383:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2383:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2377:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e534146455f524543495049454e54",
                              "id": 996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2575:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              },
                              "value": "UNSAFE_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              }
                            ],
                            "id": 968,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2318:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2318:285:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 998,
                        "nodeType": "ExpressionStatement",
                        "src": "2318:285:5"
                      }
                    ]
                  },
                  "functionSelector": "f242432a",
                  "id": 1000,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1922:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1956:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "1948:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1948:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1978:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "1970:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1970:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1998:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "1990:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1990:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2018:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "2010:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2047:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "2034:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2034:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1938:119:5"
                  },
                  "returnParameters": {
                    "id": 927,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2073:0:5"
                  },
                  "scope": 1464,
                  "src": "1913:697:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1124,
                    "nodeType": "Block",
                    "src": "2801:974:5",
                    "statements": [
                      {
                        "assignments": [
                          1016
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1016,
                            "mutability": "mutable",
                            "name": "idsLength",
                            "nameLocation": "2819:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1124,
                            "src": "2811:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1015,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2811:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1019,
                        "initialValue": {
                          "expression": {
                            "id": 1017,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2831:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2831:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2811:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1021,
                                "name": "idsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "2877:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1022,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "2890:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2890:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2877:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c454e4754485f4d49534d41544348",
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2906:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              },
                              "value": "LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 1020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2869:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2869:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1027,
                        "nodeType": "ExpressionStatement",
                        "src": "2869:55:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1029,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2943:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2943:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1031,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "2957:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2943:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1033,
                                    "name": "isApprovedForAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "2965:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 1035,
                                  "indexExpression": {
                                    "id": 1034,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "2982:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2965:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1038,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1036,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2988:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2988:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2965:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2943:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f545f415554484f52495a4544",
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3001:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                                "typeString": "literal_string \"NOT_AUTHORIZED\""
                              },
                              "value": "NOT_AUTHORIZED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                                "typeString": "literal_string \"NOT_AUTHORIZED\""
                              }
                            ],
                            "id": 1028,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2935:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2935:83:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "2935:83:5"
                      },
                      {
                        "body": {
                          "id": 1082,
                          "nodeType": "Block",
                          "src": "3066:330:5",
                          "statements": [
                            {
                              "assignments": [
                                1051
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1051,
                                  "mutability": "mutable",
                                  "name": "id",
                                  "nameLocation": "3088:2:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1082,
                                  "src": "3080:10:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1050,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3080:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1055,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1052,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "3093:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1054,
                                "indexExpression": {
                                  "id": 1053,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "3097:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3093:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3080:19:5"
                            },
                            {
                              "assignments": [
                                1057
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1057,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "3121:6:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1082,
                                  "src": "3113:14:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1056,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3113:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1061,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1058,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "3130:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1060,
                                "indexExpression": {
                                  "id": 1059,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1044,
                                  "src": "3138:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3130:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3113:27:5"
                            },
                            {
                              "expression": {
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1062,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "3155:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1065,
                                    "indexExpression": {
                                      "id": 1063,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "3165:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3155:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1066,
                                  "indexExpression": {
                                    "id": 1064,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "3171:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3155:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1067,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "3178:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3155:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1069,
                              "nodeType": "ExpressionStatement",
                              "src": "3155:29:5"
                            },
                            {
                              "expression": {
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1070,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "3198:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1073,
                                    "indexExpression": {
                                      "id": 1071,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1004,
                                      "src": "3208:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3198:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1074,
                                  "indexExpression": {
                                    "id": 1072,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "3212:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3198:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1075,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "3219:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3198:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1077,
                              "nodeType": "ExpressionStatement",
                              "src": "3198:27:5"
                            },
                            {
                              "id": 1081,
                              "nodeType": "UncheckedBlock",
                              "src": "3340:46:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "3368:3:5",
                                    "subExpression": {
                                      "id": 1078,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1044,
                                      "src": "3368:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1080,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3368:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1047,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "3049:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1048,
                            "name": "idsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1016,
                            "src": "3053:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3049:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1083,
                        "initializationExpression": {
                          "assignments": [
                            1044
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1044,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3042:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1083,
                              "src": "3034:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1043,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3034:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1046,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3046:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3034:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "3029:367:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1085,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3425:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3425:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1087,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "3437:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1088,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "3443:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1089,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "3447:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1090,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1010,
                              "src": "3452:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 1084,
                            "name": "TransferBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "3411:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3411:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1092,
                        "nodeType": "EmitStatement",
                        "src": "3406:54:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1094,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1004,
                                      "src": "3492:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "3492:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3492:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3510:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3492:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1109,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3613:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1110,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3613:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1111,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "3625:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1112,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1007,
                                      "src": "3631:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 1113,
                                      "name": "amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1010,
                                      "src": "3636:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 1114,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1012,
                                      "src": "3645:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1106,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1004,
                                          "src": "3586:2:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1105,
                                        "name": "ERC1155TokenReceiver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1498,
                                        "src": "3565:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                          "typeString": "type(contract ERC1155TokenReceiver)"
                                        }
                                      },
                                      "id": 1107,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3565:24:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1498",
                                        "typeString": "contract ERC1155TokenReceiver"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155BatchReceived",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1497,
                                    "src": "3565:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                                    }
                                  },
                                  "id": 1115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3565:85:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1116,
                                      "name": "ERC1155TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1498,
                                      "src": "3674:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                        "typeString": "type(contract ERC1155TokenReceiver)"
                                      }
                                    },
                                    "id": 1117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155BatchReceived",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1497,
                                    "src": "3674:43:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function ERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                    }
                                  },
                                  "id": 1118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3674:52:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "3565:161:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "3492:234:5",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1099,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1004,
                                  "src": "3530:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1102,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3544:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3536:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1100,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3536:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3536:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3530:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e534146455f524543495049454e54",
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3740:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              },
                              "value": "UNSAFE_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              }
                            ],
                            "id": 1093,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3471:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:297:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1123,
                        "nodeType": "ExpressionStatement",
                        "src": "3471:297:5"
                      }
                    ]
                  },
                  "functionSelector": "2eb2c2d6",
                  "id": 1125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeBatchTransferFrom",
                  "nameLocation": "2625:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2664:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "2656:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2686:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "2678:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2678:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2715:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "2698:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1005,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2698:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1006,
                          "nodeType": "ArrayTypeName",
                          "src": "2698:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2745:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "2728:24:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1008,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2728:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1009,
                          "nodeType": "ArrayTypeName",
                          "src": "2728:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2775:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "2762:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2646:139:5"
                  },
                  "returnParameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2801:0:5"
                  },
                  "scope": 1464,
                  "src": "2616:1159:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1186,
                    "nodeType": "Block",
                    "src": "3944:478:5",
                    "statements": [
                      {
                        "assignments": [
                          1138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1138,
                            "mutability": "mutable",
                            "name": "ownersLength",
                            "nameLocation": "3962:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1186,
                            "src": "3954:20:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1137,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3954:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1141,
                        "initialValue": {
                          "expression": {
                            "id": 1139,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "3977:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3977:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3954:36:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1143,
                                "name": "ownersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1138,
                                "src": "4026:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1144,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1131,
                                  "src": "4042:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4042:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4026:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c454e4754485f4d49534d41544348",
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4054:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              },
                              "value": "LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 1142,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4018:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4018:54:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ExpressionStatement",
                        "src": "4018:54:5"
                      },
                      {
                        "expression": {
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1150,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "4083:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1154,
                                  "name": "owners",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "4108:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4108:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4094:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1151,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4098:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1152,
                                "nodeType": "ArrayTypeName",
                                "src": "4098:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4094:28:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4083:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "4083:39:5"
                      },
                      {
                        "id": 1185,
                        "nodeType": "UncheckedBlock",
                        "src": "4264:152:5",
                        "statements": [
                          {
                            "body": {
                              "id": 1183,
                              "nodeType": "Block",
                              "src": "4331:75:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1169,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1135,
                                        "src": "4349:8:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1171,
                                      "indexExpression": {
                                        "id": 1170,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1160,
                                        "src": "4358:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "4349:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1172,
                                          "name": "balanceOf",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 878,
                                          "src": "4363:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                                          }
                                        },
                                        "id": 1176,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 1173,
                                            "name": "owners",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1128,
                                            "src": "4373:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1175,
                                          "indexExpression": {
                                            "id": 1174,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1160,
                                            "src": "4380:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4373:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4363:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 1180,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1177,
                                          "name": "ids",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1131,
                                          "src": "4384:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1179,
                                        "indexExpression": {
                                          "id": 1178,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1160,
                                          "src": "4388:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4384:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4363:28:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4349:42:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1182,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4349:42:5"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1163,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1160,
                                "src": "4308:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1164,
                                "name": "ownersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1138,
                                "src": "4312:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4308:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1184,
                            "initializationExpression": {
                              "assignments": [
                                1160
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1160,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "4301:1:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1184,
                                  "src": "4293:9:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1159,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4293:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1162,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4305:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4293:13:5"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4326:3:5",
                                "subExpression": {
                                  "id": 1166,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "4326:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1168,
                              "nodeType": "ExpressionStatement",
                              "src": "4326:3:5"
                            },
                            "nodeType": "ForStatement",
                            "src": "4288:118:5"
                          }
                        ]
                      }
                    ]
                  },
                  "functionSelector": "4e1273f4",
                  "id": 1187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfBatch",
                  "nameLocation": "3790:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "owners",
                        "nameLocation": "3822:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "3805:23:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3805:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1127,
                          "nodeType": "ArrayTypeName",
                          "src": "3805:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1131,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "3847:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "3830:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1129,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3830:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1130,
                          "nodeType": "ArrayTypeName",
                          "src": "3830:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:47:5"
                  },
                  "returnParameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "balances",
                        "nameLocation": "3930:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1187,
                        "src": "3913:25:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1133,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3913:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1134,
                          "nodeType": "ArrayTypeName",
                          "src": "3913:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3912:27:5"
                  },
                  "scope": 1464,
                  "src": "3781:641:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1206,
                    "nodeType": "Block",
                    "src": "4693:258:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1194,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "4722:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30783031666663396137",
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4737:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_33540519_by_1",
                                  "typeString": "int_const 33540519"
                                },
                                "value": "0x01ffc9a7"
                              },
                              "src": "4722:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1197,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "4797:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30786439623637613236",
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4812:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3652614694_by_1",
                                  "typeString": "int_const 3652614694"
                                },
                                "value": "0xd9b67a26"
                              },
                              "src": "4797:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4722:100:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1201,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "4873:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783065383933343163",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4888:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_243872796_by_1",
                                "typeString": "int_const 243872796"
                              },
                              "value": "0x0e89341c"
                            },
                            "src": "4873:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4722:176:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1193,
                        "id": 1205,
                        "nodeType": "Return",
                        "src": "4703:195:5"
                      }
                    ]
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1207,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "4620:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "4645:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "4638:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "4638:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4637:20:5"
                  },
                  "returnParameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "4687:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4687:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4686:6:5"
                  },
                  "scope": 1464,
                  "src": "4611:340:5",
                  "stateMutability": "pure",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1272,
                    "nodeType": "Block",
                    "src": "5267:416:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1218,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "5277:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1221,
                              "indexExpression": {
                                "id": 1219,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "5287:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5277:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1222,
                            "indexExpression": {
                              "id": 1220,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "5291:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5277:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1223,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "5298:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5277:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1225,
                        "nodeType": "ExpressionStatement",
                        "src": "5277:27:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1227,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5335:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5335:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5355:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5347:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1229,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5347:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5347:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1233,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1209,
                              "src": "5359:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1234,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "5363:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1235,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "5367:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1226,
                            "name": "TransferSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "5320:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256)"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5320:54:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1237,
                        "nodeType": "EmitStatement",
                        "src": "5315:59:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1239,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1209,
                                      "src": "5406:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "5406:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5406:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5424:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5406:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1254,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5522:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5522:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 1258,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5542:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 1257,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5534:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1256,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5534:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1259,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5534:10:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1260,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1211,
                                      "src": "5546:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1261,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1213,
                                      "src": "5550:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1262,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1215,
                                      "src": "5558:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1251,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1209,
                                          "src": "5500:2:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1250,
                                        "name": "ERC1155TokenReceiver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1498,
                                        "src": "5479:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                          "typeString": "type(contract ERC1155TokenReceiver)"
                                        }
                                      },
                                      "id": 1252,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5479:24:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1498",
                                        "typeString": "contract ERC1155TokenReceiver"
                                      }
                                    },
                                    "id": 1253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155Received",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1480,
                                    "src": "5479:42:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                                    }
                                  },
                                  "id": 1263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5479:84:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1264,
                                      "name": "ERC1155TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1498,
                                      "src": "5587:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                        "typeString": "type(contract ERC1155TokenReceiver)"
                                      }
                                    },
                                    "id": 1265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155Received",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1480,
                                    "src": "5587:38:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function ERC1155TokenReceiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                    }
                                  },
                                  "id": 1266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5587:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "5479:155:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "5406:228:5",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1244,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "5444:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1247,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5458:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5450:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1245,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5450:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5450:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5444:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e534146455f524543495049454e54",
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5648:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              },
                              "value": "UNSAFE_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              }
                            ],
                            "id": 1238,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5385:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5385:291:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1271,
                        "nodeType": "ExpressionStatement",
                        "src": "5385:291:5"
                      }
                    ]
                  },
                  "id": 1273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "5155:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5178:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "5170:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5170:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "5198:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "5190:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5190:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5218:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "5210:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5210:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5247:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "5234:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5234:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5160:97:5"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5267:0:5"
                  },
                  "scope": 1464,
                  "src": "5146:537:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1370,
                    "nodeType": "Block",
                    "src": "5835:782:5",
                    "statements": [
                      {
                        "assignments": [
                          1287
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1287,
                            "mutability": "mutable",
                            "name": "idsLength",
                            "nameLocation": "5853:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1370,
                            "src": "5845:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1286,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5845:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1290,
                        "initialValue": {
                          "expression": {
                            "id": 1288,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "5865:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5865:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5845:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1292,
                                "name": "idsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1287,
                                "src": "5911:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1293,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "5924:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5924:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5911:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c454e4754485f4d49534d41544348",
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5940:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              },
                              "value": "LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 1291,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5903:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5903:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1298,
                        "nodeType": "ExpressionStatement",
                        "src": "5903:55:5"
                      },
                      {
                        "body": {
                          "id": 1322,
                          "nodeType": "Block",
                          "src": "6006:220:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1306,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "6020:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1311,
                                    "indexExpression": {
                                      "id": 1307,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1275,
                                      "src": "6030:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6020:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1312,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1308,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1278,
                                      "src": "6034:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1310,
                                    "indexExpression": {
                                      "id": 1309,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1300,
                                      "src": "6038:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6034:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6020:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1313,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1281,
                                    "src": "6045:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1315,
                                  "indexExpression": {
                                    "id": 1314,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "6053:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6045:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6020:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1317,
                              "nodeType": "ExpressionStatement",
                              "src": "6020:35:5"
                            },
                            {
                              "id": 1321,
                              "nodeType": "UncheckedBlock",
                              "src": "6170:46:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "6198:3:5",
                                    "subExpression": {
                                      "id": 1318,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1300,
                                      "src": "6198:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1320,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6198:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1303,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "5989:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1304,
                            "name": "idsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "5993:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5989:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1323,
                        "initializationExpression": {
                          "assignments": [
                            1300
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1300,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5982:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1323,
                              "src": "5974:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1299,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5974:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1302,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5986:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5974:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "5969:257:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6255:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6255:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6275:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6267:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1327,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6267:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6267:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1331,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "6279:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1332,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "6283:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1333,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1281,
                              "src": "6288:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 1324,
                            "name": "TransferBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "6241:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6241:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1335,
                        "nodeType": "EmitStatement",
                        "src": "6236:60:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1337,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1275,
                                      "src": "6328:2:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "code",
                                    "nodeType": "MemberAccess",
                                    "src": "6328:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "6328:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6346:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6328:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 1365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1352,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "6449:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "6449:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 1356,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6469:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 1355,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6461:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1354,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6461:7:5",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6461:10:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1358,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1278,
                                      "src": "6473:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 1359,
                                      "name": "amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1281,
                                      "src": "6478:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    {
                                      "id": 1360,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1283,
                                      "src": "6487:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1349,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1275,
                                          "src": "6422:2:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1348,
                                        "name": "ERC1155TokenReceiver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1498,
                                        "src": "6401:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                          "typeString": "type(contract ERC1155TokenReceiver)"
                                        }
                                      },
                                      "id": 1350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6401:24:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1498",
                                        "typeString": "contract ERC1155TokenReceiver"
                                      }
                                    },
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155BatchReceived",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1497,
                                    "src": "6401:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                                    }
                                  },
                                  "id": 1361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6401:91:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1362,
                                      "name": "ERC1155TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1498,
                                      "src": "6516:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1498_$",
                                        "typeString": "type(contract ERC1155TokenReceiver)"
                                      }
                                    },
                                    "id": 1363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "onERC1155BatchReceived",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1497,
                                    "src": "6516:43:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                      "typeString": "function ERC1155TokenReceiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                    }
                                  },
                                  "id": 1364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6516:52:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6401:167:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "6328:240:5",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1342,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1275,
                                  "src": "6366:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6380:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6372:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1343,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6372:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6372:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6366:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e534146455f524543495049454e54",
                              "id": 1367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6582:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              },
                              "value": "UNSAFE_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                                "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                              }
                            ],
                            "id": 1336,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6307:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6307:303:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "6307:303:5"
                      }
                    ]
                  },
                  "id": 1371,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_batchMint",
                  "nameLocation": "5698:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5726:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "5718:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5718:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1278,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "5755:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "5738:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1276,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5738:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1277,
                          "nodeType": "ArrayTypeName",
                          "src": "5738:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "5785:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "5768:24:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1279,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5768:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1280,
                          "nodeType": "ArrayTypeName",
                          "src": "5768:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5815:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "5802:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5802:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5708:117:5"
                  },
                  "returnParameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5835:0:5"
                  },
                  "scope": 1464,
                  "src": "5689:928:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1432,
                    "nodeType": "Block",
                    "src": "6744:472:5",
                    "statements": [
                      {
                        "assignments": [
                          1383
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1383,
                            "mutability": "mutable",
                            "name": "idsLength",
                            "nameLocation": "6762:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1432,
                            "src": "6754:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1382,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6754:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1386,
                        "initialValue": {
                          "expression": {
                            "id": 1384,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1376,
                            "src": "6774:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6774:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6754:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1388,
                                "name": "idsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "6820:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1389,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1379,
                                  "src": "6833:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6833:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6820:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c454e4754485f4d49534d41544348",
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6849:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              },
                              "value": "LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c58dd6910b3d398979b9081d1d6e7a265ec7a7fb91e9e38230c02220af4c5217",
                                "typeString": "literal_string \"LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 1387,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6812:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6812:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "6812:55:5"
                      },
                      {
                        "body": {
                          "id": 1418,
                          "nodeType": "Block",
                          "src": "6915:222:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1402,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "6929:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1407,
                                    "indexExpression": {
                                      "id": 1403,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1373,
                                      "src": "6939:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6929:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1408,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1404,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1376,
                                      "src": "6945:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1406,
                                    "indexExpression": {
                                      "id": 1405,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1396,
                                      "src": "6949:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6945:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6929:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1409,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1379,
                                    "src": "6956:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1411,
                                  "indexExpression": {
                                    "id": 1410,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1396,
                                    "src": "6964:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6956:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6929:37:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1413,
                              "nodeType": "ExpressionStatement",
                              "src": "6929:37:5"
                            },
                            {
                              "id": 1417,
                              "nodeType": "UncheckedBlock",
                              "src": "7081:46:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "7109:3:5",
                                    "subExpression": {
                                      "id": 1414,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1396,
                                      "src": "7109:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1416,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7109:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1399,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1396,
                            "src": "6898:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1400,
                            "name": "idsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "6902:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6898:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1419,
                        "initializationExpression": {
                          "assignments": [
                            1396
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1396,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6891:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1419,
                              "src": "6883:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1395,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6883:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1398,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6895:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6883:13:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "6878:259:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7166:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7166:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1423,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "7178:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7192:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7184:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1424,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7184:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7184:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1428,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1376,
                              "src": "7196:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1429,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "7201:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 1420,
                            "name": "TransferBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "7152:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                            }
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7152:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1431,
                        "nodeType": "EmitStatement",
                        "src": "7147:62:5"
                      }
                    ]
                  },
                  "id": 1433,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_batchBurn",
                  "nameLocation": "6632:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6660:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "6652:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6652:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "6691:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "6674:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1374,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6674:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1375,
                          "nodeType": "ArrayTypeName",
                          "src": "6674:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "6721:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "6704:24:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1377,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6704:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1378,
                          "nodeType": "ArrayTypeName",
                          "src": "6704:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6642:92:5"
                  },
                  "returnParameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6744:0:5"
                  },
                  "scope": 1464,
                  "src": "6623:593:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1462,
                    "nodeType": "Block",
                    "src": "7318:118:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1442,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "7328:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1445,
                              "indexExpression": {
                                "id": 1443,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1435,
                                "src": "7338:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7328:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1446,
                            "indexExpression": {
                              "id": 1444,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "7344:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7328:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1447,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "7351:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7328:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1449,
                        "nodeType": "ExpressionStatement",
                        "src": "7328:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1451,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7388:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7388:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1453,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1435,
                              "src": "7400:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7414:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7406:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1454,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7406:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7406:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1458,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "7418:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1459,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "7422:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1450,
                            "name": "TransferSingle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "7373:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7373:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1461,
                        "nodeType": "EmitStatement",
                        "src": "7368:61:5"
                      }
                    ]
                  },
                  "id": 1463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7231:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7254:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "7246:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7246:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "7276:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "7268:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7268:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7296:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "7288:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7288:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7236:72:5"
                  },
                  "returnParameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7318:0:5"
                  },
                  "scope": 1464,
                  "src": "7222:214:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1499,
              "src": "237:7201:5",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC1155TokenReceiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1465,
                "nodeType": "StructuredDocumentation",
                "src": "7440:181:5",
                "text": "@notice A generic interface for a contract which properly accepts ERC1155 tokens.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC1155.sol)"
              },
              "fullyImplemented": false,
              "id": 1498,
              "linearizedBaseContracts": [
                1498
              ],
              "name": "ERC1155TokenReceiver",
              "nameLocation": "7631:20:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "f23a6e61",
                  "id": 1480,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155Received",
                  "nameLocation": "7667:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "7702:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7694:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7694:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7728:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7720:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7720:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1471,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "7750:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7742:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7742:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7770:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7762:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7762:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7801:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7786:19:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7786:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7684:127:5"
                  },
                  "returnParameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1478,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "7830:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1477,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "7830:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7829:8:5"
                  },
                  "scope": 1498,
                  "src": "7658:180:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bc197c81",
                  "id": 1497,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155BatchReceived",
                  "nameLocation": "7853:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "7893:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "7885:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7885:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7919:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "7911:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7911:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1487,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "7952:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "7933:22:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1485,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7933:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1486,
                          "nodeType": "ArrayTypeName",
                          "src": "7933:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "7984:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "7965:26:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1488,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7965:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1489,
                          "nodeType": "ArrayTypeName",
                          "src": "7965:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8016:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "8001:19:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8001:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7875:151:5"
                  },
                  "returnParameters": {
                    "id": 1496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "8045:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "8045:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8044:8:5"
                  },
                  "scope": 1498,
                  "src": "7844:209:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1499,
              "src": "7621:434:5",
              "usedErrors": []
            }
          ],
          "src": "42:8014:5"
        },
        "id": 5
      },
      "contracts/StoreFront.sol": {
        "ast": {
          "absolutePath": "contracts/StoreFront.sol",
          "exportedSymbols": {
            "ERC1155": [
              1464
            ],
            "Ownable": [
              104
            ],
            "StoreFront": [
              1796
            ],
            "Strings": [
              329
            ]
          },
          "id": 1797,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1500,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".14"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:6"
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC1155.sol",
              "file": "@rari-capital/solmate/src/tokens/ERC1155.sol",
              "id": 1502,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1797,
              "sourceUnit": 1499,
              "src": "58:71:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1501,
                    "name": "ERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1464,
                    "src": "67:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1504,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1797,
              "sourceUnit": 105,
              "src": "130:69:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1503,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "139:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
              "file": "@openzeppelin/contracts/utils/Strings.sol",
              "id": 1506,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1797,
              "sourceUnit": 330,
              "src": "200:68:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1505,
                    "name": "Strings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 329,
                    "src": "209:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1507,
                    "name": "ERC1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1464,
                    "src": "293:7:6"
                  },
                  "id": 1508,
                  "nodeType": "InheritanceSpecifier",
                  "src": "293:7:6"
                },
                {
                  "baseName": {
                    "id": 1509,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "302:7:6"
                  },
                  "id": 1510,
                  "nodeType": "InheritanceSpecifier",
                  "src": "302:7:6"
                }
              ],
              "canonicalName": "StoreFront",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1796,
              "linearizedBaseContracts": [
                1796,
                104,
                126,
                1464
              ],
              "name": "StoreFront",
              "nameLocation": "279:10:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1515,
                  "mutability": "constant",
                  "name": "DOMAIN_TYPEHASH",
                  "nameLocation": "333:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "316:160:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "382:84:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 1512,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "359:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1520,
                  "mutability": "constant",
                  "name": "PERMIT_ALL_TYPEHASH",
                  "nameLocation": "500:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "483:168:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5065726d6974416c6c2861646472657373206f776e65722c61646472657373206f70657261746f722c626f6f6c20617070726f7665642c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "553:88:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_200d2483757e19728fc8a3511298158c1b74dd131c7be00c4904e11665b42cd1",
                          "typeString": "literal_string \"PermitAll(address owner,address operator,bool approved,uint256 nonce,uint256 deadline)\""
                        },
                        "value": "PermitAll(address owner,address operator,bool approved,uint256 nonce,uint256 deadline)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_200d2483757e19728fc8a3511298158c1b74dd131c7be00c4904e11665b42cd1",
                          "typeString": "literal_string \"PermitAll(address owner,address operator,bool approved,uint256 nonce,uint256 deadline)\""
                        }
                      ],
                      "id": 1517,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "530:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:121:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "functionSelector": "a3f4df7e",
                  "id": 1523,
                  "mutability": "constant",
                  "name": "NAME",
                  "nameLocation": "681:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "658:42:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "53544f524546524f4e54",
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "688:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ffdffc95429c0c2eeeb6ee29e9250e1d29f7737dde1a2d5c5b649295221a4252",
                      "typeString": "literal_string \"STOREFRONT\""
                    },
                    "value": "STOREFRONT"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ffa1ad74",
                  "id": 1526,
                  "mutability": "constant",
                  "name": "VERSION",
                  "nameLocation": "729:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "706:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "739:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1527,
                    "nodeType": "StructuredDocumentation",
                    "src": "748:42:6",
                    "text": "nonces for permit signature validation"
                  },
                  "functionSelector": "7ecebe00",
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "nonces",
                  "nameLocation": "830:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "795:41:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1530,
                    "keyType": {
                      "id": 1528,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "803:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "795:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1529,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "814:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "bd85b039",
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "878:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "843:46:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 1534,
                    "keyType": {
                      "id": 1532,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "851:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "843:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueType": {
                      "id": 1533,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "862:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "902:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "895:14:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "923:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "915:14:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "nextId",
                  "nameLocation": "943:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "935:14:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1556,
                    "nodeType": "Block",
                    "src": "1009:61:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1548,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "1019:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1549,
                            "name": "_minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1543,
                            "src": "1028:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1019:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1551,
                        "nodeType": "ExpressionStatement",
                        "src": "1019:16:6"
                      },
                      {
                        "expression": {
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1552,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "1045:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1553,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1545,
                            "src": "1055:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1045:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1555,
                        "nodeType": "ExpressionStatement",
                        "src": "1045:18:6"
                      }
                    ]
                  },
                  "id": 1557,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1543,
                        "mutability": "mutable",
                        "name": "_minter",
                        "nameLocation": "976:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1557,
                        "src": "968:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1542,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "_baseURI",
                        "nameLocation": "999:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1557,
                        "src": "985:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "985:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:41:6"
                  },
                  "returnParameters": {
                    "id": 1547,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1009:0:6"
                  },
                  "scope": 1796,
                  "src": "956:114:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1567,
                    "nodeType": "Block",
                    "src": "1098:57:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1560,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1116:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1116:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1562,
                                "name": "minter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1539,
                                "src": "1130:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1116:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1559,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1108:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:29:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1565,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:29:6"
                      },
                      {
                        "id": 1566,
                        "nodeType": "PlaceholderStatement",
                        "src": "1147:1:6"
                      }
                    ]
                  },
                  "id": 1568,
                  "name": "onlyMinter",
                  "nameLocation": "1085:10:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1095:2:6"
                  },
                  "src": "1076:79:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1591,
                    "nodeType": "Block",
                    "src": "1225:90:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1578,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "1241:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1579,
                              "name": "nextId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1541,
                              "src": "1246:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1580,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "1254:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1263:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 1577,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "1235:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes memory)"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1235:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1583,
                        "nodeType": "ExpressionStatement",
                        "src": "1235:31:6"
                      },
                      {
                        "expression": {
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1584,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1535,
                              "src": "1276:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1587,
                            "indexExpression": {
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "1288:8:6",
                              "subExpression": {
                                "id": 1585,
                                "name": "nextId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1541,
                                "src": "1288:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1276:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1588,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1572,
                            "src": "1301:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1276:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1590,
                        "nodeType": "ExpressionStatement",
                        "src": "1276:32:6"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1575,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1574,
                        "name": "onlyMinter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1568,
                        "src": "1214:10:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1214:10:6"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "1170:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1570,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "1183:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "1175:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1572,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1196:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "1188:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1188:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1174:30:6"
                  },
                  "returnParameters": {
                    "id": 1576,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1225:0:6"
                  },
                  "scope": 1796,
                  "src": "1161:154:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1622,
                    "nodeType": "Block",
                    "src": "1388:303:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1600,
                                  "name": "DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1515,
                                  "src": "1476:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1604,
                                          "name": "NAME",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1523,
                                          "src": "1529:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1603,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1523:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 1602,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1523:5:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1523:11:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1601,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1513:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1513:22:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1610,
                                          "name": "VERSION",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1526,
                                          "src": "1573:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1609,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1567:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 1608,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1567:5:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1611,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1567:14:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1607,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1557:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1557:25:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1613,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1604:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "1604:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1617,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1647:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_StoreFront_$1796",
                                        "typeString": "contract StoreFront"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_StoreFront_$1796",
                                        "typeString": "contract StoreFront"
                                      }
                                    ],
                                    "id": 1616,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1639:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1615,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1639:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1639:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1598,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1444:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1444:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1444:226:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1597,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1417:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1417:267:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1596,
                        "id": 1621,
                        "nodeType": "Return",
                        "src": "1398:286:6"
                      }
                    ]
                  },
                  "id": 1623,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_computeDomainSeparator",
                  "nameLocation": "1330:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1353:2:6"
                  },
                  "returnParameters": {
                    "id": 1596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1595,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "1379:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1594,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1379:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1378:9:6"
                  },
                  "scope": 1796,
                  "src": "1321:370:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1634,
                    "nodeType": "Block",
                    "src": "1761:31:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1630,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "1771:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1631,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1625,
                            "src": "1781:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "1771:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1633,
                        "nodeType": "ExpressionStatement",
                        "src": "1771:14:6"
                      }
                    ]
                  },
                  "functionSelector": "39f7e37f",
                  "id": 1635,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1628,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1627,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1751:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1751:9:6"
                    }
                  ],
                  "name": "updateBaseUri",
                  "nameLocation": "1706:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1736:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1635,
                        "src": "1720:20:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1720:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1719:22:6"
                  },
                  "returnParameters": {
                    "id": 1629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1761:0:6"
                  },
                  "scope": 1796,
                  "src": "1697:95:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    891
                  ],
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "1868:161:6",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1645,
                                    "name": "baseURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1537,
                                    "src": "1903:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "id": 1644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1897:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1643,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1897:5:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1897:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes storage pointer"
                                }
                              },
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1897:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1921:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1897:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1661,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "2015:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1897:125:6",
                          "trueExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1654,
                                    "name": "baseURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1537,
                                    "src": "1965:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1657,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1637,
                                        "src": "1991:2:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1655,
                                        "name": "Strings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 329,
                                        "src": "1974:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Strings_$329_$",
                                          "typeString": "type(library Strings)"
                                        }
                                      },
                                      "id": 1656,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 211,
                                      "src": "1974:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 1658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1974:20:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1652,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1948:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1948:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1948:47:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1941:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1650,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1941:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1941:55:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1642,
                        "id": 1663,
                        "nodeType": "Return",
                        "src": "1878:144:6"
                      }
                    ]
                  },
                  "functionSelector": "0e89341c",
                  "id": 1665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uri",
                  "nameLocation": "1807:3:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1639,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1835:8:6"
                  },
                  "parameters": {
                    "id": 1638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1637,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1819:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "1811:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1636,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1810:12:6"
                  },
                  "returnParameters": {
                    "id": 1642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1641,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "1853:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1640,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1852:15:6"
                  },
                  "scope": 1796,
                  "src": "1798:231:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1746,
                    "nodeType": "Block",
                    "src": "2229:562:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1682,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2243:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2243:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1684,
                            "name": "_deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1673,
                            "src": "2261:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2243:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1690,
                        "nodeType": "IfStatement",
                        "src": "2239:54:6",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "5349472045585049524544",
                                "id": 1687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2279:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ba01c2daf161053899eea49f0206417c2e334c281d151d3907a26ac229339a16",
                                  "typeString": "literal_string \"SIG EXPIRED\""
                                },
                                "value": "SIG EXPIRED"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_ba01c2daf161053899eea49f0206417c2e334c281d151d3907a26ac229339a16",
                                  "typeString": "literal_string \"SIG EXPIRED\""
                                }
                              ],
                              "id": 1686,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "2272:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 1688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2272:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1689,
                          "nodeType": "ExpressionStatement",
                          "src": "2272:21:6"
                        }
                      },
                      {
                        "assignments": [
                          1692
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1692,
                            "mutability": "mutable",
                            "name": "structHash",
                            "nameLocation": "2312:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1746,
                            "src": "2304:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1691,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2304:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1699,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1694,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "2366:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1695,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1669,
                              "src": "2386:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1696,
                              "name": "_approved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "2409:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1697,
                              "name": "_deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "2432:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1693,
                            "name": "_computePermitAllStructHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1795,
                            "src": "2325:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,address,bool,uint256) returns (bytes32)"
                            }
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2325:126:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2304:147:6"
                      },
                      {
                        "assignments": [
                          1701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1701,
                            "mutability": "mutable",
                            "name": "digest",
                            "nameLocation": "2470:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1746,
                            "src": "2462:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1700,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2462:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1707,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1703,
                                "name": "_computeDomainSeparator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "2494:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view returns (bytes32)"
                                }
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2494:25:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1705,
                              "name": "structHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1692,
                              "src": "2521:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1702,
                            "name": "_computeDigest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1766,
                            "src": "2479:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2479:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2462:70:6"
                      },
                      {
                        "assignments": [
                          1709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1709,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "2551:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1746,
                            "src": "2543:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2543:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1716,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1711,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "2570:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1712,
                              "name": "_v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "2578:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1713,
                              "name": "_r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1677,
                              "src": "2582:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1714,
                              "name": "_s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "2586:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1710,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "2560:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2560:29:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2543:46:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1717,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "2604:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2622:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2614:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1718,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2614:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2614:10:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2604:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1723,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "2628:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1724,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "2638:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2628:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2604:40:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1731,
                        "nodeType": "IfStatement",
                        "src": "2600:66:6",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "494e56414c4944534947",
                                "id": 1728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2653:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_42017e6216216c472b610e410524104372980c96982af905556a7dd387c2e8da",
                                  "typeString": "literal_string \"INVALIDSIG\""
                                },
                                "value": "INVALIDSIG"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_42017e6216216c472b610e410524104372980c96982af905556a7dd387c2e8da",
                                  "typeString": "literal_string \"INVALIDSIG\""
                                }
                              ],
                              "id": 1727,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "2646:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 1729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2646:20:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1730,
                          "nodeType": "ExpressionStatement",
                          "src": "2646:20:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1732,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 884,
                                "src": "2677:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 1735,
                              "indexExpression": {
                                "id": 1733,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1667,
                                "src": "2694:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2677:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1736,
                            "indexExpression": {
                              "id": 1734,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1669,
                              "src": "2702:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2677:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1737,
                            "name": "_approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "2715:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2677:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1739,
                        "nodeType": "ExpressionStatement",
                        "src": "2677:47:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1741,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "2755:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1742,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1669,
                              "src": "2763:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1743,
                              "name": "_approved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "2774:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1740,
                            "name": "ApprovalForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "2740:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2740:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1745,
                        "nodeType": "EmitStatement",
                        "src": "2735:49:6"
                      }
                    ]
                  },
                  "functionSelector": "cfa8fb42",
                  "id": 1747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permitAll",
                  "nameLocation": "2044:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1667,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "2071:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2063:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2063:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "_operator",
                        "nameLocation": "2095:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2087:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2087:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1671,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "2119:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2114:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1670,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2114:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "2146:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2138:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2138:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1675,
                        "mutability": "mutable",
                        "name": "_v",
                        "nameLocation": "2171:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2165:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1674,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2165:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "_r",
                        "nameLocation": "2191:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2183:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1676,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "_s",
                        "nameLocation": "2211:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1747,
                        "src": "2203:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:166:6"
                  },
                  "returnParameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2229:0:6"
                  },
                  "scope": 1796,
                  "src": "2035:756:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1765,
                    "nodeType": "Block",
                    "src": "2928:136:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 1759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3001:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "id": 1760,
                                  "name": "_domainSeparator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1749,
                                  "src": "3013:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 1761,
                                  "name": "_structHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1751,
                                  "src": "3031:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1757,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2984:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2984:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2984:59:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1756,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2957:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2957:100:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1755,
                        "id": 1764,
                        "nodeType": "Return",
                        "src": "2938:119:6"
                      }
                    ]
                  },
                  "id": 1766,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_computeDigest",
                  "nameLocation": "2806:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1749,
                        "mutability": "mutable",
                        "name": "_domainSeparator",
                        "nameLocation": "2829:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2821:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1748,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2821:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1751,
                        "mutability": "mutable",
                        "name": "_structHash",
                        "nameLocation": "2855:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2847:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1750,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2847:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2820:47:6"
                  },
                  "returnParameters": {
                    "id": 1755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1754,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2915:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1753,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2915:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2914:9:6"
                  },
                  "scope": 1796,
                  "src": "2797:267:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1794,
                    "nodeType": "Block",
                    "src": "3242:305:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1782,
                                  "name": "PERMIT_ALL_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1520,
                                  "src": "3330:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 1783,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1768,
                                  "src": "3371:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1784,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1770,
                                  "src": "3399:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1785,
                                  "name": "_approved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1772,
                                  "src": "3430:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 1789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "3461:16:6",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1786,
                                      "name": "nonces",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1531,
                                      "src": "3461:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1788,
                                    "indexExpression": {
                                      "id": 1787,
                                      "name": "_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1768,
                                      "src": "3468:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "3461:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1790,
                                  "name": "_deadline",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1774,
                                  "src": "3499:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1780,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3298:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3298:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3298:228:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1779,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3271:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3271:269:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1778,
                        "id": 1793,
                        "nodeType": "Return",
                        "src": "3252:288:6"
                      }
                    ]
                  },
                  "id": 1795,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_computePermitAllStructHash",
                  "nameLocation": "3079:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "3124:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "3116:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1767,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3116:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1770,
                        "mutability": "mutable",
                        "name": "_operator",
                        "nameLocation": "3148:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "3140:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3140:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1772,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "3172:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "3167:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3167:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1774,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "3199:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "3191:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3106:108:6"
                  },
                  "returnParameters": {
                    "id": 1778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1777,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "3233:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1776,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:9:6"
                  },
                  "scope": 1796,
                  "src": "3070:477:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1797,
              "src": "270:3279:6",
              "usedErrors": []
            }
          ],
          "src": "32:3518:6"
        },
        "id": 6
      },
      "contracts/test/TestERC1155.sol": {
        "ast": {
          "absolutePath": "contracts/test/TestERC1155.sol",
          "exportedSymbols": {
            "ERC1155": [
              1464
            ],
            "ERC1155TokenReceiver": [
              1498
            ],
            "TestERC1155": [
              1834
            ]
          },
          "id": 1835,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1798,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:7"
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC1155.sol",
              "file": "@rari-capital/solmate/src/tokens/ERC1155.sol",
              "id": 1799,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1835,
              "sourceUnit": 1499,
              "src": "62:54:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1800,
                    "name": "ERC1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1464,
                    "src": "189:7:7"
                  },
                  "id": 1801,
                  "nodeType": "InheritanceSpecifier",
                  "src": "189:7:7"
                }
              ],
              "canonicalName": "TestERC1155",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1834,
              "linearizedBaseContracts": [
                1834,
                1464
              ],
              "name": "TestERC1155",
              "nameLocation": "174:11:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1821,
                    "nodeType": "Block",
                    "src": "314:68:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1813,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1803,
                              "src": "330:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1814,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1805,
                              "src": "334:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1815,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1807,
                              "src": "343:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "351:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 1812,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "324:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes memory)"
                            }
                          },
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "324:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1818,
                        "nodeType": "ExpressionStatement",
                        "src": "324:30:7"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "371:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1811,
                        "id": 1820,
                        "nodeType": "Return",
                        "src": "364:11:7"
                      }
                    ]
                  },
                  "functionSelector": "156e29f6",
                  "id": 1822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "212:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "234:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "226:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "254:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "246:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "246:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1807,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "279:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "271:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "271:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "216:75:7"
                  },
                  "returnParameters": {
                    "id": 1811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1810,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "308:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1809,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "307:6:7"
                  },
                  "scope": 1834,
                  "src": "203:179:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    891
                  ],
                  "body": {
                    "id": 1832,
                    "nodeType": "Block",
                    "src": "455:29:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "757269",
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "472:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1",
                            "typeString": "literal_string \"uri\""
                          },
                          "value": "uri"
                        },
                        "functionReturnParameters": 1829,
                        "id": 1831,
                        "nodeType": "Return",
                        "src": "465:12:7"
                      }
                    ]
                  },
                  "functionSelector": "0e89341c",
                  "id": 1833,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uri",
                  "nameLocation": "397:3:7",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1826,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "422:8:7"
                  },
                  "parameters": {
                    "id": 1825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "401:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "401:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "400:9:7"
                  },
                  "returnParameters": {
                    "id": 1829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1828,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "440:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1827,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "439:15:7"
                  },
                  "scope": 1834,
                  "src": "388:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1835,
              "src": "165:321:7",
              "usedErrors": []
            }
          ],
          "src": "37:450:7"
        },
        "id": 7
      },
      "contracts/zones/order-check/OrderCheckZone.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/OrderCheckZone.sol",
          "exportedSymbols": {
            "AdvancedOrder": [
              2483
            ],
            "CriteriaResolver": [
              2505
            ],
            "ECDSA": [
              736
            ],
            "Execution": [
              2527
            ],
            "Fulfillment": [
              2514
            ],
            "MerkleProof": [
              829
            ],
            "Order": [
              2471
            ],
            "OrderCheckZone": [
              1983
            ],
            "OrderComponents": [
              2344
            ],
            "SeaportInterface": [
              2207
            ],
            "Strings": [
              329
            ],
            "ZoneInteractionErrors": [
              2216
            ],
            "ZoneInterface": [
              2260
            ]
          },
          "id": 1984,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1836,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".13"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:8"
            },
            {
              "absolutePath": "contracts/zones/order-check/interfaces/ZoneInterface.sol",
              "file": "./interfaces/ZoneInterface.sol",
              "id": 1838,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 2261,
              "src": "65:63:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1837,
                    "name": "ZoneInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2260,
                    "src": "74:13:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol",
              "file": "./interfaces/ZoneInteractionErrors.sol",
              "id": 1840,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 2217,
              "src": "129:79:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1839,
                    "name": "ZoneInteractionErrors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2216,
                    "src": "138:21:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/zones/order-check/interfaces/SeaportInterface.sol",
              "file": "./interfaces/SeaportInterface.sol",
              "id": 1842,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 2208,
              "src": "209:69:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1841,
                    "name": "SeaportInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2207,
                    "src": "218:16:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
              "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
              "id": 1843,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 830,
              "src": "279:68:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "id": 1844,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 737,
              "src": "349:62:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/zones/order-check/lib/ConsiderationStructs.sol",
              "file": "./lib/ConsiderationStructs.sol",
              "id": 1851,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1984,
              "sourceUnit": 2528,
              "src": "432:153:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1845,
                    "name": "AdvancedOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2483,
                    "src": "445:13:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1846,
                    "name": "CriteriaResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2505,
                    "src": "464:16:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1847,
                    "name": "Order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2471,
                    "src": "486:5:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1848,
                    "name": "OrderComponents",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2344,
                    "src": "497:15:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1849,
                    "name": "Fulfillment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "518:11:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1850,
                    "name": "Execution",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2527,
                    "src": "535:9:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1852,
                    "name": "ZoneInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2260,
                    "src": "614:13:8"
                  },
                  "id": 1853,
                  "nodeType": "InheritanceSpecifier",
                  "src": "614:13:8"
                }
              ],
              "canonicalName": "OrderCheckZone",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1983,
              "linearizedBaseContracts": [
                1983,
                2260
              ],
              "name": "OrderCheckZone",
              "nameLocation": "596:14:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    2240
                  ],
                  "body": {
                    "id": 1882,
                    "nodeType": "Block",
                    "src": "1323:213:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1868,
                          "name": "orderHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "1333:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1869,
                        "nodeType": "ExpressionStatement",
                        "src": "1333:9:8"
                      },
                      {
                        "expression": {
                          "id": 1870,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "1352:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1871,
                        "nodeType": "ExpressionStatement",
                        "src": "1352:6:8"
                      },
                      {
                        "expression": {
                          "id": 1872,
                          "name": "offerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1860,
                          "src": "1368:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1873,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:7:8"
                      },
                      {
                        "expression": {
                          "id": 1874,
                          "name": "zoneHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "1385:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "1385:8:8"
                      },
                      {
                        "expression": {
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1876,
                            "name": "validOrderMagicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1866,
                            "src": "1471:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1877,
                                "name": "ZoneInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "1494:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ZoneInterface_$2260_$",
                                  "typeString": "type(contract ZoneInterface)"
                                }
                              },
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidOrder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2240,
                              "src": "1494:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                                "typeString": "function ZoneInterface.isValidOrder(bytes32,address,address,bytes32) view returns (bytes4)"
                              }
                            },
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1494:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1471:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1881,
                        "nodeType": "ExpressionStatement",
                        "src": "1471:58:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1854,
                    "nodeType": "StructuredDocumentation",
                    "src": "634:493:8",
                    "text": " @notice No checks required \n @dev This function is called by Seaport whenever extraData is not\n      provided by the caller.\n @param orderHash The hash of the order.\n @param caller    The caller in question.\n @param offerer   The offerer in question.\n @param zoneHash  The hash to provide upon calling the zone.\n @return validOrderMagicValue A magic value indicating if the order is\n                              currently valid."
                  },
                  "functionSelector": "0e1d31dc",
                  "id": 1883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidOrder",
                  "nameLocation": "1141:12:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1864,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1276:8:8"
                  },
                  "parameters": {
                    "id": 1863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1856,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "1171:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "1163:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1855,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1163:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1198:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "1190:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1190:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1860,
                        "mutability": "mutable",
                        "name": "offerer",
                        "nameLocation": "1222:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "1214:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1214:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1862,
                        "mutability": "mutable",
                        "name": "zoneHash",
                        "nameLocation": "1247:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "1239:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1861,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1239:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1153:108:8"
                  },
                  "returnParameters": {
                    "id": 1867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1866,
                        "mutability": "mutable",
                        "name": "validOrderMagicValue",
                        "nameLocation": "1301:20:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1883,
                        "src": "1294:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1865,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1294:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1293:29:8"
                  },
                  "scope": 1983,
                  "src": "1132:404:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2259
                  ],
                  "body": {
                    "id": 1981,
                    "nodeType": "Block",
                    "src": "2771:1248:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1904,
                          "name": "orderHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1886,
                          "src": "2781:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1905,
                        "nodeType": "ExpressionStatement",
                        "src": "2781:9:8"
                      },
                      {
                        "expression": {
                          "id": 1906,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1888,
                          "src": "2800:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1907,
                        "nodeType": "ExpressionStatement",
                        "src": "2800:6:8"
                      },
                      {
                        "expression": {
                          "id": 1908,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1891,
                          "src": "2816:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                            "typeString": "struct AdvancedOrder calldata"
                          }
                        },
                        "id": 1909,
                        "nodeType": "ExpressionStatement",
                        "src": "2816:5:8"
                      },
                      {
                        "expression": {
                          "id": 1910,
                          "name": "priorOrderHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "2831:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          }
                        },
                        "id": 1911,
                        "nodeType": "ExpressionStatement",
                        "src": "2831:16:8"
                      },
                      {
                        "expression": {
                          "id": 1912,
                          "name": "criteriaResolvers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "2857:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct CriteriaResolver calldata[] calldata"
                          }
                        },
                        "id": 1913,
                        "nodeType": "ExpressionStatement",
                        "src": "2857:17:8"
                      },
                      {
                        "assignments": [
                          1915,
                          1917,
                          1920,
                          1922
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1915,
                            "mutability": "mutable",
                            "name": "_voucherHash",
                            "nameLocation": "3099:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3091:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1914,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3091:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1917,
                            "mutability": "mutable",
                            "name": "_voucherSignature",
                            "nameLocation": "3138:17:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3125:30:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1916,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3125:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1920,
                            "mutability": "mutable",
                            "name": "_merkleProof",
                            "nameLocation": "3186:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3169:29:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1918,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "3169:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1919,
                              "nodeType": "ArrayTypeName",
                              "src": "3169:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1922,
                            "mutability": "mutable",
                            "name": "_merkleRoot",
                            "nameLocation": "3220:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3212:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1921,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3212:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1938,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1925,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1891,
                                "src": "3255:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                                  "typeString": "struct AdvancedOrder calldata"
                                }
                              },
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "extraData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2482,
                              "src": "3255:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3273:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1927,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3273:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 1930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3282:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1929,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3282:5:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 1932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3289:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 1931,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3289:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3289:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                    "typeString": "type(bytes32[] memory)"
                                  }
                                },
                                {
                                  "id": 1935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3300:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1934,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3300:7:8",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1936,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3272:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes32),type(bytes storage pointer),type(bytes32[] memory),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes32),type(bytes storage pointer),type(bytes32[] memory),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 1923,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3244:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3244:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3244:65:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes32,bytes memory,bytes32[] memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3077:232:8"
                      },
                      {
                        "assignments": [
                          1940
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1940,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "3462:6:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3454:14:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3454:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1946,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1943,
                              "name": "_voucherHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "3485:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1944,
                              "name": "_voucherSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1917,
                              "src": "3499:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1941,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "3471:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$736_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "3471:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:46:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3454:63:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1948,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1940,
                                "src": "3548:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 1949,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1891,
                                    "src": "3558:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                                      "typeString": "struct AdvancedOrder calldata"
                                    }
                                  },
                                  "id": 1950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "parameters",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2474,
                                  "src": "3558:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderParameters_$2465_calldata_ptr",
                                    "typeString": "struct OrderParameters calldata"
                                  }
                                },
                                "id": 1951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2439,
                                "src": "3558:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3548:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "657874726144617461206e6f74207369676e6564206279206f666665726572",
                              "id": 1953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3596:33:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_baa709f0d1849d181397a2ef6738709c1c39068081e3003512c0d976ad079610",
                                "typeString": "literal_string \"extraData not signed by offerer\""
                              },
                              "value": "extraData not signed by offerer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_baa709f0d1849d181397a2ef6738709c1c39068081e3003512c0d976ad079610",
                                "typeString": "literal_string \"extraData not signed by offerer\""
                              }
                            ],
                            "id": 1947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3527:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3527:112:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1955,
                        "nodeType": "ExpressionStatement",
                        "src": "3527:112:8"
                      },
                      {
                        "assignments": [
                          1957
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1957,
                            "mutability": "mutable",
                            "name": "leaf",
                            "nameLocation": "3713:4:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1981,
                            "src": "3705:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1956,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3705:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1964,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1961,
                                  "name": "caller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1888,
                                  "src": "3747:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1959,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3730:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3730:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3730:24:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1958,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3720:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3720:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3705:50:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1968,
                                  "name": "_merkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1920,
                                  "src": "3805:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                {
                                  "id": 1969,
                                  "name": "_merkleRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1922,
                                  "src": "3819:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 1970,
                                  "name": "leaf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1957,
                                  "src": "3832:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1966,
                                  "name": "MerkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 829,
                                  "src": "3786:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MerkleProof_$829_$",
                                    "typeString": "type(library MerkleProof)"
                                  }
                                },
                                "id": 1967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verify",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 760,
                                "src": "3786:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                  "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                                }
                              },
                              "id": 1971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3786:51:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642070726f6f66",
                              "id": 1972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3851:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                                "typeString": "literal_string \"Invalid proof\""
                              },
                              "value": "Invalid proof"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                                "typeString": "literal_string \"Invalid proof\""
                              }
                            ],
                            "id": 1965,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3765:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3765:111:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1974,
                        "nodeType": "ExpressionStatement",
                        "src": "3765:111:8"
                      },
                      {
                        "expression": {
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1975,
                            "name": "validOrderMagicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1902,
                            "src": "3954:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1976,
                                "name": "ZoneInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "3977:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ZoneInterface_$2260_$",
                                  "typeString": "type(contract ZoneInterface)"
                                }
                              },
                              "id": 1977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidOrder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2240,
                              "src": "3977:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                                "typeString": "function ZoneInterface.isValidOrder(bytes32,address,address,bytes32) view returns (bytes4)"
                              }
                            },
                            "id": 1978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3977:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3954:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1980,
                        "nodeType": "ExpressionStatement",
                        "src": "3954:58:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1884,
                    "nodeType": "StructuredDocumentation",
                    "src": "1542:928:8",
                    "text": " @notice Check if a given order including hash in extraData is signed by the same addresss\n         that created the order, and fits the Merkle root.\n @dev This function is called by Seaport whenever any extraData is\n      provided by the caller.\n @param orderHash         The hash of the order.\n @param caller            The caller in question.\n @param order             The order in question.\n @param priorOrderHashes  The order hashes of each order supplied prior to\n                          the current order as part of a \"match\" variety\n                          of order fulfillment.\n @param criteriaResolvers The criteria resolvers corresponding to\n                          the order.\n @return validOrderMagicValue A magic value indicating if the order is\n                              currently valid."
                  },
                  "functionSelector": "33131570",
                  "id": 1982,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidOrderIncludingExtraData",
                  "nameLocation": "2484:30:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1900,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2724:8:8"
                  },
                  "parameters": {
                    "id": 1899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1886,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "2532:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2524:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1885,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2524:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1888,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "2559:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2551:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1887,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1891,
                        "mutability": "mutable",
                        "name": "order",
                        "nameLocation": "2598:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2575:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                          "typeString": "struct AdvancedOrder"
                        },
                        "typeName": {
                          "id": 1890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1889,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2483,
                            "src": "2575:13:8"
                          },
                          "referencedDeclaration": 2483,
                          "src": "2575:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2483_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1894,
                        "mutability": "mutable",
                        "name": "priorOrderHashes",
                        "nameLocation": "2632:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2613:35:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1892,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2613:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1893,
                          "nodeType": "ArrayTypeName",
                          "src": "2613:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1898,
                        "mutability": "mutable",
                        "name": "criteriaResolvers",
                        "nameLocation": "2686:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2658:45:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1896,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1895,
                              "name": "CriteriaResolver",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2505,
                              "src": "2658:16:8"
                            },
                            "referencedDeclaration": 2505,
                            "src": "2658:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CriteriaResolver_$2505_storage_ptr",
                              "typeString": "struct CriteriaResolver"
                            }
                          },
                          "id": 1897,
                          "nodeType": "ArrayTypeName",
                          "src": "2658:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_storage_$dyn_storage_ptr",
                            "typeString": "struct CriteriaResolver[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2514:195:8"
                  },
                  "returnParameters": {
                    "id": 1903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1902,
                        "mutability": "mutable",
                        "name": "validOrderMagicValue",
                        "nameLocation": "2749:20:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2742:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1901,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2742:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2741:29:8"
                  },
                  "scope": 1983,
                  "src": "2475:1544:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1984,
              "src": "587:3434:8",
              "usedErrors": []
            }
          ],
          "src": "39:3983:8"
        },
        "id": 8
      },
      "contracts/zones/order-check/interfaces/SeaportInterface.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/interfaces/SeaportInterface.sol",
          "exportedSymbols": {
            "AdvancedOrder": [
              2483
            ],
            "BasicOrderParameters": [
              2432
            ],
            "CriteriaResolver": [
              2505
            ],
            "Execution": [
              2527
            ],
            "Fulfillment": [
              2514
            ],
            "FulfillmentComponent": [
              2519
            ],
            "Order": [
              2471
            ],
            "OrderComponents": [
              2344
            ],
            "OrderStatus": [
              2492
            ],
            "SeaportInterface": [
              2207
            ]
          },
          "id": 2208,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1985,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "contracts/zones/order-check/lib/ConsiderationStructs.sol",
              "file": "../lib/ConsiderationStructs.sol",
              "id": 1995,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2208,
              "sourceUnit": 2528,
              "src": "77:223:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1986,
                    "name": "BasicOrderParameters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2432,
                    "src": "90:20:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1987,
                    "name": "OrderComponents",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2344,
                    "src": "116:15:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1988,
                    "name": "Fulfillment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "137:11:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1989,
                    "name": "FulfillmentComponent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2519,
                    "src": "154:20:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1990,
                    "name": "Execution",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2527,
                    "src": "180:9:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1991,
                    "name": "Order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2471,
                    "src": "195:5:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1992,
                    "name": "AdvancedOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2483,
                    "src": "206:13:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1993,
                    "name": "OrderStatus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2492,
                    "src": "225:11:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1994,
                    "name": "CriteriaResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2505,
                    "src": "242:16:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SeaportInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1996,
                "nodeType": "StructuredDocumentation",
                "src": "302:438:9",
                "text": " @title SeaportInterface\n @author 0age\n @custom:version 1.1\n @notice Seaport is a generalized ETH/ERC20/ERC721/ERC1155 marketplace. It\n         minimizes external calls to the greatest extent possible and provides\n         lightweight methods for common routes as well as more flexible\n         methods for composing advanced orders.\n @dev SeaportInterface contains all external function interfaces for Seaport."
              },
              "fullyImplemented": false,
              "id": 2207,
              "linearizedBaseContracts": [
                2207
              ],
              "name": "SeaportInterface",
              "nameLocation": "751:16:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1997,
                    "nodeType": "StructuredDocumentation",
                    "src": "774:807:9",
                    "text": " @notice Fulfill an order offering an ERC721 token by supplying Ether (or\n         the native token for the given chain) as consideration for the\n         order. An arbitrary number of \"additional recipients\" may also be\n         supplied which will each receive native tokens from the fulfiller\n         as consideration.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer must first approve this contract (or\n                   their preferred conduit if indicated by the order) for\n                   their offered ERC721 token to be transferred.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
                  },
                  "functionSelector": "fb0f3ee1",
                  "id": 2005,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillBasicOrder",
                  "nameLocation": "1595:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "parameters",
                        "nameLocation": "1643:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "1613:40:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$2432_calldata_ptr",
                          "typeString": "struct BasicOrderParameters"
                        },
                        "typeName": {
                          "id": 1999,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1998,
                            "name": "BasicOrderParameters",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2432,
                            "src": "1613:20:9"
                          },
                          "referencedDeclaration": 2432,
                          "src": "1613:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BasicOrderParameters_$2432_storage_ptr",
                            "typeString": "struct BasicOrderParameters"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1612:42:9"
                  },
                  "returnParameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2003,
                        "mutability": "mutable",
                        "name": "fulfilled",
                        "nameLocation": "1710:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "1705:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2002,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1705:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1704:16:9"
                  },
                  "scope": 2207,
                  "src": "1586:135:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2006,
                    "nodeType": "StructuredDocumentation",
                    "src": "1727:1341:9",
                    "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used, with direct approvals set on\n                            Seaport.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
                  },
                  "functionSelector": "b3a34c4c",
                  "id": 2016,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillOrder",
                  "nameLocation": "3082:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "order",
                        "nameLocation": "3110:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2016,
                        "src": "3095:20:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$2471_calldata_ptr",
                          "typeString": "struct Order"
                        },
                        "typeName": {
                          "id": 2008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2007,
                            "name": "Order",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2471,
                            "src": "3095:5:9"
                          },
                          "referencedDeclaration": 2471,
                          "src": "3095:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$2471_storage_ptr",
                            "typeString": "struct Order"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2011,
                        "mutability": "mutable",
                        "name": "fulfillerConduitKey",
                        "nameLocation": "3125:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2016,
                        "src": "3117:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2010,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3117:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3094:51:9"
                  },
                  "returnParameters": {
                    "id": 2015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2014,
                        "mutability": "mutable",
                        "name": "fulfilled",
                        "nameLocation": "3201:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2016,
                        "src": "3196:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2013,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3195:16:9"
                  },
                  "scope": 2207,
                  "src": "3073:139:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2017,
                    "nodeType": "StructuredDocumentation",
                    "src": "3218:2693:9",
                    "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their preferred\n                            conduit if indicated by the order) to transfer\n                            any relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used, with direct approvals set on\n                            Seaport.\n @param recipient           The intended recipient for all received items,\n                            with `address(0)` indicating that the caller\n                            should receive the items.\n @return fulfilled A boolean indicating whether the order has been\n                   successfully fulfilled."
                  },
                  "functionSelector": "e7acab24",
                  "id": 2033,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillAdvancedOrder",
                  "nameLocation": "5925:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2020,
                        "mutability": "mutable",
                        "name": "advancedOrder",
                        "nameLocation": "5978:13:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "5955:36:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                          "typeString": "struct AdvancedOrder"
                        },
                        "typeName": {
                          "id": 2019,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2018,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2483,
                            "src": "5955:13:9"
                          },
                          "referencedDeclaration": 2483,
                          "src": "5955:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2483_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2024,
                        "mutability": "mutable",
                        "name": "criteriaResolvers",
                        "nameLocation": "6029:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "6001:45:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2022,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2021,
                              "name": "CriteriaResolver",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2505,
                              "src": "6001:16:9"
                            },
                            "referencedDeclaration": 2505,
                            "src": "6001:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CriteriaResolver_$2505_storage_ptr",
                              "typeString": "struct CriteriaResolver"
                            }
                          },
                          "id": 2023,
                          "nodeType": "ArrayTypeName",
                          "src": "6001:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_storage_$dyn_storage_ptr",
                            "typeString": "struct CriteriaResolver[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2026,
                        "mutability": "mutable",
                        "name": "fulfillerConduitKey",
                        "nameLocation": "6064:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "6056:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2025,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6056:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2028,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "6101:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "6093:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6093:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5945:171:9"
                  },
                  "returnParameters": {
                    "id": 2032,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2031,
                        "mutability": "mutable",
                        "name": "fulfilled",
                        "nameLocation": "6148:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "6143:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2030,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6143:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6142:16:9"
                  },
                  "scope": 2207,
                  "src": "5916:243:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2034,
                    "nodeType": "StructuredDocumentation",
                    "src": "6165:2984:9",
                    "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used, with\n                                  direct approvals set on this contract.\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
                  },
                  "functionSelector": "ed98a574",
                  "id": 2062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillAvailableOrders",
                  "nameLocation": "9163:22:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2038,
                        "mutability": "mutable",
                        "name": "orders",
                        "nameLocation": "9212:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9195:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$2471_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2036,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2035,
                              "name": "Order",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2471,
                              "src": "9195:5:9"
                            },
                            "referencedDeclaration": 2471,
                            "src": "9195:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$2471_storage_ptr",
                              "typeString": "struct Order"
                            }
                          },
                          "id": 2037,
                          "nodeType": "ArrayTypeName",
                          "src": "9195:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$2471_storage_$dyn_storage_ptr",
                            "typeString": "struct Order[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2043,
                        "mutability": "mutable",
                        "name": "offerFulfillments",
                        "nameLocation": "9262:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9228:51:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 2040,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2039,
                                "name": "FulfillmentComponent",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2519,
                                "src": "9228:20:9"
                              },
                              "referencedDeclaration": 2519,
                              "src": "9228:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                                "typeString": "struct FulfillmentComponent"
                              }
                            },
                            "id": 2041,
                            "nodeType": "ArrayTypeName",
                            "src": "9228:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                              "typeString": "struct FulfillmentComponent[]"
                            }
                          },
                          "id": 2042,
                          "nodeType": "ArrayTypeName",
                          "src": "9228:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "struct FulfillmentComponent[][]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "considerationFulfillments",
                        "nameLocation": "9323:25:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9289:59:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 2045,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2044,
                                "name": "FulfillmentComponent",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2519,
                                "src": "9289:20:9"
                              },
                              "referencedDeclaration": 2519,
                              "src": "9289:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                                "typeString": "struct FulfillmentComponent"
                              }
                            },
                            "id": 2046,
                            "nodeType": "ArrayTypeName",
                            "src": "9289:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                              "typeString": "struct FulfillmentComponent[]"
                            }
                          },
                          "id": 2047,
                          "nodeType": "ArrayTypeName",
                          "src": "9289:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "struct FulfillmentComponent[][]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "fulfillerConduitKey",
                        "nameLocation": "9366:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9358:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9358:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2052,
                        "mutability": "mutable",
                        "name": "maximumFulfilled",
                        "nameLocation": "9403:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9395:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9395:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9185:240:9"
                  },
                  "returnParameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2056,
                        "mutability": "mutable",
                        "name": "availableOrders",
                        "nameLocation": "9490:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9476:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2054,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "9476:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2055,
                          "nodeType": "ArrayTypeName",
                          "src": "9476:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2060,
                        "mutability": "mutable",
                        "name": "executions",
                        "nameLocation": "9526:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2062,
                        "src": "9507:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Execution_$2527_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Execution[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2058,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2057,
                              "name": "Execution",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2527,
                              "src": "9507:9:9"
                            },
                            "referencedDeclaration": 2527,
                            "src": "9507:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Execution_$2527_storage_ptr",
                              "typeString": "struct Execution"
                            }
                          },
                          "id": 2059,
                          "nodeType": "ArrayTypeName",
                          "src": "9507:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Execution_$2527_storage_$dyn_storage_ptr",
                            "typeString": "struct Execution[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9475:62:9"
                  },
                  "scope": 2207,
                  "src": "9154:384:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2063,
                    "nodeType": "StructuredDocumentation",
                    "src": "9544:4604:9",
                    "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their preferred conduit if\n                                  indicated by the order) to transfer any\n                                  relevant tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` to enable receipt of\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used, with\n                                  direct approvals set on this contract.\n @param recipient                 The intended recipient for all received\n                                  items, with `address(0)` indicating that\n                                  the caller should receive the items.\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders An array of booleans indicating if each order\n                         with an index corresponding to the index of the\n                         returned boolean was fulfillable or not.\n @return executions      An array of elements indicating the sequence of\n                         transfers performed as part of matching the given\n                         orders."
                  },
                  "functionSelector": "87201b41",
                  "id": 2097,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillAvailableAdvancedOrders",
                  "nameLocation": "14162:30:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2088,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2067,
                        "mutability": "mutable",
                        "name": "advancedOrders",
                        "nameLocation": "14227:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14202:39:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2483_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2065,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2064,
                              "name": "AdvancedOrder",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2483,
                              "src": "14202:13:9"
                            },
                            "referencedDeclaration": 2483,
                            "src": "14202:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AdvancedOrder_$2483_storage_ptr",
                              "typeString": "struct AdvancedOrder"
                            }
                          },
                          "id": 2066,
                          "nodeType": "ArrayTypeName",
                          "src": "14202:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2483_storage_$dyn_storage_ptr",
                            "typeString": "struct AdvancedOrder[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2071,
                        "mutability": "mutable",
                        "name": "criteriaResolvers",
                        "nameLocation": "14279:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14251:45:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2069,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2068,
                              "name": "CriteriaResolver",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2505,
                              "src": "14251:16:9"
                            },
                            "referencedDeclaration": 2505,
                            "src": "14251:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CriteriaResolver_$2505_storage_ptr",
                              "typeString": "struct CriteriaResolver"
                            }
                          },
                          "id": 2070,
                          "nodeType": "ArrayTypeName",
                          "src": "14251:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_storage_$dyn_storage_ptr",
                            "typeString": "struct CriteriaResolver[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "offerFulfillments",
                        "nameLocation": "14340:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14306:51:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 2073,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2072,
                                "name": "FulfillmentComponent",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2519,
                                "src": "14306:20:9"
                              },
                              "referencedDeclaration": 2519,
                              "src": "14306:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                                "typeString": "struct FulfillmentComponent"
                              }
                            },
                            "id": 2074,
                            "nodeType": "ArrayTypeName",
                            "src": "14306:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                              "typeString": "struct FulfillmentComponent[]"
                            }
                          },
                          "id": 2075,
                          "nodeType": "ArrayTypeName",
                          "src": "14306:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "struct FulfillmentComponent[][]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2081,
                        "mutability": "mutable",
                        "name": "considerationFulfillments",
                        "nameLocation": "14401:25:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14367:59:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent[][]"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 2078,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2077,
                                "name": "FulfillmentComponent",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2519,
                                "src": "14367:20:9"
                              },
                              "referencedDeclaration": 2519,
                              "src": "14367:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                                "typeString": "struct FulfillmentComponent"
                              }
                            },
                            "id": 2079,
                            "nodeType": "ArrayTypeName",
                            "src": "14367:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                              "typeString": "struct FulfillmentComponent[]"
                            }
                          },
                          "id": 2080,
                          "nodeType": "ArrayTypeName",
                          "src": "14367:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "struct FulfillmentComponent[][]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "fulfillerConduitKey",
                        "nameLocation": "14444:19:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14436:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14436:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "14481:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14473:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14473:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2087,
                        "mutability": "mutable",
                        "name": "maximumFulfilled",
                        "nameLocation": "14508:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14500:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2086,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14500:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14192:338:9"
                  },
                  "returnParameters": {
                    "id": 2096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2091,
                        "mutability": "mutable",
                        "name": "availableOrders",
                        "nameLocation": "14595:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14581:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2089,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "14581:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2090,
                          "nodeType": "ArrayTypeName",
                          "src": "14581:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2095,
                        "mutability": "mutable",
                        "name": "executions",
                        "nameLocation": "14631:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "14612:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Execution_$2527_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Execution[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2093,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2092,
                              "name": "Execution",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2527,
                              "src": "14612:9:9"
                            },
                            "referencedDeclaration": 2527,
                            "src": "14612:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Execution_$2527_storage_ptr",
                              "typeString": "struct Execution"
                            }
                          },
                          "id": 2094,
                          "nodeType": "ArrayTypeName",
                          "src": "14612:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Execution_$2527_storage_$dyn_storage_ptr",
                            "typeString": "struct Execution[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14580:62:9"
                  },
                  "scope": 2207,
                  "src": "14153:490:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2098,
                    "nodeType": "StructuredDocumentation",
                    "src": "14649:1397:9",
                    "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with as set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders       The orders to match. Note that both the offerer and\n                     fulfiller on each order must first approve this\n                     contract (or their conduit if indicated by the order)\n                     to transfer any relevant tokens on their behalf and\n                     each consideration recipient must implement\n                     `onERC1155Received` to enable ERC1155 token receipt.\n @param fulfillments An array of elements allocating offer components to\n                     consideration components. Note that each\n                     consideration component must be fully met for the\n                     match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
                  },
                  "functionSelector": "a8174404",
                  "id": 2113,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "matchOrders",
                  "nameLocation": "16060:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "orders",
                        "nameLocation": "16098:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2113,
                        "src": "16081:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$2471_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2100,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2099,
                              "name": "Order",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2471,
                              "src": "16081:5:9"
                            },
                            "referencedDeclaration": 2471,
                            "src": "16081:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$2471_storage_ptr",
                              "typeString": "struct Order"
                            }
                          },
                          "id": 2101,
                          "nodeType": "ArrayTypeName",
                          "src": "16081:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$2471_storage_$dyn_storage_ptr",
                            "typeString": "struct Order[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2106,
                        "mutability": "mutable",
                        "name": "fulfillments",
                        "nameLocation": "16137:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2113,
                        "src": "16114:35:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2514_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2104,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2103,
                              "name": "Fulfillment",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2514,
                              "src": "16114:11:9"
                            },
                            "referencedDeclaration": 2514,
                            "src": "16114:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fulfillment_$2514_storage_ptr",
                              "typeString": "struct Fulfillment"
                            }
                          },
                          "id": 2105,
                          "nodeType": "ArrayTypeName",
                          "src": "16114:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2514_storage_$dyn_storage_ptr",
                            "typeString": "struct Fulfillment[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16071:84:9"
                  },
                  "returnParameters": {
                    "id": 2112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2111,
                        "mutability": "mutable",
                        "name": "executions",
                        "nameLocation": "16201:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2113,
                        "src": "16182:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Execution_$2527_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Execution[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2109,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2108,
                              "name": "Execution",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2527,
                              "src": "16182:9:9"
                            },
                            "referencedDeclaration": 2527,
                            "src": "16182:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Execution_$2527_storage_ptr",
                              "typeString": "struct Execution"
                            }
                          },
                          "id": 2110,
                          "nodeType": "ArrayTypeName",
                          "src": "16182:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Execution_$2527_storage_$dyn_storage_ptr",
                            "typeString": "struct Execution[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16181:31:9"
                  },
                  "scope": 2207,
                  "src": "16051:162:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2114,
                    "nodeType": "StructuredDocumentation",
                    "src": "16219:2428:9",
                    "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param orders            The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or a preferred conduit if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order to receive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return executions An array of elements indicating the sequence of\n                    transfers performed as part of matching the given\n                    orders."
                  },
                  "functionSelector": "55944a42",
                  "id": 2133,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "matchAdvancedOrders",
                  "nameLocation": "18661:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2118,
                        "mutability": "mutable",
                        "name": "orders",
                        "nameLocation": "18715:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2133,
                        "src": "18690:31:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2483_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2116,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2115,
                              "name": "AdvancedOrder",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2483,
                              "src": "18690:13:9"
                            },
                            "referencedDeclaration": 2483,
                            "src": "18690:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AdvancedOrder_$2483_storage_ptr",
                              "typeString": "struct AdvancedOrder"
                            }
                          },
                          "id": 2117,
                          "nodeType": "ArrayTypeName",
                          "src": "18690:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$2483_storage_$dyn_storage_ptr",
                            "typeString": "struct AdvancedOrder[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2122,
                        "mutability": "mutable",
                        "name": "criteriaResolvers",
                        "nameLocation": "18759:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2133,
                        "src": "18731:45:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2120,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2119,
                              "name": "CriteriaResolver",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2505,
                              "src": "18731:16:9"
                            },
                            "referencedDeclaration": 2505,
                            "src": "18731:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CriteriaResolver_$2505_storage_ptr",
                              "typeString": "struct CriteriaResolver"
                            }
                          },
                          "id": 2121,
                          "nodeType": "ArrayTypeName",
                          "src": "18731:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_storage_$dyn_storage_ptr",
                            "typeString": "struct CriteriaResolver[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2126,
                        "mutability": "mutable",
                        "name": "fulfillments",
                        "nameLocation": "18809:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2133,
                        "src": "18786:35:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2514_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2124,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2123,
                              "name": "Fulfillment",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2514,
                              "src": "18786:11:9"
                            },
                            "referencedDeclaration": 2514,
                            "src": "18786:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fulfillment_$2514_storage_ptr",
                              "typeString": "struct Fulfillment"
                            }
                          },
                          "id": 2125,
                          "nodeType": "ArrayTypeName",
                          "src": "18786:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fulfillment_$2514_storage_$dyn_storage_ptr",
                            "typeString": "struct Fulfillment[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18680:147:9"
                  },
                  "returnParameters": {
                    "id": 2132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2131,
                        "mutability": "mutable",
                        "name": "executions",
                        "nameLocation": "18873:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2133,
                        "src": "18854:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Execution_$2527_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Execution[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2129,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2128,
                              "name": "Execution",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2527,
                              "src": "18854:9:9"
                            },
                            "referencedDeclaration": 2527,
                            "src": "18854:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Execution_$2527_storage_ptr",
                              "typeString": "struct Execution"
                            }
                          },
                          "id": 2130,
                          "nodeType": "ArrayTypeName",
                          "src": "18854:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Execution_$2527_storage_$dyn_storage_ptr",
                            "typeString": "struct Execution[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18853:31:9"
                  },
                  "scope": 2207,
                  "src": "18652:233:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2134,
                    "nodeType": "StructuredDocumentation",
                    "src": "18891:508:9",
                    "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n         or the zone of a given order may cancel it. Callers should ensure\n         that the intended order was cancelled by calling `getOrderStatus`\n         and confirming that `isCancelled` returns `true`.\n @param orders The orders to cancel.\n @return cancelled A boolean indicating whether the supplied orders have\n                   been successfully cancelled."
                  },
                  "functionSelector": "fd9f1e10",
                  "id": 2143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancel",
                  "nameLocation": "19413:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "orders",
                        "nameLocation": "19447:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2143,
                        "src": "19420:33:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2344_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct OrderComponents[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2136,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2135,
                              "name": "OrderComponents",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2344,
                              "src": "19420:15:9"
                            },
                            "referencedDeclaration": 2344,
                            "src": "19420:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderComponents_$2344_storage_ptr",
                              "typeString": "struct OrderComponents"
                            }
                          },
                          "id": 2137,
                          "nodeType": "ArrayTypeName",
                          "src": "19420:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderComponents_$2344_storage_$dyn_storage_ptr",
                            "typeString": "struct OrderComponents[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19419:35:9"
                  },
                  "returnParameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2141,
                        "mutability": "mutable",
                        "name": "cancelled",
                        "nameLocation": "19494:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2143,
                        "src": "19489:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "19489:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19488:16:9"
                  },
                  "scope": 2207,
                  "src": "19404:101:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2144,
                    "nodeType": "StructuredDocumentation",
                    "src": "19511:829:9",
                    "text": " @notice Validate an arbitrary number of orders, thereby registering their\n         signatures as valid and allowing the fulfiller to skip signature\n         verification on fulfillment. Note that validated orders may still\n         be unfulfillable due to invalid item amounts or other factors;\n         callers should determine whether validated orders are fulfillable\n         by simulating the fulfillment call prior to execution. Also note\n         that anyone can validate a signed order, but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return validated A boolean indicating whether the supplied orders have\n                   been successfully validated."
                  },
                  "functionSelector": "88147732",
                  "id": 2153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "validate",
                  "nameLocation": "20354:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2148,
                        "mutability": "mutable",
                        "name": "orders",
                        "nameLocation": "20380:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "20363:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$2471_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2146,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2145,
                              "name": "Order",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2471,
                              "src": "20363:5:9"
                            },
                            "referencedDeclaration": 2471,
                            "src": "20363:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$2471_storage_ptr",
                              "typeString": "struct Order"
                            }
                          },
                          "id": 2147,
                          "nodeType": "ArrayTypeName",
                          "src": "20363:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$2471_storage_$dyn_storage_ptr",
                            "typeString": "struct Order[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20362:25:9"
                  },
                  "returnParameters": {
                    "id": 2152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2151,
                        "mutability": "mutable",
                        "name": "validated",
                        "nameLocation": "20427:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "20422:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2150,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "20422:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20421:16:9"
                  },
                  "scope": 2207,
                  "src": "20345:93:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2154,
                    "nodeType": "StructuredDocumentation",
                    "src": "20444:252:9",
                    "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a counter. Note that only the offerer may\n         increment the counter.\n @return newCounter The new counter."
                  },
                  "functionSelector": "5b34b966",
                  "id": 2159,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incrementCounter",
                  "nameLocation": "20710:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20726:2:9"
                  },
                  "returnParameters": {
                    "id": 2158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2157,
                        "mutability": "mutable",
                        "name": "newCounter",
                        "nameLocation": "20755:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2159,
                        "src": "20747:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20747:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20746:20:9"
                  },
                  "scope": 2207,
                  "src": "20701:66:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2160,
                    "nodeType": "StructuredDocumentation",
                    "src": "20773:173:9",
                    "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return orderHash The order hash."
                  },
                  "functionSelector": "79df72bd",
                  "id": 2168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrderHash",
                  "nameLocation": "20960:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2163,
                        "mutability": "mutable",
                        "name": "order",
                        "nameLocation": "20998:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "20973:30:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderComponents_$2344_calldata_ptr",
                          "typeString": "struct OrderComponents"
                        },
                        "typeName": {
                          "id": 2162,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2161,
                            "name": "OrderComponents",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2344,
                            "src": "20973:15:9"
                          },
                          "referencedDeclaration": 2344,
                          "src": "20973:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderComponents_$2344_storage_ptr",
                            "typeString": "struct OrderComponents"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20972:32:9"
                  },
                  "returnParameters": {
                    "id": 2167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2166,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "21060:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "21052:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2165,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "21052:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21051:19:9"
                  },
                  "scope": 2207,
                  "src": "20951:120:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2169,
                    "nodeType": "StructuredDocumentation",
                    "src": "21077:876:9",
                    "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
                  },
                  "functionSelector": "46423aa7",
                  "id": 2182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrderStatus",
                  "nameLocation": "21967:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2171,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "21990:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "21982:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2170,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "21982:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21981:19:9"
                  },
                  "returnParameters": {
                    "id": 2181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2174,
                        "mutability": "mutable",
                        "name": "isValidated",
                        "nameLocation": "22066:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "22061:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2173,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "22061:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "isCancelled",
                        "nameLocation": "22096:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "22091:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2175,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "22091:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2178,
                        "mutability": "mutable",
                        "name": "totalFilled",
                        "nameLocation": "22129:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "22121:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22121:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2180,
                        "mutability": "mutable",
                        "name": "totalSize",
                        "nameLocation": "22162:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2182,
                        "src": "22154:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22154:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22047:134:9"
                  },
                  "scope": 2207,
                  "src": "21958:224:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2183,
                    "nodeType": "StructuredDocumentation",
                    "src": "22188:181:9",
                    "text": " @notice Retrieve the current counter for a given offerer.\n @param offerer The offerer in question.\n @return counter The current counter."
                  },
                  "functionSelector": "f07ec373",
                  "id": 2190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCounter",
                  "nameLocation": "22383:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2185,
                        "mutability": "mutable",
                        "name": "offerer",
                        "nameLocation": "22402:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "22394:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22394:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22393:17:9"
                  },
                  "returnParameters": {
                    "id": 2189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "22466:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "22458:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22458:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22457:17:9"
                  },
                  "scope": 2207,
                  "src": "22374:101:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2191,
                    "nodeType": "StructuredDocumentation",
                    "src": "22481:294:9",
                    "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
                  },
                  "functionSelector": "f47b7740",
                  "id": 2200,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "information",
                  "nameLocation": "22789:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22800:2:9"
                  },
                  "returnParameters": {
                    "id": 2199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2194,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "22877:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2200,
                        "src": "22863:21:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2193,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "22863:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2196,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nameLocation": "22906:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2200,
                        "src": "22898:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "22898:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2198,
                        "mutability": "mutable",
                        "name": "conduitController",
                        "nameLocation": "22943:17:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2200,
                        "src": "22935:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22935:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22849:121:9"
                  },
                  "scope": 2207,
                  "src": "22780:191:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2201,
                    "nodeType": "StructuredDocumentation",
                    "src": "22977:124:9",
                    "text": " @notice Retrieve the name of this contract.\n @return contractName The name of this contract."
                  },
                  "functionSelector": "06fdde03",
                  "id": 2206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "23115:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23119:2:9"
                  },
                  "returnParameters": {
                    "id": 2205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2204,
                        "mutability": "mutable",
                        "name": "contractName",
                        "nameLocation": "23159:12:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2206,
                        "src": "23145:26:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2203,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "23145:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23144:28:9"
                  },
                  "scope": 2207,
                  "src": "23106:67:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2208,
              "src": "741:22434:9",
              "usedErrors": []
            }
          ],
          "src": "32:23143:9"
        },
        "id": 9
      },
      "contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/interfaces/ZoneInteractionErrors.sol",
          "exportedSymbols": {
            "ZoneInteractionErrors": [
              2216
            ]
          },
          "id": 2217,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2209,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ZoneInteractionErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2210,
                "nodeType": "StructuredDocumentation",
                "src": "58:133:10",
                "text": " @title ZoneInteractionErrors\n @author 0age\n @notice ZoneInteractionErrors contains errors related to zone interaction."
              },
              "fullyImplemented": true,
              "id": 2216,
              "linearizedBaseContracts": [
                2216
              ],
              "name": "ZoneInteractionErrors",
              "nameLocation": "202:21:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2211,
                    "nodeType": "StructuredDocumentation",
                    "src": "230:391:10",
                    "text": " @dev Revert with an error when attempting to fill an order that specifies\n      a restricted submitter as its order type when not submitted by\n      either the offerer or the order's zone or approved as valid by the\n      zone in question via a staticcall to `isValidOrder`.\n @param orderHash The order hash for the invalid restricted order."
                  },
                  "errorSelector": "fb5014fc",
                  "id": 2215,
                  "name": "InvalidRestrictedOrder",
                  "nameLocation": "632:22:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2213,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "663:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "655:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2212,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "655:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "654:19:10"
                  },
                  "src": "626:48:10"
                }
              ],
              "scope": 2217,
              "src": "192:484:10",
              "usedErrors": [
                2215
              ]
            }
          ],
          "src": "32:644:10"
        },
        "id": 10
      },
      "contracts/zones/order-check/interfaces/ZoneInterface.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/interfaces/ZoneInterface.sol",
          "exportedSymbols": {
            "AdvancedOrder": [
              2483
            ],
            "CriteriaResolver": [
              2505
            ],
            "ZoneInterface": [
              2260
            ]
          },
          "id": 2261,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2218,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "contracts/zones/order-check/lib/ConsiderationStructs.sol",
              "file": "../lib/ConsiderationStructs.sol",
              "id": 2221,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2261,
              "sourceUnit": 2528,
              "src": "77:90:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2219,
                    "name": "AdvancedOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2483,
                    "src": "90:13:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2220,
                    "name": "CriteriaResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2505,
                    "src": "109:16:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ZoneInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2260,
              "linearizedBaseContracts": [
                2260
              ],
              "name": "ZoneInterface",
              "nameLocation": "179:13:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2222,
                    "nodeType": "StructuredDocumentation",
                    "src": "199:77:11",
                    "text": " @dev Emit an event whenever a zone is successfully paused."
                  },
                  "eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
                  "id": 2224,
                  "name": "Paused",
                  "nameLocation": "287:6:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "293:2:11"
                  },
                  "src": "281:15:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2225,
                    "nodeType": "StructuredDocumentation",
                    "src": "302:89:11",
                    "text": " @dev Emit an event whenever a zone is successfully unpaused (created)."
                  },
                  "eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
                  "id": 2227,
                  "name": "Unpaused",
                  "nameLocation": "402:8:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "410:2:11"
                  },
                  "src": "396:17:11"
                },
                {
                  "functionSelector": "0e1d31dc",
                  "id": 2240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidOrder",
                  "nameLocation": "509:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "539:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2240,
                        "src": "531:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2231,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "566:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2240,
                        "src": "558:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2233,
                        "mutability": "mutable",
                        "name": "offerer",
                        "nameLocation": "590:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2240,
                        "src": "582:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2235,
                        "mutability": "mutable",
                        "name": "zoneHash",
                        "nameLocation": "615:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2240,
                        "src": "607:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2234,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "607:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "521:108:11"
                  },
                  "returnParameters": {
                    "id": 2239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2238,
                        "mutability": "mutable",
                        "name": "validOrderMagicValue",
                        "nameLocation": "660:20:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2240,
                        "src": "653:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2237,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "653:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "652:29:11"
                  },
                  "scope": 2260,
                  "src": "500:182:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "33131570",
                  "id": 2259,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidOrderIncludingExtraData",
                  "nameLocation": "778:30:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2242,
                        "mutability": "mutable",
                        "name": "orderHash",
                        "nameLocation": "826:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "818:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2241,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2244,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "853:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "845:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2247,
                        "mutability": "mutable",
                        "name": "order",
                        "nameLocation": "892:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "869:28:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$2483_calldata_ptr",
                          "typeString": "struct AdvancedOrder"
                        },
                        "typeName": {
                          "id": 2246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2245,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2483,
                            "src": "869:13:11"
                          },
                          "referencedDeclaration": 2483,
                          "src": "869:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$2483_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2250,
                        "mutability": "mutable",
                        "name": "priorOrderHashes",
                        "nameLocation": "926:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "907:35:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2248,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "907:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2249,
                          "nodeType": "ArrayTypeName",
                          "src": "907:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "criteriaResolvers",
                        "nameLocation": "980:17:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "952:45:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2252,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2251,
                              "name": "CriteriaResolver",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2505,
                              "src": "952:16:11"
                            },
                            "referencedDeclaration": 2505,
                            "src": "952:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CriteriaResolver_$2505_storage_ptr",
                              "typeString": "struct CriteriaResolver"
                            }
                          },
                          "id": 2253,
                          "nodeType": "ArrayTypeName",
                          "src": "952:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$2505_storage_$dyn_storage_ptr",
                            "typeString": "struct CriteriaResolver[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:195:11"
                  },
                  "returnParameters": {
                    "id": 2258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2257,
                        "mutability": "mutable",
                        "name": "validOrderMagicValue",
                        "nameLocation": "1034:20:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "1027:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2256,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:29:11"
                  },
                  "scope": 2260,
                  "src": "769:287:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2261,
              "src": "169:889:11",
              "usedErrors": []
            }
          ],
          "src": "32:1026:11"
        },
        "id": 11
      },
      "contracts/zones/order-check/lib/ConsiderationEnums.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/lib/ConsiderationEnums.sol",
          "exportedSymbols": {
            "BasicOrderRouteType": [
              2299
            ],
            "BasicOrderType": [
              2292
            ],
            "ItemType": [
              2306
            ],
            "OrderType": [
              2267
            ],
            "Side": [
              2309
            ]
          },
          "id": 2310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2262,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "canonicalName": "OrderType",
              "id": 2267,
              "members": [
                {
                  "id": 2263,
                  "name": "FULL_OPEN",
                  "nameLocation": "145:9:12",
                  "nodeType": "EnumValue",
                  "src": "145:9:12"
                },
                {
                  "id": 2264,
                  "name": "PARTIAL_OPEN",
                  "nameLocation": "215:12:12",
                  "nodeType": "EnumValue",
                  "src": "215:12:12"
                },
                {
                  "id": 2265,
                  "name": "FULL_RESTRICTED",
                  "nameLocation": "295:15:12",
                  "nodeType": "EnumValue",
                  "src": "295:15:12"
                },
                {
                  "id": 2266,
                  "name": "PARTIAL_RESTRICTED",
                  "nameLocation": "385:18:12",
                  "nodeType": "EnumValue",
                  "src": "385:18:12"
                }
              ],
              "name": "OrderType",
              "nameLocation": "82:9:12",
              "nodeType": "EnumDefinition",
              "src": "77:328:12"
            },
            {
              "canonicalName": "BasicOrderType",
              "id": 2292,
              "members": [
                {
                  "id": 2268,
                  "name": "ETH_TO_ERC721_FULL_OPEN",
                  "nameLocation": "499:23:12",
                  "nodeType": "EnumValue",
                  "src": "499:23:12"
                },
                {
                  "id": 2269,
                  "name": "ETH_TO_ERC721_PARTIAL_OPEN",
                  "nameLocation": "583:26:12",
                  "nodeType": "EnumValue",
                  "src": "583:26:12"
                },
                {
                  "id": 2270,
                  "name": "ETH_TO_ERC721_FULL_RESTRICTED",
                  "nameLocation": "677:29:12",
                  "nodeType": "EnumValue",
                  "src": "677:29:12"
                },
                {
                  "id": 2271,
                  "name": "ETH_TO_ERC721_PARTIAL_RESTRICTED",
                  "nameLocation": "781:32:12",
                  "nodeType": "EnumValue",
                  "src": "781:32:12"
                },
                {
                  "id": 2272,
                  "name": "ETH_TO_ERC1155_FULL_OPEN",
                  "nameLocation": "867:24:12",
                  "nodeType": "EnumValue",
                  "src": "867:24:12"
                },
                {
                  "id": 2273,
                  "name": "ETH_TO_ERC1155_PARTIAL_OPEN",
                  "nameLocation": "952:27:12",
                  "nodeType": "EnumValue",
                  "src": "952:27:12"
                },
                {
                  "id": 2274,
                  "name": "ETH_TO_ERC1155_FULL_RESTRICTED",
                  "nameLocation": "1047:30:12",
                  "nodeType": "EnumValue",
                  "src": "1047:30:12"
                },
                {
                  "id": 2275,
                  "name": "ETH_TO_ERC1155_PARTIAL_RESTRICTED",
                  "nameLocation": "1152:33:12",
                  "nodeType": "EnumValue",
                  "src": "1152:33:12"
                },
                {
                  "id": 2276,
                  "name": "ERC20_TO_ERC721_FULL_OPEN",
                  "nameLocation": "1239:25:12",
                  "nodeType": "EnumValue",
                  "src": "1239:25:12"
                },
                {
                  "id": 2277,
                  "name": "ERC20_TO_ERC721_PARTIAL_OPEN",
                  "nameLocation": "1325:28:12",
                  "nodeType": "EnumValue",
                  "src": "1325:28:12"
                },
                {
                  "id": 2278,
                  "name": "ERC20_TO_ERC721_FULL_RESTRICTED",
                  "nameLocation": "1422:31:12",
                  "nodeType": "EnumValue",
                  "src": "1422:31:12"
                },
                {
                  "id": 2279,
                  "name": "ERC20_TO_ERC721_PARTIAL_RESTRICTED",
                  "nameLocation": "1529:34:12",
                  "nodeType": "EnumValue",
                  "src": "1529:34:12"
                },
                {
                  "id": 2280,
                  "name": "ERC20_TO_ERC1155_FULL_OPEN",
                  "nameLocation": "1618:26:12",
                  "nodeType": "EnumValue",
                  "src": "1618:26:12"
                },
                {
                  "id": 2281,
                  "name": "ERC20_TO_ERC1155_PARTIAL_OPEN",
                  "nameLocation": "1706:29:12",
                  "nodeType": "EnumValue",
                  "src": "1706:29:12"
                },
                {
                  "id": 2282,
                  "name": "ERC20_TO_ERC1155_FULL_RESTRICTED",
                  "nameLocation": "1804:32:12",
                  "nodeType": "EnumValue",
                  "src": "1804:32:12"
                },
                {
                  "id": 2283,
                  "name": "ERC20_TO_ERC1155_PARTIAL_RESTRICTED",
                  "nameLocation": "1912:35:12",
                  "nodeType": "EnumValue",
                  "src": "1912:35:12"
                },
                {
                  "id": 2284,
                  "name": "ERC721_TO_ERC20_FULL_OPEN",
                  "nameLocation": "2002:25:12",
                  "nodeType": "EnumValue",
                  "src": "2002:25:12"
                },
                {
                  "id": 2285,
                  "name": "ERC721_TO_ERC20_PARTIAL_OPEN",
                  "nameLocation": "2089:28:12",
                  "nodeType": "EnumValue",
                  "src": "2089:28:12"
                },
                {
                  "id": 2286,
                  "name": "ERC721_TO_ERC20_FULL_RESTRICTED",
                  "nameLocation": "2186:31:12",
                  "nodeType": "EnumValue",
                  "src": "2186:31:12"
                },
                {
                  "id": 2287,
                  "name": "ERC721_TO_ERC20_PARTIAL_RESTRICTED",
                  "nameLocation": "2293:34:12",
                  "nodeType": "EnumValue",
                  "src": "2293:34:12"
                },
                {
                  "id": 2288,
                  "name": "ERC1155_TO_ERC20_FULL_OPEN",
                  "nameLocation": "2382:26:12",
                  "nodeType": "EnumValue",
                  "src": "2382:26:12"
                },
                {
                  "id": 2289,
                  "name": "ERC1155_TO_ERC20_PARTIAL_OPEN",
                  "nameLocation": "2470:29:12",
                  "nodeType": "EnumValue",
                  "src": "2470:29:12"
                },
                {
                  "id": 2290,
                  "name": "ERC1155_TO_ERC20_FULL_RESTRICTED",
                  "nameLocation": "2568:32:12",
                  "nodeType": "EnumValue",
                  "src": "2568:32:12"
                },
                {
                  "id": 2291,
                  "name": "ERC1155_TO_ERC20_PARTIAL_RESTRICTED",
                  "nameLocation": "2676:35:12",
                  "nodeType": "EnumValue",
                  "src": "2676:35:12"
                }
              ],
              "name": "BasicOrderType",
              "nameLocation": "431:14:12",
              "nodeType": "EnumDefinition",
              "src": "426:2287:12"
            },
            {
              "canonicalName": "BasicOrderRouteType",
              "id": 2299,
              "members": [
                {
                  "id": 2293,
                  "name": "ETH_TO_ERC721",
                  "nameLocation": "2845:13:12",
                  "nodeType": "EnumValue",
                  "src": "2845:13:12"
                },
                {
                  "id": 2294,
                  "name": "ETH_TO_ERC1155",
                  "nameLocation": "2946:14:12",
                  "nodeType": "EnumValue",
                  "src": "2946:14:12"
                },
                {
                  "id": 2295,
                  "name": "ERC20_TO_ERC721",
                  "nameLocation": "3028:15:12",
                  "nodeType": "EnumValue",
                  "src": "3028:15:12"
                },
                {
                  "id": 2296,
                  "name": "ERC20_TO_ERC1155",
                  "nameLocation": "3112:16:12",
                  "nodeType": "EnumValue",
                  "src": "3112:16:12"
                },
                {
                  "id": 2297,
                  "name": "ERC721_TO_ERC20",
                  "nameLocation": "3196:15:12",
                  "nodeType": "EnumValue",
                  "src": "3196:15:12"
                },
                {
                  "id": 2298,
                  "name": "ERC1155_TO_ERC20",
                  "nameLocation": "3280:16:12",
                  "nodeType": "EnumValue",
                  "src": "3280:16:12"
                }
              ],
              "name": "BasicOrderRouteType",
              "nameLocation": "2739:19:12",
              "nodeType": "EnumDefinition",
              "src": "2734:564:12"
            },
            {
              "canonicalName": "ItemType",
              "id": 2306,
              "members": [
                {
                  "id": 2300,
                  "name": "NATIVE",
                  "nameLocation": "3388:6:12",
                  "nodeType": "EnumValue",
                  "src": "3388:6:12"
                },
                {
                  "id": 2301,
                  "name": "ERC20",
                  "nameLocation": "3480:5:12",
                  "nodeType": "EnumValue",
                  "src": "3480:5:12"
                },
                {
                  "id": 2302,
                  "name": "ERC721",
                  "nameLocation": "3515:6:12",
                  "nodeType": "EnumValue",
                  "src": "3515:6:12"
                },
                {
                  "id": 2303,
                  "name": "ERC1155",
                  "nameLocation": "3552:7:12",
                  "nodeType": "EnumValue",
                  "src": "3552:7:12"
                },
                {
                  "id": 2304,
                  "name": "ERC721_WITH_CRITERIA",
                  "nameLocation": "3630:20:12",
                  "nodeType": "EnumValue",
                  "src": "3630:20:12"
                },
                {
                  "id": 2305,
                  "name": "ERC1155_WITH_CRITERIA",
                  "nameLocation": "3717:21:12",
                  "nodeType": "EnumValue",
                  "src": "3717:21:12"
                }
              ],
              "name": "ItemType",
              "nameLocation": "3324:8:12",
              "nodeType": "EnumDefinition",
              "src": "3319:421:12"
            },
            {
              "canonicalName": "Side",
              "id": 2309,
              "members": [
                {
                  "id": 2307,
                  "name": "OFFER",
                  "nameLocation": "3811:5:12",
                  "nodeType": "EnumValue",
                  "src": "3811:5:12"
                },
                {
                  "id": 2308,
                  "name": "CONSIDERATION",
                  "nameLocation": "3861:13:12",
                  "nodeType": "EnumValue",
                  "src": "3861:13:12"
                }
              ],
              "name": "Side",
              "nameLocation": "3766:4:12",
              "nodeType": "EnumDefinition",
              "src": "3761:115:12"
            }
          ],
          "src": "32:3844:12"
        },
        "id": 12
      },
      "contracts/zones/order-check/lib/ConsiderationStructs.sol": {
        "ast": {
          "absolutePath": "contracts/zones/order-check/lib/ConsiderationStructs.sol",
          "exportedSymbols": {
            "AdditionalRecipient": [
              2437
            ],
            "AdvancedOrder": [
              2483
            ],
            "BasicOrderParameters": [
              2432
            ],
            "BasicOrderType": [
              2292
            ],
            "ConsiderationItem": [
              2370
            ],
            "CriteriaResolver": [
              2505
            ],
            "Execution": [
              2527
            ],
            "Fulfillment": [
              2514
            ],
            "FulfillmentComponent": [
              2519
            ],
            "ItemType": [
              2306
            ],
            "OfferItem": [
              2356
            ],
            "Order": [
              2471
            ],
            "OrderComponents": [
              2344
            ],
            "OrderParameters": [
              2465
            ],
            "OrderStatus": [
              2492
            ],
            "OrderType": [
              2267
            ],
            "ReceivedItem": [
              2392
            ],
            "Side": [
              2309
            ],
            "SpentItem": [
              2380
            ]
          },
          "id": 2528,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2311,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "contracts/zones/order-check/lib/ConsiderationEnums.sol",
              "file": "./ConsiderationEnums.sol",
              "id": 2316,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2528,
              "sourceUnit": 2310,
              "src": "77:101:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2312,
                    "name": "OrderType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2267,
                    "src": "90:9:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2313,
                    "name": "BasicOrderType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2292,
                    "src": "105:14:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2314,
                    "name": "ItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2306,
                    "src": "125:8:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2315,
                    "name": "Side",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2309,
                    "src": "139:4:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "OrderComponents",
              "id": 2344,
              "members": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "830:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "822:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "zone",
                  "nameLocation": "851:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "843:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2324,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "873:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "861:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OfferItem_$2356_storage_$dyn_storage_ptr",
                    "typeString": "struct OfferItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2322,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2321,
                        "name": "OfferItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2356,
                        "src": "861:9:13"
                      },
                      "referencedDeclaration": 2356,
                      "src": "861:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferItem_$2356_storage_ptr",
                        "typeString": "struct OfferItem"
                      }
                    },
                    "id": 2323,
                    "nodeType": "ArrayTypeName",
                    "src": "861:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferItem_$2356_storage_$dyn_storage_ptr",
                      "typeString": "struct OfferItem[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "consideration",
                  "nameLocation": "904:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "884:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2370_storage_$dyn_storage_ptr",
                    "typeString": "struct ConsiderationItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2326,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2325,
                        "name": "ConsiderationItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2370,
                        "src": "884:17:13"
                      },
                      "referencedDeclaration": 2370,
                      "src": "884:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConsiderationItem_$2370_storage_ptr",
                        "typeString": "struct ConsiderationItem"
                      }
                    },
                    "id": 2327,
                    "nodeType": "ArrayTypeName",
                    "src": "884:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2370_storage_$dyn_storage_ptr",
                      "typeString": "struct ConsiderationItem[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "orderType",
                  "nameLocation": "933:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "923:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OrderType_$2267",
                    "typeString": "enum OrderType"
                  },
                  "typeName": {
                    "id": 2330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2329,
                      "name": "OrderType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "923:9:13"
                    },
                    "referencedDeclaration": 2267,
                    "src": "923:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OrderType_$2267",
                      "typeString": "enum OrderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "956:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "948:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2335,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "979:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "971:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "zoneHash",
                  "nameLocation": "1000:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "992:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2339,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1022:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "1014:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2341,
                  "mutability": "mutable",
                  "name": "conduitKey",
                  "nameLocation": "1040:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "1032:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2343,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1064:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "1056:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "OrderComponents",
              "nameLocation": "800:15:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "793:281:13",
              "visibility": "public"
            },
            {
              "canonicalName": "OfferItem",
              "id": 2356,
              "members": [
                {
                  "constant": false,
                  "id": 2347,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "1587:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2356,
                  "src": "1578:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ItemType_$2306",
                    "typeString": "enum ItemType"
                  },
                  "typeName": {
                    "id": 2346,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2345,
                      "name": "ItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2306,
                      "src": "1578:8:13"
                    },
                    "referencedDeclaration": 2306,
                    "src": "1578:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$2306",
                      "typeString": "enum ItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1609:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2356,
                  "src": "1601:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2351,
                  "mutability": "mutable",
                  "name": "identifierOrCriteria",
                  "nameLocation": "1628:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2356,
                  "src": "1620:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1620:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "startAmount",
                  "nameLocation": "1662:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2356,
                  "src": "1654:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "mutability": "mutable",
                  "name": "endAmount",
                  "nameLocation": "1687:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2356,
                  "src": "1679:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "OfferItem",
              "nameLocation": "1562:9:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "1555:144:13",
              "visibility": "public"
            },
            {
              "canonicalName": "ConsiderationItem",
              "id": 2370,
              "members": [
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "1922:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1913:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ItemType_$2306",
                    "typeString": "enum ItemType"
                  },
                  "typeName": {
                    "id": 2358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2357,
                      "name": "ItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2306,
                      "src": "1913:8:13"
                    },
                    "referencedDeclaration": 2306,
                    "src": "1913:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$2306",
                      "typeString": "enum ItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1944:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1936:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "mutability": "mutable",
                  "name": "identifierOrCriteria",
                  "nameLocation": "1963:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1955:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2365,
                  "mutability": "mutable",
                  "name": "startAmount",
                  "nameLocation": "1997:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1989:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "endAmount",
                  "nameLocation": "2022:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "2014:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2053:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "2037:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConsiderationItem",
              "nameLocation": "1889:17:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "1882:183:13",
              "visibility": "public"
            },
            {
              "canonicalName": "SpentItem",
              "id": 2380,
              "members": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "2324:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "2315:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ItemType_$2306",
                    "typeString": "enum ItemType"
                  },
                  "typeName": {
                    "id": 2372,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2371,
                      "name": "ItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2306,
                      "src": "2315:8:13"
                    },
                    "referencedDeclaration": 2306,
                    "src": "2315:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$2306",
                      "typeString": "enum ItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2346:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "2338:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2365:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "2357:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2379,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2389:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "2381:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "SpentItem",
              "nameLocation": "2299:9:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "2292:106:13",
              "visibility": "public"
            },
            {
              "canonicalName": "ReceivedItem",
              "id": 2392,
              "members": [
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "2671:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "2662:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ItemType_$2306",
                    "typeString": "enum ItemType"
                  },
                  "typeName": {
                    "id": 2382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2381,
                      "name": "ItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2306,
                      "src": "2662:8:13"
                    },
                    "referencedDeclaration": 2306,
                    "src": "2662:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$2306",
                      "typeString": "enum ItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2693:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "2685:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2712:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "2704:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2736:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "2728:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2764:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "2748:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ReceivedItem",
              "nameLocation": "2643:12:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "2636:140:13",
              "visibility": "public"
            },
            {
              "canonicalName": "BasicOrderParameters",
              "id": 2432,
              "members": [
                {
                  "constant": false,
                  "id": 2394,
                  "mutability": "mutable",
                  "name": "considerationToken",
                  "nameLocation": "3313:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3305:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "considerationIdentifier",
                  "nameLocation": "3353:23:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3345:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2398,
                  "mutability": "mutable",
                  "name": "considerationAmount",
                  "nameLocation": "3398:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3390:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3390:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "3447:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3431:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "zone",
                  "nameLocation": "3476:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3468:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "offerToken",
                  "nameLocation": "3502:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3494:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2406,
                  "mutability": "mutable",
                  "name": "offerIdentifier",
                  "nameLocation": "3534:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3526:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "offerAmount",
                  "nameLocation": "3571:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3563:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "basicOrderType",
                  "nameLocation": "3612:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3597:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BasicOrderType_$2292",
                    "typeString": "enum BasicOrderType"
                  },
                  "typeName": {
                    "id": 2410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2409,
                      "name": "BasicOrderType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2292,
                      "src": "3597:14:13"
                    },
                    "referencedDeclaration": 2292,
                    "src": "3597:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BasicOrderType_$2292",
                      "typeString": "enum BasicOrderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "3649:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3641:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "3681:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3673:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3673:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "zoneHash",
                  "nameLocation": "3711:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3703:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2419,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "3742:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3734:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2421,
                  "mutability": "mutable",
                  "name": "offererConduitKey",
                  "nameLocation": "3769:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3761:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "3809:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3801:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "totalOriginalAdditionalRecipients",
                  "nameLocation": "3851:33:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3843:41:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "additionalRecipients",
                  "nameLocation": "3921:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3899:42:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdditionalRecipient_$2437_storage_$dyn_storage_ptr",
                    "typeString": "struct AdditionalRecipient[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2427,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2426,
                        "name": "AdditionalRecipient",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2437,
                        "src": "3899:19:13"
                      },
                      "referencedDeclaration": 2437,
                      "src": "3899:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdditionalRecipient_$2437_storage_ptr",
                        "typeString": "struct AdditionalRecipient"
                      }
                    },
                    "id": 2428,
                    "nodeType": "ArrayTypeName",
                    "src": "3899:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdditionalRecipient_$2437_storage_$dyn_storage_ptr",
                      "typeString": "struct AdditionalRecipient[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "3962:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2432,
                  "src": "3956:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "BasicOrderParameters",
              "nameLocation": "3255:20:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "3248:798:13",
              "visibility": "public"
            },
            {
              "canonicalName": "AdditionalRecipient",
              "id": 2437,
              "members": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4308:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4300:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4336:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4320:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4320:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "AdditionalRecipient",
              "nameLocation": "4274:19:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "4267:81:13",
              "visibility": "public"
            },
            {
              "canonicalName": "OrderParameters",
              "id": 2465,
              "members": [
                {
                  "constant": false,
                  "id": 2439,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "4706:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4698:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2441,
                  "mutability": "mutable",
                  "name": "zone",
                  "nameLocation": "4735:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4727:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4727:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "4765:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4753:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OfferItem_$2356_storage_$dyn_storage_ptr",
                    "typeString": "struct OfferItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2443,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2442,
                        "name": "OfferItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2356,
                        "src": "4753:9:13"
                      },
                      "referencedDeclaration": 2356,
                      "src": "4753:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferItem_$2356_storage_ptr",
                        "typeString": "struct OfferItem"
                      }
                    },
                    "id": 2444,
                    "nodeType": "ArrayTypeName",
                    "src": "4753:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferItem_$2356_storage_$dyn_storage_ptr",
                      "typeString": "struct OfferItem[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "consideration",
                  "nameLocation": "4804:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4784:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2370_storage_$dyn_storage_ptr",
                    "typeString": "struct ConsiderationItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2447,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2446,
                        "name": "ConsiderationItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2370,
                        "src": "4784:17:13"
                      },
                      "referencedDeclaration": 2370,
                      "src": "4784:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConsiderationItem_$2370_storage_ptr",
                        "typeString": "struct ConsiderationItem"
                      }
                    },
                    "id": 2448,
                    "nodeType": "ArrayTypeName",
                    "src": "4784:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$2370_storage_$dyn_storage_ptr",
                      "typeString": "struct ConsiderationItem[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "mutability": "mutable",
                  "name": "orderType",
                  "nameLocation": "4841:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4831:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OrderType_$2267",
                    "typeString": "enum OrderType"
                  },
                  "typeName": {
                    "id": 2451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2450,
                      "name": "OrderType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "4831:9:13"
                    },
                    "referencedDeclaration": 2267,
                    "src": "4831:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OrderType_$2267",
                      "typeString": "enum OrderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2454,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4872:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4864:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4864:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2456,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "4903:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4895:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4895:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "mutability": "mutable",
                  "name": "zoneHash",
                  "nameLocation": "4932:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4924:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4924:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2460,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "4962:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4954:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4954:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2462,
                  "mutability": "mutable",
                  "name": "conduitKey",
                  "nameLocation": "4989:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "4981:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4981:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2464,
                  "mutability": "mutable",
                  "name": "totalOriginalConsiderationItems",
                  "nameLocation": "5022:31:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "5014:39:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5014:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "OrderParameters",
              "nameLocation": "4676:15:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "4669:450:13",
              "visibility": "public"
            },
            {
              "canonicalName": "Order",
              "id": 2471,
              "members": [
                {
                  "constant": false,
                  "id": 2468,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "5242:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "5226:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderParameters_$2465_storage_ptr",
                    "typeString": "struct OrderParameters"
                  },
                  "typeName": {
                    "id": 2467,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2466,
                      "name": "OrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2465,
                      "src": "5226:15:13"
                    },
                    "referencedDeclaration": 2465,
                    "src": "5226:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderParameters_$2465_storage_ptr",
                      "typeString": "struct OrderParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "5264:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "5258:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5258:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Order",
              "nameLocation": "5214:5:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "5207:69:13",
              "visibility": "public"
            },
            {
              "canonicalName": "AdvancedOrder",
              "id": 2483,
              "members": [
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "5797:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "5781:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderParameters_$2465_storage_ptr",
                    "typeString": "struct OrderParameters"
                  },
                  "typeName": {
                    "id": 2473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2472,
                      "name": "OrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2465,
                      "src": "5781:15:13"
                    },
                    "referencedDeclaration": 2465,
                    "src": "5781:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderParameters_$2465_storage_ptr",
                      "typeString": "struct OrderParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2476,
                  "mutability": "mutable",
                  "name": "numerator",
                  "nameLocation": "5821:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "5813:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "5813:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nameLocation": "5844:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "5836:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "5836:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2480,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "5867:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "5861:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5861:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "5888:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "5882:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5882:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "AdvancedOrder",
              "nameLocation": "5761:13:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "5754:146:13",
              "visibility": "public"
            },
            {
              "canonicalName": "OrderStatus",
              "id": 2492,
              "members": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "6285:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "6280:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6280:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "6307:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "6302:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2489,
                  "mutability": "mutable",
                  "name": "numerator",
                  "nameLocation": "6332:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "6324:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nameLocation": "6355:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "6347:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "6347:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "OrderStatus",
              "nameLocation": "6262:11:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "6255:114:13",
              "visibility": "public"
            },
            {
              "canonicalName": "CriteriaResolver",
              "id": 2505,
              "members": [
                {
                  "constant": false,
                  "id": 2494,
                  "mutability": "mutable",
                  "name": "orderIndex",
                  "nameLocation": "6672:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "6664:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6664:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "side",
                  "nameLocation": "6693:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "6688:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$2309",
                    "typeString": "enum Side"
                  },
                  "typeName": {
                    "id": 2496,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2495,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2309,
                      "src": "6688:4:13"
                    },
                    "referencedDeclaration": 2309,
                    "src": "6688:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$2309",
                      "typeString": "enum Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6711:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "6703:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6703:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "6730:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "6722:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6722:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2504,
                  "mutability": "mutable",
                  "name": "criteriaProof",
                  "nameLocation": "6756:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2505,
                  "src": "6746:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2502,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6746:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2503,
                    "nodeType": "ArrayTypeName",
                    "src": "6746:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "CriteriaResolver",
              "nameLocation": "6641:16:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "6634:138:13",
              "visibility": "public"
            },
            {
              "canonicalName": "Fulfillment",
              "id": 2514,
              "members": [
                {
                  "constant": false,
                  "id": 2509,
                  "mutability": "mutable",
                  "name": "offerComponents",
                  "nameLocation": "7439:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2514,
                  "src": "7416:38:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                    "typeString": "struct FulfillmentComponent[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2507,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2506,
                        "name": "FulfillmentComponent",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2519,
                        "src": "7416:20:13"
                      },
                      "referencedDeclaration": 2519,
                      "src": "7416:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                        "typeString": "struct FulfillmentComponent"
                      }
                    },
                    "id": 2508,
                    "nodeType": "ArrayTypeName",
                    "src": "7416:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2513,
                  "mutability": "mutable",
                  "name": "considerationComponents",
                  "nameLocation": "7483:23:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2514,
                  "src": "7460:46:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                    "typeString": "struct FulfillmentComponent[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2511,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2510,
                        "name": "FulfillmentComponent",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2519,
                        "src": "7460:20:13"
                      },
                      "referencedDeclaration": 2519,
                      "src": "7460:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FulfillmentComponent_$2519_storage_ptr",
                        "typeString": "struct FulfillmentComponent"
                      }
                    },
                    "id": 2512,
                    "nodeType": "ArrayTypeName",
                    "src": "7460:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$2519_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Fulfillment",
              "nameLocation": "7398:11:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "7391:118:13",
              "visibility": "public"
            },
            {
              "canonicalName": "FulfillmentComponent",
              "id": 2519,
              "members": [
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "orderIndex",
                  "nameLocation": "7716:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "7708:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "itemIndex",
                  "nameLocation": "7740:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "7732:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7732:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "FulfillmentComponent",
              "nameLocation": "7681:20:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "7674:78:13",
              "visibility": "public"
            },
            {
              "canonicalName": "Execution",
              "id": 2527,
              "members": [
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "item",
                  "nameLocation": "8401:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "8388:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReceivedItem_$2392_storage_ptr",
                    "typeString": "struct ReceivedItem"
                  },
                  "typeName": {
                    "id": 2521,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2520,
                      "name": "ReceivedItem",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2392,
                      "src": "8388:12:13"
                    },
                    "referencedDeclaration": 2392,
                    "src": "8388:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReceivedItem_$2392_storage_ptr",
                      "typeString": "struct ReceivedItem"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2524,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "8419:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "8411:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8411:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2526,
                  "mutability": "mutable",
                  "name": "conduitKey",
                  "nameLocation": "8440:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "8432:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8432:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Execution",
              "nameLocation": "8372:9:13",
              "nodeType": "StructDefinition",
              "scope": 2528,
              "src": "8365:88:13",
              "visibility": "public"
            }
          ],
          "src": "32:8421:13"
        },
        "id": 13
      }
    }
  }
}
